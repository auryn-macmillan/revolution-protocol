{
	"id": "0925efe3abf0e1f643f40cc633bab739",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/revolution-contracts/VerbsDescriptor.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n/// @title The Verbs NFT descriptor\n\n/*********************************\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░██░░░████░░██░░░████░░░ *\n * ░░██████░░░████████░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n *********************************/\n\npragma solidity ^0.8.22;\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { Strings } from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport { IVerbsDescriptor } from \"./interfaces/IVerbsDescriptor.sol\";\nimport { Base64 } from \"@openzeppelin/contracts/utils/Base64.sol\";\nimport { ICultureIndex } from \"./interfaces/ICultureIndex.sol\";\n\ncontract VerbsDescriptor is IVerbsDescriptor, Ownable {\n    using Strings for uint256;\n\n    // prettier-ignore\n    // https://creativecommons.org/publicdomain/zero/1.0/legalcode.txt\n    bytes32 constant COPYRIGHT_CC0_1_0_UNIVERSAL_LICENSE = 0xa2010f343487d3f7618affe54f789f5487602331c0a8d03f49e9a7c547cf0499;\n\n    // Whether or not `tokenURI` should be returned as a data URI (Default: true)\n    bool public override isDataURIEnabled = true;\n\n    // Base URI\n    string public override baseURI;\n\n    // Token name prefix\n    string public tokenNamePrefix;\n\n    // Token URI params for constructing metadata\n    struct TokenURIParams {\n        string name;\n        string description;\n        string image;\n        string animation_url;\n    }\n\n    constructor(address _initialOwner, string memory _tokenNamePrefix) Ownable(_initialOwner) {\n        tokenNamePrefix = _tokenNamePrefix;\n    }\n\n    /**\n     * @notice Construct an ERC721 token URI.\n     */\n    function constructTokenURI(TokenURIParams memory params) public pure returns (string memory) {\n        string memory json = string(\n            abi.encodePacked(\n                '{\"name\":\"',\n                params.name,\n                '\", \"description\":\"',\n                params.description,\n                '\", \"image\": \"',\n                params.image,\n                '\", \"animation_url\": \"',\n                params.animation_url,\n                '\"}'\n            )\n        );\n        return string(abi.encodePacked(\"data:application/json;base64,\", Base64.encode(bytes(json))));\n    }\n\n    /**\n     * @notice Toggle a boolean value which determines if `tokenURI` returns a data URI\n     * or an HTTP URL.\n     * @dev This can only be called by the owner.\n     */\n    function toggleDataURIEnabled() external override onlyOwner {\n        bool enabled = !isDataURIEnabled;\n\n        isDataURIEnabled = enabled;\n        emit DataURIToggled(enabled);\n    }\n\n    /**\n     * @notice Set the base URI for all token IDs. It is automatically\n     * added as a prefix to the value returned in {tokenURI}, or to the\n     * token ID if {tokenURI} is empty.\n     * @dev This can only be called by the owner.\n     */\n    function setBaseURI(string calldata _baseURI) external override onlyOwner {\n        baseURI = _baseURI;\n\n        emit BaseURIUpdated(_baseURI);\n    }\n\n    /**\n     * @notice Given a token ID, construct a token URI for an official Vrbs DAO verb.\n     * @dev The returned value may be a base64 encoded data URI or an API URL.\n     */\n    function tokenURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) external view returns (string memory) {\n        if (isDataURIEnabled) {\n            return dataURI(tokenId, metadata);\n        }\n        return string(abi.encodePacked(baseURI, tokenId.toString()));\n    }\n\n    /**\n     * @notice Given a token ID, construct a base64 encoded data URI for an official Vrbs DAO verb.\n     */\n    function dataURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) public view returns (string memory) {\n        string memory verbId = tokenId.toString();\n        string memory name = string(abi.encodePacked(tokenNamePrefix, \" \", verbId));\n\n        return genericDataURI(name, metadata);\n    }\n\n    /**\n     * @notice Given a name, and metadata, construct a base64 encoded data URI.\n     */\n    function genericDataURI(string memory name, ICultureIndex.ArtPieceMetadata memory metadata) public pure returns (string memory) {\n        /// @dev Get name description image and animation_url from CultureIndex\n\n        TokenURIParams memory params = TokenURIParams({\n            name: name,\n            description: metadata.description,\n            image: metadata.image,\n            animation_url: metadata.animationUrl\n        });\n        return constructTokenURI(params);\n    }\n}\n"
			},
			"packages/revolution-contracts/interfaces/ICultureIndex.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.22;\n\nimport { IERC20 } from \"../IERC20.sol\";\n\n/**\n * @title ICultureIndexEvents\n * @dev This interface defines the events for the CultureIndex contract.\n */\ninterface ICultureIndexEvents {\n    /**\n     * @dev Emitted when a new piece is created.\n     * @param pieceId Unique identifier for the newly created piece.\n     * @param dropper Address that created the piece.\n     * @param name Name of the art piece.\n     * @param description Description of the art piece.\n     * @param image URL for the image associated with the art piece.\n     * @param animationUrl (Optional) URL for the animation associated with the art piece.\n     * @param text Text content for the art piece.\n     * @param mediaType Integer representation of the media type for the art piece.\n     */\n    event PieceCreated(\n        uint256 indexed pieceId,\n        address indexed dropper,\n        string name,\n        string description,\n        string image,\n        string animationUrl,\n        string text,\n        uint8 mediaType\n    );\n\n    /**\n     * @dev Emitted when a top-voted piece is dropped or released.\n     * @param pieceId Unique identifier for the dropped piece.\n     * @param remover Address that initiated the drop.\n     */\n    event PieceDropped(uint256 indexed pieceId, address indexed remover);\n\n    /**\n     * @dev Emitted for each creator added to a piece when it is dropped.\n     * @param pieceId Unique identifier for the dropped piece.\n     * @param creatorAddress Address of the creator.\n     * @param dropper Address that created the piece.\n     * @param bps Basis points associated with the creator for revenue sharing.\n     */\n    event PieceDroppedCreator(uint256 indexed pieceId, address indexed creatorAddress, address indexed dropper, uint256 bps);\n\n    /**\n     * @dev Emitted when a vote is cast for a piece.\n     * @param pieceId Unique identifier for the piece being voted for.\n     * @param voter Address of the voter.\n     * @param weight Weight of the vote.\n     * @param totalWeight Total weight of votes for the piece after the new vote.\n     */\n    event VoteCast(uint256 indexed pieceId, address indexed voter, uint256 weight, uint256 totalWeight);\n\n    // The events emitted for the respective creators of a piece\n    event PieceCreatorAdded(uint256 indexed pieceId, address indexed creatorAddress, address indexed dropper, uint256 bps);\n}\n\n/**\n * @title ICultureIndex\n * @dev This interface defines the methods for the CultureIndex contract for art piece management and voting.\n */\ninterface ICultureIndex is ICultureIndexEvents {\n    // Enum representing different media types for art pieces.\n    enum MediaType {\n        NONE,\n        IMAGE,\n        ANIMATION,\n        AUDIO,\n        TEXT,\n        OTHER\n    }\n\n    // Struct defining metadata for an art piece.\n    struct ArtPieceMetadata {\n        string name;\n        string description;\n        MediaType mediaType;\n        string image;\n        string text;\n        string animationUrl;\n    }\n\n    // Struct representing a creator of an art piece and their basis points.\n    struct CreatorBps {\n        address creator;\n        uint256 bps;\n    }\n\n    // Struct defining an art piece.\n    struct ArtPiece {\n        uint256 pieceId;\n        ArtPieceMetadata metadata;\n        CreatorBps[] creators;\n        address dropper;\n        bool isDropped;\n    }\n\n    // Struct representing a voter and their weight for a specific art piece.\n    struct Vote {\n        address voterAddress;\n        uint256 weight;\n    }\n\n    /**\n     * @notice Returns the total number of art pieces.\n     * @return The total count of art pieces.\n     */\n    function pieceCount() external view returns (uint256);\n\n    /**\n     * @notice Returns the total voting weight for a specific art piece.\n     * @param pieceId The ID of the art piece.\n     * @return The total vote weight for the art piece.\n     */\n    function totalVoteWeights(uint256 pieceId) external view returns (uint256);\n\n    /**\n     * @notice Checks if a specific voter has already voted for a given art piece.\n     * @param pieceId The ID of the art piece.\n     * @param voter The address of the voter.\n     * @return A boolean indicating if the voter has voted for the art piece.\n     */\n    function hasVoted(uint256 pieceId, address voter) external view returns (bool);\n\n    /**\n     * @notice Allows a user to create a new art piece.\n     * @param metadata The metadata associated with the art piece.\n     * @param creatorArray An array of creators and their associated basis points.\n     * @return The ID of the newly created art piece.\n     */\n    function createPiece(ArtPieceMetadata memory metadata, CreatorBps[] memory creatorArray) external returns (uint256);\n\n    /**\n     * @notice Allows a user to vote for a specific art piece.\n     * @param pieceId The ID of the art piece.\n     */\n    function vote(uint256 pieceId) external;\n\n    /**\n     * @notice Fetch an art piece by its ID.\n     * @param pieceId The ID of the art piece.\n     * @return The ArtPiece struct associated with the given ID.\n     */\n    function getPieceById(uint256 pieceId) external view returns (ArtPiece memory);\n\n    /**\n     * @notice Fetch the list of voters for a given art piece.\n     * @param pieceId The ID of the art piece.\n     * @param voter The address of the voter.\n     * @return An Voter structs associated with the given art piece ID.\n     */\n    function getVote(uint256 pieceId, address voter) external view returns (Vote memory);\n\n    /**\n     * @notice Retrieve the top-voted art piece based on the accumulated votes.\n     * @return The ArtPiece struct representing the piece with the most votes.\n     */\n    function getTopVotedPiece() external view returns (ArtPiece memory);\n\n    /**\n     * @notice Fetch the ID of the top-voted art piece.\n     * @return The ID of the art piece with the most votes.\n     */\n    function topVotedPieceId() external view returns (uint256);\n\n    /**\n     * @notice Officially release or \"drop\" the art piece with the most votes.\n     * @dev This function also updates internal state to reflect the piece's dropped status.\n     * @return The ArtPiece struct of the top voted piece that was just dropped.\n     */\n    function dropTopVotedPiece() external returns (ArtPiece memory);\n}\n"
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        string memory result = new string(4 * ((data.length + 2) / 3));\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 32)\n\n            // Run over the input, 3 bytes at a time\n            for {\n                let dataPtr := data\n                let endPtr := add(data, mload(data))\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 bytes (18 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F which is the number of\n                // the previous character in the ASCII table prior to the Base64 Table\n                // The result is then added to the table to get the character to write,\n                // and finally write it in the result pointer but with a left shift\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // When data `bytes` is not exactly 3 bytes long\n            // it is padded with `=` characters at the end\n            switch mod(mload(data), 3)\n            case 1 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n                mstore8(sub(resultPtr, 2), 0x3d)\n            }\n            case 2 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n            }\n        }\n\n        return result;\n    }\n}\n"
			},
			"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n/// @title Interface for VerbsDescriptor\n\n/*********************************\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░██░░░████░░██░░░████░░░ *\n * ░░██████░░░████████░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n *********************************/\n\npragma solidity ^0.8.22;\n\nimport { IVerbsDescriptorMinimal } from \"./IVerbsDescriptorMinimal.sol\";\nimport { ICultureIndex } from \"./ICultureIndex.sol\";\n\ninterface IVerbsDescriptor is IVerbsDescriptorMinimal {\n    event PartsLocked();\n\n    event DataURIToggled(bool enabled);\n\n    event BaseURIUpdated(string baseURI);\n\n    function isDataURIEnabled() external returns (bool);\n\n    function baseURI() external returns (string memory);\n\n    function toggleDataURIEnabled() external;\n\n    function setBaseURI(string calldata baseURI) external;\n\n    function tokenURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory) external view returns (string memory);\n\n    function dataURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory) external view returns (string memory);\n\n    function genericDataURI(string calldata name, ICultureIndex.ArtPieceMetadata memory) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n/// @title Common interface for VerbsDescriptor versions, as used by VerbsToken\n\n/*********************************\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░██░░░████░░██░░░████░░░ *\n * ░░██████░░░████████░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n *********************************/\n\npragma solidity ^0.8.22;\n\nimport { ICultureIndex } from \"./ICultureIndex.sol\";\n\ninterface IVerbsDescriptorMinimal {\n    ///\n    /// USED BY TOKEN\n    ///\n\n    function tokenURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) external view returns (string memory);\n\n    function dataURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) external view returns (string memory);\n}\n"
			},
			"packages/revolution-contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.22;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"Base64": {
					"abi": [],
					"devdoc": {
						"details": "Provides a set of functions to operate with Base64 strings.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_TABLE": {
								"details": "Base64 Encoding/Decoding Table"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Base64.sol\":202:3504  library Base64 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":202:3504  library Base64 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205398f99d7f9dd9696b2b749b89b07f457b83d7ab839d55b9b3a7be2e627a211664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205398f99d7f9dd9696b2b749b89b07f457b83d7ab839d55b9b3a7be2e627a211664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 SWAP9 0xF9 SWAP14 PUSH32 0x9DD9696B2B749B89B07F457B83D7AB839D55B9B3A7BE2E627A211664736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "202:3302:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:3302:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205398f99d7f9dd9696b2b749b89b07f457b83d7ab839d55b9b3a7be2e627a211664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 SWAP9 0xF9 SWAP14 PUSH32 0x9DD9696B2B749B89B07F457B83D7AB839D55B9B3A7BE2E627A211664736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "202:3302:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"encode(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205398f99d7f9dd9696b2b749b89b07f457b83d7ab839d55b9b3a7be2e627a211664736f6c63430008160033",
									".code": [
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"packages/revolution-contracts/IERC20.sol",
								"packages/revolution-contracts/VerbsDescriptor.sol",
								"packages/revolution-contracts/interfaces/ICultureIndex.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x6f7014d688c4386c26e8c02371ecb7f7740d2542f1ecadffd5a3084511e2a344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81d8f5aabdb088f19c80ce460a2e670ecc651ff4ca46878d239e29bfe705e52c\",\"dweb:/ipfs/QmUveDGa7vEtYBxbVUajNcDvyjP6oaD7Va1M5qwZbudmAn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"packages/revolution-contracts/IERC20.sol",
								"packages/revolution-contracts/VerbsDescriptor.sol",
								"packages/revolution-contracts/interfaces/ICultureIndex.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"packages/revolution-contracts/IERC20.sol",
								"packages/revolution-contracts/VerbsDescriptor.sol",
								"packages/revolution-contracts/interfaces/ICultureIndex.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"packages/revolution-contracts/IERC20.sol",
								"packages/revolution-contracts/VerbsDescriptor.sol",
								"packages/revolution-contracts/interfaces/ICultureIndex.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/VerbsDescriptor.sol": {
				"VerbsDescriptor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_tokenNamePrefix",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								}
							],
							"name": "BaseURIUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "DataURIToggled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PartsLocked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "baseURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animation_url",
											"type": "string"
										}
									],
									"internalType": "struct VerbsDescriptor.TokenURIParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "constructTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "dataURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "genericDataURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isDataURIEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_baseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toggleDataURIEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenNamePrefix",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setBaseURI(string)": {
								"details": "This can only be called by the owner."
							},
							"toggleDataURIEnabled()": {
								"details": "This can only be called by the owner."
							},
							"tokenURI(uint256,(string,string,uint8,string,string,string))": {
								"details": "The returned value may be a base64 encoded data URI or an API URL."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1443:5249  contract VerbsDescriptor is IVerbsDescriptor, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1839:1883  bool public override isDataURIEnabled = true */\n  0x00\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  shl(0xa0, 0x01)\n  or\n  swap1\n  sstore\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2190:2331  constructor(address _initialOwner, string memory _tokenNamePrefix) Ownable(_initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2265:2278  _initialOwner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1506:1557   */\n  mstore\n    /* \"#utility.yul\":1479:1497   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2290:2305  tokenNamePrefix */\n  0x02\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2290:2324  tokenNamePrefix = _tokenNamePrefix */\n  tag_13\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2308:2324  _tokenNamePrefix */\n  dup3\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2290:2305  tokenNamePrefix */\n  dup3\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2290:2324  tokenNamePrefix = _tokenNamePrefix */\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2190:2331  constructor(address _initialOwner, string memory _tokenNamePrefix) Ownable(_initialOwner) {... */\n  pop\n  pop\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1443:5249  contract VerbsDescriptor is IVerbsDescriptor, Ownable {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_17:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1355   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":296:298   */\n  0x40\n    /* \"#utility.yul\":284:293   */\n  dup4\n    /* \"#utility.yul\":275:282   */\n  dup6\n    /* \"#utility.yul\":271:294   */\n  sub\n    /* \"#utility.yul\":267:299   */\n  slt\n    /* \"#utility.yul\":264:316   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":312:313   */\n  0x00\n    /* \"#utility.yul\":309:310   */\n  dup1\n    /* \"#utility.yul\":302:314   */\n  revert\n    /* \"#utility.yul\":264:316   */\ntag_25:\n    /* \"#utility.yul\":338:354   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":383:414   */\n  dup2\n  and\n    /* \"#utility.yul\":373:415   */\n  dup2\n  eq\n    /* \"#utility.yul\":363:433   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":429:430   */\n  0x00\n    /* \"#utility.yul\":426:427   */\n  dup1\n    /* \"#utility.yul\":419:431   */\n  revert\n    /* \"#utility.yul\":363:433   */\ntag_26:\n    /* \"#utility.yul\":476:478   */\n  0x20\n    /* \"#utility.yul\":507:525   */\n  dup5\n  dup2\n  add\n    /* \"#utility.yul\":501:526   */\n  mload\n    /* \"#utility.yul\":452:457   */\n  swap2\n  swap4\n  pop\n    /* \"#utility.yul\":476:478   */\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":575:589   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":572:606   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":602:603   */\n  0x00\n    /* \"#utility.yul\":599:600   */\n  dup1\n    /* \"#utility.yul\":592:604   */\n  revert\n    /* \"#utility.yul\":572:606   */\ntag_27:\n    /* \"#utility.yul\":640:646   */\n  dup2\n    /* \"#utility.yul\":629:638   */\n  dup7\n    /* \"#utility.yul\":625:647   */\n  add\n    /* \"#utility.yul\":615:647   */\n  swap2\n  pop\n    /* \"#utility.yul\":685:692   */\n  dup7\n    /* \"#utility.yul\":678:682   */\n  0x1f\n    /* \"#utility.yul\":674:676   */\n  dup4\n    /* \"#utility.yul\":670:683   */\n  add\n    /* \"#utility.yul\":666:693   */\n  slt\n    /* \"#utility.yul\":656:711   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":707:708   */\n  0x00\n    /* \"#utility.yul\":704:705   */\n  dup1\n    /* \"#utility.yul\":697:709   */\n  revert\n    /* \"#utility.yul\":656:711   */\ntag_28:\n    /* \"#utility.yul\":736:738   */\n  dup2\n    /* \"#utility.yul\":730:739   */\n  mload\n    /* \"#utility.yul\":758:760   */\n  dup2\n    /* \"#utility.yul\":754:756   */\n  dup2\n    /* \"#utility.yul\":751:761   */\n  gt\n    /* \"#utility.yul\":748:784   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":764:782   */\n  tag_30\n  tag_17\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":839:841   */\n  0x40\n    /* \"#utility.yul\":833:842   */\n  mload\n    /* \"#utility.yul\":807:809   */\n  0x1f\n    /* \"#utility.yul\":893:906   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":889:911   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":913:915   */\n  0x3f\n    /* \"#utility.yul\":885:916   */\n  add\n    /* \"#utility.yul\":881:921   */\n  and\n    /* \"#utility.yul\":869:922   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":937:955   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":957:979   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":934:980   */\n  or\n    /* \"#utility.yul\":931:1003   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":983:1001   */\n  tag_32\n  tag_17\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1023:1033   */\n  dup2\n    /* \"#utility.yul\":1019:1021   */\n  0x40\n    /* \"#utility.yul\":1012:1034   */\n  mstore\n    /* \"#utility.yul\":1058:1060   */\n  dup3\n    /* \"#utility.yul\":1050:1056   */\n  dup2\n    /* \"#utility.yul\":1043:1061   */\n  mstore\n    /* \"#utility.yul\":1098:1105   */\n  dup10\n    /* \"#utility.yul\":1093:1095   */\n  dup7\n    /* \"#utility.yul\":1088:1090   */\n  dup5\n    /* \"#utility.yul\":1084:1086   */\n  dup8\n    /* \"#utility.yul\":1080:1091   */\n  add\n    /* \"#utility.yul\":1076:1096   */\n  add\n    /* \"#utility.yul\":1073:1106   */\n  gt\n    /* \"#utility.yul\":1070:1123   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1119:1120   */\n  0x00\n    /* \"#utility.yul\":1116:1117   */\n  dup1\n    /* \"#utility.yul\":1109:1121   */\n  revert\n    /* \"#utility.yul\":1070:1123   */\ntag_33:\n    /* \"#utility.yul\":1141:1142   */\n  0x00\n    /* \"#utility.yul\":1132:1142   */\n  swap4\n  pop\n    /* \"#utility.yul\":1151:1280   */\ntag_34:\n    /* \"#utility.yul\":1165:1167   */\n  dup3\n    /* \"#utility.yul\":1162:1163   */\n  dup5\n    /* \"#utility.yul\":1159:1168   */\n  lt\n    /* \"#utility.yul\":1151:1280   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1253:1263   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1249:1268   */\n  dup7\n  add\n    /* \"#utility.yul\":1243:1269   */\n  mload\n    /* \"#utility.yul\":1222:1236   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1218:1241   */\n  dup8\n  add\n    /* \"#utility.yul\":1211:1270   */\n  mstore\n    /* \"#utility.yul\":1176:1186   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":1151:1280   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1317:1319   */\n  dup7\n    /* \"#utility.yul\":1312:1314   */\n  dup5\n    /* \"#utility.yul\":1304:1310   */\n  dup4\n    /* \"#utility.yul\":1300:1315   */\n  add\n    /* \"#utility.yul\":1296:1320   */\n  add\n    /* \"#utility.yul\":1289:1324   */\n  mstore\n    /* \"#utility.yul\":1343:1349   */\n  dup1\n    /* \"#utility.yul\":1333:1349   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1355   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1948   */\ntag_18:\n    /* \"#utility.yul\":1647:1648   */\n  0x01\n    /* \"#utility.yul\":1643:1655   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1690:1702   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1711:1772   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1765:1769   */\n  0x7f\n    /* \"#utility.yul\":1757:1763   */\n  dup3\n    /* \"#utility.yul\":1753:1770   */\n  and\n    /* \"#utility.yul\":1743:1770   */\n  swap2\n  pop\n    /* \"#utility.yul\":1711:1772   */\ntag_39:\n    /* \"#utility.yul\":1818:1820   */\n  0x20\n    /* \"#utility.yul\":1810:1816   */\n  dup3\n    /* \"#utility.yul\":1807:1821   */\n  lt\n    /* \"#utility.yul\":1787:1805   */\n  dup2\n    /* \"#utility.yul\":1784:1822   */\n  sub\n    /* \"#utility.yul\":1781:1942   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1864:1874   */\n  0x4e487b71\n    /* \"#utility.yul\":1859:1862   */\n  0xe0\n    /* \"#utility.yul\":1855:1875   */\n  shl\n    /* \"#utility.yul\":1852:1853   */\n  0x00\n    /* \"#utility.yul\":1845:1876   */\n  mstore\n    /* \"#utility.yul\":1899:1903   */\n  0x22\n    /* \"#utility.yul\":1896:1897   */\n  0x04\n    /* \"#utility.yul\":1889:1904   */\n  mstore\n    /* \"#utility.yul\":1927:1931   */\n  0x24\n    /* \"#utility.yul\":1924:1925   */\n  0x00\n    /* \"#utility.yul\":1917:1932   */\n  revert\n    /* \"#utility.yul\":1781:1942   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1568:1948   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2079:2597   */\ntag_20:\n    /* \"#utility.yul\":2181:2183   */\n  0x1f\n    /* \"#utility.yul\":2176:2179   */\n  dup3\n    /* \"#utility.yul\":2173:2184   */\n  gt\n    /* \"#utility.yul\":2170:2591   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2217:2222   */\n  dup1\n    /* \"#utility.yul\":2214:2215   */\n  0x00\n    /* \"#utility.yul\":2207:2223   */\n  mstore\n    /* \"#utility.yul\":2261:2265   */\n  0x20\n    /* \"#utility.yul\":2258:2259   */\n  0x00\n    /* \"#utility.yul\":2248:2266   */\n  keccak256\n    /* \"#utility.yul\":2331:2333   */\n  0x1f\n    /* \"#utility.yul\":2319:2329   */\n  dup5\n    /* \"#utility.yul\":2315:2334   */\n  add\n    /* \"#utility.yul\":2312:2313   */\n  0x05\n    /* \"#utility.yul\":2308:2335   */\n  shr\n    /* \"#utility.yul\":2302:2306   */\n  dup2\n    /* \"#utility.yul\":2298:2336   */\n  add\n    /* \"#utility.yul\":2367:2371   */\n  0x20\n    /* \"#utility.yul\":2355:2365   */\n  dup6\n    /* \"#utility.yul\":2352:2372   */\n  lt\n    /* \"#utility.yul\":2349:2396   */\n  iszero\n  tag_44\n  jumpi\n  pop\n    /* \"#utility.yul\":2390:2394   */\n  dup1\n    /* \"#utility.yul\":2349:2396   */\ntag_44:\n    /* \"#utility.yul\":2445:2447   */\n  0x1f\n    /* \"#utility.yul\":2440:2443   */\n  dup5\n    /* \"#utility.yul\":2436:2448   */\n  add\n    /* \"#utility.yul\":2433:2434   */\n  0x05\n    /* \"#utility.yul\":2429:2449   */\n  shr\n    /* \"#utility.yul\":2423:2427   */\n  dup3\n    /* \"#utility.yul\":2419:2450   */\n  add\n    /* \"#utility.yul\":2409:2450   */\n  swap2\n  pop\n    /* \"#utility.yul\":2500:2581   */\ntag_45:\n    /* \"#utility.yul\":2518:2520   */\n  dup2\n    /* \"#utility.yul\":2511:2516   */\n  dup2\n    /* \"#utility.yul\":2508:2521   */\n  lt\n    /* \"#utility.yul\":2500:2581   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2577:2578   */\n  0x00\n    /* \"#utility.yul\":2563:2579   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2544:2545   */\n  0x01\n    /* \"#utility.yul\":2533:2546   */\n  add\n    /* \"#utility.yul\":2500:2581   */\n  jump(tag_45)\ntag_47:\n    /* \"#utility.yul\":2504:2507   */\n  pop\n  pop\n    /* \"#utility.yul\":2170:2591   */\ntag_43:\n    /* \"#utility.yul\":2079:2597   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2773:4118   */\ntag_14:\n    /* \"#utility.yul\":2893:2903   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2915:2945   */\n  dup2\n  gt\n    /* \"#utility.yul\":2912:2968   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2948:2966   */\n  tag_51\n  tag_17\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2977:3074   */\n  tag_52\n    /* \"#utility.yul\":3067:3073   */\n  dup2\n    /* \"#utility.yul\":3027:3065   */\n  tag_53\n    /* \"#utility.yul\":3059:3063   */\n  dup5\n    /* \"#utility.yul\":3053:3064   */\n  sload\n    /* \"#utility.yul\":3027:3065   */\n  tag_18\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":3021:3025   */\n  dup5\n    /* \"#utility.yul\":2977:3074   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3129:3133   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3186:3188   */\n  0x1f\n    /* \"#utility.yul\":3175:3189   */\n  dup4\n  gt\n    /* \"#utility.yul\":3203:3204   */\n  0x01\n    /* \"#utility.yul\":3198:3861   */\n  dup2\n  eq\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3905:3906   */\n  0x00\n    /* \"#utility.yul\":3922:3928   */\n  dup5\n    /* \"#utility.yul\":3919:4008   */\n  iszero\n  tag_56\n  jumpi\n  pop\n    /* \"#utility.yul\":3974:3993   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3968:3994   */\n  mload\n    /* \"#utility.yul\":3919:4008   */\ntag_56:\n  not(0x00)\n    /* \"#utility.yul\":2730:2731   */\n  0x03\n    /* \"#utility.yul\":2726:2737   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2746   */\n  shr\n    /* \"#utility.yul\":2718:2747   */\n  not\n    /* \"#utility.yul\":2708:2748   */\n  and\n    /* \"#utility.yul\":2754:2755   */\n  0x01\n    /* \"#utility.yul\":2750:2761   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2705:2762   */\n  or\n    /* \"#utility.yul\":4021:4102   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3168:4112   */\n  jump(tag_54)\n    /* \"#utility.yul\":3198:3861   */\ntag_55:\n    /* \"#utility.yul\":2026:2027   */\n  0x00\n    /* \"#utility.yul\":2019:2033   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2063:2067   */\n  0x20\n    /* \"#utility.yul\":2050:2068   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3234:3254   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3352:3588   */\ntag_59:\n    /* \"#utility.yul\":3366:3373   */\n  dup3\n    /* \"#utility.yul\":3363:3364   */\n  dup2\n    /* \"#utility.yul\":3360:3374   */\n  lt\n    /* \"#utility.yul\":3352:3588   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3455:3474   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3449:3475   */\n  mload\n    /* \"#utility.yul\":3434:3476   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3547:3574   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3515:3516   */\n  0x01\n    /* \"#utility.yul\":3503:3517   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3382:3401   */\n  dup5\n  add\n    /* \"#utility.yul\":3352:3588   */\n  jump(tag_59)\ntag_61:\n    /* \"#utility.yul\":3356:3359   */\n  pop\n    /* \"#utility.yul\":3616:3622   */\n  dup6\n    /* \"#utility.yul\":3607:3614   */\n  dup3\n    /* \"#utility.yul\":3604:3623   */\n  lt\n    /* \"#utility.yul\":3601:3802   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":3677:3696   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3671:3697   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3760:3761   */\n  0x03\n    /* \"#utility.yul\":3756:3770   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3772:3775   */\n  0xf8\n    /* \"#utility.yul\":3752:3776   */\n  and\n    /* \"#utility.yul\":3748:3785   */\n  shr\n    /* \"#utility.yul\":3744:3786   */\n  not\n    /* \"#utility.yul\":3729:3787   */\n  and\n    /* \"#utility.yul\":3714:3788   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3601:3802   */\ntag_62:\n  pop\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3839:3845   */\n  dup5\n    /* \"#utility.yul\":3836:3837   */\n  0x01\n    /* \"#utility.yul\":3832:3846   */\n  shl\n    /* \"#utility.yul\":3828:3850   */\n  add\n    /* \"#utility.yul\":3822:3826   */\n  dup6\n    /* \"#utility.yul\":3815:3851   */\n  sstore\n    /* \"#utility.yul\":3168:4112   */\ntag_54:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2773:4118   */\n  pop\n  pop\n  jump\t// out\ntag_22:\n    /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1443:5249  contract VerbsDescriptor is IVerbsDescriptor, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1443:5249  contract VerbsDescriptor is IVerbsDescriptor, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x92b4c81b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xce2f4f53\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdfe8478b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf0b305eb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x0dd4f079\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c90464d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3dc081b9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6c0360eb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4355:4664  function dataURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) public view returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3946:4233  function tokenURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) external view returns (string memory) {... */\n    tag_4:\n      tag_16\n      tag_23\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1968:1997  string public tokenNamePrefix */\n    tag_5:\n      tag_16\n      tag_27\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3610:3759  function setBaseURI(string calldata _baseURI) external override onlyOwner {... */\n    tag_6:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1906:1936  string public override baseURI */\n    tag_7:\n      tag_16\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_29\n      tag_37\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4560:4611   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4548:4550   */\n      0x20\n        /* \"#utility.yul\":4533:4551   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_20\n        /* \"#utility.yul\":4414:4617   */\n      jump\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2399:2988  function constructTokenURI(TokenURIParams memory params) public pure returns (string memory) {... */\n    tag_10:\n      tag_16\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1839:1883  bool public override isDataURIEnabled = true */\n    tag_11:\n      sload(0x00)\n      tag_47\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":5927:5941   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5920:5942   */\n      iszero\n        /* \"#utility.yul\":5902:5943   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5890:5892   */\n      0x20\n        /* \"#utility.yul\":5875:5893   */\n      add\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1839:1883  bool public override isDataURIEnabled = true */\n      tag_20\n        /* \"#utility.yul\":5762:5949   */\n      jump\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3171:3355  function toggleDataURIEnabled() external override onlyOwner {... */\n    tag_12:\n      tag_29\n      tag_52\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4766:5247  function genericDataURI(string memory name, ICultureIndex.ArtPieceMetadata memory metadata) public pure returns (string memory) {... */\n    tag_13:\n      tag_16\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_29\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4355:4664  function dataURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) public view returns (string memory) {... */\n    tag_19:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4458:4471  string memory */\n      0x60\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4483:4503  string memory verbId */\n      0x00\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4506:4524  tokenId.toString() */\n      tag_63\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4506:4513  tokenId */\n      dup5\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4506:4522  tokenId.toString */\n      tag_64\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4506:4524  tokenId.toString() */\n      jump\t// in\n    tag_63:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4483:4524  string memory verbId = tokenId.toString() */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4534:4552  string memory name */\n      0x00\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4579:4594  tokenNamePrefix */\n      0x02\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4601:4607  verbId */\n      dup3\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4562:4608  abi.encodePacked(tokenNamePrefix, \" \", verbId) */\n      add(0x20, mload(0x40))\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4534:4609  string memory name = string(abi.encodePacked(tokenNamePrefix, \" \", verbId)) */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4627:4657  genericDataURI(name, metadata) */\n      tag_67\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4642:4646  name */\n      dup2\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4648:4656  metadata */\n      dup6\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4627:4641  genericDataURI */\n      tag_56\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4627:4657  genericDataURI(name, metadata) */\n      jump\t// in\n    tag_67:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4620:4657  return genericDataURI(name, metadata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4355:4664  function dataURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) public view returns (string memory) {... */\n    tag_62:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3946:4233  function tokenURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) external view returns (string memory) {... */\n    tag_24:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4081:4097  isDataURIEnabled */\n      sload(0x00)\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4052:4065  string memory */\n      0x60\n      swap1\n      shl(0xa0, 0x01)\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4081:4097  isDataURIEnabled */\n      swap1\n      div\n      0xff\n      and\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4077:4157  if (isDataURIEnabled) {... */\n      iszero\n      tag_69\n      jumpi\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4120:4146  dataURI(tokenId, metadata) */\n      tag_70\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4128:4135  tokenId */\n      dup4\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4137:4145  metadata */\n      dup4\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4120:4127  dataURI */\n      tag_19\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4120:4146  dataURI(tokenId, metadata) */\n      jump\t// in\n    tag_70:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4113:4146  return dataURI(tokenId, metadata) */\n      swap1\n      pop\n      jump(tag_62)\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4077:4157  if (isDataURIEnabled) {... */\n    tag_69:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4197:4204  baseURI */\n      0x01\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4206:4224  tokenId.toString() */\n      tag_71\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4206:4213  tokenId */\n      dup5\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4206:4222  tokenId.toString */\n      tag_64\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4206:4224  tokenId.toString() */\n      jump\t// in\n    tag_71:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4180:4225  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4166:4226  return string(abi.encodePacked(baseURI, tokenId.toString())) */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3946:4233  function tokenURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) external view returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1968:1997  string public tokenNamePrefix */\n    tag_27:\n      0x02\n      dup1\n      sload\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_75\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3610:3759  function setBaseURI(string calldata _baseURI) external override onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3694:3701  baseURI */\n      0x01\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3694:3712  baseURI = _baseURI */\n      tag_84\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3704:3712  _baseURI */\n      dup3\n      dup5\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3694:3701  baseURI */\n      dup4\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3694:3712  baseURI = _baseURI */\n      tag_85\n      jump\t// in\n    tag_84:\n      pop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3728:3752  BaseURIUpdated(_baseURI) */\n      0x6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3743:3751  _baseURI */\n      dup3\n      dup3\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3728:3752  BaseURIUpdated(_baseURI) */\n      mload(0x40)\n      tag_86\n      swap3\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3610:3759  function setBaseURI(string calldata _baseURI) external override onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":1906:1936  string public override baseURI */\n    tag_34:\n      0x01\n      dup1\n      sload\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2399:2988  function constructTokenURI(TokenURIParams memory params) public pure returns (string memory) {... */\n    tag_45:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2477:2490  string memory */\n      0x60\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2502:2520  string memory json */\n      0x00\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2606:2612  params */\n      dup3\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2606:2617  params.name */\n      0x00\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2673:2679  params */\n      dup4\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2673:2691  params.description */\n      0x20\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2742:2748  params */\n      dup5\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2742:2754  params.image */\n      0x40\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2813:2819  params */\n      dup6\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2813:2833  params.animation_url */\n      0x60\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2543:2869  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_100\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2502:2879  string memory json = string(... */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2953:2979  Base64.encode(bytes(json)) */\n      tag_102\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2973:2977  json */\n      dup2\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2953:2966  Base64.encode */\n      tag_103\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2953:2979  Base64.encode(bytes(json)) */\n      jump\t// in\n    tag_102:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2903:2980  abi.encodePacked(\"data:application/json;base64,\", Base64.encode(bytes(json))) */\n      add(0x20, mload(0x40))\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2889:2981  return string(abi.encodePacked(\"data:application/json;base64,\", Base64.encode(bytes(json)))) */\n      swap2\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":2399:2988  function constructTokenURI(TokenURIParams memory params) public pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3171:3355  function toggleDataURIEnabled() external override onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_107:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3241:3253  bool enabled */\n      0x00\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3257:3273  isDataURIEnabled */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3284:3310  isDataURIEnabled = enabled */\n      dup2\n      and\n      shl(0xa0, 0x01)\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3257:3273  isDataURIEnabled */\n      swap2\n      dup3\n      swap1\n      div\n      0xff\n      and\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3256:3273  !isDataURIEnabled */\n      iszero\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3284:3310  isDataURIEnabled = enabled */\n      swap2\n      dup3\n      mul\n      or\n      swap1\n      swap2\n      sstore\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3325:3348  DataURIToggled(enabled) */\n      mload(0x40)\n        /* \"#utility.yul\":5902:5943   */\n      dup2\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3325:3348  DataURIToggled(enabled) */\n      0x360c3d72ee193226275b842f85231c259c934e85459fed80fa68e502ffa9dbde\n      swap1\n        /* \"#utility.yul\":5890:5892   */\n      0x20\n        /* \"#utility.yul\":5875:5893   */\n      add\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3325:3348  DataURIToggled(enabled) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3231:3355  {... */\n      pop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":3171:3355  function toggleDataURIEnabled() external override onlyOwner {... */\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4766:5247  function genericDataURI(string memory name, ICultureIndex.ArtPieceMetadata memory metadata) public pure returns (string memory) {... */\n    tag_56:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4879:4892  string memory */\n      0x60\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4985:5013  TokenURIParams memory params */\n      0x00\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5016:5198  TokenURIParams({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5051:5055  name */\n      dup6\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5016:5198  TokenURIParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5082:5090  metadata */\n      dup5\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5082:5102  metadata.description */\n      0x20\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5016:5198  TokenURIParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5123:5131  metadata */\n      dup5\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5123:5137  metadata.image */\n      0x60\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5016:5198  TokenURIParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5166:5174  metadata */\n      dup5\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5166:5187  metadata.animationUrl */\n      0xa0\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5016:5198  TokenURIParams({... */\n      dup2\n      mstore\n      pop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4985:5198  TokenURIParams memory params = TokenURIParams({... */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5215:5240  constructTokenURI(params) */\n      tag_111\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5233:5239  params */\n      dup2\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5215:5232  constructTokenURI */\n      tag_45\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5215:5240  constructTokenURI(params) */\n      jump\t// in\n    tag_111:\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":5208:5240  return constructTokenURI(params) */\n      swap5\n        /* \"packages/revolution-contracts/VerbsDescriptor.sol\":4766:5247  function genericDataURI(string memory name, ICultureIndex.ArtPieceMetadata memory metadata) public pure returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4560:4611   */\n      mstore\n        /* \"#utility.yul\":4533:4551   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_120\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_122\n      jumpi\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_124:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_125:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_125\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4560:4611   */\n      mstore\n        /* \"#utility.yul\":4533:4551   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_116\n        /* \"#utility.yul\":4414:4617   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3502  function encode(bytes memory data) internal pure returns (string memory) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":534:547  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:770  data */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:777  data.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":781:782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:782  data.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":762:793  if (data.length == 0) return \"\" */\n      tag_140\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":784:793  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3502  function encode(bytes memory data) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":762:793  if (data.length == 0) return \"\" */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":843:862  string memory table */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":865:871  _TABLE */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x40\n      dup2\n      mstore\n      0x20\n      add\n      data_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce\n      0x40\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":843:871  string memory table = _TABLE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1274:1294  string memory result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1333:1334  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1318  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1325  data.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1328:1329  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1329  data.length + 2 */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1313:1334  (data.length + 2) / 3 */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1335  4 * ((data.length + 2) / 3) */\n      tag_145\n      swap1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1309  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1335  4 * ((data.length + 2) / 3) */\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1297:1336  new string(4 * ((data.length + 2) / 3)) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_148\n      jumpi\n      tag_148\n      tag_123\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_149:\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1274:1336  string memory result = new string(4 * ((data.length + 2) / 3)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1511:1512  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1504:1509  table */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1500:1513  add(table, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1612:1614  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1604:1610  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1600:1615  add(result, 32) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1719:1723  data */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1770:1774  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1764:1775  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1758:1762  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1754:1776  add(data, mload(data)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1682:3085  for {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1803:1809  endPtr */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1794:1801  dataPtr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1791:1810  lt(dataPtr, endPtr) */\n      lt\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1682:3085  for {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1905:1906  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1896:1903  dataPtr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1892:1907  add(dataPtr, 3) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1881:1907  dataPtr := add(dataPtr, 3) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1943:1950  dataPtr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1937:1951  mload(dataPtr) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2586:2590  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2578:2583  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2574:2576  18 */\n      0x12\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2570:2584  shr(18, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2566:2591  and(shr(18, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2556:2564  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2552:2592  add(tablePtr, and(shr(18, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2546:2593  mload(add(tablePtr, and(shr(18, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2535:2544  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2527:2594  mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2639:2640  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2628:2637  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2624:2641  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2611:2641  resultPtr := add(resultPtr, 1) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2729:2733  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2721:2726  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2717:2719  12 */\n      0x0c\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2713:2727  shr(12, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2709:2734  and(shr(12, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2699:2707  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2695:2735  add(tablePtr, and(shr(12, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2689:2736  mload(add(tablePtr, and(shr(12, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2678:2687  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2670:2737  mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2782:2783  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2771:2780  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2767:2784  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2754:2784  resultPtr := add(resultPtr, 1) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2871:2875  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2863:2868  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2860:2861  6 */\n      0x06\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2856:2869  shr(6, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2852:2876  and(shr(6, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2842:2850  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2838:2877  add(tablePtr, and(shr(6, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2832:2878  mload(add(tablePtr, and(shr(6, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2821:2830  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2813:2879  mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2924:2925  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2913:2922  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2909:2926  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2896:2926  resultPtr := add(resultPtr, 1) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3005:3009  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2998:3003  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2994:3010  and(input, 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2984:2992  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2980:3011  add(tablePtr, and(input, 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2974:3012  mload(add(tablePtr, and(input, 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2963:2972  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2955:3013  mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F)))) */\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3058:3059  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3047:3056  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3043:3060  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3030:3060  resultPtr := add(resultPtr, 1) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1682:3085  for {... */\n      jump(tag_150)\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1686:1790  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3243:3244  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3236:3240  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3230:3241  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3226:3245  mod(mload(data), 3) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3263:3264  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3258:3378  case 1 {... */\n      dup2\n      eq\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3396:3397  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3391:3462  case 2 {... */\n      dup2\n      eq\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3219:3462  switch mod(mload(data), 3)... */\n      jump(tag_153)\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3258:3378  case 1 {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3310:3314  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3306:3307  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3295:3304  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3291:3308  sub(resultPtr, 1) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3283:3315  mstore8(sub(resultPtr, 1), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3359:3363  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3355:3356  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3344:3353  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3340:3357  sub(resultPtr, 2) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3332:3364  mstore8(sub(resultPtr, 2), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3258:3378  case 1 {... */\n      jump(tag_153)\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3391:3462  case 2 {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3443:3447  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3439:3440  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3428:3437  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3424:3441  sub(resultPtr, 1) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3416:3448  mstore8(sub(resultPtr, 1), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3219:3462  switch mod(mload(data), 3)... */\n    tag_153:\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3489:3495  result */\n      swap2\n      swap6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3502  function encode(bytes memory data) internal pure returns (string memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_157\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_62\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_123:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:394   */\n    tag_177:\n        /* \"#utility.yul\":213:215   */\n      0x40\n        /* \"#utility.yul\":207:216   */\n      mload\n        /* \"#utility.yul\":255:259   */\n      0xc0\n        /* \"#utility.yul\":243:260   */\n      dup2\n      add\n        /* \"#utility.yul\":290:308   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":275:309   */\n      dup2\n      gt\n        /* \"#utility.yul\":311:333   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":272:334   */\n      or\n        /* \"#utility.yul\":269:357   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":337:355   */\n      tag_192\n      tag_123\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":373:375   */\n      0x40\n        /* \"#utility.yul\":366:388   */\n      mstore\n        /* \"#utility.yul\":146:394   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":399:652   */\n    tag_178:\n        /* \"#utility.yul\":471:473   */\n      0x40\n        /* \"#utility.yul\":465:474   */\n      mload\n        /* \"#utility.yul\":513:517   */\n      0x80\n        /* \"#utility.yul\":501:518   */\n      dup2\n      add\n        /* \"#utility.yul\":548:566   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":533:567   */\n      dup2\n      gt\n        /* \"#utility.yul\":569:591   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":530:592   */\n      or\n        /* \"#utility.yul\":527:615   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":595:613   */\n      tag_192\n      tag_123\n      jump\t// in\n        /* \"#utility.yul\":657:1376   */\n    tag_179:\n        /* \"#utility.yul\":700:705   */\n      0x00\n        /* \"#utility.yul\":753:756   */\n      dup3\n        /* \"#utility.yul\":746:750   */\n      0x1f\n        /* \"#utility.yul\":738:744   */\n      dup4\n        /* \"#utility.yul\":734:751   */\n      add\n        /* \"#utility.yul\":730:757   */\n      slt\n        /* \"#utility.yul\":720:775   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":771:772   */\n      0x00\n        /* \"#utility.yul\":768:769   */\n      dup1\n        /* \"#utility.yul\":761:773   */\n      revert\n        /* \"#utility.yul\":720:775   */\n    tag_197:\n        /* \"#utility.yul\":807:813   */\n      dup2\n        /* \"#utility.yul\":794:814   */\n      calldataload\n        /* \"#utility.yul\":833:851   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":870:872   */\n      dup1\n        /* \"#utility.yul\":866:868   */\n      dup3\n        /* \"#utility.yul\":863:873   */\n      gt\n        /* \"#utility.yul\":860:896   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":876:894   */\n      tag_199\n      tag_123\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":951:953   */\n      0x40\n        /* \"#utility.yul\":945:954   */\n      mload\n        /* \"#utility.yul\":919:921   */\n      0x1f\n        /* \"#utility.yul\":1005:1018   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1001:1023   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1025:1027   */\n      0x3f\n        /* \"#utility.yul\":997:1028   */\n      add\n        /* \"#utility.yul\":993:1033   */\n      and\n        /* \"#utility.yul\":981:1034   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1049:1067   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":1069:1091   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1046:1092   */\n      or\n        /* \"#utility.yul\":1043:1115   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":1095:1113   */\n      tag_201\n      tag_123\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1135:1145   */\n      dup2\n        /* \"#utility.yul\":1131:1133   */\n      0x40\n        /* \"#utility.yul\":1124:1146   */\n      mstore\n        /* \"#utility.yul\":1170:1172   */\n      dup4\n        /* \"#utility.yul\":1162:1168   */\n      dup2\n        /* \"#utility.yul\":1155:1173   */\n      mstore\n        /* \"#utility.yul\":1216:1219   */\n      dup7\n        /* \"#utility.yul\":1209:1213   */\n      0x20\n        /* \"#utility.yul\":1204:1206   */\n      dup6\n        /* \"#utility.yul\":1196:1202   */\n      dup9\n        /* \"#utility.yul\":1192:1207   */\n      add\n        /* \"#utility.yul\":1188:1214   */\n      add\n        /* \"#utility.yul\":1185:1220   */\n      gt\n        /* \"#utility.yul\":1182:1237   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":1233:1234   */\n      0x00\n        /* \"#utility.yul\":1230:1231   */\n      dup1\n        /* \"#utility.yul\":1223:1235   */\n      revert\n        /* \"#utility.yul\":1182:1237   */\n    tag_202:\n        /* \"#utility.yul\":1297:1299   */\n      dup4\n        /* \"#utility.yul\":1290:1294   */\n      0x20\n        /* \"#utility.yul\":1282:1288   */\n      dup8\n        /* \"#utility.yul\":1278:1295   */\n      add\n        /* \"#utility.yul\":1271:1275   */\n      0x20\n        /* \"#utility.yul\":1263:1269   */\n      dup4\n        /* \"#utility.yul\":1259:1276   */\n      add\n        /* \"#utility.yul\":1246:1300   */\n      calldatacopy\n        /* \"#utility.yul\":1344:1345   */\n      0x00\n        /* \"#utility.yul\":1337:1341   */\n      0x20\n        /* \"#utility.yul\":1332:1334   */\n      dup6\n        /* \"#utility.yul\":1324:1330   */\n      dup4\n        /* \"#utility.yul\":1320:1335   */\n      add\n        /* \"#utility.yul\":1316:1342   */\n      add\n        /* \"#utility.yul\":1309:1346   */\n      mstore\n        /* \"#utility.yul\":1364:1370   */\n      dup1\n        /* \"#utility.yul\":1355:1370   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":657:1376   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1531   */\n    tag_180:\n        /* \"#utility.yul\":1456:1476   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1505:1506   */\n      0x06\n        /* \"#utility.yul\":1495:1507   */\n      dup2\n      lt\n        /* \"#utility.yul\":1485:1525   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":1521:1522   */\n      0x00\n        /* \"#utility.yul\":1518:1519   */\n      dup1\n        /* \"#utility.yul\":1511:1523   */\n      revert\n        /* \"#utility.yul\":1485:1525   */\n    tag_204:\n        /* \"#utility.yul\":1381:1531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1536:2720   */\n    tag_181:\n        /* \"#utility.yul\":1599:1604   */\n      0x00\n        /* \"#utility.yul\":1647:1651   */\n      0xc0\n        /* \"#utility.yul\":1635:1644   */\n      dup3\n        /* \"#utility.yul\":1630:1633   */\n      dup5\n        /* \"#utility.yul\":1626:1645   */\n      sub\n        /* \"#utility.yul\":1622:1652   */\n      slt\n        /* \"#utility.yul\":1619:1669   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1665:1666   */\n      0x00\n        /* \"#utility.yul\":1662:1663   */\n      dup1\n        /* \"#utility.yul\":1655:1667   */\n      revert\n        /* \"#utility.yul\":1619:1669   */\n    tag_206:\n        /* \"#utility.yul\":1687:1704   */\n      tag_207\n      tag_177\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1678:1704   */\n      swap1\n      pop\n        /* \"#utility.yul\":1740:1749   */\n      dup2\n        /* \"#utility.yul\":1727:1750   */\n      calldataload\n        /* \"#utility.yul\":1769:1787   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1810:1812   */\n      dup1\n        /* \"#utility.yul\":1802:1808   */\n      dup3\n        /* \"#utility.yul\":1799:1813   */\n      gt\n        /* \"#utility.yul\":1796:1830   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1826:1827   */\n      0x00\n        /* \"#utility.yul\":1823:1824   */\n      dup1\n        /* \"#utility.yul\":1816:1828   */\n      revert\n        /* \"#utility.yul\":1796:1830   */\n    tag_208:\n        /* \"#utility.yul\":1853:1899   */\n      tag_209\n        /* \"#utility.yul\":1895:1898   */\n      dup6\n        /* \"#utility.yul\":1886:1892   */\n      dup4\n        /* \"#utility.yul\":1875:1884   */\n      dup7\n        /* \"#utility.yul\":1871:1893   */\n      add\n        /* \"#utility.yul\":1853:1899   */\n      tag_179\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1846:1851   */\n      dup4\n        /* \"#utility.yul\":1839:1900   */\n      mstore\n        /* \"#utility.yul\":1953:1955   */\n      0x20\n        /* \"#utility.yul\":1942:1951   */\n      dup5\n        /* \"#utility.yul\":1938:1956   */\n      add\n        /* \"#utility.yul\":1925:1957   */\n      calldataload\n        /* \"#utility.yul\":1909:1957   */\n      swap2\n      pop\n        /* \"#utility.yul\":1982:1984   */\n      dup1\n        /* \"#utility.yul\":1972:1980   */\n      dup3\n        /* \"#utility.yul\":1969:1985   */\n      gt\n        /* \"#utility.yul\":1966:2002   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1998:1999   */\n      0x00\n        /* \"#utility.yul\":1995:1996   */\n      dup1\n        /* \"#utility.yul\":1988:2000   */\n      revert\n        /* \"#utility.yul\":1966:2002   */\n    tag_210:\n        /* \"#utility.yul\":2034:2082   */\n      tag_211\n        /* \"#utility.yul\":2078:2081   */\n      dup6\n        /* \"#utility.yul\":2067:2075   */\n      dup4\n        /* \"#utility.yul\":2056:2065   */\n      dup7\n        /* \"#utility.yul\":2052:2076   */\n      add\n        /* \"#utility.yul\":2034:2082   */\n      tag_179\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2029:2031   */\n      0x20\n        /* \"#utility.yul\":2022:2027   */\n      dup5\n        /* \"#utility.yul\":2018:2032   */\n      add\n        /* \"#utility.yul\":2011:2083   */\n      mstore\n        /* \"#utility.yul\":2115:2160   */\n      tag_212\n        /* \"#utility.yul\":2156:2158   */\n      0x40\n        /* \"#utility.yul\":2145:2154   */\n      dup6\n        /* \"#utility.yul\":2141:2159   */\n      add\n        /* \"#utility.yul\":2115:2160   */\n      tag_180\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2110:2112   */\n      0x40\n        /* \"#utility.yul\":2103:2108   */\n      dup5\n        /* \"#utility.yul\":2099:2113   */\n      add\n        /* \"#utility.yul\":2092:2161   */\n      mstore\n        /* \"#utility.yul\":2214:2216   */\n      0x60\n        /* \"#utility.yul\":2203:2212   */\n      dup5\n        /* \"#utility.yul\":2199:2217   */\n      add\n        /* \"#utility.yul\":2186:2218   */\n      calldataload\n        /* \"#utility.yul\":2170:2218   */\n      swap2\n      pop\n        /* \"#utility.yul\":2243:2245   */\n      dup1\n        /* \"#utility.yul\":2233:2241   */\n      dup3\n        /* \"#utility.yul\":2230:2246   */\n      gt\n        /* \"#utility.yul\":2227:2263   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2256:2257   */\n      dup1\n        /* \"#utility.yul\":2249:2261   */\n      revert\n        /* \"#utility.yul\":2227:2263   */\n    tag_213:\n        /* \"#utility.yul\":2295:2343   */\n      tag_214\n        /* \"#utility.yul\":2339:2342   */\n      dup6\n        /* \"#utility.yul\":2328:2336   */\n      dup4\n        /* \"#utility.yul\":2317:2326   */\n      dup7\n        /* \"#utility.yul\":2313:2337   */\n      add\n        /* \"#utility.yul\":2295:2343   */\n      tag_179\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2290:2292   */\n      0x60\n        /* \"#utility.yul\":2283:2288   */\n      dup5\n        /* \"#utility.yul\":2279:2293   */\n      add\n        /* \"#utility.yul\":2272:2344   */\n      mstore\n        /* \"#utility.yul\":2397:2400   */\n      0x80\n        /* \"#utility.yul\":2386:2395   */\n      dup5\n        /* \"#utility.yul\":2382:2401   */\n      add\n        /* \"#utility.yul\":2369:2402   */\n      calldataload\n        /* \"#utility.yul\":2353:2402   */\n      swap2\n      pop\n        /* \"#utility.yul\":2427:2429   */\n      dup1\n        /* \"#utility.yul\":2417:2425   */\n      dup3\n        /* \"#utility.yul\":2414:2430   */\n      gt\n        /* \"#utility.yul\":2411:2447   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2443:2444   */\n      0x00\n        /* \"#utility.yul\":2440:2441   */\n      dup1\n        /* \"#utility.yul\":2433:2445   */\n      revert\n        /* \"#utility.yul\":2411:2447   */\n    tag_215:\n        /* \"#utility.yul\":2480:2528   */\n      tag_216\n        /* \"#utility.yul\":2524:2527   */\n      dup6\n        /* \"#utility.yul\":2513:2521   */\n      dup4\n        /* \"#utility.yul\":2502:2511   */\n      dup7\n        /* \"#utility.yul\":2498:2522   */\n      add\n        /* \"#utility.yul\":2480:2528   */\n      tag_179\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2474:2477   */\n      0x80\n        /* \"#utility.yul\":2467:2472   */\n      dup5\n        /* \"#utility.yul\":2463:2478   */\n      add\n        /* \"#utility.yul\":2456:2529   */\n      mstore\n        /* \"#utility.yul\":2582:2585   */\n      0xa0\n        /* \"#utility.yul\":2571:2580   */\n      dup5\n        /* \"#utility.yul\":2567:2586   */\n      add\n        /* \"#utility.yul\":2554:2587   */\n      calldataload\n        /* \"#utility.yul\":2538:2587   */\n      swap2\n      pop\n        /* \"#utility.yul\":2612:2614   */\n      dup1\n        /* \"#utility.yul\":2602:2610   */\n      dup3\n        /* \"#utility.yul\":2599:2615   */\n      gt\n        /* \"#utility.yul\":2596:2632   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":2628:2629   */\n      0x00\n        /* \"#utility.yul\":2625:2626   */\n      dup1\n        /* \"#utility.yul\":2618:2630   */\n      revert\n        /* \"#utility.yul\":2596:2632   */\n    tag_217:\n      pop\n        /* \"#utility.yul\":2665:2713   */\n      tag_218\n        /* \"#utility.yul\":2709:2712   */\n      dup5\n        /* \"#utility.yul\":2698:2706   */\n      dup3\n        /* \"#utility.yul\":2687:2696   */\n      dup6\n        /* \"#utility.yul\":2683:2707   */\n      add\n        /* \"#utility.yul\":2665:2713   */\n      tag_179\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2659:2662   */\n      0xa0\n        /* \"#utility.yul\":2652:2657   */\n      dup4\n        /* \"#utility.yul\":2648:2663   */\n      add\n        /* \"#utility.yul\":2641:2714   */\n      mstore\n      pop\n        /* \"#utility.yul\":1536:2720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2725:3156   */\n    tag_18:\n        /* \"#utility.yul\":2827:2833   */\n      0x00\n        /* \"#utility.yul\":2835:2841   */\n      dup1\n        /* \"#utility.yul\":2888:2890   */\n      0x40\n        /* \"#utility.yul\":2876:2885   */\n      dup4\n        /* \"#utility.yul\":2867:2874   */\n      dup6\n        /* \"#utility.yul\":2863:2886   */\n      sub\n        /* \"#utility.yul\":2859:2891   */\n      slt\n        /* \"#utility.yul\":2856:2908   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":2904:2905   */\n      0x00\n        /* \"#utility.yul\":2901:2902   */\n      dup1\n        /* \"#utility.yul\":2894:2906   */\n      revert\n        /* \"#utility.yul\":2856:2908   */\n    tag_220:\n        /* \"#utility.yul\":2940:2949   */\n      dup3\n        /* \"#utility.yul\":2927:2950   */\n      calldataload\n        /* \"#utility.yul\":2917:2950   */\n      swap2\n      pop\n        /* \"#utility.yul\":3001:3003   */\n      0x20\n        /* \"#utility.yul\":2990:2999   */\n      dup4\n        /* \"#utility.yul\":2986:3004   */\n      add\n        /* \"#utility.yul\":2973:3005   */\n      calldataload\n        /* \"#utility.yul\":3028:3046   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3020:3026   */\n      dup2\n        /* \"#utility.yul\":3017:3047   */\n      gt\n        /* \"#utility.yul\":3014:3064   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":3060:3061   */\n      0x00\n        /* \"#utility.yul\":3057:3058   */\n      dup1\n        /* \"#utility.yul\":3050:3062   */\n      revert\n        /* \"#utility.yul\":3014:3064   */\n    tag_221:\n        /* \"#utility.yul\":3083:3150   */\n      tag_222\n        /* \"#utility.yul\":3142:3149   */\n      dup6\n        /* \"#utility.yul\":3133:3139   */\n      dup3\n        /* \"#utility.yul\":3122:3131   */\n      dup7\n        /* \"#utility.yul\":3118:3140   */\n      add\n        /* \"#utility.yul\":3083:3150   */\n      tag_181\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3073:3150   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2725:3156   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3161:3411   */\n    tag_182:\n        /* \"#utility.yul\":3246:3247   */\n      0x00\n        /* \"#utility.yul\":3256:3369   */\n    tag_224:\n        /* \"#utility.yul\":3270:3276   */\n      dup4\n        /* \"#utility.yul\":3267:3268   */\n      dup2\n        /* \"#utility.yul\":3264:3277   */\n      lt\n        /* \"#utility.yul\":3256:3369   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":3346:3357   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3340:3358   */\n      mload\n        /* \"#utility.yul\":3327:3338   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3320:3359   */\n      mstore\n        /* \"#utility.yul\":3292:3294   */\n      0x20\n        /* \"#utility.yul\":3285:3295   */\n      add\n        /* \"#utility.yul\":3256:3369   */\n      jump(tag_224)\n    tag_226:\n      pop\n      pop\n        /* \"#utility.yul\":3403:3404   */\n      0x00\n        /* \"#utility.yul\":3385:3401   */\n      swap2\n      add\n        /* \"#utility.yul\":3378:3405   */\n      mstore\n        /* \"#utility.yul\":3161:3411   */\n      jump\t// out\n        /* \"#utility.yul\":3416:3812   */\n    tag_21:\n        /* \"#utility.yul\":3565:3567   */\n      0x20\n        /* \"#utility.yul\":3554:3563   */\n      dup2\n        /* \"#utility.yul\":3547:3568   */\n      mstore\n        /* \"#utility.yul\":3528:3532   */\n      0x00\n        /* \"#utility.yul\":3597:3603   */\n      dup3\n        /* \"#utility.yul\":3591:3604   */\n      mload\n        /* \"#utility.yul\":3640:3646   */\n      dup1\n        /* \"#utility.yul\":3635:3637   */\n      0x20\n        /* \"#utility.yul\":3624:3633   */\n      dup5\n        /* \"#utility.yul\":3620:3638   */\n      add\n        /* \"#utility.yul\":3613:3647   */\n      mstore\n        /* \"#utility.yul\":3656:3735   */\n      tag_228\n        /* \"#utility.yul\":3728:3734   */\n      dup2\n        /* \"#utility.yul\":3723:3725   */\n      0x40\n        /* \"#utility.yul\":3712:3721   */\n      dup6\n        /* \"#utility.yul\":3708:3726   */\n      add\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3695:3701   */\n      dup8\n        /* \"#utility.yul\":3691:3706   */\n      add\n        /* \"#utility.yul\":3656:3735   */\n      tag_182\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3796:3798   */\n      0x1f\n        /* \"#utility.yul\":3775:3790   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3771:3800   */\n      and\n        /* \"#utility.yul\":3756:3801   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3803:3805   */\n      0x40\n        /* \"#utility.yul\":3752:3806   */\n      add\n      swap3\n        /* \"#utility.yul\":3416:3812   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3817:4409   */\n    tag_31:\n        /* \"#utility.yul\":3888:3894   */\n      0x00\n        /* \"#utility.yul\":3896:3902   */\n      dup1\n        /* \"#utility.yul\":3949:3951   */\n      0x20\n        /* \"#utility.yul\":3937:3946   */\n      dup4\n        /* \"#utility.yul\":3928:3935   */\n      dup6\n        /* \"#utility.yul\":3924:3947   */\n      sub\n        /* \"#utility.yul\":3920:3952   */\n      slt\n        /* \"#utility.yul\":3917:3969   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":3965:3966   */\n      0x00\n        /* \"#utility.yul\":3962:3963   */\n      dup1\n        /* \"#utility.yul\":3955:3967   */\n      revert\n        /* \"#utility.yul\":3917:3969   */\n    tag_230:\n        /* \"#utility.yul\":4005:4014   */\n      dup3\n        /* \"#utility.yul\":3992:4015   */\n      calldataload\n        /* \"#utility.yul\":4034:4052   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4075:4077   */\n      dup1\n        /* \"#utility.yul\":4067:4073   */\n      dup3\n        /* \"#utility.yul\":4064:4078   */\n      gt\n        /* \"#utility.yul\":4061:4095   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":4091:4092   */\n      0x00\n        /* \"#utility.yul\":4088:4089   */\n      dup1\n        /* \"#utility.yul\":4081:4093   */\n      revert\n        /* \"#utility.yul\":4061:4095   */\n    tag_231:\n        /* \"#utility.yul\":4129:4135   */\n      dup2\n        /* \"#utility.yul\":4118:4127   */\n      dup6\n        /* \"#utility.yul\":4114:4136   */\n      add\n        /* \"#utility.yul\":4104:4136   */\n      swap2\n      pop\n        /* \"#utility.yul\":4174:4181   */\n      dup6\n        /* \"#utility.yul\":4167:4171   */\n      0x1f\n        /* \"#utility.yul\":4163:4165   */\n      dup4\n        /* \"#utility.yul\":4159:4172   */\n      add\n        /* \"#utility.yul\":4155:4182   */\n      slt\n        /* \"#utility.yul\":4145:4200   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4196:4197   */\n      0x00\n        /* \"#utility.yul\":4193:4194   */\n      dup1\n        /* \"#utility.yul\":4186:4198   */\n      revert\n        /* \"#utility.yul\":4145:4200   */\n    tag_232:\n        /* \"#utility.yul\":4236:4238   */\n      dup2\n        /* \"#utility.yul\":4223:4239   */\n      calldataload\n        /* \"#utility.yul\":4262:4264   */\n      dup2\n        /* \"#utility.yul\":4254:4260   */\n      dup2\n        /* \"#utility.yul\":4251:4265   */\n      gt\n        /* \"#utility.yul\":4248:4282   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":4278:4279   */\n      0x00\n        /* \"#utility.yul\":4275:4276   */\n      dup1\n        /* \"#utility.yul\":4268:4280   */\n      revert\n        /* \"#utility.yul\":4248:4282   */\n    tag_233:\n        /* \"#utility.yul\":4323:4330   */\n      dup7\n        /* \"#utility.yul\":4318:4320   */\n      0x20\n        /* \"#utility.yul\":4309:4315   */\n      dup3\n        /* \"#utility.yul\":4305:4307   */\n      dup6\n        /* \"#utility.yul\":4301:4316   */\n      add\n        /* \"#utility.yul\":4297:4321   */\n      add\n        /* \"#utility.yul\":4294:4331   */\n      gt\n        /* \"#utility.yul\":4291:4348   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":4344:4345   */\n      0x00\n        /* \"#utility.yul\":4341:4342   */\n      dup1\n        /* \"#utility.yul\":4334:4346   */\n      revert\n        /* \"#utility.yul\":4291:4348   */\n    tag_234:\n        /* \"#utility.yul\":4375:4377   */\n      0x20\n        /* \"#utility.yul\":4367:4378   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":4397:4403   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":3817:4409   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4622:5757   */\n    tag_44:\n        /* \"#utility.yul\":4713:4719   */\n      0x00\n        /* \"#utility.yul\":4766:4768   */\n      0x20\n        /* \"#utility.yul\":4754:4763   */\n      dup3\n        /* \"#utility.yul\":4745:4752   */\n      dup5\n        /* \"#utility.yul\":4741:4764   */\n      sub\n        /* \"#utility.yul\":4737:4769   */\n      slt\n        /* \"#utility.yul\":4734:4786   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":4782:4783   */\n      0x00\n        /* \"#utility.yul\":4779:4780   */\n      dup1\n        /* \"#utility.yul\":4772:4784   */\n      revert\n        /* \"#utility.yul\":4734:4786   */\n    tag_237:\n        /* \"#utility.yul\":4822:4831   */\n      dup2\n        /* \"#utility.yul\":4809:4832   */\n      calldataload\n        /* \"#utility.yul\":4851:4869   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4892:4894   */\n      dup1\n        /* \"#utility.yul\":4884:4890   */\n      dup3\n        /* \"#utility.yul\":4881:4895   */\n      gt\n        /* \"#utility.yul\":4878:4912   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":4908:4909   */\n      0x00\n        /* \"#utility.yul\":4905:4906   */\n      dup1\n        /* \"#utility.yul\":4898:4910   */\n      revert\n        /* \"#utility.yul\":4878:4912   */\n    tag_238:\n        /* \"#utility.yul\":4931:4953   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4987:4991   */\n      0x80\n        /* \"#utility.yul\":4969:4985   */\n      dup3\n      dup7\n      sub\n        /* \"#utility.yul\":4965:4992   */\n      slt\n        /* \"#utility.yul\":4962:5009   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":5005:5006   */\n      0x00\n        /* \"#utility.yul\":5002:5003   */\n      dup1\n        /* \"#utility.yul\":4995:5007   */\n      revert\n        /* \"#utility.yul\":4962:5009   */\n    tag_239:\n        /* \"#utility.yul\":5031:5053   */\n      tag_240\n      tag_178\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5091:5093   */\n      dup3\n        /* \"#utility.yul\":5078:5094   */\n      calldataload\n        /* \"#utility.yul\":5119:5121   */\n      dup3\n        /* \"#utility.yul\":5109:5117   */\n      dup2\n        /* \"#utility.yul\":5106:5122   */\n      gt\n        /* \"#utility.yul\":5103:5139   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5132:5133   */\n      dup1\n        /* \"#utility.yul\":5125:5137   */\n      revert\n        /* \"#utility.yul\":5103:5139   */\n    tag_241:\n        /* \"#utility.yul\":5162:5207   */\n      tag_242\n        /* \"#utility.yul\":5199:5206   */\n      dup8\n        /* \"#utility.yul\":5188:5196   */\n      dup3\n        /* \"#utility.yul\":5184:5186   */\n      dup7\n        /* \"#utility.yul\":5180:5197   */\n      add\n        /* \"#utility.yul\":5162:5207   */\n      tag_179\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5155:5160   */\n      dup3\n        /* \"#utility.yul\":5148:5208   */\n      mstore\n      pop\n        /* \"#utility.yul\":5254:5256   */\n      0x20\n        /* \"#utility.yul\":5250:5252   */\n      dup4\n        /* \"#utility.yul\":5246:5257   */\n      add\n        /* \"#utility.yul\":5233:5258   */\n      calldataload\n        /* \"#utility.yul\":5283:5285   */\n      dup3\n        /* \"#utility.yul\":5273:5281   */\n      dup2\n        /* \"#utility.yul\":5270:5286   */\n      gt\n        /* \"#utility.yul\":5267:5303   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":5299:5300   */\n      0x00\n        /* \"#utility.yul\":5296:5297   */\n      dup1\n        /* \"#utility.yul\":5289:5301   */\n      revert\n        /* \"#utility.yul\":5267:5303   */\n    tag_243:\n        /* \"#utility.yul\":5335:5380   */\n      tag_244\n        /* \"#utility.yul\":5372:5379   */\n      dup8\n        /* \"#utility.yul\":5361:5369   */\n      dup3\n        /* \"#utility.yul\":5357:5359   */\n      dup7\n        /* \"#utility.yul\":5353:5370   */\n      add\n        /* \"#utility.yul\":5335:5380   */\n      tag_179\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5330:5332   */\n      0x20\n        /* \"#utility.yul\":5323:5328   */\n      dup4\n        /* \"#utility.yul\":5319:5333   */\n      add\n        /* \"#utility.yul\":5312:5381   */\n      mstore\n      pop\n        /* \"#utility.yul\":5427:5429   */\n      0x40\n        /* \"#utility.yul\":5423:5425   */\n      dup4\n        /* \"#utility.yul\":5419:5430   */\n      add\n        /* \"#utility.yul\":5406:5431   */\n      calldataload\n        /* \"#utility.yul\":5456:5458   */\n      dup3\n        /* \"#utility.yul\":5446:5454   */\n      dup2\n        /* \"#utility.yul\":5443:5459   */\n      gt\n        /* \"#utility.yul\":5440:5476   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":5472:5473   */\n      0x00\n        /* \"#utility.yul\":5469:5470   */\n      dup1\n        /* \"#utility.yul\":5462:5474   */\n      revert\n        /* \"#utility.yul\":5440:5476   */\n    tag_245:\n        /* \"#utility.yul\":5508:5553   */\n      tag_246\n        /* \"#utility.yul\":5545:5552   */\n      dup8\n        /* \"#utility.yul\":5534:5542   */\n      dup3\n        /* \"#utility.yul\":5530:5532   */\n      dup7\n        /* \"#utility.yul\":5526:5543   */\n      add\n        /* \"#utility.yul\":5508:5553   */\n      tag_179\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5503:5505   */\n      0x40\n        /* \"#utility.yul\":5496:5501   */\n      dup4\n        /* \"#utility.yul\":5492:5506   */\n      add\n        /* \"#utility.yul\":5485:5554   */\n      mstore\n      pop\n        /* \"#utility.yul\":5600:5602   */\n      0x60\n        /* \"#utility.yul\":5596:5598   */\n      dup4\n        /* \"#utility.yul\":5592:5603   */\n      add\n        /* \"#utility.yul\":5579:5604   */\n      calldataload\n        /* \"#utility.yul\":5629:5631   */\n      dup3\n        /* \"#utility.yul\":5619:5627   */\n      dup2\n        /* \"#utility.yul\":5616:5632   */\n      gt\n        /* \"#utility.yul\":5613:5649   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":5645:5646   */\n      0x00\n        /* \"#utility.yul\":5642:5643   */\n      dup1\n        /* \"#utility.yul\":5635:5647   */\n      revert\n        /* \"#utility.yul\":5613:5649   */\n    tag_247:\n        /* \"#utility.yul\":5681:5726   */\n      tag_248\n        /* \"#utility.yul\":5718:5725   */\n      dup8\n        /* \"#utility.yul\":5707:5715   */\n      dup3\n        /* \"#utility.yul\":5703:5705   */\n      dup7\n        /* \"#utility.yul\":5699:5716   */\n      add\n        /* \"#utility.yul\":5681:5726   */\n      tag_179\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5676:5678   */\n      0x60\n        /* \"#utility.yul\":5665:5679   */\n      dup4\n      add\n        /* \"#utility.yul\":5658:5727   */\n      mstore\n      pop\n        /* \"#utility.yul\":5669:5674   */\n      swap6\n        /* \"#utility.yul\":4622:5757   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5954:6538   */\n    tag_55:\n        /* \"#utility.yul\":6066:6072   */\n      0x00\n        /* \"#utility.yul\":6074:6080   */\n      dup1\n        /* \"#utility.yul\":6127:6129   */\n      0x40\n        /* \"#utility.yul\":6115:6124   */\n      dup4\n        /* \"#utility.yul\":6106:6113   */\n      dup6\n        /* \"#utility.yul\":6102:6125   */\n      sub\n        /* \"#utility.yul\":6098:6130   */\n      slt\n        /* \"#utility.yul\":6095:6147   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":6143:6144   */\n      0x00\n        /* \"#utility.yul\":6140:6141   */\n      dup1\n        /* \"#utility.yul\":6133:6145   */\n      revert\n        /* \"#utility.yul\":6095:6147   */\n    tag_251:\n        /* \"#utility.yul\":6183:6192   */\n      dup3\n        /* \"#utility.yul\":6170:6193   */\n      calldataload\n        /* \"#utility.yul\":6212:6230   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6253:6255   */\n      dup1\n        /* \"#utility.yul\":6245:6251   */\n      dup3\n        /* \"#utility.yul\":6242:6256   */\n      gt\n        /* \"#utility.yul\":6239:6273   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":6269:6270   */\n      0x00\n        /* \"#utility.yul\":6266:6267   */\n      dup1\n        /* \"#utility.yul\":6259:6271   */\n      revert\n        /* \"#utility.yul\":6239:6273   */\n    tag_252:\n        /* \"#utility.yul\":6292:6342   */\n      tag_253\n        /* \"#utility.yul\":6334:6341   */\n      dup7\n        /* \"#utility.yul\":6325:6331   */\n      dup4\n        /* \"#utility.yul\":6314:6323   */\n      dup8\n        /* \"#utility.yul\":6310:6332   */\n      add\n        /* \"#utility.yul\":6292:6342   */\n      tag_179\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6282:6342   */\n      swap4\n      pop\n        /* \"#utility.yul\":6395:6397   */\n      0x20\n        /* \"#utility.yul\":6384:6393   */\n      dup6\n        /* \"#utility.yul\":6380:6398   */\n      add\n        /* \"#utility.yul\":6367:6399   */\n      calldataload\n        /* \"#utility.yul\":6351:6399   */\n      swap2\n      pop\n        /* \"#utility.yul\":6424:6426   */\n      dup1\n        /* \"#utility.yul\":6414:6422   */\n      dup3\n        /* \"#utility.yul\":6411:6427   */\n      gt\n        /* \"#utility.yul\":6408:6444   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":6440:6441   */\n      0x00\n        /* \"#utility.yul\":6437:6438   */\n      dup1\n        /* \"#utility.yul\":6430:6442   */\n      revert\n        /* \"#utility.yul\":6408:6444   */\n    tag_254:\n      pop\n        /* \"#utility.yul\":6463:6532   */\n      tag_222\n        /* \"#utility.yul\":6524:6531   */\n      dup6\n        /* \"#utility.yul\":6513:6521   */\n      dup3\n        /* \"#utility.yul\":6502:6511   */\n      dup7\n        /* \"#utility.yul\":6498:6522   */\n      add\n        /* \"#utility.yul\":6463:6532   */\n      tag_181\n      jump\t// in\n        /* \"#utility.yul\":6543:6829   */\n    tag_60:\n        /* \"#utility.yul\":6602:6608   */\n      0x00\n        /* \"#utility.yul\":6655:6657   */\n      0x20\n        /* \"#utility.yul\":6643:6652   */\n      dup3\n        /* \"#utility.yul\":6634:6641   */\n      dup5\n        /* \"#utility.yul\":6630:6653   */\n      sub\n        /* \"#utility.yul\":6626:6658   */\n      slt\n        /* \"#utility.yul\":6623:6675   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":6671:6672   */\n      0x00\n        /* \"#utility.yul\":6668:6669   */\n      dup1\n        /* \"#utility.yul\":6661:6673   */\n      revert\n        /* \"#utility.yul\":6623:6675   */\n    tag_257:\n        /* \"#utility.yul\":6697:6720   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6749:6780   */\n      dup2\n      and\n        /* \"#utility.yul\":6739:6781   */\n      dup2\n      eq\n        /* \"#utility.yul\":6729:6799   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":6795:6796   */\n      0x00\n        /* \"#utility.yul\":6792:6793   */\n      dup1\n        /* \"#utility.yul\":6785:6797   */\n      revert\n        /* \"#utility.yul\":6729:6799   */\n    tag_258:\n        /* \"#utility.yul\":6818:6823   */\n      swap4\n        /* \"#utility.yul\":6543:6829   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6834:7214   */\n    tag_75:\n        /* \"#utility.yul\":6913:6914   */\n      0x01\n        /* \"#utility.yul\":6909:6921   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6956:6968   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6977:7038   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":7031:7035   */\n      0x7f\n        /* \"#utility.yul\":7023:7029   */\n      dup3\n        /* \"#utility.yul\":7019:7036   */\n      and\n        /* \"#utility.yul\":7009:7036   */\n      swap2\n      pop\n        /* \"#utility.yul\":6977:7038   */\n    tag_260:\n        /* \"#utility.yul\":7084:7086   */\n      0x20\n        /* \"#utility.yul\":7076:7082   */\n      dup3\n        /* \"#utility.yul\":7073:7087   */\n      lt\n        /* \"#utility.yul\":7053:7071   */\n      dup2\n        /* \"#utility.yul\":7050:7088   */\n      sub\n        /* \"#utility.yul\":7047:7208   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":7130:7140   */\n      0x4e487b71\n        /* \"#utility.yul\":7125:7128   */\n      0xe0\n        /* \"#utility.yul\":7121:7141   */\n      shl\n        /* \"#utility.yul\":7118:7119   */\n      0x00\n        /* \"#utility.yul\":7111:7142   */\n      mstore\n        /* \"#utility.yul\":7165:7169   */\n      0x22\n        /* \"#utility.yul\":7162:7163   */\n      0x04\n        /* \"#utility.yul\":7155:7170   */\n      mstore\n        /* \"#utility.yul\":7193:7197   */\n      0x24\n        /* \"#utility.yul\":7190:7191   */\n      0x00\n        /* \"#utility.yul\":7183:7198   */\n      revert\n        /* \"#utility.yul\":7047:7208   */\n    tag_261:\n      pop\n        /* \"#utility.yul\":6834:7214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7345:8068   */\n    tag_184:\n        /* \"#utility.yul\":7395:7398   */\n      0x00\n        /* \"#utility.yul\":7436:7441   */\n      dup2\n        /* \"#utility.yul\":7430:7442   */\n      sload\n        /* \"#utility.yul\":7465:7501   */\n      tag_264\n        /* \"#utility.yul\":7491:7500   */\n      dup2\n        /* \"#utility.yul\":7465:7501   */\n      tag_75\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":7520:7521   */\n      0x01\n        /* \"#utility.yul\":7537:7554   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":7563:7696   */\n      dup1\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":7710:7711   */\n      0x01\n        /* \"#utility.yul\":7705:8062   */\n      dup2\n      eq\n      tag_267\n      jumpi\n        /* \"#utility.yul\":7530:8062   */\n      jump(tag_265)\n        /* \"#utility.yul\":7563:7696   */\n    tag_266:\n      not(0xff)\n        /* \"#utility.yul\":7596:7620   */\n      dup5\n      and\n        /* \"#utility.yul\":7584:7621   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7669:7683   */\n      dup3\n      iszero\n        /* \"#utility.yul\":7662:7684   */\n      iszero\n        /* \"#utility.yul\":7650:7685   */\n      dup4\n      mul\n        /* \"#utility.yul\":7641:7686   */\n      dup8\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":7563:7696   */\n      jump(tag_265)\n        /* \"#utility.yul\":7705:8062   */\n    tag_267:\n        /* \"#utility.yul\":7736:7741   */\n      dup6\n        /* \"#utility.yul\":7733:7734   */\n      0x00\n        /* \"#utility.yul\":7726:7742   */\n      mstore\n        /* \"#utility.yul\":7765:7769   */\n      0x20\n        /* \"#utility.yul\":7810:7814   */\n      dup1\n        /* \"#utility.yul\":7807:7808   */\n      0x00\n        /* \"#utility.yul\":7797:7815   */\n      keccak256\n        /* \"#utility.yul\":7837:7838   */\n      0x00\n        /* \"#utility.yul\":7851:8016   */\n    tag_268:\n        /* \"#utility.yul\":7865:7871   */\n      dup6\n        /* \"#utility.yul\":7862:7863   */\n      dup2\n        /* \"#utility.yul\":7859:7872   */\n      lt\n        /* \"#utility.yul\":7851:8016   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":7943:7957   */\n      dup2\n      sload\n        /* \"#utility.yul\":7930:7941   */\n      dup11\n      dup3\n      add\n        /* \"#utility.yul\":7923:7958   */\n      mstore\n        /* \"#utility.yul\":7986:8002   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":7880:7890   */\n      dup3\n      add\n        /* \"#utility.yul\":7851:8016   */\n      jump(tag_268)\n    tag_270:\n        /* \"#utility.yul\":7855:7858   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8045:8051   */\n      dup3\n        /* \"#utility.yul\":8040:8043   */\n      dup8\n        /* \"#utility.yul\":8036:8052   */\n      add\n        /* \"#utility.yul\":8029:8052   */\n      swap5\n      pop\n        /* \"#utility.yul\":7530:8062   */\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7345:8068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8073:8603   */\n    tag_66:\n        /* \"#utility.yul\":8350:8353   */\n      0x00\n        /* \"#utility.yul\":8378:8416   */\n      tag_272\n        /* \"#utility.yul\":8412:8415   */\n      dup3\n        /* \"#utility.yul\":8404:8410   */\n      dup6\n        /* \"#utility.yul\":8378:8416   */\n      tag_184\n      jump\t// in\n    tag_272:\n      shl(0xfd, 0x01)\n        /* \"#utility.yul\":8432:8434   */\n      dup2\n        /* \"#utility.yul\":8425:8440   */\n      mstore\n        /* \"#utility.yul\":8469:8475   */\n      dup4\n        /* \"#utility.yul\":8463:8476   */\n      mload\n        /* \"#utility.yul\":8485:8558   */\n      tag_273\n        /* \"#utility.yul\":8551:8557   */\n      dup2\n        /* \"#utility.yul\":8547:8548   */\n      0x01\n        /* \"#utility.yul\":8543:8545   */\n      dup5\n        /* \"#utility.yul\":8539:8549   */\n      add\n        /* \"#utility.yul\":8532:8536   */\n      0x20\n        /* \"#utility.yul\":8524:8530   */\n      dup9\n        /* \"#utility.yul\":8520:8537   */\n      add\n        /* \"#utility.yul\":8485:8558   */\n      tag_182\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8578:8593   */\n      add\n        /* \"#utility.yul\":8595:8596   */\n      0x01\n        /* \"#utility.yul\":8574:8597   */\n      add\n      swap5\n        /* \"#utility.yul\":8073:8603   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8608:8997   */\n    tag_73:\n        /* \"#utility.yul\":8784:8787   */\n      0x00\n        /* \"#utility.yul\":8812:8850   */\n      tag_275\n        /* \"#utility.yul\":8846:8849   */\n      dup3\n        /* \"#utility.yul\":8838:8844   */\n      dup6\n        /* \"#utility.yul\":8812:8850   */\n      tag_184\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":8879:8885   */\n      dup4\n        /* \"#utility.yul\":8873:8886   */\n      mload\n        /* \"#utility.yul\":8895:8960   */\n      tag_276\n        /* \"#utility.yul\":8953:8959   */\n      dup2\n        /* \"#utility.yul\":8949:8951   */\n      dup4\n        /* \"#utility.yul\":8942:8946   */\n      0x20\n        /* \"#utility.yul\":8934:8940   */\n      dup9\n        /* \"#utility.yul\":8930:8947   */\n      add\n        /* \"#utility.yul\":8895:8960   */\n      tag_182\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8976:8991   */\n      add\n      swap5\n        /* \"#utility.yul\":8608:8997   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9002:9520   */\n    tag_185:\n        /* \"#utility.yul\":9104:9106   */\n      0x1f\n        /* \"#utility.yul\":9099:9102   */\n      dup3\n        /* \"#utility.yul\":9096:9107   */\n      gt\n        /* \"#utility.yul\":9093:9514   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":9140:9145   */\n      dup1\n        /* \"#utility.yul\":9137:9138   */\n      0x00\n        /* \"#utility.yul\":9130:9146   */\n      mstore\n        /* \"#utility.yul\":9184:9188   */\n      0x20\n        /* \"#utility.yul\":9181:9182   */\n      0x00\n        /* \"#utility.yul\":9171:9189   */\n      keccak256\n        /* \"#utility.yul\":9254:9256   */\n      0x1f\n        /* \"#utility.yul\":9242:9252   */\n      dup5\n        /* \"#utility.yul\":9238:9257   */\n      add\n        /* \"#utility.yul\":9235:9236   */\n      0x05\n        /* \"#utility.yul\":9231:9258   */\n      shr\n        /* \"#utility.yul\":9225:9229   */\n      dup2\n        /* \"#utility.yul\":9221:9259   */\n      add\n        /* \"#utility.yul\":9290:9294   */\n      0x20\n        /* \"#utility.yul\":9278:9288   */\n      dup6\n        /* \"#utility.yul\":9275:9295   */\n      lt\n        /* \"#utility.yul\":9272:9319   */\n      iszero\n      tag_279\n      jumpi\n      pop\n        /* \"#utility.yul\":9313:9317   */\n      dup1\n        /* \"#utility.yul\":9272:9319   */\n    tag_279:\n        /* \"#utility.yul\":9368:9370   */\n      0x1f\n        /* \"#utility.yul\":9363:9366   */\n      dup5\n        /* \"#utility.yul\":9359:9371   */\n      add\n        /* \"#utility.yul\":9356:9357   */\n      0x05\n        /* \"#utility.yul\":9352:9372   */\n      shr\n        /* \"#utility.yul\":9346:9350   */\n      dup3\n        /* \"#utility.yul\":9342:9373   */\n      add\n        /* \"#utility.yul\":9332:9373   */\n      swap2\n      pop\n        /* \"#utility.yul\":9423:9504   */\n    tag_280:\n        /* \"#utility.yul\":9441:9443   */\n      dup2\n        /* \"#utility.yul\":9434:9439   */\n      dup2\n        /* \"#utility.yul\":9431:9444   */\n      lt\n        /* \"#utility.yul\":9423:9504   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":9500:9501   */\n      0x00\n        /* \"#utility.yul\":9486:9502   */\n      dup2\n      sstore\n        /* \"#utility.yul\":9467:9468   */\n      0x01\n        /* \"#utility.yul\":9456:9469   */\n      add\n        /* \"#utility.yul\":9423:9504   */\n      jump(tag_280)\n    tag_282:\n        /* \"#utility.yul\":9427:9430   */\n      pop\n      pop\n        /* \"#utility.yul\":9093:9514   */\n    tag_278:\n        /* \"#utility.yul\":9002:9520   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9696:10894   */\n    tag_85:\n        /* \"#utility.yul\":9820:9838   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9815:9818   */\n      dup4\n        /* \"#utility.yul\":9812:9839   */\n      gt\n        /* \"#utility.yul\":9809:9862   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":9842:9860   */\n      tag_286\n      tag_123\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9871:9965   */\n      tag_287\n        /* \"#utility.yul\":9961:9964   */\n      dup4\n        /* \"#utility.yul\":9921:9959   */\n      tag_288\n        /* \"#utility.yul\":9953:9957   */\n      dup4\n        /* \"#utility.yul\":9947:9958   */\n      sload\n        /* \"#utility.yul\":9921:9959   */\n      tag_75\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":9915:9919   */\n      dup4\n        /* \"#utility.yul\":9871:9965   */\n      tag_185\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9991:9992   */\n      0x00\n        /* \"#utility.yul\":10016:10018   */\n      0x1f\n        /* \"#utility.yul\":10011:10014   */\n      dup5\n        /* \"#utility.yul\":10008:10019   */\n      gt\n        /* \"#utility.yul\":10033:10034   */\n      0x01\n        /* \"#utility.yul\":10028:10636   */\n      dup2\n      eq\n      tag_290\n      jumpi\n        /* \"#utility.yul\":10680:10681   */\n      0x00\n        /* \"#utility.yul\":10697:10700   */\n      dup6\n        /* \"#utility.yul\":10694:10787   */\n      iszero\n      tag_291\n      jumpi\n      pop\n        /* \"#utility.yul\":10753:10772   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":10740:10773   */\n      calldataload\n        /* \"#utility.yul\":10694:10787   */\n    tag_291:\n      not(0x00)\n        /* \"#utility.yul\":9653:9654   */\n      0x03\n        /* \"#utility.yul\":9649:9660   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":9645:9669   */\n      shr\n        /* \"#utility.yul\":9641:9670   */\n      not\n        /* \"#utility.yul\":9631:9671   */\n      and\n        /* \"#utility.yul\":9677:9678   */\n      0x01\n        /* \"#utility.yul\":9673:9684   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":9628:9685   */\n      or\n        /* \"#utility.yul\":10800:10878   */\n      dup4\n      sstore\n        /* \"#utility.yul\":10001:10888   */\n      jump(tag_282)\n        /* \"#utility.yul\":10028:10636   */\n    tag_290:\n        /* \"#utility.yul\":7292:7293   */\n      0x00\n        /* \"#utility.yul\":7285:7299   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":7329:7333   */\n      0x20\n        /* \"#utility.yul\":7316:7334   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":10064:10081   */\n      dup8\n      and\n      swap2\n        /* \"#utility.yul\":10179:10408   */\n    tag_294:\n        /* \"#utility.yul\":10193:10200   */\n      dup3\n        /* \"#utility.yul\":10190:10191   */\n      dup2\n        /* \"#utility.yul\":10187:10201   */\n      lt\n        /* \"#utility.yul\":10179:10408   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":10282:10301   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":10269:10302   */\n      calldataload\n        /* \"#utility.yul\":10254:10303   */\n      dup3\n      sstore\n        /* \"#utility.yul\":10389:10393   */\n      0x20\n        /* \"#utility.yul\":10374:10394   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":10342:10343   */\n      0x01\n        /* \"#utility.yul\":10330:10344   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":10209:10221   */\n      add\n        /* \"#utility.yul\":10179:10408   */\n      jump(tag_294)\n    tag_296:\n        /* \"#utility.yul\":10183:10186   */\n      pop\n        /* \"#utility.yul\":10436:10439   */\n      dup7\n        /* \"#utility.yul\":10427:10434   */\n      dup3\n        /* \"#utility.yul\":10424:10440   */\n      lt\n        /* \"#utility.yul\":10421:10580   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":10560:10561   */\n      0x00\n        /* \"#utility.yul\":10556:10562   */\n      not\n        /* \"#utility.yul\":10550:10553   */\n      0xf8\n        /* \"#utility.yul\":10544:10547   */\n      dup9\n        /* \"#utility.yul\":10541:10542   */\n      0x03\n        /* \"#utility.yul\":10537:10548   */\n      shl\n        /* \"#utility.yul\":10533:10554   */\n      and\n        /* \"#utility.yul\":10529:10563   */\n      shr\n        /* \"#utility.yul\":10525:10564   */\n      not\n        /* \"#utility.yul\":10512:10521   */\n      dup5\n        /* \"#utility.yul\":10507:10510   */\n      dup8\n        /* \"#utility.yul\":10503:10522   */\n      add\n        /* \"#utility.yul\":10490:10523   */\n      calldataload\n        /* \"#utility.yul\":10486:10565   */\n      and\n        /* \"#utility.yul\":10478:10484   */\n      dup2\n        /* \"#utility.yul\":10471:10566   */\n      sstore\n        /* \"#utility.yul\":10421:10580   */\n    tag_297:\n      pop\n      pop\n        /* \"#utility.yul\":10623:10624   */\n      0x01\n        /* \"#utility.yul\":10617:10620   */\n      dup6\n        /* \"#utility.yul\":10614:10615   */\n      0x01\n        /* \"#utility.yul\":10610:10621   */\n      shl\n        /* \"#utility.yul\":10606:10625   */\n      add\n        /* \"#utility.yul\":10600:10604   */\n      dup4\n        /* \"#utility.yul\":10593:10626   */\n      sstore\n        /* \"#utility.yul\":10001:10888   */\n      pop\n      pop\n        /* \"#utility.yul\":9696:10894   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10899:11289   */\n    tag_87:\n        /* \"#utility.yul\":11058:11060   */\n      0x20\n        /* \"#utility.yul\":11047:11056   */\n      dup2\n        /* \"#utility.yul\":11040:11061   */\n      mstore\n        /* \"#utility.yul\":11097:11103   */\n      dup2\n        /* \"#utility.yul\":11092:11094   */\n      0x20\n        /* \"#utility.yul\":11081:11090   */\n      dup3\n        /* \"#utility.yul\":11077:11095   */\n      add\n        /* \"#utility.yul\":11070:11104   */\n      mstore\n        /* \"#utility.yul\":11154:11160   */\n      dup2\n        /* \"#utility.yul\":11146:11152   */\n      dup4\n        /* \"#utility.yul\":11141:11143   */\n      0x40\n        /* \"#utility.yul\":11130:11139   */\n      dup4\n        /* \"#utility.yul\":11126:11144   */\n      add\n        /* \"#utility.yul\":11113:11161   */\n      calldatacopy\n        /* \"#utility.yul\":11210:11211   */\n      0x00\n        /* \"#utility.yul\":11181:11203   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":11205:11207   */\n      0x40\n        /* \"#utility.yul\":11177:11208   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":11170:11212   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11273:11275   */\n      0x1f\n        /* \"#utility.yul\":11252:11267   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":11248:11277   */\n      and\n        /* \"#utility.yul\":11233:11278   */\n      add\n        /* \"#utility.yul\":11229:11283   */\n      add\n      swap2\n        /* \"#utility.yul\":10899:11289   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11294:13071   */\n    tag_101:\n      shl(0xb9, 0x3d913730b6b2911d11)\n        /* \"#utility.yul\":12092:12135   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12158:12171   */\n      dup5\n      mload\n        /* \"#utility.yul\":12074:12077   */\n      0x00\n      swap1\n        /* \"#utility.yul\":12180:12254   */\n      tag_300\n        /* \"#utility.yul\":12158:12171   */\n      dup2\n        /* \"#utility.yul\":12243:12244   */\n      0x09\n        /* \"#utility.yul\":12234:12245   */\n      dup6\n      add\n        /* \"#utility.yul\":12227:12231   */\n      0x20\n        /* \"#utility.yul\":12215:12232   */\n      dup11\n      add\n        /* \"#utility.yul\":12180:12254   */\n      tag_182\n      jump\t// in\n    tag_300:\n      shl(0x71, 0x111610113232b9b1b934b83a34b7b7111d11)\n        /* \"#utility.yul\":12313:12314   */\n      0x09\n        /* \"#utility.yul\":12273:12289   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":12305:12315   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":12298:12366   */\n      mstore\n        /* \"#utility.yul\":12391:12404   */\n      dup6\n      mload\n        /* \"#utility.yul\":12413:12489   */\n      tag_301\n        /* \"#utility.yul\":12391:12404   */\n      dup2\n        /* \"#utility.yul\":12475:12477   */\n      0x1b\n        /* \"#utility.yul\":12467:12478   */\n      dup5\n      add\n        /* \"#utility.yul\":12460:12464   */\n      0x20\n        /* \"#utility.yul\":12448:12465   */\n      dup11\n      add\n        /* \"#utility.yul\":12413:12489   */\n      tag_182\n      jump\t// in\n    tag_301:\n      shl(0x99, 0x1116101134b6b0b3b2911d1011)\n        /* \"#utility.yul\":12549:12551   */\n      0x1b\n        /* \"#utility.yul\":12508:12525   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":12541:12552   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":12534:12593   */\n      mstore\n        /* \"#utility.yul\":12618:12631   */\n      dup5\n      mload\n        /* \"#utility.yul\":12640:12716   */\n      tag_302\n        /* \"#utility.yul\":12618:12631   */\n      dup2\n        /* \"#utility.yul\":12702:12704   */\n      0x28\n        /* \"#utility.yul\":12694:12705   */\n      dup5\n      add\n        /* \"#utility.yul\":12687:12691   */\n      0x20\n        /* \"#utility.yul\":12675:12692   */\n      dup10\n      add\n        /* \"#utility.yul\":12640:12716   */\n      tag_182\n      jump\t// in\n    tag_302:\n      shl(0x59, 0x1116101130b734b6b0ba34b7b72fbab936111d1011)\n        /* \"#utility.yul\":12776:12778   */\n      0x28\n        /* \"#utility.yul\":12735:12752   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":12768:12779   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":12761:12835   */\n      mstore\n        /* \"#utility.yul\":12860:12873   */\n      dup4\n      mload\n        /* \"#utility.yul\":12882:12958   */\n      tag_303\n        /* \"#utility.yul\":12860:12873   */\n      dup2\n        /* \"#utility.yul\":12944:12946   */\n      0x3d\n        /* \"#utility.yul\":12936:12947   */\n      dup5\n      add\n        /* \"#utility.yul\":12929:12933   */\n      0x20\n        /* \"#utility.yul\":12917:12934   */\n      dup9\n      add\n        /* \"#utility.yul\":12882:12958   */\n      tag_182\n      jump\t// in\n    tag_303:\n      shl(0xf0, 0x227d)\n        /* \"#utility.yul\":13018:13020   */\n      0x3d\n        /* \"#utility.yul\":12977:12994   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":13010:13021   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":13003:13038   */\n      mstore\n        /* \"#utility.yul\":13062:13064   */\n      0x3f\n        /* \"#utility.yul\":13054:13065   */\n      add\n      swap7\n        /* \"#utility.yul\":11294:13071   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13076:13537   */\n    tag_105:\n        /* \"#utility.yul\":13338:13369   */\n      0x646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000\n        /* \"#utility.yul\":13333:13336   */\n      dup2\n        /* \"#utility.yul\":13326:13370   */\n      mstore\n        /* \"#utility.yul\":13308:13311   */\n      0x00\n        /* \"#utility.yul\":13399:13405   */\n      dup3\n        /* \"#utility.yul\":13393:13406   */\n      mload\n        /* \"#utility.yul\":13415:13490   */\n      tag_305\n        /* \"#utility.yul\":13483:13489   */\n      dup2\n        /* \"#utility.yul\":13478:13480   */\n      0x1d\n        /* \"#utility.yul\":13473:13476   */\n      dup6\n        /* \"#utility.yul\":13469:13481   */\n      add\n        /* \"#utility.yul\":13462:13466   */\n      0x20\n        /* \"#utility.yul\":13454:13460   */\n      dup8\n        /* \"#utility.yul\":13450:13467   */\n      add\n        /* \"#utility.yul\":13415:13490   */\n      tag_182\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":13510:13526   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":13528:13530   */\n      0x1d\n        /* \"#utility.yul\":13506:13531   */\n      add\n      swap3\n        /* \"#utility.yul\":13076:13537   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13674:13801   */\n    tag_187:\n        /* \"#utility.yul\":13735:13745   */\n      0x4e487b71\n        /* \"#utility.yul\":13730:13733   */\n      0xe0\n        /* \"#utility.yul\":13726:13746   */\n      shl\n        /* \"#utility.yul\":13723:13724   */\n      0x00\n        /* \"#utility.yul\":13716:13747   */\n      mstore\n        /* \"#utility.yul\":13766:13770   */\n      0x11\n        /* \"#utility.yul\":13763:13764   */\n      0x04\n        /* \"#utility.yul\":13756:13771   */\n      mstore\n        /* \"#utility.yul\":13790:13794   */\n      0x24\n        /* \"#utility.yul\":13787:13788   */\n      0x00\n        /* \"#utility.yul\":13780:13795   */\n      revert\n        /* \"#utility.yul\":13806:13931   */\n    tag_142:\n        /* \"#utility.yul\":13871:13880   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13892:13902   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":13889:13925   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":13905:13923   */\n      tag_62\n      tag_187\n      jump\t// in\n        /* \"#utility.yul\":13936:14153   */\n    tag_144:\n        /* \"#utility.yul\":13976:13977   */\n      0x00\n        /* \"#utility.yul\":14002:14003   */\n      dup3\n        /* \"#utility.yul\":13992:14124   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":14046:14056   */\n      0x4e487b71\n        /* \"#utility.yul\":14041:14044   */\n      0xe0\n        /* \"#utility.yul\":14037:14057   */\n      shl\n        /* \"#utility.yul\":14034:14035   */\n      0x00\n        /* \"#utility.yul\":14027:14058   */\n      mstore\n        /* \"#utility.yul\":14081:14085   */\n      0x12\n        /* \"#utility.yul\":14078:14079   */\n      0x04\n        /* \"#utility.yul\":14071:14086   */\n      mstore\n        /* \"#utility.yul\":14109:14113   */\n      0x24\n        /* \"#utility.yul\":14106:14107   */\n      0x00\n        /* \"#utility.yul\":14099:14114   */\n      revert\n        /* \"#utility.yul\":13992:14124   */\n    tag_312:\n      pop\n        /* \"#utility.yul\":14138:14147   */\n      div\n      swap1\n        /* \"#utility.yul\":13936:14153   */\n      jump\t// out\n        /* \"#utility.yul\":14158:14326   */\n    tag_146:\n        /* \"#utility.yul\":14231:14240   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":14262:14271   */\n      dup2\n      iszero\n        /* \"#utility.yul\":14279:14294   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":14273:14295   */\n      dup5\n      eq\n        /* \"#utility.yul\":14259:14296   */\n      or\n        /* \"#utility.yul\":14249:14320   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":14300:14318   */\n      tag_62\n      tag_187\n      jump\t// in\n    stop\n    data_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce 4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f\n\n    auxdata: 0xa2646970667358221220c48e3458de6d3d01a6872cdc4a6f041ba627aac8bcae6799e277a28f25d32b7064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1763": {
									"entryPoint": null,
									"id": 1763,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 151,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4120:11",
										"nodeType": "YulBlock",
										"src": "0:4120:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:11",
													"nodeType": "YulBlock",
													"src": "46:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:11",
																		"nodeType": "YulLiteral",
																		"src": "63:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:11",
																				"nodeType": "YulLiteral",
																				"src": "70:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:11",
																				"nodeType": "YulLiteral",
																				"src": "75:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:11"
																		},
																		"nativeSrc": "66:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:11"
																},
																"nativeSrc": "56:31:11",
																"nodeType": "YulFunctionCall",
																"src": "56:31:11"
															},
															"nativeSrc": "56:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:11",
																		"nodeType": "YulLiteral",
																		"src": "103:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:11",
																		"nodeType": "YulLiteral",
																		"src": "106:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:11"
																},
																"nativeSrc": "96:15:11",
																"nodeType": "YulFunctionCall",
																"src": "96:15:11"
															},
															"nativeSrc": "96:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:11",
																		"nodeType": "YulLiteral",
																		"src": "127:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:11",
																		"nodeType": "YulLiteral",
																		"src": "130:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:11"
																},
																"nativeSrc": "120:15:11",
																"nodeType": "YulFunctionCall",
																"src": "120:15:11"
															},
															"nativeSrc": "120:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:11"
											},
											{
												"body": {
													"nativeSrc": "254:1101:11",
													"nodeType": "YulBlock",
													"src": "254:1101:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "300:16:11",
																"nodeType": "YulBlock",
																"src": "300:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "309:1:11",
																					"nodeType": "YulLiteral",
																					"src": "309:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "312:1:11",
																					"nodeType": "YulLiteral",
																					"src": "312:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "302:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:11"
																			},
																			"nativeSrc": "302:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:11"
																		},
																		"nativeSrc": "302:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "275:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "275:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "284:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "284:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "271:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "271:3:11"
																		},
																		"nativeSrc": "271:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "271:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "296:2:11",
																		"nodeType": "YulLiteral",
																		"src": "296:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "267:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "267:3:11"
																},
																"nativeSrc": "267:32:11",
																"nodeType": "YulFunctionCall",
																"src": "267:32:11"
															},
															"nativeSrc": "264:52:11",
															"nodeType": "YulIf",
															"src": "264:52:11"
														},
														{
															"nativeSrc": "325:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "325:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "344:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "344:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "338:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "338:5:11"
																},
																"nativeSrc": "338:16:11",
																"nodeType": "YulFunctionCall",
																"src": "338:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "329:5:11",
																	"nodeType": "YulTypedName",
																	"src": "329:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "417:16:11",
																"nodeType": "YulBlock",
																"src": "417:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "426:1:11",
																					"nodeType": "YulLiteral",
																					"src": "426:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "429:1:11",
																					"nodeType": "YulLiteral",
																					"src": "429:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "419:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "419:6:11"
																			},
																			"nativeSrc": "419:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "419:12:11"
																		},
																		"nativeSrc": "419:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "419:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "376:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "376:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "387:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "387:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "402:3:11",
																										"nodeType": "YulLiteral",
																										"src": "402:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "407:1:11",
																										"nodeType": "YulLiteral",
																										"src": "407:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "398:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "398:3:11"
																								},
																								"nativeSrc": "398:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "398:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "411:1:11",
																								"nodeType": "YulLiteral",
																								"src": "411:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "394:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "394:3:11"
																						},
																						"nativeSrc": "394:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "394:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "383:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "383:3:11"
																				},
																				"nativeSrc": "383:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "383:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "373:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "373:2:11"
																		},
																		"nativeSrc": "373:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "373:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "366:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "366:6:11"
																},
																"nativeSrc": "366:50:11",
																"nodeType": "YulFunctionCall",
																"src": "366:50:11"
															},
															"nativeSrc": "363:70:11",
															"nodeType": "YulIf",
															"src": "363:70:11"
														},
														{
															"nativeSrc": "442:15:11",
															"nodeType": "YulAssignment",
															"src": "442:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "452:5:11",
																"nodeType": "YulIdentifier",
																"src": "452:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "442:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "442:6:11"
																}
															]
														},
														{
															"nativeSrc": "466:12:11",
															"nodeType": "YulVariableDeclaration",
															"src": "466:12:11",
															"value": {
																"kind": "number",
																"nativeSrc": "476:2:11",
																"nodeType": "YulLiteral",
																"src": "476:2:11",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "470:2:11",
																	"nodeType": "YulTypedName",
																	"src": "470:2:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "487:39:11",
															"nodeType": "YulVariableDeclaration",
															"src": "487:39:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "511:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "511:9:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "522:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "522:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:11"
																		},
																		"nativeSrc": "507:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "507:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "501:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "501:5:11"
																},
																"nativeSrc": "501:25:11",
																"nodeType": "YulFunctionCall",
																"src": "501:25:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "491:6:11",
																	"nodeType": "YulTypedName",
																	"src": "491:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "535:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "535:28:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "553:2:11",
																				"nodeType": "YulLiteral",
																				"src": "553:2:11",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "557:1:11",
																				"nodeType": "YulLiteral",
																				"src": "557:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "549:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "549:3:11"
																		},
																		"nativeSrc": "549:10:11",
																		"nodeType": "YulFunctionCall",
																		"src": "549:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "561:1:11",
																		"nodeType": "YulLiteral",
																		"src": "561:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "545:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "545:3:11"
																},
																"nativeSrc": "545:18:11",
																"nodeType": "YulFunctionCall",
																"src": "545:18:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "539:2:11",
																	"nodeType": "YulTypedName",
																	"src": "539:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "590:16:11",
																"nodeType": "YulBlock",
																"src": "590:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "602:1:11",
																					"nodeType": "YulLiteral",
																					"src": "602:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "592:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "592:6:11"
																			},
																			"nativeSrc": "592:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "592:12:11"
																		},
																		"nativeSrc": "592:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "592:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "578:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:11"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "586:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "586:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "575:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "575:2:11"
																},
																"nativeSrc": "575:14:11",
																"nodeType": "YulFunctionCall",
																"src": "575:14:11"
															},
															"nativeSrc": "572:34:11",
															"nodeType": "YulIf",
															"src": "572:34:11"
														},
														{
															"nativeSrc": "615:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "615:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "629:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "629:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "640:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "640:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "625:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "625:3:11"
																},
																"nativeSrc": "625:22:11",
																"nodeType": "YulFunctionCall",
																"src": "625:22:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "619:2:11",
																	"nodeType": "YulTypedName",
																	"src": "619:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "695:16:11",
																"nodeType": "YulBlock",
																"src": "695:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "704:1:11",
																					"nodeType": "YulLiteral",
																					"src": "704:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "707:1:11",
																					"nodeType": "YulLiteral",
																					"src": "707:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "697:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "697:6:11"
																			},
																			"nativeSrc": "697:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "697:12:11"
																		},
																		"nativeSrc": "697:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "697:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "674:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "674:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "678:4:11",
																						"nodeType": "YulLiteral",
																						"src": "678:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "670:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:11"
																				},
																				"nativeSrc": "670:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "670:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "685:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "685:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "666:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "666:3:11"
																		},
																		"nativeSrc": "666:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "666:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "659:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "659:6:11"
																},
																"nativeSrc": "659:35:11",
																"nodeType": "YulFunctionCall",
																"src": "659:35:11"
															},
															"nativeSrc": "656:55:11",
															"nodeType": "YulIf",
															"src": "656:55:11"
														},
														{
															"nativeSrc": "720:19:11",
															"nodeType": "YulVariableDeclaration",
															"src": "720:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "736:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "736:2:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "730:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "730:5:11"
																},
																"nativeSrc": "730:9:11",
																"nodeType": "YulFunctionCall",
																"src": "730:9:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "724:2:11",
																	"nodeType": "YulTypedName",
																	"src": "724:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "762:22:11",
																"nodeType": "YulBlock",
																"src": "762:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "764:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "764:16:11"
																			},
																			"nativeSrc": "764:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "764:18:11"
																		},
																		"nativeSrc": "764:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "764:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "754:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "754:2:11"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "758:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "758:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:11"
																},
																"nativeSrc": "751:10:11",
																"nodeType": "YulFunctionCall",
																"src": "751:10:11"
															},
															"nativeSrc": "748:36:11",
															"nodeType": "YulIf",
															"src": "748:36:11"
														},
														{
															"nativeSrc": "793:17:11",
															"nodeType": "YulVariableDeclaration",
															"src": "793:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "807:2:11",
																		"nodeType": "YulLiteral",
																		"src": "807:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "803:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:11"
																},
																"nativeSrc": "803:7:11",
																"nodeType": "YulFunctionCall",
																"src": "803:7:11"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "797:2:11",
																	"nodeType": "YulTypedName",
																	"src": "797:2:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "819:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "819:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "839:2:11",
																		"nodeType": "YulLiteral",
																		"src": "839:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "833:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "833:5:11"
																},
																"nativeSrc": "833:9:11",
																"nodeType": "YulFunctionCall",
																"src": "833:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "823:6:11",
																	"nodeType": "YulTypedName",
																	"src": "823:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "851:71:11",
															"nodeType": "YulVariableDeclaration",
															"src": "851:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "873:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "873:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nativeSrc": "897:2:11",
																										"nodeType": "YulIdentifier",
																										"src": "897:2:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "901:4:11",
																										"nodeType": "YulLiteral",
																										"src": "901:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "893:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "893:3:11"
																								},
																								"nativeSrc": "893:13:11",
																								"nodeType": "YulFunctionCall",
																								"src": "893:13:11"
																							},
																							{
																								"name": "_5",
																								"nativeSrc": "908:2:11",
																								"nodeType": "YulIdentifier",
																								"src": "908:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "889:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "889:3:11"
																						},
																						"nativeSrc": "889:22:11",
																						"nodeType": "YulFunctionCall",
																						"src": "889:22:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "913:2:11",
																						"nodeType": "YulLiteral",
																						"src": "913:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "885:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "885:3:11"
																				},
																				"nativeSrc": "885:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "885:31:11"
																			},
																			{
																				"name": "_5",
																				"nativeSrc": "918:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "918:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "881:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "881:3:11"
																		},
																		"nativeSrc": "881:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "881:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "869:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "869:3:11"
																},
																"nativeSrc": "869:53:11",
																"nodeType": "YulFunctionCall",
																"src": "869:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "855:10:11",
																	"nodeType": "YulTypedName",
																	"src": "855:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "981:22:11",
																"nodeType": "YulBlock",
																"src": "981:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "983:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "983:16:11"
																			},
																			"nativeSrc": "983:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "983:18:11"
																		},
																		"nativeSrc": "983:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "983:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "940:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "940:10:11"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "952:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "952:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "937:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "937:2:11"
																		},
																		"nativeSrc": "937:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "937:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "960:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "960:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "972:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "972:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "957:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "957:2:11"
																		},
																		"nativeSrc": "957:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "957:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "934:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "934:2:11"
																},
																"nativeSrc": "934:46:11",
																"nodeType": "YulFunctionCall",
																"src": "934:46:11"
															},
															"nativeSrc": "931:72:11",
															"nodeType": "YulIf",
															"src": "931:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1019:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1019:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1023:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1023:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1012:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1012:6:11"
																},
																"nativeSrc": "1012:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1012:22:11"
															},
															"nativeSrc": "1012:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "1012:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1050:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1050:6:11"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "1058:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1058:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1043:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:11"
																},
																"nativeSrc": "1043:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1043:18:11"
															},
															"nativeSrc": "1043:18:11",
															"nodeType": "YulExpressionStatement",
															"src": "1043:18:11"
														},
														{
															"body": {
																"nativeSrc": "1107:16:11",
																"nodeType": "YulBlock",
																"src": "1107:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1116:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1116:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1119:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1119:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1109:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1109:6:11"
																			},
																			"nativeSrc": "1109:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1109:12:11"
																		},
																		"nativeSrc": "1109:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1109:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "1084:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1084:2:11"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "1088:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1088:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1080:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1080:3:11"
																				},
																				"nativeSrc": "1080:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1080:11:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1093:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1093:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1076:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1076:3:11"
																		},
																		"nativeSrc": "1076:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1076:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1098:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1073:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1073:2:11"
																},
																"nativeSrc": "1073:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1073:33:11"
															},
															"nativeSrc": "1070:53:11",
															"nodeType": "YulIf",
															"src": "1070:53:11"
														},
														{
															"nativeSrc": "1132:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1132:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1141:1:11",
																"nodeType": "YulLiteral",
																"src": "1141:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1136:1:11",
																	"nodeType": "YulTypedName",
																	"src": "1136:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1197:83:11",
																"nodeType": "YulBlock",
																"src": "1197:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "1226:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "1226:6:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1234:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "1234:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1222:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "1222:3:11"
																							},
																							"nativeSrc": "1222:14:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1222:14:11"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "1238:2:11",
																							"nodeType": "YulIdentifier",
																							"src": "1238:2:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1218:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "1218:3:11"
																					},
																					"nativeSrc": "1218:23:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1218:23:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nativeSrc": "1257:2:11",
																											"nodeType": "YulIdentifier",
																											"src": "1257:2:11"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "1261:1:11",
																											"nodeType": "YulIdentifier",
																											"src": "1261:1:11"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "1253:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "1253:3:11"
																									},
																									"nativeSrc": "1253:10:11",
																									"nodeType": "YulFunctionCall",
																									"src": "1253:10:11"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "1265:2:11",
																									"nodeType": "YulIdentifier",
																									"src": "1265:2:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1249:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "1249:3:11"
																							},
																							"nativeSrc": "1249:19:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1249:19:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1243:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1243:5:11"
																					},
																					"nativeSrc": "1243:26:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1243:26:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1211:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1211:6:11"
																			},
																			"nativeSrc": "1211:59:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1211:59:11"
																		},
																		"nativeSrc": "1211:59:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1211:59:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1162:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "1162:1:11"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "1165:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1165:2:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1159:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1159:2:11"
																},
																"nativeSrc": "1159:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1159:9:11"
															},
															"nativeSrc": "1151:129:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1169:19:11",
																"nodeType": "YulBlock",
																"src": "1169:19:11",
																"statements": [
																	{
																		"nativeSrc": "1171:15:11",
																		"nodeType": "YulAssignment",
																		"src": "1171:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1180:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "1180:1:11"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1183:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "1183:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1176:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1176:3:11"
																			},
																			"nativeSrc": "1176:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1176:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1171:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "1171:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1155:3:11",
																"nodeType": "YulBlock",
																"src": "1155:3:11",
																"statements": []
															},
															"src": "1151:129:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1304:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1304:6:11"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "1312:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1312:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1300:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1300:3:11"
																				},
																				"nativeSrc": "1300:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1300:15:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1317:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1317:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1296:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1296:3:11"
																		},
																		"nativeSrc": "1296:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1296:24:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1289:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1289:6:11"
																},
																"nativeSrc": "1289:35:11",
																"nodeType": "YulFunctionCall",
																"src": "1289:35:11"
															},
															"nativeSrc": "1289:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "1289:35:11"
														},
														{
															"nativeSrc": "1333:16:11",
															"nodeType": "YulAssignment",
															"src": "1333:16:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1343:6:11",
																"nodeType": "YulIdentifier",
																"src": "1343:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1333:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1333:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory",
												"nativeSrc": "146:1209:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "212:9:11",
														"nodeType": "YulTypedName",
														"src": "212:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "223:7:11",
														"nodeType": "YulTypedName",
														"src": "223:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "235:6:11",
														"nodeType": "YulTypedName",
														"src": "235:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "243:6:11",
														"nodeType": "YulTypedName",
														"src": "243:6:11",
														"type": ""
													}
												],
												"src": "146:1209:11"
											},
											{
												"body": {
													"nativeSrc": "1461:102:11",
													"nodeType": "YulBlock",
													"src": "1461:102:11",
													"statements": [
														{
															"nativeSrc": "1471:26:11",
															"nodeType": "YulAssignment",
															"src": "1471:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1483:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1483:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1494:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1494:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1479:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1479:3:11"
																},
																"nativeSrc": "1479:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1479:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1471:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1471:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1513:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1513:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1528:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1528:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1544:3:11",
																								"nodeType": "YulLiteral",
																								"src": "1544:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1549:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1549:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1540:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1540:3:11"
																						},
																						"nativeSrc": "1540:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1540:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1553:1:11",
																						"nodeType": "YulLiteral",
																						"src": "1553:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1536:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1536:3:11"
																				},
																				"nativeSrc": "1536:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1536:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1524:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1524:3:11"
																		},
																		"nativeSrc": "1524:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1524:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1506:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1506:6:11"
																},
																"nativeSrc": "1506:51:11",
																"nodeType": "YulFunctionCall",
																"src": "1506:51:11"
															},
															"nativeSrc": "1506:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "1506:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1360:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1430:9:11",
														"nodeType": "YulTypedName",
														"src": "1430:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1441:6:11",
														"nodeType": "YulTypedName",
														"src": "1441:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1452:4:11",
														"nodeType": "YulTypedName",
														"src": "1452:4:11",
														"type": ""
													}
												],
												"src": "1360:203:11"
											},
											{
												"body": {
													"nativeSrc": "1623:325:11",
													"nodeType": "YulBlock",
													"src": "1623:325:11",
													"statements": [
														{
															"nativeSrc": "1633:22:11",
															"nodeType": "YulAssignment",
															"src": "1633:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1647:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1647:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1643:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1643:3:11"
																},
																"nativeSrc": "1643:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1643:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1633:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1633:6:11"
																}
															]
														},
														{
															"nativeSrc": "1664:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1664:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1694:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1694:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1700:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1700:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1690:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1690:3:11"
																},
																"nativeSrc": "1690:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1690:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1668:18:11",
																	"nodeType": "YulTypedName",
																	"src": "1668:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1741:31:11",
																"nodeType": "YulBlock",
																"src": "1741:31:11",
																"statements": [
																	{
																		"nativeSrc": "1743:27:11",
																		"nodeType": "YulAssignment",
																		"src": "1743:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1757:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1757:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1765:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1765:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1753:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1753:3:11"
																			},
																			"nativeSrc": "1753:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1753:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1743:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1743:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1721:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1721:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1714:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1714:6:11"
																},
																"nativeSrc": "1714:26:11",
																"nodeType": "YulFunctionCall",
																"src": "1714:26:11"
															},
															"nativeSrc": "1711:61:11",
															"nodeType": "YulIf",
															"src": "1711:61:11"
														},
														{
															"body": {
																"nativeSrc": "1831:111:11",
																"nodeType": "YulBlock",
																"src": "1831:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1852:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1852:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1859:3:11",
																							"nodeType": "YulLiteral",
																							"src": "1859:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1864:10:11",
																							"nodeType": "YulLiteral",
																							"src": "1864:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1855:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "1855:3:11"
																					},
																					"nativeSrc": "1855:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1855:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1845:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:11"
																			},
																			"nativeSrc": "1845:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1845:31:11"
																		},
																		"nativeSrc": "1845:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1845:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1896:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1899:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1899:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1889:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:11"
																			},
																			"nativeSrc": "1889:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1889:15:11"
																		},
																		"nativeSrc": "1889:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1924:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1924:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1927:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1927:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1917:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1917:6:11"
																			},
																			"nativeSrc": "1917:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1917:15:11"
																		},
																		"nativeSrc": "1917:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1917:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1787:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1787:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1810:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1810:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1818:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1818:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1807:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1807:2:11"
																		},
																		"nativeSrc": "1807:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1807:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1784:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1784:2:11"
																},
																"nativeSrc": "1784:38:11",
																"nodeType": "YulFunctionCall",
																"src": "1784:38:11"
															},
															"nativeSrc": "1781:161:11",
															"nodeType": "YulIf",
															"src": "1781:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1568:380:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1603:4:11",
														"nodeType": "YulTypedName",
														"src": "1603:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1612:6:11",
														"nodeType": "YulTypedName",
														"src": "1612:6:11",
														"type": ""
													}
												],
												"src": "1568:380:11"
											},
											{
												"body": {
													"nativeSrc": "2009:65:11",
													"nodeType": "YulBlock",
													"src": "2009:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2026:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2026:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2029:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2029:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2019:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:11"
																},
																"nativeSrc": "2019:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2019:14:11"
															},
															"nativeSrc": "2019:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "2019:14:11"
														},
														{
															"nativeSrc": "2042:26:11",
															"nodeType": "YulAssignment",
															"src": "2042:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2060:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2060:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2063:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2063:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2050:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2050:9:11"
																},
																"nativeSrc": "2050:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2050:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2042:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2042:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1953:121:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1992:3:11",
														"nodeType": "YulTypedName",
														"src": "1992:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2000:4:11",
														"nodeType": "YulTypedName",
														"src": "2000:4:11",
														"type": ""
													}
												],
												"src": "1953:121:11"
											},
											{
												"body": {
													"nativeSrc": "2160:437:11",
													"nodeType": "YulBlock",
													"src": "2160:437:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2193:398:11",
																"nodeType": "YulBlock",
																"src": "2193:398:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2214:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2214:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2217:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2217:5:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2207:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2207:6:11"
																			},
																			"nativeSrc": "2207:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2207:16:11"
																		},
																		"nativeSrc": "2207:16:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2207:16:11"
																	},
																	{
																		"nativeSrc": "2236:30:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2236:30:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2258:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2258:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2261:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2261:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2248:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2248:9:11"
																			},
																			"nativeSrc": "2248:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2248:18:11"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2240:4:11",
																				"nodeType": "YulTypedName",
																				"src": "2240:4:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2279:57:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2279:57:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2302:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "2302:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2312:1:11",
																							"nodeType": "YulLiteral",
																							"src": "2312:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2319:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "2319:10:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2331:2:11",
																									"nodeType": "YulLiteral",
																									"src": "2331:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2315:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "2315:3:11"
																							},
																							"nativeSrc": "2315:19:11",
																							"nodeType": "YulFunctionCall",
																							"src": "2315:19:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2308:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "2308:3:11"
																					},
																					"nativeSrc": "2308:27:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2308:27:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2298:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2298:3:11"
																			},
																			"nativeSrc": "2298:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2298:38:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2283:11:11",
																				"nodeType": "YulTypedName",
																				"src": "2283:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2373:23:11",
																			"nodeType": "YulBlock",
																			"src": "2373:23:11",
																			"statements": [
																				{
																					"nativeSrc": "2375:19:11",
																					"nodeType": "YulAssignment",
																					"src": "2375:19:11",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2390:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "2390:4:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2375:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "2375:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2355:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "2355:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2367:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2367:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2352:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2352:2:11"
																			},
																			"nativeSrc": "2352:20:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2352:20:11"
																		},
																		"nativeSrc": "2349:47:11",
																		"nodeType": "YulIf",
																		"src": "2349:47:11"
																	},
																	{
																		"nativeSrc": "2409:41:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2409:41:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2423:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "2423:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2433:1:11",
																							"nodeType": "YulLiteral",
																							"src": "2433:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2440:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2440:3:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2445:2:11",
																									"nodeType": "YulLiteral",
																									"src": "2445:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2436:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "2436:3:11"
																							},
																							"nativeSrc": "2436:12:11",
																							"nodeType": "YulFunctionCall",
																							"src": "2436:12:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2429:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "2429:3:11"
																					},
																					"nativeSrc": "2429:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2429:20:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2419:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2419:3:11"
																			},
																			"nativeSrc": "2419:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2419:31:11"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2413:2:11",
																				"nodeType": "YulTypedName",
																				"src": "2413:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2463:24:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2463:24:11",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2476:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "2476:11:11"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2467:5:11",
																				"nodeType": "YulTypedName",
																				"src": "2467:5:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2561:20:11",
																			"nodeType": "YulBlock",
																			"src": "2561:20:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2570:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "2570:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2577:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2577:1:11",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2563:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "2563:6:11"
																						},
																						"nativeSrc": "2563:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2563:16:11"
																					},
																					"nativeSrc": "2563:16:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "2563:16:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2511:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2511:5:11"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2518:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "2518:2:11"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2508:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2508:2:11"
																			},
																			"nativeSrc": "2508:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2508:13:11"
																		},
																		"nativeSrc": "2500:81:11",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2522:26:11",
																			"nodeType": "YulBlock",
																			"src": "2522:26:11",
																			"statements": [
																				{
																					"nativeSrc": "2524:22:11",
																					"nodeType": "YulAssignment",
																					"src": "2524:22:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2537:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "2537:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2544:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2544:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2533:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2533:3:11"
																						},
																						"nativeSrc": "2533:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2533:13:11"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2524:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "2524:5:11"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2504:3:11",
																			"nodeType": "YulBlock",
																			"src": "2504:3:11",
																			"statements": []
																		},
																		"src": "2500:81:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2176:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2176:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2181:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2181:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2173:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2173:2:11"
																},
																"nativeSrc": "2173:11:11",
																"nodeType": "YulFunctionCall",
																"src": "2173:11:11"
															},
															"nativeSrc": "2170:421:11",
															"nodeType": "YulIf",
															"src": "2170:421:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2079:518:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2132:5:11",
														"nodeType": "YulTypedName",
														"src": "2132:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2139:3:11",
														"nodeType": "YulTypedName",
														"src": "2139:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2144:10:11",
														"nodeType": "YulTypedName",
														"src": "2144:10:11",
														"type": ""
													}
												],
												"src": "2079:518:11"
											},
											{
												"body": {
													"nativeSrc": "2687:81:11",
													"nodeType": "YulBlock",
													"src": "2687:81:11",
													"statements": [
														{
															"nativeSrc": "2697:65:11",
															"nodeType": "YulAssignment",
															"src": "2697:65:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2712:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2712:4:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2730:1:11",
																										"nodeType": "YulLiteral",
																										"src": "2730:1:11",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2733:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "2733:3:11"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2726:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2726:3:11"
																								},
																								"nativeSrc": "2726:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2726:11:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2743:1:11",
																										"nodeType": "YulLiteral",
																										"src": "2743:1:11",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2739:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2739:3:11"
																								},
																								"nativeSrc": "2739:6:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2739:6:11"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2722:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2722:3:11"
																						},
																						"nativeSrc": "2722:24:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2722:24:11"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2718:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2718:3:11"
																				},
																				"nativeSrc": "2718:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2718:29:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2708:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2708:3:11"
																		},
																		"nativeSrc": "2708:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:40:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2754:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2754:1:11",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2757:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2757:3:11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2750:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2750:3:11"
																		},
																		"nativeSrc": "2750:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2750:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2705:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2705:2:11"
																},
																"nativeSrc": "2705:57:11",
																"nodeType": "YulFunctionCall",
																"src": "2705:57:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2697:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2697:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2602:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2664:4:11",
														"nodeType": "YulTypedName",
														"src": "2664:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2670:3:11",
														"nodeType": "YulTypedName",
														"src": "2670:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2678:4:11",
														"nodeType": "YulTypedName",
														"src": "2678:4:11",
														"type": ""
													}
												],
												"src": "2602:166:11"
											},
											{
												"body": {
													"nativeSrc": "2869:1249:11",
													"nodeType": "YulBlock",
													"src": "2869:1249:11",
													"statements": [
														{
															"nativeSrc": "2879:24:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2879:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2899:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2899:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2893:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2893:5:11"
																},
																"nativeSrc": "2893:10:11",
																"nodeType": "YulFunctionCall",
																"src": "2893:10:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2883:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2883:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2946:22:11",
																"nodeType": "YulBlock",
																"src": "2946:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2948:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "2948:16:11"
																			},
																			"nativeSrc": "2948:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2948:18:11"
																		},
																		"nativeSrc": "2948:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2918:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2918:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2934:2:11",
																						"nodeType": "YulLiteral",
																						"src": "2934:2:11",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2938:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2938:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2930:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2930:3:11"
																				},
																				"nativeSrc": "2930:10:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2930:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2942:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2942:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2926:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2926:3:11"
																		},
																		"nativeSrc": "2926:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2926:18:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2915:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2915:2:11"
																},
																"nativeSrc": "2915:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2915:30:11"
															},
															"nativeSrc": "2912:56:11",
															"nodeType": "YulIf",
															"src": "2912:56:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3021:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3021:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3059:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "3059:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3053:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3053:5:11"
																				},
																				"nativeSrc": "3053:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3053:11:11"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3027:25:11",
																			"nodeType": "YulIdentifier",
																			"src": "3027:25:11"
																		},
																		"nativeSrc": "3027:38:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3027:38:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3067:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3067:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2977:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2977:43:11"
																},
																"nativeSrc": "2977:97:11",
																"nodeType": "YulFunctionCall",
																"src": "2977:97:11"
															},
															"nativeSrc": "2977:97:11",
															"nodeType": "YulExpressionStatement",
															"src": "2977:97:11"
														},
														{
															"nativeSrc": "3083:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3083:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3100:1:11",
																"nodeType": "YulLiteral",
																"src": "3100:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3087:9:11",
																	"nodeType": "YulTypedName",
																	"src": "3087:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3110:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3110:23:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3129:4:11",
																"nodeType": "YulLiteral",
																"src": "3129:4:11",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3114:11:11",
																	"nodeType": "YulTypedName",
																	"src": "3114:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3142:17:11",
															"nodeType": "YulAssignment",
															"src": "3142:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3155:4:11",
																"nodeType": "YulLiteral",
																"src": "3155:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3142:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3142:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3205:656:11",
																		"nodeType": "YulBlock",
																		"src": "3205:656:11",
																		"statements": [
																			{
																				"nativeSrc": "3219:35:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3219:35:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3238:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "3238:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3250:2:11",
																									"nodeType": "YulLiteral",
																									"src": "3250:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3246:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "3246:3:11"
																							},
																							"nativeSrc": "3246:7:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3246:7:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3234:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "3234:3:11"
																					},
																					"nativeSrc": "3234:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3234:20:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3223:7:11",
																						"nodeType": "YulTypedName",
																						"src": "3223:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3267:49:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3267:49:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3311:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "3311:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3281:29:11",
																						"nodeType": "YulIdentifier",
																						"src": "3281:29:11"
																					},
																					"nativeSrc": "3281:35:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3281:35:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3271:6:11",
																						"nodeType": "YulTypedName",
																						"src": "3271:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3329:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3329:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3338:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3338:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3333:1:11",
																						"nodeType": "YulTypedName",
																						"src": "3333:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3416:172:11",
																					"nodeType": "YulBlock",
																					"src": "3416:172:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3441:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "3441:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3459:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "3459:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3464:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "3464:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3455:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "3455:3:11"
																												},
																												"nativeSrc": "3455:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "3455:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3449:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "3449:5:11"
																										},
																										"nativeSrc": "3449:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3449:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3434:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3434:6:11"
																								},
																								"nativeSrc": "3434:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3434:42:11"
																							},
																							"nativeSrc": "3434:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "3434:42:11"
																						},
																						{
																							"nativeSrc": "3493:24:11",
																							"nodeType": "YulAssignment",
																							"src": "3493:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3507:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "3507:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3515:1:11",
																										"nodeType": "YulLiteral",
																										"src": "3515:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3503:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3503:3:11"
																								},
																								"nativeSrc": "3503:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3503:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3493:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3493:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3534:40:11",
																							"nodeType": "YulAssignment",
																							"src": "3534:40:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3551:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "3551:9:11"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3562:11:11",
																										"nodeType": "YulIdentifier",
																										"src": "3562:11:11"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3547:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3547:3:11"
																								},
																								"nativeSrc": "3547:27:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3547:27:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3534:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "3534:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3363:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "3363:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3366:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "3366:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3360:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "3360:2:11"
																					},
																					"nativeSrc": "3360:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3360:14:11"
																				},
																				"nativeSrc": "3352:236:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3375:28:11",
																					"nodeType": "YulBlock",
																					"src": "3375:28:11",
																					"statements": [
																						{
																							"nativeSrc": "3377:24:11",
																							"nodeType": "YulAssignment",
																							"src": "3377:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3386:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "3386:1:11"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3389:11:11",
																										"nodeType": "YulIdentifier",
																										"src": "3389:11:11"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3382:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3382:3:11"
																								},
																								"nativeSrc": "3382:19:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3382:19:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3377:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "3377:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3356:3:11",
																					"nodeType": "YulBlock",
																					"src": "3356:3:11",
																					"statements": []
																				},
																				"src": "3352:236:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "3636:166:11",
																					"nodeType": "YulBlock",
																					"src": "3636:166:11",
																					"statements": [
																						{
																							"nativeSrc": "3654:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3654:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3681:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "3681:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3686:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3686:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3677:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3677:3:11"
																										},
																										"nativeSrc": "3677:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3677:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3671:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3671:5:11"
																								},
																								"nativeSrc": "3671:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3671:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3658:9:11",
																									"nodeType": "YulTypedName",
																									"src": "3658:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3721:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "3721:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3733:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3733:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3760:1:11",
																																				"nodeType": "YulLiteral",
																																				"src": "3760:1:11",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3763:6:11",
																																				"nodeType": "YulIdentifier",
																																				"src": "3763:6:11"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3756:3:11",
																																			"nodeType": "YulIdentifier",
																																			"src": "3756:3:11"
																																		},
																																		"nativeSrc": "3756:14:11",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3756:14:11"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3772:3:11",
																																		"nodeType": "YulLiteral",
																																		"src": "3772:3:11",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3752:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "3752:3:11"
																																},
																																"nativeSrc": "3752:24:11",
																																"nodeType": "YulFunctionCall",
																																"src": "3752:24:11"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3782:1:11",
																																		"nodeType": "YulLiteral",
																																		"src": "3782:1:11",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3778:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "3778:3:11"
																																},
																																"nativeSrc": "3778:6:11",
																																"nodeType": "YulFunctionCall",
																																"src": "3778:6:11"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3748:3:11",
																															"nodeType": "YulIdentifier",
																															"src": "3748:3:11"
																														},
																														"nativeSrc": "3748:37:11",
																														"nodeType": "YulFunctionCall",
																														"src": "3748:37:11"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3744:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "3744:3:11"
																												},
																												"nativeSrc": "3744:42:11",
																												"nodeType": "YulFunctionCall",
																												"src": "3744:42:11"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3729:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3729:3:11"
																										},
																										"nativeSrc": "3729:58:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3729:58:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3714:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3714:6:11"
																								},
																								"nativeSrc": "3714:74:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3714:74:11"
																							},
																							"nativeSrc": "3714:74:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "3714:74:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3607:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "3607:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3616:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "3616:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3604:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "3604:2:11"
																					},
																					"nativeSrc": "3604:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3604:19:11"
																				},
																				"nativeSrc": "3601:201:11",
																				"nodeType": "YulIf",
																				"src": "3601:201:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3822:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "3822:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3836:1:11",
																											"nodeType": "YulLiteral",
																											"src": "3836:1:11",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3839:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "3839:6:11"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3832:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "3832:3:11"
																									},
																									"nativeSrc": "3832:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "3832:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3848:1:11",
																									"nodeType": "YulLiteral",
																									"src": "3848:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3828:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "3828:3:11"
																							},
																							"nativeSrc": "3828:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3828:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3815:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3815:6:11"
																					},
																					"nativeSrc": "3815:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3815:36:11"
																				},
																				"nativeSrc": "3815:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3815:36:11"
																			}
																		]
																	},
																	"nativeSrc": "3198:663:11",
																	"nodeType": "YulCase",
																	"src": "3198:663:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3203:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3203:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3878:234:11",
																		"nodeType": "YulBlock",
																		"src": "3878:234:11",
																		"statements": [
																			{
																				"nativeSrc": "3892:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3892:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3905:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3905:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3896:5:11",
																						"nodeType": "YulTypedName",
																						"src": "3896:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3941:67:11",
																					"nodeType": "YulBlock",
																					"src": "3941:67:11",
																					"statements": [
																						{
																							"nativeSrc": "3959:35:11",
																							"nodeType": "YulAssignment",
																							"src": "3959:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3978:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "3978:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3983:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3983:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3974:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3974:3:11"
																										},
																										"nativeSrc": "3974:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3974:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3968:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3968:5:11"
																								},
																								"nativeSrc": "3968:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3968:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3959:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3959:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3922:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "3922:6:11"
																				},
																				"nativeSrc": "3919:89:11",
																				"nodeType": "YulIf",
																				"src": "3919:89:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4028:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4028:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4087:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "4087:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4094:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4094:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4034:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "4034:52:11"
																							},
																							"nativeSrc": "4034:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4034:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4021:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4021:6:11"
																					},
																					"nativeSrc": "4021:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4021:81:11"
																				},
																				"nativeSrc": "4021:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "4021:81:11"
																			}
																		]
																	},
																	"nativeSrc": "3870:242:11",
																	"nodeType": "YulCase",
																	"src": "3870:242:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3178:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3178:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3186:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3186:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3175:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3175:2:11"
																},
																"nativeSrc": "3175:14:11",
																"nodeType": "YulFunctionCall",
																"src": "3175:14:11"
															},
															"nativeSrc": "3168:944:11",
															"nodeType": "YulSwitch",
															"src": "3168:944:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2773:1345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2854:4:11",
														"nodeType": "YulTypedName",
														"src": "2854:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2860:3:11",
														"nodeType": "YulTypedName",
														"src": "2860:3:11",
														"type": ""
													}
												],
												"src": "2773:1345:11"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x22 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x135F CODESIZE SUB DUP1 PUSH3 0x135F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x45 SWAP2 PUSH3 0xFA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x7F DUP2 PUSH3 0x97 JUMP JUMPDEST POP PUSH1 0x2 PUSH3 0x8E DUP3 DUP3 PUSH3 0x272 JUMP JUMPDEST POP POP POP PUSH3 0x33E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x123 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP2 SWAP4 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x142 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x156 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x16B JUMPI PUSH3 0x16B PUSH3 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x196 JUMPI PUSH3 0x196 PUSH3 0xE6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1D1 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1B2 JUMP JUMPDEST PUSH0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1FD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x21C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x26D JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x249 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x26A JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x255 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x28E JUMPI PUSH3 0x28E PUSH3 0xE6 JUMP JUMPDEST PUSH3 0x2A6 DUP2 PUSH3 0x29F DUP5 SLOAD PUSH3 0x1E8 JUMP JUMPDEST DUP5 PUSH3 0x222 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2DC JUMPI PUSH0 DUP5 ISZERO PUSH3 0x2C4 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x336 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x30C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2EB JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x32A JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1013 DUP1 PUSH3 0x34C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x92B4C81B EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xCE2F4F53 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xDFE8478B EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF0B305EB EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD4F079 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x2C90464D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x3DC081B9 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x116 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x23D JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC8 PUSH2 0x31C JUMP JUMPDEST PUSH2 0x10C PUSH2 0x329 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1A8 DUP5 PUSH2 0x488 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BF SWAP3 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1DA DUP2 DUP6 PUSH2 0x403 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x20A JUMPI PUSH2 0x203 DUP4 DUP4 PUSH2 0x19C JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x1 PUSH2 0x215 DUP5 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x226 SWAP3 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x24A SWAP1 PUSH2 0xBF5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x276 SWAP1 PUSH2 0xBF5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x298 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2DE DUP3 DUP5 DUP4 PUSH2 0xD3D JUMP JUMPDEST POP PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x310 SWAP3 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x24A SWAP1 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x33A PUSH0 PUSH2 0x544 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 PUSH0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x365 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x37F DUP2 PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AE PUSH2 0x518 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP2 DUP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x360C3D72EE193226275B842F85231C259C934E85459FED80FA68E502FFA9DBDE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xA0 ADD MLOAD DUP2 MSTORE POP SWAP1 POP PUSH2 0x43E DUP2 PUSH2 0x33C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x44E PUSH2 0x518 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x544 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x494 DUP4 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B3 JUMPI PUSH2 0x4B3 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x4E7 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x473 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH0 SUB PUSH2 0x5B0 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF9E PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x5F2 SWAP1 PUSH1 0x4 PUSH2 0xF86 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60A JUMPI PUSH2 0x60A PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x634 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0x645 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x6BC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x6CF JUMPI PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x720 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x74C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x76A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x782 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x796 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x7A8 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1DF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x7F0 JUMPI PUSH2 0x7F0 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x7F0 JUMPI PUSH2 0x7F0 PUSH2 0x7B9 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x828 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x843 JUMPI PUSH2 0x843 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x86B JUMPI PUSH2 0x86B PUSH2 0x7B9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x883 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x6 DUP2 LT PUSH2 0x8B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8CD PUSH2 0x7CD JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8F2 DUP6 DUP4 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x907 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x913 DUP6 DUP4 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x924 PUSH1 0x40 DUP6 ADD PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x93C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x948 DUP6 DUP4 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x960 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x96C DUP6 DUP4 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x984 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x991 DUP5 DUP3 DUP6 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9AE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D7 DUP6 DUP3 DUP7 ADD PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9FB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E3 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xA21 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA46 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA5D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA70 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA7E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xA8F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x80 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xADB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAE3 PUSH2 0x7F6 JUMP JUMPDEST DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xAF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAFD DUP8 DUP3 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xB11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB1D DUP8 DUP3 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xB34 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB40 DUP8 DUP3 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xB57 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB63 DUP8 DUP3 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB83 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB9A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA6 DUP7 DUP4 DUP8 ADD PUSH2 0x819 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D7 DUP6 DUP3 DUP7 ADD PUSH2 0x8B5 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBEE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC09 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0xC39 DUP2 PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0xC51 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xC66 JUMPI PUSH2 0xC92 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0xC92 JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC89 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0xC70 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCA7 DUP3 DUP6 PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFD SHL DUP2 MSTORE DUP4 MLOAD PUSH2 0xCC1 DUP2 PUSH1 0x1 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x9E1 JUMP JUMPDEST ADD PUSH1 0x1 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCD8 DUP3 DUP6 PUSH2 0xC2D JUMP JUMPDEST DUP4 MLOAD PUSH2 0xCE8 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9E1 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD38 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xD16 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD35 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD22 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0xD55 JUMPI PUSH2 0xD55 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0xD69 DUP4 PUSH2 0xD63 DUP4 SLOAD PUSH2 0xBF5 JUMP JUMPDEST DUP4 PUSH2 0xCF1 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD9A JUMPI PUSH0 DUP6 ISZERO PUSH2 0xD83 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xD35 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP8 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDC9 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xDA9 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0xDE5 JUMPI PUSH0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP5 MLOAD PUSH0 SWAP1 PUSH2 0xE49 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x9E1 JUMP JUMPDEST PUSH18 0x111610113232B9B1B934B83A34B7B7111D11 PUSH1 0x71 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0xE7B DUP2 PUSH1 0x1B DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x9E1 JUMP JUMPDEST PUSH13 0x1116101134B6B0B3B2911D1011 PUSH1 0x99 SHL PUSH1 0x1B SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0xEA9 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x9E1 JUMP JUMPDEST PUSH21 0x1116101130B734B6B0BA34B7B72FBAB936111D1011 PUSH1 0x59 SHL PUSH1 0x28 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xEDF DUP2 PUSH1 0x3D DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL PUSH1 0x3D SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x3F ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH0 DUP3 MLOAD PUSH2 0xF33 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x9E1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DF PUSH2 0xF40 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xF81 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1DF JUMPI PUSH2 0x1DF PUSH2 0xF40 JUMP INVALID COINBASE TIMESTAMP NUMBER PREVRANDAO GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0xC4 DUP15 CALLVALUE PC 0xDE PUSH14 0x3D01A6872CDC4A6F041BA627AAC8 0xBC 0xAE PUSH8 0x99E277A28F25D32B PUSH17 0x64736F6C63430008160033000000000000 ",
							"sourceMap": "1443:3806:7:-:0;;;1839:44;;;-1:-1:-1;;;;1839:44:7;-1:-1:-1;;;1839:44:7;;;2190:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2265:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;1506:51:11;1479:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2290:15:7::1;:34;2308:16:::0;2290:15;:34:::1;:::i;:::-;;2190:141:::0;;1443:3806;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:11:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1209;235:6;243;296:2;284:9;275:7;271:23;267:32;264:52;;;312:1;309;302:12;264:52;338:16;;-1:-1:-1;;;;;383:31:11;;373:42;;363:70;;429:1;426;419:12;363:70;476:2;507:18;;;501:25;452:5;;-1:-1:-1;476:2:11;-1:-1:-1;;;;;575:14:11;;;572:34;;;602:1;599;592:12;572:34;640:6;629:9;625:22;615:32;;685:7;678:4;674:2;670:13;666:27;656:55;;707:1;704;697:12;656:55;736:2;730:9;758:2;754;751:10;748:36;;;764:18;;:::i;:::-;839:2;833:9;807:2;893:13;;-1:-1:-1;;889:22:11;;;913:2;885:31;881:40;869:53;;;937:18;;;957:22;;;934:46;931:72;;;983:18;;:::i;:::-;1023:10;1019:2;1012:22;1058:2;1050:6;1043:18;1098:7;1093:2;1088;1084;1080:11;1076:20;1073:33;1070:53;;;1119:1;1116;1109:12;1070:53;1141:1;1132:10;;1151:129;1165:2;1162:1;1159:9;1151:129;;;1253:10;;;1249:19;;1243:26;1222:14;;;1218:23;;1211:59;1176:10;;;;1151:129;;;1322:1;1317:2;1312;1304:6;1300:15;1296:24;1289:35;1343:6;1333:16;;;;;;;;146:1209;;;;;:::o;1568:380::-;1647:1;1643:12;;;;1690;;;1711:61;;1765:4;1757:6;1753:17;1743:27;;1711:61;1818:2;1810:6;1807:14;1787:18;1784:38;1781:161;;1864:10;1859:3;1855:20;1852:1;1845:31;1899:4;1896:1;1889:15;1927:4;1924:1;1917:15;1781:161;;1568:380;;;:::o;2079:518::-;2181:2;2176:3;2173:11;2170:421;;;2217:5;2214:1;2207:16;2261:4;2258:1;2248:18;2331:2;2319:10;2315:19;2312:1;2308:27;2302:4;2298:38;2367:4;2355:10;2352:20;2349:47;;;-1:-1:-1;2390:4:11;2349:47;2445:2;2440:3;2436:12;2433:1;2429:20;2423:4;2419:31;2409:41;;2500:81;2518:2;2511:5;2508:13;2500:81;;;2577:1;2563:16;;2544:1;2533:13;2500:81;;;2504:3;;2170:421;2079:518;;;:::o;2773:1345::-;2893:10;;-1:-1:-1;;;;;2915:30:11;;2912:56;;;2948:18;;:::i;:::-;2977:97;3067:6;3027:38;3059:4;3053:11;3027:38;:::i;:::-;3021:4;2977:97;:::i;:::-;3129:4;;3186:2;3175:14;;3203:1;3198:663;;;;3905:1;3922:6;3919:89;;;-1:-1:-1;3974:19:11;;;3968:26;3919:89;-1:-1:-1;;2730:1:11;2726:11;;;2722:24;2718:29;2708:40;2754:1;2750:11;;;2705:57;4021:81;;3168:944;;3198:663;2026:1;2019:14;;;2063:4;2050:18;;-1:-1:-1;;3234:20:11;;;3352:236;3366:7;3363:1;3360:14;3352:236;;;3455:19;;;3449:26;3434:42;;3547:27;;;;3515:1;3503:14;;;;3382:19;;3352:236;;;3356:3;3616:6;3607:7;3604:19;3601:201;;;3677:19;;;3671:26;-1:-1:-1;;3760:1:11;3756:14;;;3772:3;3752:24;3748:37;3744:42;3729:58;3714:74;;3601:201;;;3848:1;3839:6;3836:1;3832:14;3828:22;3822:4;3815:36;3168:944;;;;;2773:1345;;:::o;:::-;1443:3806:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1304,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1348,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@baseURI_1737": {
									"entryPoint": 796,
									"id": 1737,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@constructTokenURI_1810": {
									"entryPoint": 828,
									"id": 1810,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@dataURI_1915": {
									"entryPoint": 412,
									"id": 1915,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@encode_193": {
									"entryPoint": 1427,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@genericDataURI_1945": {
									"entryPoint": 1027,
									"id": 1945,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isDataURIEnabled_1734": {
									"entryPoint": null,
									"id": 1734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log10_1345": {
									"entryPoint": 1762,
									"id": 1345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 809,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBaseURI_1849": {
									"entryPoint": 713,
									"id": 1849,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@toString_284": {
									"entryPoint": 1160,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toggleDataURIEnabled_1831": {
									"entryPoint": 934,
									"id": 1831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenNamePrefix_1739": {
									"entryPoint": 573,
									"id": 1739,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenURI_1880": {
									"entryPoint": 485,
									"id": 1880,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1094,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_enum_MediaType": {
									"entryPoint": 2210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_struct_ArtPieceMetadata": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 2613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_struct$_ArtPieceMetadata_$2034_memory_ptr": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_struct$_TokenURIParams_$1748_memory_ptr": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_struct$_ArtPieceMetadata_$2034_memory_ptr": {
									"entryPoint": 2461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string_storage": {
									"entryPoint": 3117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_9780691b4087a1893a28b24020f5f6d0c7583060bd6cfeb54b8284a5bf55f11f_t_string_memory_ptr_t_stringliteral_8d0de490dde571af103e878aa265925a94dd83b4f74e62b617db5ad43a4f76af_t_string_memory_ptr_t_stringliteral_f900c545a58378754ad8b5c331b48c15e2a79c6ef80b3dc97d883d860e9e1c18_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3621,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_1774": {
									"entryPoint": 2038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
									"entryPoint": 3389,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14328:11",
										"nodeType": "YulBlock",
										"src": "0:14328:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:11",
													"nodeType": "YulBlock",
													"src": "46:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:11",
																		"nodeType": "YulLiteral",
																		"src": "63:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:11",
																				"nodeType": "YulLiteral",
																				"src": "70:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:11",
																				"nodeType": "YulLiteral",
																				"src": "75:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:11"
																		},
																		"nativeSrc": "66:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:11"
																},
																"nativeSrc": "56:31:11",
																"nodeType": "YulFunctionCall",
																"src": "56:31:11"
															},
															"nativeSrc": "56:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:11",
																		"nodeType": "YulLiteral",
																		"src": "103:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:11",
																		"nodeType": "YulLiteral",
																		"src": "106:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:11"
																},
																"nativeSrc": "96:15:11",
																"nodeType": "YulFunctionCall",
																"src": "96:15:11"
															},
															"nativeSrc": "96:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:11",
																		"nodeType": "YulLiteral",
																		"src": "127:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:11",
																		"nodeType": "YulLiteral",
																		"src": "130:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:11"
																},
																"nativeSrc": "120:15:11",
																"nodeType": "YulFunctionCall",
																"src": "120:15:11"
															},
															"nativeSrc": "120:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:11"
											},
											{
												"body": {
													"nativeSrc": "187:207:11",
													"nodeType": "YulBlock",
													"src": "187:207:11",
													"statements": [
														{
															"nativeSrc": "197:19:11",
															"nodeType": "YulAssignment",
															"src": "197:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "213:2:11",
																		"nodeType": "YulLiteral",
																		"src": "213:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "207:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "207:5:11"
																},
																"nativeSrc": "207:9:11",
																"nodeType": "YulFunctionCall",
																"src": "207:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "197:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "197:6:11"
																}
															]
														},
														{
															"nativeSrc": "225:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "225:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "247:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "247:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:4:11",
																		"nodeType": "YulLiteral",
																		"src": "255:4:11",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "243:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "243:3:11"
																},
																"nativeSrc": "243:17:11",
																"nodeType": "YulFunctionCall",
																"src": "243:17:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "229:10:11",
																	"nodeType": "YulTypedName",
																	"src": "229:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "335:22:11",
																"nodeType": "YulBlock",
																"src": "335:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "337:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "337:16:11"
																			},
																			"nativeSrc": "337:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "337:18:11"
																		},
																		"nativeSrc": "337:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "337:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "278:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "278:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "290:18:11",
																				"nodeType": "YulLiteral",
																				"src": "290:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "275:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "275:2:11"
																		},
																		"nativeSrc": "275:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "275:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "314:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "314:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "326:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "326:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "311:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "311:2:11"
																		},
																		"nativeSrc": "311:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "311:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "272:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "272:2:11"
																},
																"nativeSrc": "272:62:11",
																"nodeType": "YulFunctionCall",
																"src": "272:62:11"
															},
															"nativeSrc": "269:88:11",
															"nodeType": "YulIf",
															"src": "269:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "373:2:11",
																		"nodeType": "YulLiteral",
																		"src": "373:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "377:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "377:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "366:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "366:6:11"
																},
																"nativeSrc": "366:22:11",
																"nodeType": "YulFunctionCall",
																"src": "366:22:11"
															},
															"nativeSrc": "366:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "366:22:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "146:248:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "176:6:11",
														"nodeType": "YulTypedName",
														"src": "176:6:11",
														"type": ""
													}
												],
												"src": "146:248:11"
											},
											{
												"body": {
													"nativeSrc": "445:207:11",
													"nodeType": "YulBlock",
													"src": "445:207:11",
													"statements": [
														{
															"nativeSrc": "455:19:11",
															"nodeType": "YulAssignment",
															"src": "455:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "471:2:11",
																		"nodeType": "YulLiteral",
																		"src": "471:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "465:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "465:5:11"
																},
																"nativeSrc": "465:9:11",
																"nodeType": "YulFunctionCall",
																"src": "465:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "455:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:11"
																}
															]
														},
														{
															"nativeSrc": "483:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "483:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "505:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "505:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "513:4:11",
																		"nodeType": "YulLiteral",
																		"src": "513:4:11",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "501:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "501:3:11"
																},
																"nativeSrc": "501:17:11",
																"nodeType": "YulFunctionCall",
																"src": "501:17:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "487:10:11",
																	"nodeType": "YulTypedName",
																	"src": "487:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "593:22:11",
																"nodeType": "YulBlock",
																"src": "593:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "595:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "595:16:11"
																			},
																			"nativeSrc": "595:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "595:18:11"
																		},
																		"nativeSrc": "595:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "595:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "536:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "536:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "548:18:11",
																				"nodeType": "YulLiteral",
																				"src": "548:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "533:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "533:2:11"
																		},
																		"nativeSrc": "533:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "533:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "572:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "572:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "584:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "584:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "569:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "569:2:11"
																		},
																		"nativeSrc": "569:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "569:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "530:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "530:2:11"
																},
																"nativeSrc": "530:62:11",
																"nodeType": "YulFunctionCall",
																"src": "530:62:11"
															},
															"nativeSrc": "527:88:11",
															"nodeType": "YulIf",
															"src": "527:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "631:2:11",
																		"nodeType": "YulLiteral",
																		"src": "631:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "635:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "635:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:22:11",
																"nodeType": "YulFunctionCall",
																"src": "624:22:11"
															},
															"nativeSrc": "624:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "624:22:11"
														}
													]
												},
												"name": "allocate_memory_1774",
												"nativeSrc": "399:253:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "434:6:11",
														"nodeType": "YulTypedName",
														"src": "434:6:11",
														"type": ""
													}
												],
												"src": "399:253:11"
											},
											{
												"body": {
													"nativeSrc": "710:666:11",
													"nodeType": "YulBlock",
													"src": "710:666:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "759:16:11",
																"nodeType": "YulBlock",
																"src": "759:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "768:1:11",
																					"nodeType": "YulLiteral",
																					"src": "768:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "771:1:11",
																					"nodeType": "YulLiteral",
																					"src": "771:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "761:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "761:6:11"
																			},
																			"nativeSrc": "761:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "761:12:11"
																		},
																		"nativeSrc": "761:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "761:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "738:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "738:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "746:4:11",
																						"nodeType": "YulLiteral",
																						"src": "746:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "734:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "734:3:11"
																				},
																				"nativeSrc": "734:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "734:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "753:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "753:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "730:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:11"
																		},
																		"nativeSrc": "730:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "730:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "723:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "723:6:11"
																},
																"nativeSrc": "723:35:11",
																"nodeType": "YulFunctionCall",
																"src": "723:35:11"
															},
															"nativeSrc": "720:55:11",
															"nodeType": "YulIf",
															"src": "720:55:11"
														},
														{
															"nativeSrc": "784:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "784:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "807:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "807:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "794:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "794:12:11"
																},
																"nativeSrc": "794:20:11",
																"nodeType": "YulFunctionCall",
																"src": "794:20:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "788:2:11",
																	"nodeType": "YulTypedName",
																	"src": "788:2:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "823:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "823:28:11",
															"value": {
																"kind": "number",
																"nativeSrc": "833:18:11",
																"nodeType": "YulLiteral",
																"src": "833:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "827:2:11",
																	"nodeType": "YulTypedName",
																	"src": "827:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "874:22:11",
																"nodeType": "YulBlock",
																"src": "874:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "876:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "876:16:11"
																			},
																			"nativeSrc": "876:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "876:18:11"
																		},
																		"nativeSrc": "876:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "876:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "866:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "866:2:11"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "870:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "870:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "863:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "863:2:11"
																},
																"nativeSrc": "863:10:11",
																"nodeType": "YulFunctionCall",
																"src": "863:10:11"
															},
															"nativeSrc": "860:36:11",
															"nodeType": "YulIf",
															"src": "860:36:11"
														},
														{
															"nativeSrc": "905:17:11",
															"nodeType": "YulVariableDeclaration",
															"src": "905:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "919:2:11",
																		"nodeType": "YulLiteral",
																		"src": "919:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "915:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "915:3:11"
																},
																"nativeSrc": "915:7:11",
																"nodeType": "YulFunctionCall",
																"src": "915:7:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "909:2:11",
																	"nodeType": "YulTypedName",
																	"src": "909:2:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "931:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "931:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:2:11",
																		"nodeType": "YulLiteral",
																		"src": "951:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "945:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "945:5:11"
																},
																"nativeSrc": "945:9:11",
																"nodeType": "YulFunctionCall",
																"src": "945:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "935:6:11",
																	"nodeType": "YulTypedName",
																	"src": "935:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "963:71:11",
															"nodeType": "YulVariableDeclaration",
															"src": "963:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "985:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "985:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "1009:2:11",
																										"nodeType": "YulIdentifier",
																										"src": "1009:2:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1013:4:11",
																										"nodeType": "YulLiteral",
																										"src": "1013:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1005:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1005:3:11"
																								},
																								"nativeSrc": "1005:13:11",
																								"nodeType": "YulFunctionCall",
																								"src": "1005:13:11"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "1020:2:11",
																								"nodeType": "YulIdentifier",
																								"src": "1020:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1001:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1001:3:11"
																						},
																						"nativeSrc": "1001:22:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1001:22:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1025:2:11",
																						"nodeType": "YulLiteral",
																						"src": "1025:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "997:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "997:3:11"
																				},
																				"nativeSrc": "997:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "997:31:11"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "1030:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1030:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "993:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "993:3:11"
																		},
																		"nativeSrc": "993:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "993:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:11"
																},
																"nativeSrc": "981:53:11",
																"nodeType": "YulFunctionCall",
																"src": "981:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "967:10:11",
																	"nodeType": "YulTypedName",
																	"src": "967:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1093:22:11",
																"nodeType": "YulBlock",
																"src": "1093:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1095:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1095:16:11"
																			},
																			"nativeSrc": "1095:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1095:18:11"
																		},
																		"nativeSrc": "1095:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1095:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1052:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1052:10:11"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "1064:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1064:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1049:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1049:2:11"
																		},
																		"nativeSrc": "1049:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1049:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1072:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1072:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1084:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1084:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1069:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1069:2:11"
																		},
																		"nativeSrc": "1069:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1069:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1046:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:11"
																},
																"nativeSrc": "1046:46:11",
																"nodeType": "YulFunctionCall",
																"src": "1046:46:11"
															},
															"nativeSrc": "1043:72:11",
															"nodeType": "YulIf",
															"src": "1043:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1131:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1131:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1135:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1135:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1124:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1124:6:11"
																},
																"nativeSrc": "1124:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1124:22:11"
															},
															"nativeSrc": "1124:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "1124:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1162:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1162:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1170:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1170:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1155:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:11"
																},
																"nativeSrc": "1155:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1155:18:11"
															},
															"nativeSrc": "1155:18:11",
															"nodeType": "YulExpressionStatement",
															"src": "1155:18:11"
														},
														{
															"body": {
																"nativeSrc": "1221:16:11",
																"nodeType": "YulBlock",
																"src": "1221:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1230:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1230:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1233:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1233:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1223:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:11"
																			},
																			"nativeSrc": "1223:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1223:12:11"
																		},
																		"nativeSrc": "1223:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:11"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "1204:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1204:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1192:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1192:3:11"
																				},
																				"nativeSrc": "1192:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1192:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1209:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1209:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1188:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:11"
																		},
																		"nativeSrc": "1188:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1188:26:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1216:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1216:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1185:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1185:2:11"
																},
																"nativeSrc": "1185:35:11",
																"nodeType": "YulFunctionCall",
																"src": "1185:35:11"
															},
															"nativeSrc": "1182:55:11",
															"nodeType": "YulIf",
															"src": "1182:55:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1263:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1263:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1271:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1271:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1259:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1259:3:11"
																		},
																		"nativeSrc": "1259:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1259:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1282:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1282:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1290:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1290:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1278:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:11"
																		},
																		"nativeSrc": "1278:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1278:17:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1297:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1297:2:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1246:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1246:12:11"
																},
																"nativeSrc": "1246:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1246:54:11"
															},
															"nativeSrc": "1246:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "1246:54:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1324:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1324:6:11"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "1332:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1332:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:11"
																				},
																				"nativeSrc": "1320:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1337:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1337:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1316:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:11"
																		},
																		"nativeSrc": "1316:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:26:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1344:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1309:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1309:6:11"
																},
																"nativeSrc": "1309:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1309:37:11"
															},
															"nativeSrc": "1309:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1309:37:11"
														},
														{
															"nativeSrc": "1355:15:11",
															"nodeType": "YulAssignment",
															"src": "1355:15:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1364:6:11",
																"nodeType": "YulIdentifier",
																"src": "1364:6:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1355:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1355:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "657:719:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "684:6:11",
														"nodeType": "YulTypedName",
														"src": "684:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "692:3:11",
														"nodeType": "YulTypedName",
														"src": "692:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "700:5:11",
														"nodeType": "YulTypedName",
														"src": "700:5:11",
														"type": ""
													}
												],
												"src": "657:719:11"
											},
											{
												"body": {
													"nativeSrc": "1437:94:11",
													"nodeType": "YulBlock",
													"src": "1437:94:11",
													"statements": [
														{
															"nativeSrc": "1447:29:11",
															"nodeType": "YulAssignment",
															"src": "1447:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1469:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1469:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1456:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1456:12:11"
																},
																"nativeSrc": "1456:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1456:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1447:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1447:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1509:16:11",
																"nodeType": "YulBlock",
																"src": "1509:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1518:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1518:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1521:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1521:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1511:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1511:6:11"
																			},
																			"nativeSrc": "1511:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1511:12:11"
																		},
																		"nativeSrc": "1511:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1511:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1498:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1498:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1505:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1505:1:11",
																				"type": "",
																				"value": "6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1495:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1495:2:11"
																		},
																		"nativeSrc": "1495:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1495:12:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1488:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:11"
																},
																"nativeSrc": "1488:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1488:20:11"
															},
															"nativeSrc": "1485:40:11",
															"nodeType": "YulIf",
															"src": "1485:40:11"
														}
													]
												},
												"name": "abi_decode_enum_MediaType",
												"nativeSrc": "1381:150:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1416:6:11",
														"nodeType": "YulTypedName",
														"src": "1416:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1427:5:11",
														"nodeType": "YulTypedName",
														"src": "1427:5:11",
														"type": ""
													}
												],
												"src": "1381:150:11"
											},
											{
												"body": {
													"nativeSrc": "1609:1111:11",
													"nodeType": "YulBlock",
													"src": "1609:1111:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1653:16:11",
																"nodeType": "YulBlock",
																"src": "1653:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1662:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1662:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1665:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1665:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1655:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1655:6:11"
																			},
																			"nativeSrc": "1655:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1655:12:11"
																		},
																		"nativeSrc": "1655:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1655:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "1630:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1635:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1635:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1626:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1626:3:11"
																		},
																		"nativeSrc": "1626:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1626:19:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1647:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1647:4:11",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1622:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:11"
																},
																"nativeSrc": "1622:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1622:30:11"
															},
															"nativeSrc": "1619:50:11",
															"nodeType": "YulIf",
															"src": "1619:50:11"
														},
														{
															"nativeSrc": "1678:26:11",
															"nodeType": "YulAssignment",
															"src": "1678:26:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1687:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "1687:15:11"
																},
																"nativeSrc": "1687:17:11",
																"nodeType": "YulFunctionCall",
																"src": "1687:17:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1678:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1678:5:11"
																}
															]
														},
														{
															"nativeSrc": "1713:37:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1713:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1740:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1740:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1727:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1727:12:11"
																},
																"nativeSrc": "1727:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1727:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1717:6:11",
																	"nodeType": "YulTypedName",
																	"src": "1717:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1759:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1759:28:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1769:18:11",
																"nodeType": "YulLiteral",
																"src": "1769:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1763:2:11",
																	"nodeType": "YulTypedName",
																	"src": "1763:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1814:16:11",
																"nodeType": "YulBlock",
																"src": "1814:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1823:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1823:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1826:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1826:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1816:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1816:6:11"
																			},
																			"nativeSrc": "1816:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1816:12:11"
																		},
																		"nativeSrc": "1816:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1816:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1802:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1802:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1810:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1810:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1799:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1799:2:11"
																},
																"nativeSrc": "1799:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1799:14:11"
															},
															"nativeSrc": "1796:34:11",
															"nodeType": "YulIf",
															"src": "1796:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1846:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1846:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1875:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1875:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1886:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1886:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1871:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1871:3:11"
																				},
																				"nativeSrc": "1871:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1871:22:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1895:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1895:3:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "1853:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1853:17:11"
																		},
																		"nativeSrc": "1853:46:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1853:46:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1839:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1839:6:11"
																},
																"nativeSrc": "1839:61:11",
																"nodeType": "YulFunctionCall",
																"src": "1839:61:11"
															},
															"nativeSrc": "1839:61:11",
															"nodeType": "YulExpressionStatement",
															"src": "1839:61:11"
														},
														{
															"nativeSrc": "1909:48:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1909:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1942:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1942:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1953:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1953:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1938:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1938:3:11"
																		},
																		"nativeSrc": "1938:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1938:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1925:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1925:12:11"
																},
																"nativeSrc": "1925:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1925:32:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1913:8:11",
																	"nodeType": "YulTypedName",
																	"src": "1913:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1986:16:11",
																"nodeType": "YulBlock",
																"src": "1986:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1995:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1995:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1998:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1998:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1988:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1988:6:11"
																			},
																			"nativeSrc": "1988:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:12:11"
																		},
																		"nativeSrc": "1988:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1972:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "1972:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1982:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1982:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1969:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1969:2:11"
																},
																"nativeSrc": "1969:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1969:16:11"
															},
															"nativeSrc": "1966:36:11",
															"nodeType": "YulIf",
															"src": "1966:36:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2022:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2022:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2029:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2029:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:11"
																		},
																		"nativeSrc": "2018:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2056:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2056:9:11"
																					},
																					{
																						"name": "offset_1",
																						"nativeSrc": "2067:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "2067:8:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2052:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2052:3:11"
																				},
																				"nativeSrc": "2052:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2052:24:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2078:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2078:3:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "2034:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2034:17:11"
																		},
																		"nativeSrc": "2034:48:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2034:48:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:11"
																},
																"nativeSrc": "2011:72:11",
																"nodeType": "YulFunctionCall",
																"src": "2011:72:11"
															},
															"nativeSrc": "2011:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "2011:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2103:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2103:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2110:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2110:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2099:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2099:3:11"
																		},
																		"nativeSrc": "2099:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2099:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2145:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2145:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2156:2:11",
																						"nodeType": "YulLiteral",
																						"src": "2156:2:11",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2141:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2141:3:11"
																				},
																				"nativeSrc": "2141:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2141:18:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_enum_MediaType",
																			"nativeSrc": "2115:25:11",
																			"nodeType": "YulIdentifier",
																			"src": "2115:25:11"
																		},
																		"nativeSrc": "2115:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2115:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2092:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:11"
																},
																"nativeSrc": "2092:69:11",
																"nodeType": "YulFunctionCall",
																"src": "2092:69:11"
															},
															"nativeSrc": "2092:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "2092:69:11"
														},
														{
															"nativeSrc": "2170:48:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2170:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2203:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2203:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2214:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2214:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2199:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:11"
																		},
																		"nativeSrc": "2199:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2199:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2186:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2186:12:11"
																},
																"nativeSrc": "2186:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2186:32:11"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "2174:8:11",
																	"nodeType": "YulTypedName",
																	"src": "2174:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2247:16:11",
																"nodeType": "YulBlock",
																"src": "2247:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2256:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2256:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2259:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2259:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2249:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2249:6:11"
																			},
																			"nativeSrc": "2249:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2249:12:11"
																		},
																		"nativeSrc": "2249:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2249:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "2233:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2233:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2243:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "2243:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2230:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2230:2:11"
																},
																"nativeSrc": "2230:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2230:16:11"
															},
															"nativeSrc": "2227:36:11",
															"nodeType": "YulIf",
															"src": "2227:36:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2283:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2290:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2290:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2279:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2279:3:11"
																		},
																		"nativeSrc": "2279:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2279:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2317:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2317:9:11"
																					},
																					{
																						"name": "offset_2",
																						"nativeSrc": "2328:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "2328:8:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2313:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2313:3:11"
																				},
																				"nativeSrc": "2313:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2313:24:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2339:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2339:3:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "2295:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2295:17:11"
																		},
																		"nativeSrc": "2295:48:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2295:48:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2272:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:11"
																},
																"nativeSrc": "2272:72:11",
																"nodeType": "YulFunctionCall",
																"src": "2272:72:11"
															},
															"nativeSrc": "2272:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "2272:72:11"
														},
														{
															"nativeSrc": "2353:49:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2353:49:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2386:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2386:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2397:3:11",
																				"nodeType": "YulLiteral",
																				"src": "2397:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2382:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2382:3:11"
																		},
																		"nativeSrc": "2382:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2382:19:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2369:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2369:12:11"
																},
																"nativeSrc": "2369:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2369:33:11"
															},
															"variables": [
																{
																	"name": "offset_3",
																	"nativeSrc": "2357:8:11",
																	"nodeType": "YulTypedName",
																	"src": "2357:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2431:16:11",
																"nodeType": "YulBlock",
																"src": "2431:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2440:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2440:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2443:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2443:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2433:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2433:6:11"
																			},
																			"nativeSrc": "2433:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2433:12:11"
																		},
																		"nativeSrc": "2433:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2433:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_3",
																		"nativeSrc": "2417:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2417:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2427:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "2427:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2414:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2414:2:11"
																},
																"nativeSrc": "2414:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2414:16:11"
															},
															"nativeSrc": "2411:36:11",
															"nodeType": "YulIf",
															"src": "2411:36:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2467:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2467:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2474:3:11",
																				"nodeType": "YulLiteral",
																				"src": "2474:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2463:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:11"
																		},
																		"nativeSrc": "2463:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2463:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2502:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2502:9:11"
																					},
																					{
																						"name": "offset_3",
																						"nativeSrc": "2513:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "2513:8:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2498:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2498:3:11"
																				},
																				"nativeSrc": "2498:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2498:24:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2524:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2524:3:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "2480:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2480:17:11"
																		},
																		"nativeSrc": "2480:48:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2480:48:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2456:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:11"
																},
																"nativeSrc": "2456:73:11",
																"nodeType": "YulFunctionCall",
																"src": "2456:73:11"
															},
															"nativeSrc": "2456:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "2456:73:11"
														},
														{
															"nativeSrc": "2538:49:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2538:49:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2571:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2571:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2582:3:11",
																				"nodeType": "YulLiteral",
																				"src": "2582:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2567:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2567:3:11"
																		},
																		"nativeSrc": "2567:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2567:19:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2554:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2554:12:11"
																},
																"nativeSrc": "2554:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2554:33:11"
															},
															"variables": [
																{
																	"name": "offset_4",
																	"nativeSrc": "2542:8:11",
																	"nodeType": "YulTypedName",
																	"src": "2542:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2616:16:11",
																"nodeType": "YulBlock",
																"src": "2616:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2625:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2625:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2628:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2628:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2618:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2618:6:11"
																			},
																			"nativeSrc": "2618:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2618:12:11"
																		},
																		"nativeSrc": "2618:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2618:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_4",
																		"nativeSrc": "2602:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2602:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2612:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "2612:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2599:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2599:2:11"
																},
																"nativeSrc": "2599:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2599:16:11"
															},
															"nativeSrc": "2596:36:11",
															"nodeType": "YulIf",
															"src": "2596:36:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2652:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2652:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2659:3:11",
																				"nodeType": "YulLiteral",
																				"src": "2659:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2648:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:11"
																		},
																		"nativeSrc": "2648:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2687:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2687:9:11"
																					},
																					{
																						"name": "offset_4",
																						"nativeSrc": "2698:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "2698:8:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2683:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2683:3:11"
																				},
																				"nativeSrc": "2683:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2683:24:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2709:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2709:3:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "2665:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2665:17:11"
																		},
																		"nativeSrc": "2665:48:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2665:48:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2641:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2641:6:11"
																},
																"nativeSrc": "2641:73:11",
																"nodeType": "YulFunctionCall",
																"src": "2641:73:11"
															},
															"nativeSrc": "2641:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "2641:73:11"
														}
													]
												},
												"name": "abi_decode_struct_ArtPieceMetadata",
												"nativeSrc": "1536:1184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1580:9:11",
														"nodeType": "YulTypedName",
														"src": "1580:9:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1591:3:11",
														"nodeType": "YulTypedName",
														"src": "1591:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1599:5:11",
														"nodeType": "YulTypedName",
														"src": "1599:5:11",
														"type": ""
													}
												],
												"src": "1536:1184:11"
											},
											{
												"body": {
													"nativeSrc": "2846:310:11",
													"nodeType": "YulBlock",
													"src": "2846:310:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2892:16:11",
																"nodeType": "YulBlock",
																"src": "2892:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2901:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2894:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:11"
																			},
																			"nativeSrc": "2894:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:12:11"
																		},
																		"nativeSrc": "2894:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2867:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2867:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2876:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2876:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2863:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2863:3:11"
																		},
																		"nativeSrc": "2863:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2863:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2888:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2888:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2859:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2859:3:11"
																},
																"nativeSrc": "2859:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2859:32:11"
															},
															"nativeSrc": "2856:52:11",
															"nodeType": "YulIf",
															"src": "2856:52:11"
														},
														{
															"nativeSrc": "2917:33:11",
															"nodeType": "YulAssignment",
															"src": "2917:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2940:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2940:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2927:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2927:12:11"
																},
																"nativeSrc": "2927:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2927:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2917:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2917:6:11"
																}
															]
														},
														{
															"nativeSrc": "2959:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2959:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2990:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2990:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3001:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3001:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2986:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2986:3:11"
																		},
																		"nativeSrc": "2986:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2986:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2973:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2973:12:11"
																},
																"nativeSrc": "2973:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2973:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2963:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2963:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3048:16:11",
																"nodeType": "YulBlock",
																"src": "3048:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3057:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3057:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3060:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3060:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3050:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:11"
																			},
																			"nativeSrc": "3050:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3050:12:11"
																		},
																		"nativeSrc": "3050:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3050:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3028:18:11",
																		"nodeType": "YulLiteral",
																		"src": "3028:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3017:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3017:2:11"
																},
																"nativeSrc": "3017:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3017:30:11"
															},
															"nativeSrc": "3014:50:11",
															"nodeType": "YulIf",
															"src": "3014:50:11"
														},
														{
															"nativeSrc": "3073:77:11",
															"nodeType": "YulAssignment",
															"src": "3073:77:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3122:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3122:9:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3133:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3133:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3118:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3118:3:11"
																		},
																		"nativeSrc": "3118:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3118:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3142:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3142:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_ArtPieceMetadata",
																	"nativeSrc": "3083:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "3083:34:11"
																},
																"nativeSrc": "3083:67:11",
																"nodeType": "YulFunctionCall",
																"src": "3083:67:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3073:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_struct$_ArtPieceMetadata_$2034_memory_ptr",
												"nativeSrc": "2725:431:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2804:9:11",
														"nodeType": "YulTypedName",
														"src": "2804:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2815:7:11",
														"nodeType": "YulTypedName",
														"src": "2815:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2827:6:11",
														"nodeType": "YulTypedName",
														"src": "2827:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2835:6:11",
														"nodeType": "YulTypedName",
														"src": "2835:6:11",
														"type": ""
													}
												],
												"src": "2725:431:11"
											},
											{
												"body": {
													"nativeSrc": "3227:184:11",
													"nodeType": "YulBlock",
													"src": "3227:184:11",
													"statements": [
														{
															"nativeSrc": "3237:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3237:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3246:1:11",
																"nodeType": "YulLiteral",
																"src": "3246:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3241:1:11",
																	"nodeType": "YulTypedName",
																	"src": "3241:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3306:63:11",
																"nodeType": "YulBlock",
																"src": "3306:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "3331:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3331:3:11"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "3336:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "3336:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3327:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "3327:3:11"
																					},
																					"nativeSrc": "3327:11:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3327:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "3350:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3350:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "3355:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "3355:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3346:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "3346:3:11"
																							},
																							"nativeSrc": "3346:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3346:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3340:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3340:5:11"
																					},
																					"nativeSrc": "3340:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3340:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3320:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3320:6:11"
																			},
																			"nativeSrc": "3320:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3320:39:11"
																		},
																		"nativeSrc": "3320:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3320:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3267:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "3267:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3270:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3270:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3264:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3264:2:11"
																},
																"nativeSrc": "3264:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3264:13:11"
															},
															"nativeSrc": "3256:113:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3278:19:11",
																"nodeType": "YulBlock",
																"src": "3278:19:11",
																"statements": [
																	{
																		"nativeSrc": "3280:15:11",
																		"nodeType": "YulAssignment",
																		"src": "3280:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3289:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "3289:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3292:2:11",
																					"nodeType": "YulLiteral",
																					"src": "3292:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3285:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3285:3:11"
																			},
																			"nativeSrc": "3285:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3285:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3280:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "3280:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3260:3:11",
																"nodeType": "YulBlock",
																"src": "3260:3:11",
																"statements": []
															},
															"src": "3256:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3389:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3389:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3394:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3394:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3385:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3385:3:11"
																		},
																		"nativeSrc": "3385:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3385:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3403:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3403:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3378:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3378:6:11"
																},
																"nativeSrc": "3378:27:11",
																"nodeType": "YulFunctionCall",
																"src": "3378:27:11"
															},
															"nativeSrc": "3378:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "3378:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3161:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3205:3:11",
														"nodeType": "YulTypedName",
														"src": "3205:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3210:3:11",
														"nodeType": "YulTypedName",
														"src": "3210:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3215:6:11",
														"nodeType": "YulTypedName",
														"src": "3215:6:11",
														"type": ""
													}
												],
												"src": "3161:250:11"
											},
											{
												"body": {
													"nativeSrc": "3537:275:11",
													"nodeType": "YulBlock",
													"src": "3537:275:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3554:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3554:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3565:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3565:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3547:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3547:6:11"
																},
																"nativeSrc": "3547:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3547:21:11"
															},
															"nativeSrc": "3547:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "3547:21:11"
														},
														{
															"nativeSrc": "3577:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3577:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3597:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3597:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3591:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3591:5:11"
																},
																"nativeSrc": "3591:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3591:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3581:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3581:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3624:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3624:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3635:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3635:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3620:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3620:3:11"
																		},
																		"nativeSrc": "3620:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3620:18:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3640:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3640:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3613:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:11"
																},
																"nativeSrc": "3613:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3613:34:11"
															},
															"nativeSrc": "3613:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3613:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3695:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3695:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3703:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3703:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3691:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3691:3:11"
																		},
																		"nativeSrc": "3691:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3691:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3712:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3712:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3723:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3723:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3708:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3708:3:11"
																		},
																		"nativeSrc": "3708:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3708:18:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3728:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3728:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3656:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "3656:34:11"
																},
																"nativeSrc": "3656:79:11",
																"nodeType": "YulFunctionCall",
																"src": "3656:79:11"
															},
															"nativeSrc": "3656:79:11",
															"nodeType": "YulExpressionStatement",
															"src": "3656:79:11"
														},
														{
															"nativeSrc": "3744:62:11",
															"nodeType": "YulAssignment",
															"src": "3744:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3760:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3760:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3779:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "3779:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3787:2:11",
																								"nodeType": "YulLiteral",
																								"src": "3787:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3775:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3775:3:11"
																						},
																						"nativeSrc": "3775:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3775:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3796:2:11",
																								"nodeType": "YulLiteral",
																								"src": "3796:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3792:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3792:3:11"
																						},
																						"nativeSrc": "3792:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3792:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3771:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3771:3:11"
																				},
																				"nativeSrc": "3771:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3771:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3756:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3756:3:11"
																		},
																		"nativeSrc": "3756:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3756:45:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3803:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3752:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3752:3:11"
																},
																"nativeSrc": "3752:54:11",
																"nodeType": "YulFunctionCall",
																"src": "3752:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3744:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3744:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3416:396:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3506:9:11",
														"nodeType": "YulTypedName",
														"src": "3506:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3517:6:11",
														"nodeType": "YulTypedName",
														"src": "3517:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3528:4:11",
														"nodeType": "YulTypedName",
														"src": "3528:4:11",
														"type": ""
													}
												],
												"src": "3416:396:11"
											},
											{
												"body": {
													"nativeSrc": "3907:502:11",
													"nodeType": "YulBlock",
													"src": "3907:502:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3953:16:11",
																"nodeType": "YulBlock",
																"src": "3953:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3962:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3962:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3965:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3965:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3955:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3955:6:11"
																			},
																			"nativeSrc": "3955:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3955:12:11"
																		},
																		"nativeSrc": "3955:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3955:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3928:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3928:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3937:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3937:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3924:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3924:3:11"
																		},
																		"nativeSrc": "3924:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3949:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3949:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3920:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:11"
																},
																"nativeSrc": "3920:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3920:32:11"
															},
															"nativeSrc": "3917:52:11",
															"nodeType": "YulIf",
															"src": "3917:52:11"
														},
														{
															"nativeSrc": "3978:37:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3978:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4005:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4005:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3992:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3992:12:11"
																},
																"nativeSrc": "3992:23:11",
																"nodeType": "YulFunctionCall",
																"src": "3992:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3982:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3982:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4024:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4024:28:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4034:18:11",
																"nodeType": "YulLiteral",
																"src": "4034:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4028:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4028:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4079:16:11",
																"nodeType": "YulBlock",
																"src": "4079:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4088:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4088:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4091:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4091:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4081:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4081:6:11"
																			},
																			"nativeSrc": "4081:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4081:12:11"
																		},
																		"nativeSrc": "4081:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4081:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4067:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4067:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4075:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4075:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4064:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4064:2:11"
																},
																"nativeSrc": "4064:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4064:14:11"
															},
															"nativeSrc": "4061:34:11",
															"nodeType": "YulIf",
															"src": "4061:34:11"
														},
														{
															"nativeSrc": "4104:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4118:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4129:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4129:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4114:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:11"
																},
																"nativeSrc": "4114:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4114:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "4108:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4108:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4184:16:11",
																"nodeType": "YulBlock",
																"src": "4184:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4193:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4193:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4196:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4196:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4186:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4186:6:11"
																			},
																			"nativeSrc": "4186:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4186:12:11"
																		},
																		"nativeSrc": "4186:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4186:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4163:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4163:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4167:4:11",
																						"nodeType": "YulLiteral",
																						"src": "4167:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4159:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4159:3:11"
																				},
																				"nativeSrc": "4159:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4159:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4174:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4174:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4155:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:11"
																		},
																		"nativeSrc": "4155:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4155:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4148:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:11"
																},
																"nativeSrc": "4148:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4148:35:11"
															},
															"nativeSrc": "4145:55:11",
															"nodeType": "YulIf",
															"src": "4145:55:11"
														},
														{
															"nativeSrc": "4209:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4209:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "4236:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4236:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4223:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4223:12:11"
																},
																"nativeSrc": "4223:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4223:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4213:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4213:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4266:16:11",
																"nodeType": "YulBlock",
																"src": "4266:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4275:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4275:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4278:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4278:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4268:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4268:6:11"
																			},
																			"nativeSrc": "4268:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4268:12:11"
																		},
																		"nativeSrc": "4268:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4268:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4254:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4254:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4262:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4262:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4251:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4251:2:11"
																},
																"nativeSrc": "4251:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4251:14:11"
															},
															"nativeSrc": "4248:34:11",
															"nodeType": "YulIf",
															"src": "4248:34:11"
														},
														{
															"body": {
																"nativeSrc": "4332:16:11",
																"nodeType": "YulBlock",
																"src": "4332:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4341:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4341:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4344:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4344:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4334:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4334:6:11"
																			},
																			"nativeSrc": "4334:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4334:12:11"
																		},
																		"nativeSrc": "4334:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4334:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4305:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4305:2:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4309:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4309:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4301:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4301:3:11"
																				},
																				"nativeSrc": "4301:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4301:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4318:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4318:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4297:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:11"
																		},
																		"nativeSrc": "4297:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4297:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4323:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "4323:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4294:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4294:2:11"
																},
																"nativeSrc": "4294:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4294:37:11"
															},
															"nativeSrc": "4291:57:11",
															"nodeType": "YulIf",
															"src": "4291:57:11"
														},
														{
															"nativeSrc": "4357:21:11",
															"nodeType": "YulAssignment",
															"src": "4357:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "4371:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4371:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4375:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4375:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4367:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4367:3:11"
																},
																"nativeSrc": "4367:11:11",
																"nodeType": "YulFunctionCall",
																"src": "4367:11:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4357:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4357:6:11"
																}
															]
														},
														{
															"nativeSrc": "4387:16:11",
															"nodeType": "YulAssignment",
															"src": "4387:16:11",
															"value": {
																"name": "length",
																"nativeSrc": "4397:6:11",
																"nodeType": "YulIdentifier",
																"src": "4397:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4387:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nativeSrc": "3817:592:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3865:9:11",
														"nodeType": "YulTypedName",
														"src": "3865:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3876:7:11",
														"nodeType": "YulTypedName",
														"src": "3876:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3888:6:11",
														"nodeType": "YulTypedName",
														"src": "3888:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3896:6:11",
														"nodeType": "YulTypedName",
														"src": "3896:6:11",
														"type": ""
													}
												],
												"src": "3817:592:11"
											},
											{
												"body": {
													"nativeSrc": "4515:102:11",
													"nodeType": "YulBlock",
													"src": "4515:102:11",
													"statements": [
														{
															"nativeSrc": "4525:26:11",
															"nodeType": "YulAssignment",
															"src": "4525:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4537:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4537:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4548:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4548:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4533:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4533:3:11"
																},
																"nativeSrc": "4533:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4533:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4525:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4525:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4567:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4582:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4582:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4598:3:11",
																								"nodeType": "YulLiteral",
																								"src": "4598:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4603:1:11",
																								"nodeType": "YulLiteral",
																								"src": "4603:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4594:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4594:3:11"
																						},
																						"nativeSrc": "4594:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4594:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4607:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4607:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4590:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4590:3:11"
																				},
																				"nativeSrc": "4590:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4590:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4578:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:11"
																		},
																		"nativeSrc": "4578:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4578:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4560:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4560:6:11"
																},
																"nativeSrc": "4560:51:11",
																"nodeType": "YulFunctionCall",
																"src": "4560:51:11"
															},
															"nativeSrc": "4560:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "4560:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4414:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4484:9:11",
														"nodeType": "YulTypedName",
														"src": "4484:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4495:6:11",
														"nodeType": "YulTypedName",
														"src": "4495:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4506:4:11",
														"nodeType": "YulTypedName",
														"src": "4506:4:11",
														"type": ""
													}
												],
												"src": "4414:203:11"
											},
											{
												"body": {
													"nativeSrc": "4724:1033:11",
													"nodeType": "YulBlock",
													"src": "4724:1033:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4770:16:11",
																"nodeType": "YulBlock",
																"src": "4770:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4779:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4779:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4782:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4782:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4772:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4772:6:11"
																			},
																			"nativeSrc": "4772:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4772:12:11"
																		},
																		"nativeSrc": "4772:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4772:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4745:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4745:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4754:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4754:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4741:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:11"
																		},
																		"nativeSrc": "4741:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4766:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4766:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4737:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4737:3:11"
																},
																"nativeSrc": "4737:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4737:32:11"
															},
															"nativeSrc": "4734:52:11",
															"nodeType": "YulIf",
															"src": "4734:52:11"
														},
														{
															"nativeSrc": "4795:37:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4795:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4822:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4822:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4809:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4809:12:11"
																},
																"nativeSrc": "4809:23:11",
																"nodeType": "YulFunctionCall",
																"src": "4809:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4799:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4799:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4841:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4841:28:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4851:18:11",
																"nodeType": "YulLiteral",
																"src": "4851:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4845:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4845:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4896:16:11",
																"nodeType": "YulBlock",
																"src": "4896:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4905:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4905:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4908:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4908:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4898:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4898:6:11"
																			},
																			"nativeSrc": "4898:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4898:12:11"
																		},
																		"nativeSrc": "4898:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4898:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4884:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4884:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4892:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4892:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4881:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4881:2:11"
																},
																"nativeSrc": "4881:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4881:14:11"
															},
															"nativeSrc": "4878:34:11",
															"nodeType": "YulIf",
															"src": "4878:34:11"
														},
														{
															"nativeSrc": "4921:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4921:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4935:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4935:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4946:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4946:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4931:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4931:3:11"
																},
																"nativeSrc": "4931:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4931:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "4925:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4925:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4993:16:11",
																"nodeType": "YulBlock",
																"src": "4993:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5002:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5002:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5005:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5005:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4995:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4995:6:11"
																			},
																			"nativeSrc": "4995:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4995:12:11"
																		},
																		"nativeSrc": "4995:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4995:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4973:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4973:7:11"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "4982:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4982:2:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4969:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4969:3:11"
																		},
																		"nativeSrc": "4969:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4969:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4987:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4987:4:11",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4965:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4965:3:11"
																},
																"nativeSrc": "4965:27:11",
																"nodeType": "YulFunctionCall",
																"src": "4965:27:11"
															},
															"nativeSrc": "4962:47:11",
															"nodeType": "YulIf",
															"src": "4962:47:11"
														},
														{
															"nativeSrc": "5018:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5018:35:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory_1774",
																	"nativeSrc": "5031:20:11",
																	"nodeType": "YulIdentifier",
																	"src": "5031:20:11"
																},
																"nativeSrc": "5031:22:11",
																"nodeType": "YulFunctionCall",
																"src": "5031:22:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5022:5:11",
																	"nodeType": "YulTypedName",
																	"src": "5022:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5062:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5062:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "5091:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "5091:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5078:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5078:12:11"
																},
																"nativeSrc": "5078:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5078:16:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "5066:8:11",
																	"nodeType": "YulTypedName",
																	"src": "5066:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5123:16:11",
																"nodeType": "YulBlock",
																"src": "5123:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5132:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5135:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5135:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5125:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:11"
																			},
																			"nativeSrc": "5125:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5125:12:11"
																		},
																		"nativeSrc": "5125:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "5109:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "5109:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5119:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "5119:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5106:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5106:2:11"
																},
																"nativeSrc": "5106:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5106:16:11"
															},
															"nativeSrc": "5103:36:11",
															"nodeType": "YulIf",
															"src": "5103:36:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5155:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5155:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5184:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5184:2:11"
																					},
																					{
																						"name": "offset_1",
																						"nativeSrc": "5188:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "5188:8:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5180:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5180:3:11"
																				},
																				"nativeSrc": "5180:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5180:17:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5199:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5199:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "5162:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5162:17:11"
																		},
																		"nativeSrc": "5162:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5162:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5148:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:11"
																},
																"nativeSrc": "5148:60:11",
																"nodeType": "YulFunctionCall",
																"src": "5148:60:11"
															},
															"nativeSrc": "5148:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "5148:60:11"
														},
														{
															"nativeSrc": "5217:41:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5217:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "5250:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "5250:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5246:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5246:3:11"
																		},
																		"nativeSrc": "5246:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5246:11:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5233:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5233:12:11"
																},
																"nativeSrc": "5233:25:11",
																"nodeType": "YulFunctionCall",
																"src": "5233:25:11"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "5221:8:11",
																	"nodeType": "YulTypedName",
																	"src": "5221:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5287:16:11",
																"nodeType": "YulBlock",
																"src": "5287:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5296:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5296:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5299:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5299:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5289:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5289:6:11"
																			},
																			"nativeSrc": "5289:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5289:12:11"
																		},
																		"nativeSrc": "5289:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5289:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "5273:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "5273:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5283:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "5283:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5270:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5270:2:11"
																},
																"nativeSrc": "5270:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5270:16:11"
															},
															"nativeSrc": "5267:36:11",
															"nodeType": "YulIf",
															"src": "5267:36:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5323:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5323:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5330:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5330:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5319:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5319:3:11"
																		},
																		"nativeSrc": "5319:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5319:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5357:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5357:2:11"
																					},
																					{
																						"name": "offset_2",
																						"nativeSrc": "5361:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "5361:8:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:11"
																				},
																				"nativeSrc": "5353:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:17:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5372:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5372:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "5335:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5335:17:11"
																		},
																		"nativeSrc": "5335:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5335:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5312:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5312:6:11"
																},
																"nativeSrc": "5312:69:11",
																"nodeType": "YulFunctionCall",
																"src": "5312:69:11"
															},
															"nativeSrc": "5312:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "5312:69:11"
														},
														{
															"nativeSrc": "5390:41:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5390:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "5423:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "5423:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5427:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5427:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5419:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5419:3:11"
																		},
																		"nativeSrc": "5419:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5419:11:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5406:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5406:12:11"
																},
																"nativeSrc": "5406:25:11",
																"nodeType": "YulFunctionCall",
																"src": "5406:25:11"
															},
															"variables": [
																{
																	"name": "offset_3",
																	"nativeSrc": "5394:8:11",
																	"nodeType": "YulTypedName",
																	"src": "5394:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5460:16:11",
																"nodeType": "YulBlock",
																"src": "5460:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5469:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5469:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5472:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5472:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5462:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5462:6:11"
																			},
																			"nativeSrc": "5462:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5462:12:11"
																		},
																		"nativeSrc": "5462:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5462:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_3",
																		"nativeSrc": "5446:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "5446:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5456:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "5456:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5443:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5443:2:11"
																},
																"nativeSrc": "5443:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5443:16:11"
															},
															"nativeSrc": "5440:36:11",
															"nodeType": "YulIf",
															"src": "5440:36:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5496:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5496:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5503:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5503:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5492:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:11"
																		},
																		"nativeSrc": "5492:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5530:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5530:2:11"
																					},
																					{
																						"name": "offset_3",
																						"nativeSrc": "5534:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "5534:8:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5526:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5526:3:11"
																				},
																				"nativeSrc": "5526:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5526:17:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5545:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5545:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "5508:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5508:17:11"
																		},
																		"nativeSrc": "5508:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5508:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5485:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:11"
																},
																"nativeSrc": "5485:69:11",
																"nodeType": "YulFunctionCall",
																"src": "5485:69:11"
															},
															"nativeSrc": "5485:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "5485:69:11"
														},
														{
															"nativeSrc": "5563:41:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5563:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "5596:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "5596:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5600:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5600:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5592:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5592:3:11"
																		},
																		"nativeSrc": "5592:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5592:11:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5579:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5579:12:11"
																},
																"nativeSrc": "5579:25:11",
																"nodeType": "YulFunctionCall",
																"src": "5579:25:11"
															},
															"variables": [
																{
																	"name": "offset_4",
																	"nativeSrc": "5567:8:11",
																	"nodeType": "YulTypedName",
																	"src": "5567:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5633:16:11",
																"nodeType": "YulBlock",
																"src": "5633:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5642:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5642:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5645:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5645:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5635:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5635:6:11"
																			},
																			"nativeSrc": "5635:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5635:12:11"
																		},
																		"nativeSrc": "5635:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5635:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_4",
																		"nativeSrc": "5619:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "5619:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5629:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "5629:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5616:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5616:2:11"
																},
																"nativeSrc": "5616:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5616:16:11"
															},
															"nativeSrc": "5613:36:11",
															"nodeType": "YulIf",
															"src": "5613:36:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5669:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5669:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5676:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5676:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5665:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5665:3:11"
																		},
																		"nativeSrc": "5665:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5665:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5703:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5703:2:11"
																					},
																					{
																						"name": "offset_4",
																						"nativeSrc": "5707:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "5707:8:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5699:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5699:3:11"
																				},
																				"nativeSrc": "5699:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5699:17:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5718:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5718:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "5681:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5681:17:11"
																		},
																		"nativeSrc": "5681:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5658:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:11"
																},
																"nativeSrc": "5658:69:11",
																"nodeType": "YulFunctionCall",
																"src": "5658:69:11"
															},
															"nativeSrc": "5658:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "5658:69:11"
														},
														{
															"nativeSrc": "5736:15:11",
															"nodeType": "YulAssignment",
															"src": "5736:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "5746:5:11",
																"nodeType": "YulIdentifier",
																"src": "5746:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5736:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5736:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_TokenURIParams_$1748_memory_ptr",
												"nativeSrc": "4622:1135:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4690:9:11",
														"nodeType": "YulTypedName",
														"src": "4690:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4701:7:11",
														"nodeType": "YulTypedName",
														"src": "4701:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4713:6:11",
														"nodeType": "YulTypedName",
														"src": "4713:6:11",
														"type": ""
													}
												],
												"src": "4622:1135:11"
											},
											{
												"body": {
													"nativeSrc": "5857:92:11",
													"nodeType": "YulBlock",
													"src": "5857:92:11",
													"statements": [
														{
															"nativeSrc": "5867:26:11",
															"nodeType": "YulAssignment",
															"src": "5867:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5879:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5879:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5890:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5890:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5875:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:11"
																},
																"nativeSrc": "5875:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5875:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5867:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5867:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5909:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5909:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "5934:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5934:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5927:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5927:6:11"
																				},
																				"nativeSrc": "5927:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5927:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5920:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5920:6:11"
																		},
																		"nativeSrc": "5920:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5920:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5902:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5902:6:11"
																},
																"nativeSrc": "5902:41:11",
																"nodeType": "YulFunctionCall",
																"src": "5902:41:11"
															},
															"nativeSrc": "5902:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "5902:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5762:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5826:9:11",
														"nodeType": "YulTypedName",
														"src": "5826:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5837:6:11",
														"nodeType": "YulTypedName",
														"src": "5837:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5848:4:11",
														"nodeType": "YulTypedName",
														"src": "5848:4:11",
														"type": ""
													}
												],
												"src": "5762:187:11"
											},
											{
												"body": {
													"nativeSrc": "6085:453:11",
													"nodeType": "YulBlock",
													"src": "6085:453:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6131:16:11",
																"nodeType": "YulBlock",
																"src": "6131:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6140:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6140:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6143:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6143:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6133:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6133:6:11"
																			},
																			"nativeSrc": "6133:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6133:12:11"
																		},
																		"nativeSrc": "6133:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6133:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6106:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6106:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6115:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6102:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6102:3:11"
																		},
																		"nativeSrc": "6102:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6102:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6127:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6127:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6098:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6098:3:11"
																},
																"nativeSrc": "6098:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6098:32:11"
															},
															"nativeSrc": "6095:52:11",
															"nodeType": "YulIf",
															"src": "6095:52:11"
														},
														{
															"nativeSrc": "6156:37:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6156:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6183:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6183:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6170:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6170:12:11"
																},
																"nativeSrc": "6170:23:11",
																"nodeType": "YulFunctionCall",
																"src": "6170:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6160:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6160:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6202:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6202:28:11",
															"value": {
																"kind": "number",
																"nativeSrc": "6212:18:11",
																"nodeType": "YulLiteral",
																"src": "6212:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6206:2:11",
																	"nodeType": "YulTypedName",
																	"src": "6206:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6257:16:11",
																"nodeType": "YulBlock",
																"src": "6257:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6266:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6266:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6269:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6269:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6259:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6259:6:11"
																			},
																			"nativeSrc": "6259:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6259:12:11"
																		},
																		"nativeSrc": "6259:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6259:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6245:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6245:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6253:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "6253:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6242:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6242:2:11"
																},
																"nativeSrc": "6242:14:11",
																"nodeType": "YulFunctionCall",
																"src": "6242:14:11"
															},
															"nativeSrc": "6239:34:11",
															"nodeType": "YulIf",
															"src": "6239:34:11"
														},
														{
															"nativeSrc": "6282:60:11",
															"nodeType": "YulAssignment",
															"src": "6282:60:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6314:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6314:9:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6325:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6325:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6310:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6310:3:11"
																		},
																		"nativeSrc": "6310:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6310:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6334:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "6334:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "6292:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6292:17:11"
																},
																"nativeSrc": "6292:50:11",
																"nodeType": "YulFunctionCall",
																"src": "6292:50:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6282:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6282:6:11"
																}
															]
														},
														{
															"nativeSrc": "6351:48:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6351:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6384:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6384:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6395:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6395:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6380:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6380:3:11"
																		},
																		"nativeSrc": "6380:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6380:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6367:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6367:12:11"
																},
																"nativeSrc": "6367:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6367:32:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "6355:8:11",
																	"nodeType": "YulTypedName",
																	"src": "6355:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6428:16:11",
																"nodeType": "YulBlock",
																"src": "6428:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6437:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6437:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6440:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6440:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6430:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6430:6:11"
																			},
																			"nativeSrc": "6430:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6430:12:11"
																		},
																		"nativeSrc": "6430:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6430:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "6414:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6414:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6424:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "6424:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6411:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6411:2:11"
																},
																"nativeSrc": "6411:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6411:16:11"
															},
															"nativeSrc": "6408:36:11",
															"nodeType": "YulIf",
															"src": "6408:36:11"
														},
														{
															"nativeSrc": "6453:79:11",
															"nodeType": "YulAssignment",
															"src": "6453:79:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6502:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6502:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "6513:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "6513:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6498:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6498:3:11"
																		},
																		"nativeSrc": "6498:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6498:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6524:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "6524:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_ArtPieceMetadata",
																	"nativeSrc": "6463:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "6463:34:11"
																},
																"nativeSrc": "6463:69:11",
																"nodeType": "YulFunctionCall",
																"src": "6463:69:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6453:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6453:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_struct$_ArtPieceMetadata_$2034_memory_ptr",
												"nativeSrc": "5954:584:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6043:9:11",
														"nodeType": "YulTypedName",
														"src": "6043:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6054:7:11",
														"nodeType": "YulTypedName",
														"src": "6054:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6066:6:11",
														"nodeType": "YulTypedName",
														"src": "6066:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6074:6:11",
														"nodeType": "YulTypedName",
														"src": "6074:6:11",
														"type": ""
													}
												],
												"src": "5954:584:11"
											},
											{
												"body": {
													"nativeSrc": "6613:216:11",
													"nodeType": "YulBlock",
													"src": "6613:216:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6659:16:11",
																"nodeType": "YulBlock",
																"src": "6659:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6668:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6668:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6671:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6671:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6661:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6661:6:11"
																			},
																			"nativeSrc": "6661:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6661:12:11"
																		},
																		"nativeSrc": "6661:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6661:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6634:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6634:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6643:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6643:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6630:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6630:3:11"
																		},
																		"nativeSrc": "6630:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6630:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6655:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6655:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6626:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6626:3:11"
																},
																"nativeSrc": "6626:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6626:32:11"
															},
															"nativeSrc": "6623:52:11",
															"nodeType": "YulIf",
															"src": "6623:52:11"
														},
														{
															"nativeSrc": "6684:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6684:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6710:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6710:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6697:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6697:12:11"
																},
																"nativeSrc": "6697:23:11",
																"nodeType": "YulFunctionCall",
																"src": "6697:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6688:5:11",
																	"nodeType": "YulTypedName",
																	"src": "6688:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6783:16:11",
																"nodeType": "YulBlock",
																"src": "6783:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6792:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6792:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6795:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6795:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6785:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6785:6:11"
																			},
																			"nativeSrc": "6785:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6785:12:11"
																		},
																		"nativeSrc": "6785:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6785:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6742:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6742:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6753:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6753:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6768:3:11",
																										"nodeType": "YulLiteral",
																										"src": "6768:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6773:1:11",
																										"nodeType": "YulLiteral",
																										"src": "6773:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "6764:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "6764:3:11"
																								},
																								"nativeSrc": "6764:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6764:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6777:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6777:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6760:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6760:3:11"
																						},
																						"nativeSrc": "6760:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6760:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6749:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6749:3:11"
																				},
																				"nativeSrc": "6749:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6749:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6739:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6739:2:11"
																		},
																		"nativeSrc": "6739:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6739:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6732:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6732:6:11"
																},
																"nativeSrc": "6732:50:11",
																"nodeType": "YulFunctionCall",
																"src": "6732:50:11"
															},
															"nativeSrc": "6729:70:11",
															"nodeType": "YulIf",
															"src": "6729:70:11"
														},
														{
															"nativeSrc": "6808:15:11",
															"nodeType": "YulAssignment",
															"src": "6808:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "6818:5:11",
																"nodeType": "YulIdentifier",
																"src": "6818:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6808:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6808:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6543:286:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6579:9:11",
														"nodeType": "YulTypedName",
														"src": "6579:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6590:7:11",
														"nodeType": "YulTypedName",
														"src": "6590:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6602:6:11",
														"nodeType": "YulTypedName",
														"src": "6602:6:11",
														"type": ""
													}
												],
												"src": "6543:286:11"
											},
											{
												"body": {
													"nativeSrc": "6889:325:11",
													"nodeType": "YulBlock",
													"src": "6889:325:11",
													"statements": [
														{
															"nativeSrc": "6899:22:11",
															"nodeType": "YulAssignment",
															"src": "6899:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6913:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6913:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6916:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6916:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6909:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6909:3:11"
																},
																"nativeSrc": "6909:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6909:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6899:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6899:6:11"
																}
															]
														},
														{
															"nativeSrc": "6930:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6930:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6960:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6960:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6966:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6966:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6956:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:11"
																},
																"nativeSrc": "6956:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6956:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6934:18:11",
																	"nodeType": "YulTypedName",
																	"src": "6934:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7007:31:11",
																"nodeType": "YulBlock",
																"src": "7007:31:11",
																"statements": [
																	{
																		"nativeSrc": "7009:27:11",
																		"nodeType": "YulAssignment",
																		"src": "7009:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7023:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "7023:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7031:4:11",
																					"nodeType": "YulLiteral",
																					"src": "7031:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7019:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7019:3:11"
																			},
																			"nativeSrc": "7019:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7019:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7009:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7009:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6987:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6987:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6980:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6980:6:11"
																},
																"nativeSrc": "6980:26:11",
																"nodeType": "YulFunctionCall",
																"src": "6980:26:11"
															},
															"nativeSrc": "6977:61:11",
															"nodeType": "YulIf",
															"src": "6977:61:11"
														},
														{
															"body": {
																"nativeSrc": "7097:111:11",
																"nodeType": "YulBlock",
																"src": "7097:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7118:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7118:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7125:3:11",
																							"nodeType": "YulLiteral",
																							"src": "7125:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7130:10:11",
																							"nodeType": "YulLiteral",
																							"src": "7130:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7121:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "7121:3:11"
																					},
																					"nativeSrc": "7121:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7121:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7111:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7111:6:11"
																			},
																			"nativeSrc": "7111:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7111:31:11"
																		},
																		"nativeSrc": "7111:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7111:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7162:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7162:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7165:4:11",
																					"nodeType": "YulLiteral",
																					"src": "7165:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7155:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7155:6:11"
																			},
																			"nativeSrc": "7155:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7155:15:11"
																		},
																		"nativeSrc": "7155:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7155:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7190:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7190:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7193:4:11",
																					"nodeType": "YulLiteral",
																					"src": "7193:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7183:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7183:6:11"
																			},
																			"nativeSrc": "7183:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7183:15:11"
																		},
																		"nativeSrc": "7183:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7183:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7053:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "7053:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7076:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7076:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7084:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7084:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7073:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7073:2:11"
																		},
																		"nativeSrc": "7073:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7073:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7050:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7050:2:11"
																},
																"nativeSrc": "7050:38:11",
																"nodeType": "YulFunctionCall",
																"src": "7050:38:11"
															},
															"nativeSrc": "7047:161:11",
															"nodeType": "YulIf",
															"src": "7047:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6834:380:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6869:4:11",
														"nodeType": "YulTypedName",
														"src": "6869:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6878:6:11",
														"nodeType": "YulTypedName",
														"src": "6878:6:11",
														"type": ""
													}
												],
												"src": "6834:380:11"
											},
											{
												"body": {
													"nativeSrc": "7275:65:11",
													"nodeType": "YulBlock",
													"src": "7275:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7292:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7292:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "7295:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7295:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7285:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7285:6:11"
																},
																"nativeSrc": "7285:14:11",
																"nodeType": "YulFunctionCall",
																"src": "7285:14:11"
															},
															"nativeSrc": "7285:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "7285:14:11"
														},
														{
															"nativeSrc": "7308:26:11",
															"nodeType": "YulAssignment",
															"src": "7308:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7326:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7326:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7329:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7329:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "7316:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "7316:9:11"
																},
																"nativeSrc": "7316:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7316:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7308:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7308:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "7219:121:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7258:3:11",
														"nodeType": "YulTypedName",
														"src": "7258:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7266:4:11",
														"nodeType": "YulTypedName",
														"src": "7266:4:11",
														"type": ""
													}
												],
												"src": "7219:121:11"
											},
											{
												"body": {
													"nativeSrc": "7403:665:11",
													"nodeType": "YulBlock",
													"src": "7403:665:11",
													"statements": [
														{
															"nativeSrc": "7413:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7413:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7436:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7436:5:11"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "7430:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7430:5:11"
																},
																"nativeSrc": "7430:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7430:12:11"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "7417:9:11",
																	"nodeType": "YulTypedName",
																	"src": "7417:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7451:50:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7451:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "7491:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7491:9:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7465:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "7465:25:11"
																},
																"nativeSrc": "7465:36:11",
																"nodeType": "YulFunctionCall",
																"src": "7465:36:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7455:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7455:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7510:11:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7510:11:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7520:1:11",
																"nodeType": "YulLiteral",
																"src": "7520:1:11",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7514:2:11",
																	"nodeType": "YulTypedName",
																	"src": "7514:2:11",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7570:126:11",
																		"nodeType": "YulBlock",
																		"src": "7570:126:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "7591:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "7591:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "7600:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "7600:9:11"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "7615:3:11",
																											"nodeType": "YulLiteral",
																											"src": "7615:3:11",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "7611:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "7611:3:11"
																									},
																									"nativeSrc": "7611:8:11",
																									"nodeType": "YulFunctionCall",
																									"src": "7611:8:11"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "7596:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "7596:3:11"
																							},
																							"nativeSrc": "7596:24:11",
																							"nodeType": "YulFunctionCall",
																							"src": "7596:24:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "7584:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7584:6:11"
																					},
																					"nativeSrc": "7584:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7584:37:11"
																				},
																				"nativeSrc": "7584:37:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "7584:37:11"
																			},
																			{
																				"nativeSrc": "7634:52:11",
																				"nodeType": "YulAssignment",
																				"src": "7634:52:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "7645:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "7645:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "7654:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "7654:6:11"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "7676:6:11",
																													"nodeType": "YulIdentifier",
																													"src": "7676:6:11"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "7669:6:11",
																												"nodeType": "YulIdentifier",
																												"src": "7669:6:11"
																											},
																											"nativeSrc": "7669:14:11",
																											"nodeType": "YulFunctionCall",
																											"src": "7669:14:11"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "7662:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "7662:6:11"
																									},
																									"nativeSrc": "7662:22:11",
																									"nodeType": "YulFunctionCall",
																									"src": "7662:22:11"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "7650:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "7650:3:11"
																							},
																							"nativeSrc": "7650:35:11",
																							"nodeType": "YulFunctionCall",
																							"src": "7650:35:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7641:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "7641:3:11"
																					},
																					"nativeSrc": "7641:45:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7641:45:11"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "7634:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "7634:3:11"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "7563:133:11",
																	"nodeType": "YulCase",
																	"src": "7563:133:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7568:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7568:1:11",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7712:350:11",
																		"nodeType": "YulBlock",
																		"src": "7712:350:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7733:1:11",
																							"nodeType": "YulLiteral",
																							"src": "7733:1:11",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value",
																							"nativeSrc": "7736:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "7736:5:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "7726:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7726:6:11"
																					},
																					"nativeSrc": "7726:16:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7726:16:11"
																				},
																				"nativeSrc": "7726:16:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "7726:16:11"
																			},
																			{
																				"nativeSrc": "7755:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7755:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7765:4:11",
																					"nodeType": "YulLiteral",
																					"src": "7765:4:11",
																					"type": "",
																					"value": "0x20"
																				},
																				"variables": [
																					{
																						"name": "_2",
																						"nativeSrc": "7759:2:11",
																						"nodeType": "YulTypedName",
																						"src": "7759:2:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7782:33:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7782:33:11",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7807:1:11",
																							"nodeType": "YulLiteral",
																							"src": "7807:1:11",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7810:4:11",
																							"nodeType": "YulLiteral",
																							"src": "7810:4:11",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nativeSrc": "7797:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7797:9:11"
																					},
																					"nativeSrc": "7797:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7797:18:11"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "7786:7:11",
																						"nodeType": "YulTypedName",
																						"src": "7786:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7828:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7828:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7837:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7837:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7832:1:11",
																						"nodeType": "YulTypedName",
																						"src": "7832:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7905:111:11",
																					"nodeType": "YulBlock",
																					"src": "7905:111:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "7934:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "7934:3:11"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "7939:1:11",
																												"nodeType": "YulIdentifier",
																												"src": "7939:1:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7930:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "7930:3:11"
																										},
																										"nativeSrc": "7930:11:11",
																										"nodeType": "YulFunctionCall",
																										"src": "7930:11:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "7949:7:11",
																												"nodeType": "YulIdentifier",
																												"src": "7949:7:11"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "7943:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "7943:5:11"
																										},
																										"nativeSrc": "7943:14:11",
																										"nodeType": "YulFunctionCall",
																										"src": "7943:14:11"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "7923:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "7923:6:11"
																								},
																								"nativeSrc": "7923:35:11",
																								"nodeType": "YulFunctionCall",
																								"src": "7923:35:11"
																							},
																							"nativeSrc": "7923:35:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "7923:35:11"
																						},
																						{
																							"nativeSrc": "7975:27:11",
																							"nodeType": "YulAssignment",
																							"src": "7975:27:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "7990:7:11",
																										"nodeType": "YulIdentifier",
																										"src": "7990:7:11"
																									},
																									{
																										"name": "_1",
																										"nativeSrc": "7999:2:11",
																										"nodeType": "YulIdentifier",
																										"src": "7999:2:11"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7986:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "7986:3:11"
																								},
																								"nativeSrc": "7986:16:11",
																								"nodeType": "YulFunctionCall",
																								"src": "7986:16:11"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "7975:7:11",
																									"nodeType": "YulIdentifier",
																									"src": "7975:7:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7862:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "7862:1:11"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "7865:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "7865:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7859:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "7859:2:11"
																					},
																					"nativeSrc": "7859:13:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7859:13:11"
																				},
																				"nativeSrc": "7851:165:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7873:19:11",
																					"nodeType": "YulBlock",
																					"src": "7873:19:11",
																					"statements": [
																						{
																							"nativeSrc": "7875:15:11",
																							"nodeType": "YulAssignment",
																							"src": "7875:15:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7884:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "7884:1:11"
																									},
																									{
																										"name": "_2",
																										"nativeSrc": "7887:2:11",
																										"nodeType": "YulIdentifier",
																										"src": "7887:2:11"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7880:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "7880:3:11"
																								},
																								"nativeSrc": "7880:10:11",
																								"nodeType": "YulFunctionCall",
																								"src": "7880:10:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7875:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "7875:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7855:3:11",
																					"nodeType": "YulBlock",
																					"src": "7855:3:11",
																					"statements": []
																				},
																				"src": "7851:165:11"
																			},
																			{
																				"nativeSrc": "8029:23:11",
																				"nodeType": "YulAssignment",
																				"src": "8029:23:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "8040:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "8040:3:11"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "8045:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "8045:6:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8036:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "8036:3:11"
																					},
																					"nativeSrc": "8036:16:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8036:16:11"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "8029:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "8029:3:11"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "7705:357:11",
																	"nodeType": "YulCase",
																	"src": "7705:357:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7710:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7710:1:11",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "7541:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7541:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7552:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7552:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7537:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7537:3:11"
																},
																"nativeSrc": "7537:17:11",
																"nodeType": "YulFunctionCall",
																"src": "7537:17:11"
															},
															"nativeSrc": "7530:532:11",
															"nodeType": "YulSwitch",
															"src": "7530:532:11"
														}
													]
												},
												"name": "abi_encode_string_storage",
												"nativeSrc": "7345:723:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7380:5:11",
														"nodeType": "YulTypedName",
														"src": "7380:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7387:3:11",
														"nodeType": "YulTypedName",
														"src": "7387:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7395:3:11",
														"nodeType": "YulTypedName",
														"src": "7395:3:11",
														"type": ""
													}
												],
												"src": "7345:723:11"
											},
											{
												"body": {
													"nativeSrc": "8358:245:11",
													"nodeType": "YulBlock",
													"src": "8358:245:11",
													"statements": [
														{
															"nativeSrc": "8368:48:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8368:48:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8404:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8404:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8412:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8412:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_storage",
																	"nativeSrc": "8378:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "8378:25:11"
																},
																"nativeSrc": "8378:38:11",
																"nodeType": "YulFunctionCall",
																"src": "8378:38:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8372:2:11",
																	"nodeType": "YulTypedName",
																	"src": "8372:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "8432:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "8432:2:11"
																	},
																	{
																		"hexValue": "20",
																		"kind": "string",
																		"nativeSrc": "8436:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8436:3:11",
																		"type": "",
																		"value": " "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8425:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:11"
																},
																"nativeSrc": "8425:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8425:15:11"
															},
															"nativeSrc": "8425:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8425:15:11"
														},
														{
															"nativeSrc": "8449:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8449:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8469:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8469:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8463:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8463:5:11"
																},
																"nativeSrc": "8463:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8463:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8453:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8453:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8524:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8524:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8532:4:11",
																				"nodeType": "YulLiteral",
																				"src": "8532:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8520:3:11"
																		},
																		"nativeSrc": "8520:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8520:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8543:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "8543:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8547:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8547:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8539:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8539:3:11"
																		},
																		"nativeSrc": "8539:10:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8539:10:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8551:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8551:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8485:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "8485:34:11"
																},
																"nativeSrc": "8485:73:11",
																"nodeType": "YulFunctionCall",
																"src": "8485:73:11"
															},
															"nativeSrc": "8485:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "8485:73:11"
														},
														{
															"nativeSrc": "8567:30:11",
															"nodeType": "YulAssignment",
															"src": "8567:30:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8582:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "8582:2:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8586:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8586:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8578:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:11"
																		},
																		"nativeSrc": "8578:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8578:15:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8595:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8595:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8574:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8574:3:11"
																},
																"nativeSrc": "8574:23:11",
																"nodeType": "YulFunctionCall",
																"src": "8574:23:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8567:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8567:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8073:530:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8326:3:11",
														"nodeType": "YulTypedName",
														"src": "8326:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8331:6:11",
														"nodeType": "YulTypedName",
														"src": "8331:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8339:6:11",
														"nodeType": "YulTypedName",
														"src": "8339:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8350:3:11",
														"nodeType": "YulTypedName",
														"src": "8350:3:11",
														"type": ""
													}
												],
												"src": "8073:530:11"
											},
											{
												"body": {
													"nativeSrc": "8792:205:11",
													"nodeType": "YulBlock",
													"src": "8792:205:11",
													"statements": [
														{
															"nativeSrc": "8802:48:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8802:48:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8838:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8838:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8846:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8846:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_storage",
																	"nativeSrc": "8812:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "8812:25:11"
																},
																"nativeSrc": "8812:38:11",
																"nodeType": "YulFunctionCall",
																"src": "8812:38:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8806:2:11",
																	"nodeType": "YulTypedName",
																	"src": "8806:2:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8859:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8859:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8879:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8879:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8873:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8873:5:11"
																},
																"nativeSrc": "8873:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8873:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8863:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8863:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8934:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8934:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8942:4:11",
																				"nodeType": "YulLiteral",
																				"src": "8942:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8930:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8930:3:11"
																		},
																		"nativeSrc": "8930:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8930:17:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "8949:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "8949:2:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8953:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8953:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8895:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "8895:34:11"
																},
																"nativeSrc": "8895:65:11",
																"nodeType": "YulFunctionCall",
																"src": "8895:65:11"
															},
															"nativeSrc": "8895:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "8895:65:11"
														},
														{
															"nativeSrc": "8969:22:11",
															"nodeType": "YulAssignment",
															"src": "8969:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "8980:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "8980:2:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8984:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8984:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8976:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8976:3:11"
																},
																"nativeSrc": "8976:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8976:15:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8969:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8969:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8608:389:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8760:3:11",
														"nodeType": "YulTypedName",
														"src": "8760:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8765:6:11",
														"nodeType": "YulTypedName",
														"src": "8765:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8773:6:11",
														"nodeType": "YulTypedName",
														"src": "8773:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8784:3:11",
														"nodeType": "YulTypedName",
														"src": "8784:3:11",
														"type": ""
													}
												],
												"src": "8608:389:11"
											},
											{
												"body": {
													"nativeSrc": "9083:437:11",
													"nodeType": "YulBlock",
													"src": "9083:437:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9116:398:11",
																"nodeType": "YulBlock",
																"src": "9116:398:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9137:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9137:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "9140:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "9140:5:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9130:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9130:6:11"
																			},
																			"nativeSrc": "9130:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9130:16:11"
																		},
																		"nativeSrc": "9130:16:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9130:16:11"
																	},
																	{
																		"nativeSrc": "9159:30:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9159:30:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9181:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9181:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9184:4:11",
																					"nodeType": "YulLiteral",
																					"src": "9184:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "9171:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:11"
																			},
																			"nativeSrc": "9171:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9171:18:11"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "9163:4:11",
																				"nodeType": "YulTypedName",
																				"src": "9163:4:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9202:57:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9202:57:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "9225:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "9225:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9235:1:11",
																							"nodeType": "YulLiteral",
																							"src": "9235:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "9242:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "9242:10:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9254:2:11",
																									"nodeType": "YulLiteral",
																									"src": "9254:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9238:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "9238:3:11"
																							},
																							"nativeSrc": "9238:19:11",
																							"nodeType": "YulFunctionCall",
																							"src": "9238:19:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "9231:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9231:3:11"
																					},
																					"nativeSrc": "9231:27:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9231:27:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9221:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "9221:3:11"
																			},
																			"nativeSrc": "9221:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9221:38:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "9206:11:11",
																				"nodeType": "YulTypedName",
																				"src": "9206:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9296:23:11",
																			"nodeType": "YulBlock",
																			"src": "9296:23:11",
																			"statements": [
																				{
																					"nativeSrc": "9298:19:11",
																					"nodeType": "YulAssignment",
																					"src": "9298:19:11",
																					"value": {
																						"name": "data",
																						"nativeSrc": "9313:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "9313:4:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "9298:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "9298:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "9278:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "9278:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9290:4:11",
																					"nodeType": "YulLiteral",
																					"src": "9290:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9275:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "9275:2:11"
																			},
																			"nativeSrc": "9275:20:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9275:20:11"
																		},
																		"nativeSrc": "9272:47:11",
																		"nodeType": "YulIf",
																		"src": "9272:47:11"
																	},
																	{
																		"nativeSrc": "9332:41:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9332:41:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "9346:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "9346:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9356:1:11",
																							"nodeType": "YulLiteral",
																							"src": "9356:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "9363:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "9363:3:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9368:2:11",
																									"nodeType": "YulLiteral",
																									"src": "9368:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9359:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "9359:3:11"
																							},
																							"nativeSrc": "9359:12:11",
																							"nodeType": "YulFunctionCall",
																							"src": "9359:12:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "9352:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9352:3:11"
																					},
																					"nativeSrc": "9352:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9352:20:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9342:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "9342:3:11"
																			},
																			"nativeSrc": "9342:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9342:31:11"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "9336:2:11",
																				"nodeType": "YulTypedName",
																				"src": "9336:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9386:24:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9386:24:11",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "9399:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "9399:11:11"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "9390:5:11",
																				"nodeType": "YulTypedName",
																				"src": "9390:5:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9484:20:11",
																			"nodeType": "YulBlock",
																			"src": "9484:20:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9493:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "9493:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9500:1:11",
																								"nodeType": "YulLiteral",
																								"src": "9500:1:11",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "9486:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "9486:6:11"
																						},
																						"nativeSrc": "9486:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9486:16:11"
																					},
																					"nativeSrc": "9486:16:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "9486:16:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "9434:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "9434:5:11"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "9441:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "9441:2:11"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9431:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "9431:2:11"
																			},
																			"nativeSrc": "9431:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9431:13:11"
																		},
																		"nativeSrc": "9423:81:11",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "9445:26:11",
																			"nodeType": "YulBlock",
																			"src": "9445:26:11",
																			"statements": [
																				{
																					"nativeSrc": "9447:22:11",
																					"nodeType": "YulAssignment",
																					"src": "9447:22:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9460:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "9460:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9467:1:11",
																								"nodeType": "YulLiteral",
																								"src": "9467:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "9456:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9456:3:11"
																						},
																						"nativeSrc": "9456:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9456:13:11"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "9447:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "9447:5:11"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "9427:3:11",
																			"nodeType": "YulBlock",
																			"src": "9427:3:11",
																			"statements": []
																		},
																		"src": "9423:81:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "9099:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9099:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9104:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9104:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9096:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9096:2:11"
																},
																"nativeSrc": "9096:11:11",
																"nodeType": "YulFunctionCall",
																"src": "9096:11:11"
															},
															"nativeSrc": "9093:421:11",
															"nodeType": "YulIf",
															"src": "9093:421:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "9002:518:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "9055:5:11",
														"nodeType": "YulTypedName",
														"src": "9055:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9062:3:11",
														"nodeType": "YulTypedName",
														"src": "9062:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "9067:10:11",
														"nodeType": "YulTypedName",
														"src": "9067:10:11",
														"type": ""
													}
												],
												"src": "9002:518:11"
											},
											{
												"body": {
													"nativeSrc": "9610:81:11",
													"nodeType": "YulBlock",
													"src": "9610:81:11",
													"statements": [
														{
															"nativeSrc": "9620:65:11",
															"nodeType": "YulAssignment",
															"src": "9620:65:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9635:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9635:4:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9653:1:11",
																										"nodeType": "YulLiteral",
																										"src": "9653:1:11",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "9656:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "9656:3:11"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "9649:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "9649:3:11"
																								},
																								"nativeSrc": "9649:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9649:11:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9666:1:11",
																										"nodeType": "YulLiteral",
																										"src": "9666:1:11",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "9662:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "9662:3:11"
																								},
																								"nativeSrc": "9662:6:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9662:6:11"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "9645:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9645:3:11"
																						},
																						"nativeSrc": "9645:24:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9645:24:11"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "9641:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9641:3:11"
																				},
																				"nativeSrc": "9641:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9641:29:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9631:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9631:3:11"
																		},
																		"nativeSrc": "9631:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9631:40:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9677:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9677:1:11",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "9680:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "9680:3:11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9673:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9673:3:11"
																		},
																		"nativeSrc": "9673:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9673:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9628:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9628:2:11"
																},
																"nativeSrc": "9628:57:11",
																"nodeType": "YulFunctionCall",
																"src": "9628:57:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "9620:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9620:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "9525:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9587:4:11",
														"nodeType": "YulTypedName",
														"src": "9587:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9593:3:11",
														"nodeType": "YulTypedName",
														"src": "9593:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "9601:4:11",
														"nodeType": "YulTypedName",
														"src": "9601:4:11",
														"type": ""
													}
												],
												"src": "9525:166:11"
											},
											{
												"body": {
													"nativeSrc": "9799:1095:11",
													"nodeType": "YulBlock",
													"src": "9799:1095:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9840:22:11",
																"nodeType": "YulBlock",
																"src": "9840:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9842:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9842:16:11"
																			},
																			"nativeSrc": "9842:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9842:18:11"
																		},
																		"nativeSrc": "9842:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9842:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "9815:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9815:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9820:18:11",
																		"nodeType": "YulLiteral",
																		"src": "9820:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9812:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9812:2:11"
																},
																"nativeSrc": "9812:27:11",
																"nodeType": "YulFunctionCall",
																"src": "9812:27:11"
															},
															"nativeSrc": "9809:53:11",
															"nodeType": "YulIf",
															"src": "9809:53:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9915:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9915:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "9953:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "9953:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "9947:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "9947:5:11"
																				},
																				"nativeSrc": "9947:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9947:11:11"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "9921:25:11",
																			"nodeType": "YulIdentifier",
																			"src": "9921:25:11"
																		},
																		"nativeSrc": "9921:38:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9921:38:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "9961:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9961:3:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "9871:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9871:43:11"
																},
																"nativeSrc": "9871:94:11",
																"nodeType": "YulFunctionCall",
																"src": "9871:94:11"
															},
															"nativeSrc": "9871:94:11",
															"nodeType": "YulExpressionStatement",
															"src": "9871:94:11"
														},
														{
															"nativeSrc": "9974:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "9974:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "9991:1:11",
																"nodeType": "YulLiteral",
																"src": "9991:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9978:9:11",
																	"nodeType": "YulTypedName",
																	"src": "9978:9:11",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10035:601:11",
																		"nodeType": "YulBlock",
																		"src": "10035:601:11",
																		"statements": [
																			{
																				"nativeSrc": "10049:32:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10049:32:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "len",
																							"nativeSrc": "10068:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10068:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "10077:2:11",
																									"nodeType": "YulLiteral",
																									"src": "10077:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "10073:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "10073:3:11"
																							},
																							"nativeSrc": "10073:7:11",
																							"nodeType": "YulFunctionCall",
																							"src": "10073:7:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "10064:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "10064:3:11"
																					},
																					"nativeSrc": "10064:17:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10064:17:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "10053:7:11",
																						"nodeType": "YulTypedName",
																						"src": "10053:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10094:49:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10094:49:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10138:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "10138:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "10108:29:11",
																						"nodeType": "YulIdentifier",
																						"src": "10108:29:11"
																					},
																					"nativeSrc": "10108:35:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10108:35:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "10098:6:11",
																						"nodeType": "YulTypedName",
																						"src": "10098:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10156:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10156:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10165:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10165:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "10160:1:11",
																						"nodeType": "YulTypedName",
																						"src": "10160:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10236:172:11",
																					"nodeType": "YulBlock",
																					"src": "10236:172:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10261:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "10261:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "10286:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "10286:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "10291:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "10291:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "10282:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "10282:3:11"
																												},
																												"nativeSrc": "10282:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "10282:19:11"
																											}
																										],
																										"functionName": {
																											"name": "calldataload",
																											"nativeSrc": "10269:12:11",
																											"nodeType": "YulIdentifier",
																											"src": "10269:12:11"
																										},
																										"nativeSrc": "10269:33:11",
																										"nodeType": "YulFunctionCall",
																										"src": "10269:33:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10254:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "10254:6:11"
																								},
																								"nativeSrc": "10254:49:11",
																								"nodeType": "YulFunctionCall",
																								"src": "10254:49:11"
																							},
																							"nativeSrc": "10254:49:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "10254:49:11"
																						},
																						{
																							"nativeSrc": "10320:24:11",
																							"nodeType": "YulAssignment",
																							"src": "10320:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10334:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "10334:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10342:1:11",
																										"nodeType": "YulLiteral",
																										"src": "10342:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10330:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "10330:3:11"
																								},
																								"nativeSrc": "10330:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "10330:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "10320:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "10320:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "10361:33:11",
																							"nodeType": "YulAssignment",
																							"src": "10361:33:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "10378:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "10378:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10389:4:11",
																										"nodeType": "YulLiteral",
																										"src": "10389:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10374:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "10374:3:11"
																								},
																								"nativeSrc": "10374:20:11",
																								"nodeType": "YulFunctionCall",
																								"src": "10374:20:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "10361:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "10361:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "10190:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "10190:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10193:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "10193:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10187:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "10187:2:11"
																					},
																					"nativeSrc": "10187:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10187:14:11"
																				},
																				"nativeSrc": "10179:229:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "10202:21:11",
																					"nodeType": "YulBlock",
																					"src": "10202:21:11",
																					"statements": [
																						{
																							"nativeSrc": "10204:17:11",
																							"nodeType": "YulAssignment",
																							"src": "10204:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "10213:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "10213:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10216:4:11",
																										"nodeType": "YulLiteral",
																										"src": "10216:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10209:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "10209:3:11"
																								},
																								"nativeSrc": "10209:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "10209:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "10204:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "10204:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "10183:3:11",
																					"nodeType": "YulBlock",
																					"src": "10183:3:11",
																					"statements": []
																				},
																				"src": "10179:229:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "10453:127:11",
																					"nodeType": "YulBlock",
																					"src": "10453:127:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10478:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "10478:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"name": "src",
																																"nativeSrc": "10507:3:11",
																																"nodeType": "YulIdentifier",
																																"src": "10507:3:11"
																															},
																															{
																																"name": "srcOffset",
																																"nativeSrc": "10512:9:11",
																																"nodeType": "YulIdentifier",
																																"src": "10512:9:11"
																															}
																														],
																														"functionName": {
																															"name": "add",
																															"nativeSrc": "10503:3:11",
																															"nodeType": "YulIdentifier",
																															"src": "10503:3:11"
																														},
																														"nativeSrc": "10503:19:11",
																														"nodeType": "YulFunctionCall",
																														"src": "10503:19:11"
																													}
																												],
																												"functionName": {
																													"name": "calldataload",
																													"nativeSrc": "10490:12:11",
																													"nodeType": "YulIdentifier",
																													"src": "10490:12:11"
																												},
																												"nativeSrc": "10490:33:11",
																												"nodeType": "YulFunctionCall",
																												"src": "10490:33:11"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "10541:1:11",
																																				"nodeType": "YulLiteral",
																																				"src": "10541:1:11",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "len",
																																				"nativeSrc": "10544:3:11",
																																				"nodeType": "YulIdentifier",
																																				"src": "10544:3:11"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "10537:3:11",
																																			"nodeType": "YulIdentifier",
																																			"src": "10537:3:11"
																																		},
																																		"nativeSrc": "10537:11:11",
																																		"nodeType": "YulFunctionCall",
																																		"src": "10537:11:11"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10550:3:11",
																																		"nodeType": "YulLiteral",
																																		"src": "10550:3:11",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "10533:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "10533:3:11"
																																},
																																"nativeSrc": "10533:21:11",
																																"nodeType": "YulFunctionCall",
																																"src": "10533:21:11"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10560:1:11",
																																		"nodeType": "YulLiteral",
																																		"src": "10560:1:11",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "10556:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "10556:3:11"
																																},
																																"nativeSrc": "10556:6:11",
																																"nodeType": "YulFunctionCall",
																																"src": "10556:6:11"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "10529:3:11",
																															"nodeType": "YulIdentifier",
																															"src": "10529:3:11"
																														},
																														"nativeSrc": "10529:34:11",
																														"nodeType": "YulFunctionCall",
																														"src": "10529:34:11"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "10525:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "10525:3:11"
																												},
																												"nativeSrc": "10525:39:11",
																												"nodeType": "YulFunctionCall",
																												"src": "10525:39:11"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "10486:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "10486:3:11"
																										},
																										"nativeSrc": "10486:79:11",
																										"nodeType": "YulFunctionCall",
																										"src": "10486:79:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10471:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "10471:6:11"
																								},
																								"nativeSrc": "10471:95:11",
																								"nodeType": "YulFunctionCall",
																								"src": "10471:95:11"
																							},
																							"nativeSrc": "10471:95:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "10471:95:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10427:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "10427:7:11"
																						},
																						{
																							"name": "len",
																							"nativeSrc": "10436:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10436:3:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10424:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "10424:2:11"
																					},
																					"nativeSrc": "10424:16:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10424:16:11"
																				},
																				"nativeSrc": "10421:159:11",
																				"nodeType": "YulIf",
																				"src": "10421:159:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10600:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "10600:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10614:1:11",
																											"nodeType": "YulLiteral",
																											"src": "10614:1:11",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "len",
																											"nativeSrc": "10617:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "10617:3:11"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "10610:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "10610:3:11"
																									},
																									"nativeSrc": "10610:11:11",
																									"nodeType": "YulFunctionCall",
																									"src": "10610:11:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10623:1:11",
																									"nodeType": "YulLiteral",
																									"src": "10623:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10606:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "10606:3:11"
																							},
																							"nativeSrc": "10606:19:11",
																							"nodeType": "YulFunctionCall",
																							"src": "10606:19:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10593:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10593:6:11"
																					},
																					"nativeSrc": "10593:33:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10593:33:11"
																				},
																				"nativeSrc": "10593:33:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "10593:33:11"
																			}
																		]
																	},
																	"nativeSrc": "10028:608:11",
																	"nodeType": "YulCase",
																	"src": "10028:608:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10033:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10033:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10653:235:11",
																		"nodeType": "YulBlock",
																		"src": "10653:235:11",
																		"statements": [
																			{
																				"nativeSrc": "10667:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10667:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10680:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10671:5:11",
																						"nodeType": "YulTypedName",
																						"src": "10671:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10713:74:11",
																					"nodeType": "YulBlock",
																					"src": "10713:74:11",
																					"statements": [
																						{
																							"nativeSrc": "10731:42:11",
																							"nodeType": "YulAssignment",
																							"src": "10731:42:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10757:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "10757:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10762:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "10762:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10753:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "10753:3:11"
																										},
																										"nativeSrc": "10753:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "10753:19:11"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "10740:12:11",
																									"nodeType": "YulIdentifier",
																									"src": "10740:12:11"
																								},
																								"nativeSrc": "10740:33:11",
																								"nodeType": "YulFunctionCall",
																								"src": "10740:33:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10731:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "10731:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "len",
																					"nativeSrc": "10697:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10697:3:11"
																				},
																				"nativeSrc": "10694:93:11",
																				"nodeType": "YulIf",
																				"src": "10694:93:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10807:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "10807:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10866:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "10866:5:11"
																								},
																								{
																									"name": "len",
																									"nativeSrc": "10873:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "10873:3:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10813:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "10813:52:11"
																							},
																							"nativeSrc": "10813:64:11",
																							"nodeType": "YulFunctionCall",
																							"src": "10813:64:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10800:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10800:6:11"
																					},
																					"nativeSrc": "10800:78:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10800:78:11"
																				},
																				"nativeSrc": "10800:78:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "10800:78:11"
																			}
																		]
																	},
																	"nativeSrc": "10645:243:11",
																	"nodeType": "YulCase",
																	"src": "10645:243:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "10011:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10011:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10016:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10016:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10008:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10008:2:11"
																},
																"nativeSrc": "10008:11:11",
																"nodeType": "YulFunctionCall",
																"src": "10008:11:11"
															},
															"nativeSrc": "10001:887:11",
															"nodeType": "YulSwitch",
															"src": "10001:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
												"nativeSrc": "9696:1198:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9779:4:11",
														"nodeType": "YulTypedName",
														"src": "9779:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "9785:3:11",
														"nodeType": "YulTypedName",
														"src": "9785:3:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9790:3:11",
														"nodeType": "YulTypedName",
														"src": "9790:3:11",
														"type": ""
													}
												],
												"src": "9696:1198:11"
											},
											{
												"body": {
													"nativeSrc": "11030:259:11",
													"nodeType": "YulBlock",
													"src": "11030:259:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11047:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11047:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11058:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11058:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11040:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11040:6:11"
																},
																"nativeSrc": "11040:21:11",
																"nodeType": "YulFunctionCall",
																"src": "11040:21:11"
															},
															"nativeSrc": "11040:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "11040:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11081:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11081:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11092:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11092:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11077:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11077:3:11"
																		},
																		"nativeSrc": "11077:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11077:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11097:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11097:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11070:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11070:6:11"
																},
																"nativeSrc": "11070:34:11",
																"nodeType": "YulFunctionCall",
																"src": "11070:34:11"
															},
															"nativeSrc": "11070:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "11070:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11130:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11130:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11141:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11141:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11126:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11126:3:11"
																		},
																		"nativeSrc": "11126:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11126:18:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11146:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11146:6:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11154:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11154:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "11113:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "11113:12:11"
																},
																"nativeSrc": "11113:48:11",
																"nodeType": "YulFunctionCall",
																"src": "11113:48:11"
															},
															"nativeSrc": "11113:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "11113:48:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11185:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "11185:9:11"
																					},
																					{
																						"name": "value1",
																						"nativeSrc": "11196:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "11196:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11181:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11181:3:11"
																				},
																				"nativeSrc": "11181:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11181:22:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11205:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11205:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11177:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11177:3:11"
																		},
																		"nativeSrc": "11177:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11177:31:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11210:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11210:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11170:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11170:6:11"
																},
																"nativeSrc": "11170:42:11",
																"nodeType": "YulFunctionCall",
																"src": "11170:42:11"
															},
															"nativeSrc": "11170:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "11170:42:11"
														},
														{
															"nativeSrc": "11221:62:11",
															"nodeType": "YulAssignment",
															"src": "11221:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11237:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11237:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value1",
																								"nativeSrc": "11256:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "11256:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11264:2:11",
																								"nodeType": "YulLiteral",
																								"src": "11264:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "11252:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11252:3:11"
																						},
																						"nativeSrc": "11252:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11252:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11273:2:11",
																								"nodeType": "YulLiteral",
																								"src": "11273:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "11269:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11269:3:11"
																						},
																						"nativeSrc": "11269:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11269:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "11248:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11248:3:11"
																				},
																				"nativeSrc": "11248:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11248:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11233:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11233:3:11"
																		},
																		"nativeSrc": "11233:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11233:45:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11280:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11280:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11229:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11229:3:11"
																},
																"nativeSrc": "11229:54:11",
																"nodeType": "YulFunctionCall",
																"src": "11229:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11221:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11221:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10899:390:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10991:9:11",
														"nodeType": "YulTypedName",
														"src": "10991:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11002:6:11",
														"nodeType": "YulTypedName",
														"src": "11002:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11010:6:11",
														"nodeType": "YulTypedName",
														"src": "11010:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11021:4:11",
														"nodeType": "YulTypedName",
														"src": "11021:4:11",
														"type": ""
													}
												],
												"src": "10899:390:11"
											},
											{
												"body": {
													"nativeSrc": "12082:989:11",
													"nodeType": "YulBlock",
													"src": "12082:989:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12099:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12099:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12108:3:11",
																				"nodeType": "YulLiteral",
																				"src": "12108:3:11",
																				"type": "",
																				"value": "185"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12113:20:11",
																				"nodeType": "YulLiteral",
																				"src": "12113:20:11",
																				"type": "",
																				"value": "0x3d913730b6b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12104:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12104:3:11"
																		},
																		"nativeSrc": "12104:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12104:30:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12092:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12092:6:11"
																},
																"nativeSrc": "12092:43:11",
																"nodeType": "YulFunctionCall",
																"src": "12092:43:11"
															},
															"nativeSrc": "12092:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "12092:43:11"
														},
														{
															"nativeSrc": "12144:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12144:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12164:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12164:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12158:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "12158:5:11"
																},
																"nativeSrc": "12158:13:11",
																"nodeType": "YulFunctionCall",
																"src": "12158:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12148:6:11",
																	"nodeType": "YulTypedName",
																	"src": "12148:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12219:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12219:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12227:4:11",
																				"nodeType": "YulLiteral",
																				"src": "12227:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12215:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12215:3:11"
																		},
																		"nativeSrc": "12215:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12215:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "12238:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "12238:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12243:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12243:1:11",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12234:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12234:3:11"
																		},
																		"nativeSrc": "12234:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12234:11:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12247:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12247:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12180:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "12180:34:11"
																},
																"nativeSrc": "12180:74:11",
																"nodeType": "YulFunctionCall",
																"src": "12180:74:11"
															},
															"nativeSrc": "12180:74:11",
															"nodeType": "YulExpressionStatement",
															"src": "12180:74:11"
														},
														{
															"nativeSrc": "12263:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12263:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12277:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12277:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12282:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12282:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12273:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12273:3:11"
																},
																"nativeSrc": "12273:16:11",
																"nodeType": "YulFunctionCall",
																"src": "12273:16:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12267:2:11",
																	"nodeType": "YulTypedName",
																	"src": "12267:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "12309:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "12309:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12313:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12313:1:11",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12305:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12305:3:11"
																		},
																		"nativeSrc": "12305:10:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12305:10:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12321:3:11",
																				"nodeType": "YulLiteral",
																				"src": "12321:3:11",
																				"type": "",
																				"value": "113"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12326:38:11",
																				"nodeType": "YulLiteral",
																				"src": "12326:38:11",
																				"type": "",
																				"value": "0x111610113232b9b1b934b83a34b7b7111d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12317:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12317:3:11"
																		},
																		"nativeSrc": "12317:48:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12317:48:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12298:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12298:6:11"
																},
																"nativeSrc": "12298:68:11",
																"nodeType": "YulFunctionCall",
																"src": "12298:68:11"
															},
															"nativeSrc": "12298:68:11",
															"nodeType": "YulExpressionStatement",
															"src": "12298:68:11"
														},
														{
															"nativeSrc": "12375:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12375:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12397:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12397:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12391:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "12391:5:11"
																},
																"nativeSrc": "12391:13:11",
																"nodeType": "YulFunctionCall",
																"src": "12391:13:11"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "12379:8:11",
																	"nodeType": "YulTypedName",
																	"src": "12379:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12452:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12452:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12460:4:11",
																				"nodeType": "YulLiteral",
																				"src": "12460:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12448:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12448:3:11"
																		},
																		"nativeSrc": "12448:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12448:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "12471:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "12471:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12475:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12475:2:11",
																				"type": "",
																				"value": "27"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12467:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12467:3:11"
																		},
																		"nativeSrc": "12467:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12467:11:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "12480:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "12480:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12413:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "12413:34:11"
																},
																"nativeSrc": "12413:76:11",
																"nodeType": "YulFunctionCall",
																"src": "12413:76:11"
															},
															"nativeSrc": "12413:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "12413:76:11"
														},
														{
															"nativeSrc": "12498:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12498:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "12512:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "12512:2:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "12516:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "12516:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12508:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12508:3:11"
																},
																"nativeSrc": "12508:17:11",
																"nodeType": "YulFunctionCall",
																"src": "12508:17:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "12502:2:11",
																	"nodeType": "YulTypedName",
																	"src": "12502:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "12545:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "12545:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12549:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12549:2:11",
																				"type": "",
																				"value": "27"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12541:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12541:3:11"
																		},
																		"nativeSrc": "12541:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12541:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12558:3:11",
																				"nodeType": "YulLiteral",
																				"src": "12558:3:11",
																				"type": "",
																				"value": "153"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12563:28:11",
																				"nodeType": "YulLiteral",
																				"src": "12563:28:11",
																				"type": "",
																				"value": "0x1116101134b6b0b3b2911d1011"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12554:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12554:3:11"
																		},
																		"nativeSrc": "12554:38:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12554:38:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12534:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12534:6:11"
																},
																"nativeSrc": "12534:59:11",
																"nodeType": "YulFunctionCall",
																"src": "12534:59:11"
															},
															"nativeSrc": "12534:59:11",
															"nodeType": "YulExpressionStatement",
															"src": "12534:59:11"
														},
														{
															"nativeSrc": "12602:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12602:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12624:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12624:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12618:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "12618:5:11"
																},
																"nativeSrc": "12618:13:11",
																"nodeType": "YulFunctionCall",
																"src": "12618:13:11"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nativeSrc": "12606:8:11",
																	"nodeType": "YulTypedName",
																	"src": "12606:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "12679:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12679:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12687:4:11",
																				"nodeType": "YulLiteral",
																				"src": "12687:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12675:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12675:3:11"
																		},
																		"nativeSrc": "12675:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12675:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "12698:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "12698:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12702:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12702:2:11",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12694:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12694:3:11"
																		},
																		"nativeSrc": "12694:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12694:11:11"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "12707:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "12707:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12640:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "12640:34:11"
																},
																"nativeSrc": "12640:76:11",
																"nodeType": "YulFunctionCall",
																"src": "12640:76:11"
															},
															"nativeSrc": "12640:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "12640:76:11"
														},
														{
															"nativeSrc": "12725:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12725:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "12739:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "12739:2:11"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "12743:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "12743:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12735:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12735:3:11"
																},
																"nativeSrc": "12735:17:11",
																"nodeType": "YulFunctionCall",
																"src": "12735:17:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "12729:2:11",
																	"nodeType": "YulTypedName",
																	"src": "12729:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "12772:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "12772:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12776:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12776:2:11",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12768:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12768:3:11"
																		},
																		"nativeSrc": "12768:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12768:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12785:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12785:2:11",
																				"type": "",
																				"value": "89"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12789:44:11",
																				"nodeType": "YulLiteral",
																				"src": "12789:44:11",
																				"type": "",
																				"value": "0x1116101130b734b6b0ba34b7b72fbab936111d1011"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12781:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12781:3:11"
																		},
																		"nativeSrc": "12781:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12781:53:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12761:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12761:6:11"
																},
																"nativeSrc": "12761:74:11",
																"nodeType": "YulFunctionCall",
																"src": "12761:74:11"
															},
															"nativeSrc": "12761:74:11",
															"nodeType": "YulExpressionStatement",
															"src": "12761:74:11"
														},
														{
															"nativeSrc": "12844:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12844:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12866:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12866:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12860:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "12860:5:11"
																},
																"nativeSrc": "12860:13:11",
																"nodeType": "YulFunctionCall",
																"src": "12860:13:11"
															},
															"variables": [
																{
																	"name": "length_3",
																	"nativeSrc": "12848:8:11",
																	"nodeType": "YulTypedName",
																	"src": "12848:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "12921:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12921:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12929:4:11",
																				"nodeType": "YulLiteral",
																				"src": "12929:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12917:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12917:3:11"
																		},
																		"nativeSrc": "12917:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12917:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "12940:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "12940:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12944:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12944:2:11",
																				"type": "",
																				"value": "61"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12936:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12936:3:11"
																		},
																		"nativeSrc": "12936:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12936:11:11"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "12949:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "12949:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12882:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "12882:34:11"
																},
																"nativeSrc": "12882:76:11",
																"nodeType": "YulFunctionCall",
																"src": "12882:76:11"
															},
															"nativeSrc": "12882:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "12882:76:11"
														},
														{
															"nativeSrc": "12967:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12967:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "12981:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "12981:2:11"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "12985:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "12985:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12977:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12977:3:11"
																},
																"nativeSrc": "12977:17:11",
																"nodeType": "YulFunctionCall",
																"src": "12977:17:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "12971:2:11",
																	"nodeType": "YulTypedName",
																	"src": "12971:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "13014:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "13014:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13018:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13018:2:11",
																				"type": "",
																				"value": "61"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13010:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13010:3:11"
																		},
																		"nativeSrc": "13010:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13010:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13027:3:11",
																				"nodeType": "YulLiteral",
																				"src": "13027:3:11",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13032:4:11",
																				"nodeType": "YulLiteral",
																				"src": "13032:4:11",
																				"type": "",
																				"value": "8829"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13023:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13023:3:11"
																		},
																		"nativeSrc": "13023:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13023:14:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13003:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13003:6:11"
																},
																"nativeSrc": "13003:35:11",
																"nodeType": "YulFunctionCall",
																"src": "13003:35:11"
															},
															"nativeSrc": "13003:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "13003:35:11"
														},
														{
															"nativeSrc": "13047:18:11",
															"nodeType": "YulAssignment",
															"src": "13047:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "13058:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "13058:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13062:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13062:2:11",
																		"type": "",
																		"value": "63"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13054:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13054:3:11"
																},
																"nativeSrc": "13054:11:11",
																"nodeType": "YulFunctionCall",
																"src": "13054:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13047:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13047:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_9780691b4087a1893a28b24020f5f6d0c7583060bd6cfeb54b8284a5bf55f11f_t_string_memory_ptr_t_stringliteral_8d0de490dde571af103e878aa265925a94dd83b4f74e62b617db5ad43a4f76af_t_string_memory_ptr_t_stringliteral_f900c545a58378754ad8b5c331b48c15e2a79c6ef80b3dc97d883d860e9e1c18_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11294:1777:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12034:3:11",
														"nodeType": "YulTypedName",
														"src": "12034:3:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12039:6:11",
														"nodeType": "YulTypedName",
														"src": "12039:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12047:6:11",
														"nodeType": "YulTypedName",
														"src": "12047:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12055:6:11",
														"nodeType": "YulTypedName",
														"src": "12055:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12063:6:11",
														"nodeType": "YulTypedName",
														"src": "12063:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12074:3:11",
														"nodeType": "YulTypedName",
														"src": "12074:3:11",
														"type": ""
													}
												],
												"src": "11294:1777:11"
											},
											{
												"body": {
													"nativeSrc": "13316:221:11",
													"nodeType": "YulBlock",
													"src": "13316:221:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13333:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13333:3:11"
																	},
																	{
																		"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																		"kind": "string",
																		"nativeSrc": "13338:31:11",
																		"nodeType": "YulLiteral",
																		"src": "13338:31:11",
																		"type": "",
																		"value": "data:application/json;base64,"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13326:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13326:6:11"
																},
																"nativeSrc": "13326:44:11",
																"nodeType": "YulFunctionCall",
																"src": "13326:44:11"
															},
															"nativeSrc": "13326:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "13326:44:11"
														},
														{
															"nativeSrc": "13379:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13379:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13399:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13399:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13393:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "13393:5:11"
																},
																"nativeSrc": "13393:13:11",
																"nodeType": "YulFunctionCall",
																"src": "13393:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13383:6:11",
																	"nodeType": "YulTypedName",
																	"src": "13383:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13454:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13454:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13462:4:11",
																				"nodeType": "YulLiteral",
																				"src": "13462:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13450:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13450:3:11"
																		},
																		"nativeSrc": "13450:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13450:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "13473:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13473:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13478:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13478:2:11",
																				"type": "",
																				"value": "29"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13469:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13469:3:11"
																		},
																		"nativeSrc": "13469:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13469:12:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13483:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13483:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13415:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "13415:34:11"
																},
																"nativeSrc": "13415:75:11",
																"nodeType": "YulFunctionCall",
																"src": "13415:75:11"
															},
															"nativeSrc": "13415:75:11",
															"nodeType": "YulExpressionStatement",
															"src": "13415:75:11"
														},
														{
															"nativeSrc": "13499:32:11",
															"nodeType": "YulAssignment",
															"src": "13499:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "13514:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13514:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "13519:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13519:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13510:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13510:3:11"
																		},
																		"nativeSrc": "13510:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13510:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13528:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13528:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13506:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13506:3:11"
																},
																"nativeSrc": "13506:25:11",
																"nodeType": "YulFunctionCall",
																"src": "13506:25:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13499:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13499:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13076:461:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13292:3:11",
														"nodeType": "YulTypedName",
														"src": "13292:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13297:6:11",
														"nodeType": "YulTypedName",
														"src": "13297:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13308:3:11",
														"nodeType": "YulTypedName",
														"src": "13308:3:11",
														"type": ""
													}
												],
												"src": "13076:461:11"
											},
											{
												"body": {
													"nativeSrc": "13574:95:11",
													"nodeType": "YulBlock",
													"src": "13574:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13591:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13591:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13598:3:11",
																				"nodeType": "YulLiteral",
																				"src": "13598:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13603:10:11",
																				"nodeType": "YulLiteral",
																				"src": "13603:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13594:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13594:3:11"
																		},
																		"nativeSrc": "13594:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13594:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13584:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13584:6:11"
																},
																"nativeSrc": "13584:31:11",
																"nodeType": "YulFunctionCall",
																"src": "13584:31:11"
															},
															"nativeSrc": "13584:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "13584:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13631:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13631:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13634:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13634:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13624:6:11"
																},
																"nativeSrc": "13624:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13624:15:11"
															},
															"nativeSrc": "13624:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13624:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13655:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13655:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13658:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13658:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13648:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13648:6:11"
																},
																"nativeSrc": "13648:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13648:15:11"
															},
															"nativeSrc": "13648:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13648:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13542:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "13542:127:11"
											},
											{
												"body": {
													"nativeSrc": "13706:95:11",
													"nodeType": "YulBlock",
													"src": "13706:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13723:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13723:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13730:3:11",
																				"nodeType": "YulLiteral",
																				"src": "13730:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13735:10:11",
																				"nodeType": "YulLiteral",
																				"src": "13735:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13726:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13726:3:11"
																		},
																		"nativeSrc": "13726:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13726:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13716:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13716:6:11"
																},
																"nativeSrc": "13716:31:11",
																"nodeType": "YulFunctionCall",
																"src": "13716:31:11"
															},
															"nativeSrc": "13716:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "13716:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13763:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13763:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13766:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13766:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13756:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13756:6:11"
																},
																"nativeSrc": "13756:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13756:15:11"
															},
															"nativeSrc": "13756:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13756:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13787:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13787:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13790:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13790:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13780:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13780:6:11"
																},
																"nativeSrc": "13780:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13780:15:11"
															},
															"nativeSrc": "13780:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13780:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13674:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "13674:127:11"
											},
											{
												"body": {
													"nativeSrc": "13854:77:11",
													"nodeType": "YulBlock",
													"src": "13854:77:11",
													"statements": [
														{
															"nativeSrc": "13864:16:11",
															"nodeType": "YulAssignment",
															"src": "13864:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13875:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13875:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13878:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13878:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13871:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13871:3:11"
																},
																"nativeSrc": "13871:9:11",
																"nodeType": "YulFunctionCall",
																"src": "13871:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13864:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13864:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13903:22:11",
																"nodeType": "YulBlock",
																"src": "13903:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13905:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13905:16:11"
																			},
																			"nativeSrc": "13905:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13905:18:11"
																		},
																		"nativeSrc": "13905:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13905:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13895:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13895:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13898:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13898:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13892:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "13892:2:11"
																},
																"nativeSrc": "13892:10:11",
																"nodeType": "YulFunctionCall",
																"src": "13892:10:11"
															},
															"nativeSrc": "13889:36:11",
															"nodeType": "YulIf",
															"src": "13889:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13806:125:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13837:1:11",
														"nodeType": "YulTypedName",
														"src": "13837:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13840:1:11",
														"nodeType": "YulTypedName",
														"src": "13840:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13846:3:11",
														"nodeType": "YulTypedName",
														"src": "13846:3:11",
														"type": ""
													}
												],
												"src": "13806:125:11"
											},
											{
												"body": {
													"nativeSrc": "13982:171:11",
													"nodeType": "YulBlock",
													"src": "13982:171:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "14013:111:11",
																"nodeType": "YulBlock",
																"src": "14013:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14034:1:11",
																					"nodeType": "YulLiteral",
																					"src": "14034:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "14041:3:11",
																							"nodeType": "YulLiteral",
																							"src": "14041:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "14046:10:11",
																							"nodeType": "YulLiteral",
																							"src": "14046:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "14037:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "14037:3:11"
																					},
																					"nativeSrc": "14037:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "14037:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14027:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14027:6:11"
																			},
																			"nativeSrc": "14027:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14027:31:11"
																		},
																		"nativeSrc": "14027:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14027:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14078:1:11",
																					"nodeType": "YulLiteral",
																					"src": "14078:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14081:4:11",
																					"nodeType": "YulLiteral",
																					"src": "14081:4:11",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14071:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14071:6:11"
																			},
																			"nativeSrc": "14071:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14071:15:11"
																		},
																		"nativeSrc": "14071:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14071:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14106:1:11",
																					"nodeType": "YulLiteral",
																					"src": "14106:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14109:4:11",
																					"nodeType": "YulLiteral",
																					"src": "14109:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14099:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14099:6:11"
																			},
																			"nativeSrc": "14099:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14099:15:11"
																		},
																		"nativeSrc": "14099:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14099:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14002:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14002:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13995:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13995:6:11"
																},
																"nativeSrc": "13995:9:11",
																"nodeType": "YulFunctionCall",
																"src": "13995:9:11"
															},
															"nativeSrc": "13992:132:11",
															"nodeType": "YulIf",
															"src": "13992:132:11"
														},
														{
															"nativeSrc": "14133:14:11",
															"nodeType": "YulAssignment",
															"src": "14133:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14142:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14142:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14145:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14145:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14138:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14138:3:11"
																},
																"nativeSrc": "14138:9:11",
																"nodeType": "YulFunctionCall",
																"src": "14138:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14133:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14133:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13936:217:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13967:1:11",
														"nodeType": "YulTypedName",
														"src": "13967:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13970:1:11",
														"nodeType": "YulTypedName",
														"src": "13970:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13976:1:11",
														"nodeType": "YulTypedName",
														"src": "13976:1:11",
														"type": ""
													}
												],
												"src": "13936:217:11"
											},
											{
												"body": {
													"nativeSrc": "14210:116:11",
													"nodeType": "YulBlock",
													"src": "14210:116:11",
													"statements": [
														{
															"nativeSrc": "14220:20:11",
															"nodeType": "YulAssignment",
															"src": "14220:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14235:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14235:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14238:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14238:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14231:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14231:3:11"
																},
																"nativeSrc": "14231:9:11",
																"nodeType": "YulFunctionCall",
																"src": "14231:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14220:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "14220:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14298:22:11",
																"nodeType": "YulBlock",
																"src": "14298:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14300:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "14300:16:11"
																			},
																			"nativeSrc": "14300:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14300:18:11"
																		},
																		"nativeSrc": "14300:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14300:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14269:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "14269:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14262:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "14262:6:11"
																				},
																				"nativeSrc": "14262:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "14262:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14276:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "14276:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14283:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "14283:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14292:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "14292:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14279:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "14279:3:11"
																						},
																						"nativeSrc": "14279:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "14279:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14273:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "14273:2:11"
																				},
																				"nativeSrc": "14273:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "14273:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14259:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "14259:2:11"
																		},
																		"nativeSrc": "14259:37:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14259:37:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14252:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14252:6:11"
																},
																"nativeSrc": "14252:45:11",
																"nodeType": "YulFunctionCall",
																"src": "14252:45:11"
															},
															"nativeSrc": "14249:71:11",
															"nodeType": "YulIf",
															"src": "14249:71:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14158:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14189:1:11",
														"nodeType": "YulTypedName",
														"src": "14189:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14192:1:11",
														"nodeType": "YulTypedName",
														"src": "14192:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14198:7:11",
														"nodeType": "YulTypedName",
														"src": "14198:7:11",
														"type": ""
													}
												],
												"src": "14158:168:11"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xc0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory_1774() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x80)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_enum_MediaType(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 6)) { revert(0, 0) }\n    }\n    function abi_decode_struct_ArtPieceMetadata(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0xc0) { revert(0, 0) }\n        value := allocate_memory()\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        mstore(value, abi_decode_string(add(headStart, offset), end))\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string(add(headStart, offset_1), end))\n        mstore(add(value, 64), abi_decode_enum_MediaType(add(headStart, 64)))\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_string(add(headStart, offset_2), end))\n        let offset_3 := calldataload(add(headStart, 128))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 128), abi_decode_string(add(headStart, offset_3), end))\n        let offset_4 := calldataload(add(headStart, 160))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, 160), abi_decode_string(add(headStart, offset_4), end))\n    }\n    function abi_decode_tuple_t_uint256t_struct$_ArtPieceMetadata_$2034_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_struct_ArtPieceMetadata(add(headStart, offset), dataEnd)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_struct$_TokenURIParams_$1748_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0x80) { revert(0, 0) }\n        let value := allocate_memory_1774()\n        let offset_1 := calldataload(_2)\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(value, abi_decode_string(add(_2, offset_1), dataEnd))\n        let offset_2 := calldataload(add(_2, 32))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string(add(_2, offset_2), dataEnd))\n        let offset_3 := calldataload(add(_2, 64))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_string(add(_2, offset_3), dataEnd))\n        let offset_4 := calldataload(add(_2, 96))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_string(add(_2, offset_4), dataEnd))\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_struct$_ArtPieceMetadata_$2034_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_struct_ArtPieceMetadata(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_string_storage(value, pos) -> ret\n    {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value)\n            let _2 := 0x20\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := abi_encode_string_storage(value0, pos)\n        mstore(_1, \" \")\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 1), length)\n        end := add(add(_1, length), 1)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := abi_encode_string_storage(value0, pos)\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), _1, length)\n        end := add(_1, length)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), 0)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_9780691b4087a1893a28b24020f5f6d0c7583060bd6cfeb54b8284a5bf55f11f_t_string_memory_ptr_t_stringliteral_8d0de490dde571af103e878aa265925a94dd83b4f74e62b617db5ad43a4f76af_t_string_memory_ptr_t_stringliteral_f900c545a58378754ad8b5c331b48c15e2a79c6ef80b3dc97d883d860e9e1c18_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(185, 0x3d913730b6b2911d11))\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 9), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 9), shl(113, 0x111610113232b9b1b934b83a34b7b7111d11))\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 27), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 27), shl(153, 0x1116101134b6b0b3b2911d1011))\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_2, 40), length_2)\n        let _3 := add(_2, length_2)\n        mstore(add(_3, 40), shl(89, 0x1116101130b734b6b0ba34b7b72fbab936111d1011))\n        let length_3 := mload(value3)\n        copy_memory_to_memory_with_cleanup(add(value3, 0x20), add(_3, 61), length_3)\n        let _4 := add(_3, length_3)\n        mstore(add(_4, 61), shl(240, 8829))\n        end := add(_4, 63)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"data:application/json;base64,\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 29), length)\n        end := add(add(pos, length), 29)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b1575f3560e01c80638da5cb5b1161006e5780638da5cb5b1461011e57806392b4c81b14610138578063ce2f4f531461014b578063dfe8478b1461016e578063f0b305eb14610176578063f2fde38b14610189575f80fd5b80630dd4f079146100b55780632c90464d146100de5780633dc081b9146100f157806355f804b3146100f95780636c0360eb1461010e578063715018a614610116575b5f80fd5b6100c86100c336600461099d565b61019c565b6040516100d59190610a03565b60405180910390f35b6100c86100ec36600461099d565b6101e5565b6100c861023d565b61010c610107366004610a35565b6102c9565b005b6100c861031c565b61010c610329565b5f546040516001600160a01b0390911681526020016100d5565b6100c8610146366004610aa1565b61033c565b5f5461015e90600160a01b900460ff1681565b60405190151581526020016100d5565b61010c6103a6565b6100c8610184366004610b72565b610403565b61010c610197366004610bc8565b610446565b60605f6101a884610488565b90505f6002826040516020016101bf929190610c9c565b60405160208183030381529060405290506101da8185610403565b925050505b92915050565b5f54606090600160a01b900460ff161561020a57610203838361019c565b90506101df565b600161021584610488565b604051602001610226929190610ccd565b604051602081830303815290604052905092915050565b6002805461024a90610bf5565b80601f016020809104026020016040519081016040528092919081815260200182805461027690610bf5565b80156102c15780601f10610298576101008083540402835291602001916102c1565b820191905f5260205f20905b8154815290600101906020018083116102a457829003601f168201915b505050505081565b6102d1610518565b60016102de828483610d3d565b507f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad8282604051610310929190610df7565b60405180910390a15050565b6001805461024a90610bf5565b610331610518565b61033a5f610544565b565b60605f825f01518360200151846040015185606001516040516020016103659493929190610e25565b604051602081830303815290604052905061037f81610593565b60405160200161038f9190610efc565b604051602081830303815290604052915050919050565b6103ae610518565b5f805460ff60a01b198116600160a01b9182900460ff1615918202179091556040518181527f360c3d72ee193226275b842f85231c259c934e85459fed80fa68e502ffa9dbde9060200160405180910390a150565b60605f604051806080016040528085815260200184602001518152602001846060015181526020018460a00151815250905061043e8161033c565b949350505050565b61044e610518565b6001600160a01b03811661047c57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61048581610544565b50565b60605f610494836106e2565b60010190505f8167ffffffffffffffff8111156104b3576104b36107b9565b6040519080825280601f01601f1916602001820160405280156104dd576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846104e757509392505050565b5f546001600160a01b0316331461033a5760405163118cdaa760e01b8152336004820152602401610473565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606081515f036105b057505060408051602081019091525f815290565b5f604051806060016040528060408152602001610f9e6040913990505f6003845160026105dd9190610f54565b6105e79190610f67565b6105f2906004610f86565b67ffffffffffffffff81111561060a5761060a6107b9565b6040519080825280601f01601f191660200182016040528015610634576020820181803683370190505b509050600182016020820185865187015b808210156106a0576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610645565b50506003865106600181146106bc57600281146106cf576106d7565b603d6001830353603d60028303536106d7565b603d60018303535b509195945050505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106107205772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061074c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061076a57662386f26fc10000830492506010015b6305f5e1008310610782576305f5e100830492506008015b612710831061079657612710830492506004015b606483106107a8576064830492506002015b600a83106101df5760010192915050565b634e487b7160e01b5f52604160045260245ffd5b60405160c0810167ffffffffffffffff811182821017156107f0576107f06107b9565b60405290565b6040516080810167ffffffffffffffff811182821017156107f0576107f06107b9565b5f82601f830112610828575f80fd5b813567ffffffffffffffff80821115610843576108436107b9565b604051601f8301601f19908116603f0116810190828211818310171561086b5761086b6107b9565b81604052838152866020858801011115610883575f80fd5b836020870160208301375f602085830101528094505050505092915050565b8035600681106108b0575f80fd5b919050565b5f60c082840312156108c5575f80fd5b6108cd6107cd565b9050813567ffffffffffffffff808211156108e6575f80fd5b6108f285838601610819565b83526020840135915080821115610907575f80fd5b61091385838601610819565b6020840152610924604085016108a2565b6040840152606084013591508082111561093c575f80fd5b61094885838601610819565b60608401526080840135915080821115610960575f80fd5b61096c85838601610819565b608084015260a0840135915080821115610984575f80fd5b5061099184828501610819565b60a08301525092915050565b5f80604083850312156109ae575f80fd5b82359150602083013567ffffffffffffffff8111156109cb575f80fd5b6109d7858286016108b5565b9150509250929050565b5f5b838110156109fb5781810151838201526020016109e3565b50505f910152565b602081525f8251806020840152610a218160408501602087016109e1565b601f01601f19169190910160400192915050565b5f8060208385031215610a46575f80fd5b823567ffffffffffffffff80821115610a5d575f80fd5b818501915085601f830112610a70575f80fd5b813581811115610a7e575f80fd5b866020828501011115610a8f575f80fd5b60209290920196919550909350505050565b5f60208284031215610ab1575f80fd5b813567ffffffffffffffff80821115610ac8575f80fd5b9083019060808286031215610adb575f80fd5b610ae36107f6565b823582811115610af1575f80fd5b610afd87828601610819565b825250602083013582811115610b11575f80fd5b610b1d87828601610819565b602083015250604083013582811115610b34575f80fd5b610b4087828601610819565b604083015250606083013582811115610b57575f80fd5b610b6387828601610819565b60608301525095945050505050565b5f8060408385031215610b83575f80fd5b823567ffffffffffffffff80821115610b9a575f80fd5b610ba686838701610819565b93506020850135915080821115610bbb575f80fd5b506109d7858286016108b5565b5f60208284031215610bd8575f80fd5b81356001600160a01b0381168114610bee575f80fd5b9392505050565b600181811c90821680610c0957607f821691505b602082108103610c2757634e487b7160e01b5f52602260045260245ffd5b50919050565b5f8154610c3981610bf5565b60018281168015610c515760018114610c6657610c92565b60ff1984168752821515830287019450610c92565b855f526020805f205f5b85811015610c895781548a820152908401908201610c70565b50505082870194505b5050505092915050565b5f610ca78285610c2d565b600160fd1b81528351610cc18160018401602088016109e1565b01600101949350505050565b5f610cd88285610c2d565b8351610ce88183602088016109e1565b01949350505050565b601f821115610d3857805f5260205f20601f840160051c81016020851015610d165750805b601f840160051c820191505b81811015610d35575f8155600101610d22565b50505b505050565b67ffffffffffffffff831115610d5557610d556107b9565b610d6983610d638354610bf5565b83610cf1565b5f601f841160018114610d9a575f8515610d835750838201355b5f19600387901b1c1916600186901b178355610d35565b5f83815260208120601f198716915b82811015610dc95786850135825560209485019460019092019101610da9565b5086821015610de5575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b683d913730b6b2911d1160b91b815284515f90610e49816009850160208a016109e1565b71111610113232b9b1b934b83a34b7b7111d1160711b6009918401918201528551610e7b81601b840160208a016109e1565b6c1116101134b6b0b3b2911d101160991b601b92909101918201528451610ea98160288401602089016109e1565b741116101130b734b6b0ba34b7b72fbab936111d101160591b602892909101918201528351610edf81603d8401602088016109e1565b61227d60f01b603d9290910191820152603f019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081525f8251610f3381601d8501602087016109e1565b91909101601d0192915050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156101df576101df610f40565b5f82610f8157634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176101df576101df610f4056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220c48e3458de6d3d01a6872cdc4a6f041ba627aac8bcae6799e277a28f25d32b7064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x92B4C81B EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xCE2F4F53 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xDFE8478B EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF0B305EB EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD4F079 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x2C90464D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x3DC081B9 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x116 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x23D JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC8 PUSH2 0x31C JUMP JUMPDEST PUSH2 0x10C PUSH2 0x329 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1A8 DUP5 PUSH2 0x488 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BF SWAP3 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1DA DUP2 DUP6 PUSH2 0x403 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x20A JUMPI PUSH2 0x203 DUP4 DUP4 PUSH2 0x19C JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x1 PUSH2 0x215 DUP5 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x226 SWAP3 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x24A SWAP1 PUSH2 0xBF5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x276 SWAP1 PUSH2 0xBF5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x298 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2DE DUP3 DUP5 DUP4 PUSH2 0xD3D JUMP JUMPDEST POP PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x310 SWAP3 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x24A SWAP1 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x33A PUSH0 PUSH2 0x544 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 PUSH0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x365 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x37F DUP2 PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AE PUSH2 0x518 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP2 DUP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x360C3D72EE193226275B842F85231C259C934E85459FED80FA68E502FFA9DBDE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xA0 ADD MLOAD DUP2 MSTORE POP SWAP1 POP PUSH2 0x43E DUP2 PUSH2 0x33C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x44E PUSH2 0x518 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x544 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x494 DUP4 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B3 JUMPI PUSH2 0x4B3 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x4E7 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x473 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH0 SUB PUSH2 0x5B0 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF9E PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x5F2 SWAP1 PUSH1 0x4 PUSH2 0xF86 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60A JUMPI PUSH2 0x60A PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x634 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0x645 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x6BC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x6CF JUMPI PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x720 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x74C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x76A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x782 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x796 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x7A8 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1DF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x7F0 JUMPI PUSH2 0x7F0 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x7F0 JUMPI PUSH2 0x7F0 PUSH2 0x7B9 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x828 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x843 JUMPI PUSH2 0x843 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x86B JUMPI PUSH2 0x86B PUSH2 0x7B9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x883 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x6 DUP2 LT PUSH2 0x8B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8CD PUSH2 0x7CD JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8F2 DUP6 DUP4 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x907 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x913 DUP6 DUP4 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x924 PUSH1 0x40 DUP6 ADD PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x93C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x948 DUP6 DUP4 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x960 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x96C DUP6 DUP4 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x984 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x991 DUP5 DUP3 DUP6 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9AE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D7 DUP6 DUP3 DUP7 ADD PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9FB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E3 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xA21 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA46 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA5D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA70 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA7E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xA8F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x80 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xADB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAE3 PUSH2 0x7F6 JUMP JUMPDEST DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xAF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAFD DUP8 DUP3 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xB11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB1D DUP8 DUP3 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xB34 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB40 DUP8 DUP3 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xB57 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB63 DUP8 DUP3 DUP7 ADD PUSH2 0x819 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB83 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB9A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA6 DUP7 DUP4 DUP8 ADD PUSH2 0x819 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D7 DUP6 DUP3 DUP7 ADD PUSH2 0x8B5 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBEE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC09 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0xC39 DUP2 PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0xC51 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xC66 JUMPI PUSH2 0xC92 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0xC92 JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC89 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0xC70 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCA7 DUP3 DUP6 PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFD SHL DUP2 MSTORE DUP4 MLOAD PUSH2 0xCC1 DUP2 PUSH1 0x1 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x9E1 JUMP JUMPDEST ADD PUSH1 0x1 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCD8 DUP3 DUP6 PUSH2 0xC2D JUMP JUMPDEST DUP4 MLOAD PUSH2 0xCE8 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9E1 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD38 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xD16 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD35 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD22 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0xD55 JUMPI PUSH2 0xD55 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0xD69 DUP4 PUSH2 0xD63 DUP4 SLOAD PUSH2 0xBF5 JUMP JUMPDEST DUP4 PUSH2 0xCF1 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD9A JUMPI PUSH0 DUP6 ISZERO PUSH2 0xD83 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xD35 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP8 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDC9 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xDA9 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0xDE5 JUMPI PUSH0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP5 MLOAD PUSH0 SWAP1 PUSH2 0xE49 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x9E1 JUMP JUMPDEST PUSH18 0x111610113232B9B1B934B83A34B7B7111D11 PUSH1 0x71 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0xE7B DUP2 PUSH1 0x1B DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x9E1 JUMP JUMPDEST PUSH13 0x1116101134B6B0B3B2911D1011 PUSH1 0x99 SHL PUSH1 0x1B SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0xEA9 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x9E1 JUMP JUMPDEST PUSH21 0x1116101130B734B6B0BA34B7B72FBAB936111D1011 PUSH1 0x59 SHL PUSH1 0x28 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xEDF DUP2 PUSH1 0x3D DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL PUSH1 0x3D SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x3F ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH0 DUP3 MLOAD PUSH2 0xF33 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x9E1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DF PUSH2 0xF40 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xF81 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1DF JUMPI PUSH2 0x1DF PUSH2 0xF40 JUMP INVALID COINBASE TIMESTAMP NUMBER PREVRANDAO GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0xC4 DUP15 CALLVALUE PC 0xDE PUSH14 0x3D01A6872CDC4A6F041BA627AAC8 0xBC 0xAE PUSH8 0x99E277A28F25D32B PUSH17 0x64736F6C63430008160033000000000000 ",
							"sourceMap": "1443:3806:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4355:309;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3946:287;;;;;;:::i;:::-;;:::i;1968:29::-;;;:::i;3610:149::-;;;;;;:::i;:::-;;:::i;:::-;;1906:30;;;:::i;2293:101:0:-;;;:::i;1638:85::-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;4560:51:11;;4548:2;4533:18;1638:85:0;4414:203:11;2399:589:7;;;;;;:::i;:::-;;:::i;1839:44::-;;;;;-1:-1:-1;;;1839:44:7;;;;;;;;;5927:14:11;;5920:22;5902:41;;5890:2;5875:18;1839:44:7;5762:187:11;3171:184:7;;;:::i;4766:481::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;4355:309:7:-;4458:13;4483:20;4506:18;:7;:16;:18::i;:::-;4483:41;;4534:18;4579:15;4601:6;4562:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4534:75;;4627:30;4642:4;4648:8;4627:14;:30::i;:::-;4620:37;;;;4355:309;;;;;:::o;3946:287::-;4081:16;;4052:13;;-1:-1:-1;;;4081:16:7;;;;4077:80;;;4120:26;4128:7;4137:8;4120:7;:26::i;:::-;4113:33;;;;4077:80;4197:7;4206:18;:7;:16;:18::i;:::-;4180:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4166:60;;3946:287;;;;:::o;1968:29::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3610:149::-;1531:13:0;:11;:13::i;:::-;3694:7:7::1;:18;3704:8:::0;;3694:7;:18:::1;:::i;:::-;;3728:24;3743:8;;3728:24;;;;;;;:::i;:::-;;;;;;;;3610:149:::0;;:::o;1906:30::-;;;;;;;:::i;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2399:589:7:-;2477:13;2502:18;2606:6;:11;;;2673:6;:18;;;2742:6;:12;;;2813:6;:20;;;2543:326;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2502:377;;2953:26;2973:4;2953:13;:26::i;:::-;2903:77;;;;;;;;:::i;:::-;;;;;;;;;;;;;2889:92;;;2399:589;;;:::o;3171:184::-;1531:13:0;:11;:13::i;:::-;3241:12:7::1;3257:16:::0;;-1:-1:-1;;;;3284:26:7;::::1;-1:-1:-1::0;;;3257:16:7;;;::::1;;;3256:17;3284:26:::0;;::::1;;::::0;;;3325:23:::1;::::0;5902:41:11;;;3325:23:7::1;::::0;5890:2:11;5875:18;3325:23:7::1;;;;;;;3231:124;3171:184::o:0;4766:481::-;4879:13;4985:28;5016:182;;;;;;;;5051:4;5016:182;;;;5082:8;:20;;;5016:182;;;;5123:8;:14;;;5016:182;;;;5166:8;:21;;;5016:182;;;4985:213;;5215:25;5233:6;5215:17;:25::i;:::-;5208:32;4766:481;-1:-1:-1;;;;4766:481:7:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4560:51:11::0;4533:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;637:698:3:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:3;-1:-1:-1;794:41:3;-1:-1:-1;955:28:3;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:3;-1:-1:-1;;;1175:2:3;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:3;1010:282;1256:21;-1:-1:-1;1312:6:3;637:698;-1:-1:-1;;;637:698:3:o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:2;1901:40:0;;;4560:51:11;4533:18;;1901:40:0;4414:203:11;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;476:3026:1:-;534:13;766:4;:11;781:1;766:16;762:31;;-1:-1:-1;;784:9:1;;;;;;;;;-1:-1:-1;784:9:1;;;476:3026::o;762:31::-;843:19;865:6;;;;;;;;;;;;;;;;;843:28;;1274:20;1333:1;1314:4;:11;1328:1;1314:15;;;;:::i;:::-;1313:21;;;;:::i;:::-;1308:27;;:1;:27;:::i;:::-;1297:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1297:39:1;;1274:62;;1511:1;1504:5;1500:13;1612:2;1604:6;1600:15;1719:4;1770;1764:11;1758:4;1754:22;1682:1403;1803:6;1794:7;1791:19;1682:1403;;;1905:1;1896:7;1892:15;1881:26;;1943:7;1937:14;2586:4;2578:5;2574:2;2570:14;2566:25;2556:8;2552:40;2546:47;2535:9;2527:67;2639:1;2628:9;2624:17;2611:30;;2729:4;2721:5;2717:2;2713:14;2709:25;2699:8;2695:40;2689:47;2678:9;2670:67;2782:1;2771:9;2767:17;2754:30;;2871:4;2863:5;2860:1;2856:13;2852:24;2842:8;2838:39;2832:46;2821:9;2813:66;2924:1;2913:9;2909:17;2896:30;;3005:4;2998:5;2994:16;2984:8;2980:31;2974:38;2963:9;2955:58;;3058:1;3047:9;3043:17;3030:30;;1682:1403;;;1686:104;;3243:1;3236:4;3230:11;3226:19;3263:1;3258:120;;;;3396:1;3391:71;;;;3219:243;;3258:120;3310:4;3306:1;3295:9;3291:17;3283:32;3359:4;3355:1;3344:9;3340:17;3332:32;3258:120;;3391:71;3443:4;3439:1;3428:9;3424:17;3416:32;3219:243;-1:-1:-1;3489:6:1;;476:3026;-1:-1:-1;;;;;476:3026:1:o;12214:916:4:-;12267:7;;-1:-1:-1;;;12342:17:4;;12338:103;;-1:-1:-1;;;12379:17:4;;;-1:-1:-1;12424:2:4;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:4;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:4;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:4;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:4;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:4;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:4:o;14:127:11:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:248;213:2;207:9;255:4;243:17;;290:18;275:34;;311:22;;;272:62;269:88;;;337:18;;:::i;:::-;373:2;366:22;146:248;:::o;399:253::-;471:2;465:9;513:4;501:17;;548:18;533:34;;569:22;;;530:62;527:88;;;595:18;;:::i;657:719::-;700:5;753:3;746:4;738:6;734:17;730:27;720:55;;771:1;768;761:12;720:55;807:6;794:20;833:18;870:2;866;863:10;860:36;;;876:18;;:::i;:::-;951:2;945:9;919:2;1005:13;;-1:-1:-1;;1001:22:11;;;1025:2;997:31;993:40;981:53;;;1049:18;;;1069:22;;;1046:46;1043:72;;;1095:18;;:::i;:::-;1135:10;1131:2;1124:22;1170:2;1162:6;1155:18;1216:3;1209:4;1204:2;1196:6;1192:15;1188:26;1185:35;1182:55;;;1233:1;1230;1223:12;1182:55;1297:2;1290:4;1282:6;1278:17;1271:4;1263:6;1259:17;1246:54;1344:1;1337:4;1332:2;1324:6;1320:15;1316:26;1309:37;1364:6;1355:15;;;;;;657:719;;;;:::o;1381:150::-;1456:20;;1505:1;1495:12;;1485:40;;1521:1;1518;1511:12;1485:40;1381:150;;;:::o;1536:1184::-;1599:5;1647:4;1635:9;1630:3;1626:19;1622:30;1619:50;;;1665:1;1662;1655:12;1619:50;1687:17;;:::i;:::-;1678:26;;1740:9;1727:23;1769:18;1810:2;1802:6;1799:14;1796:34;;;1826:1;1823;1816:12;1796:34;1853:46;1895:3;1886:6;1875:9;1871:22;1853:46;:::i;:::-;1846:5;1839:61;1953:2;1942:9;1938:18;1925:32;1909:48;;1982:2;1972:8;1969:16;1966:36;;;1998:1;1995;1988:12;1966:36;2034:48;2078:3;2067:8;2056:9;2052:24;2034:48;:::i;:::-;2029:2;2022:5;2018:14;2011:72;2115:45;2156:2;2145:9;2141:18;2115:45;:::i;:::-;2110:2;2103:5;2099:14;2092:69;2214:2;2203:9;2199:18;2186:32;2170:48;;2243:2;2233:8;2230:16;2227:36;;;2259:1;2256;2249:12;2227:36;2295:48;2339:3;2328:8;2317:9;2313:24;2295:48;:::i;:::-;2290:2;2283:5;2279:14;2272:72;2397:3;2386:9;2382:19;2369:33;2353:49;;2427:2;2417:8;2414:16;2411:36;;;2443:1;2440;2433:12;2411:36;2480:48;2524:3;2513:8;2502:9;2498:24;2480:48;:::i;:::-;2474:3;2467:5;2463:15;2456:73;2582:3;2571:9;2567:19;2554:33;2538:49;;2612:2;2602:8;2599:16;2596:36;;;2628:1;2625;2618:12;2596:36;;2665:48;2709:3;2698:8;2687:9;2683:24;2665:48;:::i;:::-;2659:3;2652:5;2648:15;2641:73;;1536:1184;;;;:::o;2725:431::-;2827:6;2835;2888:2;2876:9;2867:7;2863:23;2859:32;2856:52;;;2904:1;2901;2894:12;2856:52;2940:9;2927:23;2917:33;;3001:2;2990:9;2986:18;2973:32;3028:18;3020:6;3017:30;3014:50;;;3060:1;3057;3050:12;3014:50;3083:67;3142:7;3133:6;3122:9;3118:22;3083:67;:::i;:::-;3073:77;;;2725:431;;;;;:::o;3161:250::-;3246:1;3256:113;3270:6;3267:1;3264:13;3256:113;;;3346:11;;;3340:18;3327:11;;;3320:39;3292:2;3285:10;3256:113;;;-1:-1:-1;;3403:1:11;3385:16;;3378:27;3161:250::o;3416:396::-;3565:2;3554:9;3547:21;3528:4;3597:6;3591:13;3640:6;3635:2;3624:9;3620:18;3613:34;3656:79;3728:6;3723:2;3712:9;3708:18;3703:2;3695:6;3691:15;3656:79;:::i;:::-;3796:2;3775:15;-1:-1:-1;;3771:29:11;3756:45;;;;3803:2;3752:54;;3416:396;-1:-1:-1;;3416:396:11:o;3817:592::-;3888:6;3896;3949:2;3937:9;3928:7;3924:23;3920:32;3917:52;;;3965:1;3962;3955:12;3917:52;4005:9;3992:23;4034:18;4075:2;4067:6;4064:14;4061:34;;;4091:1;4088;4081:12;4061:34;4129:6;4118:9;4114:22;4104:32;;4174:7;4167:4;4163:2;4159:13;4155:27;4145:55;;4196:1;4193;4186:12;4145:55;4236:2;4223:16;4262:2;4254:6;4251:14;4248:34;;;4278:1;4275;4268:12;4248:34;4323:7;4318:2;4309:6;4305:2;4301:15;4297:24;4294:37;4291:57;;;4344:1;4341;4334:12;4291:57;4375:2;4367:11;;;;;4397:6;;-1:-1:-1;3817:592:11;;-1:-1:-1;;;;3817:592:11:o;4622:1135::-;4713:6;4766:2;4754:9;4745:7;4741:23;4737:32;4734:52;;;4782:1;4779;4772:12;4734:52;4822:9;4809:23;4851:18;4892:2;4884:6;4881:14;4878:34;;;4908:1;4905;4898:12;4878:34;4931:22;;;;4987:4;4969:16;;;4965:27;4962:47;;;5005:1;5002;4995:12;4962:47;5031:22;;:::i;:::-;5091:2;5078:16;5119:2;5109:8;5106:16;5103:36;;;5135:1;5132;5125:12;5103:36;5162:45;5199:7;5188:8;5184:2;5180:17;5162:45;:::i;:::-;5155:5;5148:60;;5254:2;5250;5246:11;5233:25;5283:2;5273:8;5270:16;5267:36;;;5299:1;5296;5289:12;5267:36;5335:45;5372:7;5361:8;5357:2;5353:17;5335:45;:::i;:::-;5330:2;5323:5;5319:14;5312:69;;5427:2;5423;5419:11;5406:25;5456:2;5446:8;5443:16;5440:36;;;5472:1;5469;5462:12;5440:36;5508:45;5545:7;5534:8;5530:2;5526:17;5508:45;:::i;:::-;5503:2;5496:5;5492:14;5485:69;;5600:2;5596;5592:11;5579:25;5629:2;5619:8;5616:16;5613:36;;;5645:1;5642;5635:12;5613:36;5681:45;5718:7;5707:8;5703:2;5699:17;5681:45;:::i;:::-;5676:2;5665:14;;5658:69;-1:-1:-1;5669:5:11;4622:1135;-1:-1:-1;;;;;4622:1135:11:o;5954:584::-;6066:6;6074;6127:2;6115:9;6106:7;6102:23;6098:32;6095:52;;;6143:1;6140;6133:12;6095:52;6183:9;6170:23;6212:18;6253:2;6245:6;6242:14;6239:34;;;6269:1;6266;6259:12;6239:34;6292:50;6334:7;6325:6;6314:9;6310:22;6292:50;:::i;:::-;6282:60;;6395:2;6384:9;6380:18;6367:32;6351:48;;6424:2;6414:8;6411:16;6408:36;;;6440:1;6437;6430:12;6408:36;;6463:69;6524:7;6513:8;6502:9;6498:24;6463:69;:::i;6543:286::-;6602:6;6655:2;6643:9;6634:7;6630:23;6626:32;6623:52;;;6671:1;6668;6661:12;6623:52;6697:23;;-1:-1:-1;;;;;6749:31:11;;6739:42;;6729:70;;6795:1;6792;6785:12;6729:70;6818:5;6543:286;-1:-1:-1;;;6543:286:11:o;6834:380::-;6913:1;6909:12;;;;6956;;;6977:61;;7031:4;7023:6;7019:17;7009:27;;6977:61;7084:2;7076:6;7073:14;7053:18;7050:38;7047:161;;7130:10;7125:3;7121:20;7118:1;7111:31;7165:4;7162:1;7155:15;7193:4;7190:1;7183:15;7047:161;;6834:380;;;:::o;7345:723::-;7395:3;7436:5;7430:12;7465:36;7491:9;7465:36;:::i;:::-;7520:1;7537:17;;;7563:133;;;;7710:1;7705:357;;;;7530:532;;7563:133;-1:-1:-1;;7596:24:11;;7584:37;;7669:14;;7662:22;7650:35;;7641:45;;;-1:-1:-1;7563:133:11;;7705:357;7736:5;7733:1;7726:16;7765:4;7810;7807:1;7797:18;7837:1;7851:165;7865:6;7862:1;7859:13;7851:165;;;7943:14;;7930:11;;;7923:35;7986:16;;;;7880:10;;7851:165;;;7855:3;;;8045:6;8040:3;8036:16;8029:23;;7530:532;;;;;7345:723;;;;:::o;8073:530::-;8350:3;8378:38;8412:3;8404:6;8378:38;:::i;:::-;-1:-1:-1;;;8432:2:11;8425:15;8469:6;8463:13;8485:73;8551:6;8547:1;8543:2;8539:10;8532:4;8524:6;8520:17;8485:73;:::i;:::-;8578:15;8595:1;8574:23;;8073:530;-1:-1:-1;;;;8073:530:11:o;8608:389::-;8784:3;8812:38;8846:3;8838:6;8812:38;:::i;:::-;8879:6;8873:13;8895:65;8953:6;8949:2;8942:4;8934:6;8930:17;8895:65;:::i;:::-;8976:15;;8608:389;-1:-1:-1;;;;8608:389:11:o;9002:518::-;9104:2;9099:3;9096:11;9093:421;;;9140:5;9137:1;9130:16;9184:4;9181:1;9171:18;9254:2;9242:10;9238:19;9235:1;9231:27;9225:4;9221:38;9290:4;9278:10;9275:20;9272:47;;;-1:-1:-1;9313:4:11;9272:47;9368:2;9363:3;9359:12;9356:1;9352:20;9346:4;9342:31;9332:41;;9423:81;9441:2;9434:5;9431:13;9423:81;;;9500:1;9486:16;;9467:1;9456:13;9423:81;;;9427:3;;9093:421;9002:518;;;:::o;9696:1198::-;9820:18;9815:3;9812:27;9809:53;;;9842:18;;:::i;:::-;9871:94;9961:3;9921:38;9953:4;9947:11;9921:38;:::i;:::-;9915:4;9871:94;:::i;:::-;9991:1;10016:2;10011:3;10008:11;10033:1;10028:608;;;;10680:1;10697:3;10694:93;;;-1:-1:-1;10753:19:11;;;10740:33;10694:93;-1:-1:-1;;9653:1:11;9649:11;;;9645:24;9641:29;9631:40;9677:1;9673:11;;;9628:57;10800:78;;10001:887;;10028:608;7292:1;7285:14;;;7329:4;7316:18;;-1:-1:-1;;10064:17:11;;;10179:229;10193:7;10190:1;10187:14;10179:229;;;10282:19;;;10269:33;10254:49;;10389:4;10374:20;;;;10342:1;10330:14;;;;10209:12;10179:229;;;10183:3;10436;10427:7;10424:16;10421:159;;;10560:1;10556:6;10550:3;10544;10541:1;10537:11;10533:21;10529:34;10525:39;10512:9;10507:3;10503:19;10490:33;10486:79;10478:6;10471:95;10421:159;;;10623:1;10617:3;10614:1;10610:11;10606:19;10600:4;10593:33;10001:887;;9696:1198;;;:::o;10899:390::-;11058:2;11047:9;11040:21;11097:6;11092:2;11081:9;11077:18;11070:34;11154:6;11146;11141:2;11130:9;11126:18;11113:48;11210:1;11181:22;;;11205:2;11177:31;;;11170:42;;;;11273:2;11252:15;;;-1:-1:-1;;11248:29:11;11233:45;11229:54;;10899:390;-1:-1:-1;10899:390:11:o;11294:1777::-;-1:-1:-1;;;12092:43:11;;12158:13;;12074:3;;12180:74;12158:13;12243:1;12234:11;;12227:4;12215:17;;12180:74;:::i;:::-;-1:-1:-1;;;12313:1:11;12273:16;;;12305:10;;;12298:68;12391:13;;12413:76;12391:13;12475:2;12467:11;;12460:4;12448:17;;12413:76;:::i;:::-;-1:-1:-1;;;12549:2:11;12508:17;;;;12541:11;;;12534:59;12618:13;;12640:76;12618:13;12702:2;12694:11;;12687:4;12675:17;;12640:76;:::i;:::-;-1:-1:-1;;;12776:2:11;12735:17;;;;12768:11;;;12761:74;12860:13;;12882:76;12860:13;12944:2;12936:11;;12929:4;12917:17;;12882:76;:::i;:::-;-1:-1:-1;;;13018:2:11;12977:17;;;;13010:11;;;13003:35;13062:2;13054:11;;11294:1777;-1:-1:-1;;;;;;11294:1777:11:o;13076:461::-;13338:31;13333:3;13326:44;13308:3;13399:6;13393:13;13415:75;13483:6;13478:2;13473:3;13469:12;13462:4;13454:6;13450:17;13415:75;:::i;:::-;13510:16;;;;13528:2;13506:25;;13076:461;-1:-1:-1;;13076:461:11:o;13674:127::-;13735:10;13730:3;13726:20;13723:1;13716:31;13766:4;13763:1;13756:15;13790:4;13787:1;13780:15;13806:125;13871:9;;;13892:10;;;13889:36;;;13905:18;;:::i;13936:217::-;13976:1;14002;13992:132;;14046:10;14041:3;14037:20;14034:1;14027:31;14081:4;14078:1;14071:15;14109:4;14106:1;14099:15;13992:132;-1:-1:-1;14138:9:11;;13936:217::o;14158:168::-;14231:9;;;14262;;14279:15;;;14273:22;;14259:37;14249:71;;14300:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "823000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"baseURI()": "infinite",
								"constructTokenURI((string,string,string,string))": "infinite",
								"dataURI(uint256,(string,string,uint8,string,string,string))": "infinite",
								"genericDataURI(string,(string,string,uint8,string,string,string))": "infinite",
								"isDataURIEnabled()": "2369",
								"owner()": "2299",
								"renounceOwnership()": "infinite",
								"setBaseURI(string)": "infinite",
								"toggleDataURIEnabled()": "27706",
								"tokenNamePrefix()": "infinite",
								"tokenURI(uint256,(string,string,uint8,string,string,string))": "infinite",
								"transferOwnership(address)": "28404"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1443,
									"end": 5249,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1883,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1883,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1883,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1839,
									"end": 1883,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1839,
									"end": 1883,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1883,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1883,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2190,
									"end": 2331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2265,
									"end": 2278,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1506,
									"end": 1557,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2290,
									"end": 2305,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2290,
									"end": 2324,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2308,
									"end": 2324,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2305,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2324,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2290,
									"end": 2324,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2324,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2290,
									"end": 2324,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2324,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 146,
									"end": 1355,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 296,
									"end": 298,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 284,
									"end": 293,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 275,
									"end": 282,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 271,
									"end": 294,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 267,
									"end": 299,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 264,
									"end": 316,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 264,
									"end": 316,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 264,
									"end": 316,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 312,
									"end": 313,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 302,
									"end": 314,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 264,
									"end": 316,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 264,
									"end": 316,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 338,
									"end": 354,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 338,
									"end": 354,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 383,
									"end": 414,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 383,
									"end": 414,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 373,
									"end": 415,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 373,
									"end": 415,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 363,
									"end": 433,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 363,
									"end": 433,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 429,
									"end": 430,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 427,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 419,
									"end": 431,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 363,
									"end": 433,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 363,
									"end": 433,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 476,
									"end": 478,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 507,
									"end": 525,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 507,
									"end": 525,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 507,
									"end": 525,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 501,
									"end": 526,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 452,
									"end": 457,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 452,
									"end": 457,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 476,
									"end": 478,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 575,
									"end": 589,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 575,
									"end": 589,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 575,
									"end": 589,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 572,
									"end": 606,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 572,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 572,
									"end": 606,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 602,
									"end": 603,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 600,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 592,
									"end": 604,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 572,
									"end": 606,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 572,
									"end": 606,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 640,
									"end": 646,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 629,
									"end": 638,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 625,
									"end": 647,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 615,
									"end": 647,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 615,
									"end": 647,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 685,
									"end": 692,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 678,
									"end": 682,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 674,
									"end": 676,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 670,
									"end": 683,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 666,
									"end": 693,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 656,
									"end": 711,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 656,
									"end": 711,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 705,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 697,
									"end": 709,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 656,
									"end": 711,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 656,
									"end": 711,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 736,
									"end": 738,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 730,
									"end": 739,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 758,
									"end": 760,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 754,
									"end": 756,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 751,
									"end": 761,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 748,
									"end": 784,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 748,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 784,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 764,
									"end": 782,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 764,
									"end": 782,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 764,
									"end": 782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 764,
									"end": 782,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 764,
									"end": 782,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 839,
									"end": 841,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 833,
									"end": 842,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 807,
									"end": 809,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 893,
									"end": 906,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 893,
									"end": 906,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 889,
									"end": 911,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 889,
									"end": 911,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 889,
									"end": 911,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 913,
									"end": 915,
									"name": "PUSH",
									"source": 11,
									"value": "3F"
								},
								{
									"begin": 885,
									"end": 916,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 881,
									"end": 921,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 869,
									"end": 922,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 869,
									"end": 922,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 869,
									"end": 922,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 937,
									"end": 955,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 937,
									"end": 955,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 937,
									"end": 955,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 957,
									"end": 979,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 957,
									"end": 979,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 957,
									"end": 979,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 934,
									"end": 980,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 931,
									"end": 1003,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 931,
									"end": 1003,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 931,
									"end": 1003,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 983,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 983,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 983,
									"end": 1001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 983,
									"end": 1001,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 983,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1023,
									"end": 1033,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1019,
									"end": 1021,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1012,
									"end": 1034,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1058,
									"end": 1060,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1050,
									"end": 1056,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1043,
									"end": 1061,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1105,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1088,
									"end": 1090,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1084,
									"end": 1086,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1080,
									"end": 1091,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1076,
									"end": 1096,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1073,
									"end": 1106,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1123,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 1070,
									"end": 1123,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1120,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 1117,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1109,
									"end": 1121,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1123,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 1070,
									"end": 1123,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1141,
									"end": 1142,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1142,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1132,
									"end": 1142,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1280,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1151,
									"end": 1280,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1165,
									"end": 1167,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1163,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1159,
									"end": 1168,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1280,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1280,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1151,
									"end": 1280,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1253,
									"end": 1263,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1253,
									"end": 1263,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1253,
									"end": 1263,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1249,
									"end": 1268,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1249,
									"end": 1268,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1243,
									"end": 1269,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1236,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1236,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1236,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1241,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1241,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1211,
									"end": 1270,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1176,
									"end": 1186,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1176,
									"end": 1186,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1176,
									"end": 1186,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1176,
									"end": 1186,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1280,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1151,
									"end": 1280,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1280,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1151,
									"end": 1280,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1317,
									"end": 1319,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1312,
									"end": 1314,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1310,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1300,
									"end": 1315,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1320,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1289,
									"end": 1324,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1349,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1349,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1349,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1349,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1349,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1349,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1349,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1349,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 146,
									"end": 1355,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 146,
									"end": 1355,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 146,
									"end": 1355,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 146,
									"end": 1355,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 146,
									"end": 1355,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 146,
									"end": 1355,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1948,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1948,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1647,
									"end": 1648,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1643,
									"end": 1655,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1643,
									"end": 1655,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1643,
									"end": 1655,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1643,
									"end": 1655,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1690,
									"end": 1702,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1690,
									"end": 1702,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1690,
									"end": 1702,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1711,
									"end": 1772,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1711,
									"end": 1772,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1765,
									"end": 1769,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 1757,
									"end": 1763,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1753,
									"end": 1770,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1743,
									"end": 1770,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1743,
									"end": 1770,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1711,
									"end": 1772,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1711,
									"end": 1772,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1820,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1810,
									"end": 1816,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1807,
									"end": 1821,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1805,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1784,
									"end": 1822,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1781,
									"end": 1942,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1781,
									"end": 1942,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1864,
									"end": 1874,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 1859,
									"end": 1862,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1855,
									"end": 1875,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1852,
									"end": 1853,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1845,
									"end": 1876,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1899,
									"end": 1903,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1896,
									"end": 1897,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1889,
									"end": 1904,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1927,
									"end": 1931,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1924,
									"end": 1925,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 1932,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1781,
									"end": 1942,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1781,
									"end": 1942,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1781,
									"end": 1942,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1948,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1948,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1948,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1948,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2079,
									"end": 2597,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2079,
									"end": 2597,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2181,
									"end": 2183,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2176,
									"end": 2179,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2173,
									"end": 2184,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2170,
									"end": 2591,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2170,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 2170,
									"end": 2591,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2217,
									"end": 2222,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2214,
									"end": 2215,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2207,
									"end": 2223,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2261,
									"end": 2265,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2258,
									"end": 2259,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2248,
									"end": 2266,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2331,
									"end": 2333,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2319,
									"end": 2329,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2315,
									"end": 2334,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2313,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 2308,
									"end": 2335,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2302,
									"end": 2306,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2298,
									"end": 2336,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2367,
									"end": 2371,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2355,
									"end": 2365,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2352,
									"end": 2372,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2349,
									"end": 2396,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2349,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 2349,
									"end": 2396,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2390,
									"end": 2394,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2349,
									"end": 2396,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 2349,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2445,
									"end": 2447,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2440,
									"end": 2443,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2436,
									"end": 2448,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2433,
									"end": 2434,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 2429,
									"end": 2449,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2423,
									"end": 2427,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2419,
									"end": 2450,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2450,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2450,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2500,
									"end": 2581,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 2500,
									"end": 2581,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2518,
									"end": 2520,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2511,
									"end": 2516,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2508,
									"end": 2521,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2500,
									"end": 2581,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2500,
									"end": 2581,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 2500,
									"end": 2581,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2577,
									"end": 2578,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2563,
									"end": 2579,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2563,
									"end": 2579,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2544,
									"end": 2545,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2533,
									"end": 2546,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2500,
									"end": 2581,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 2500,
									"end": 2581,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2500,
									"end": 2581,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 2500,
									"end": 2581,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2504,
									"end": 2507,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2504,
									"end": 2507,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2170,
									"end": 2591,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 2170,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2079,
									"end": 2597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2079,
									"end": 2597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2079,
									"end": 2597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2079,
									"end": 2597,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2773,
									"end": 4118,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2773,
									"end": 4118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2893,
									"end": 2903,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2893,
									"end": 2903,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2915,
									"end": 2945,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2915,
									"end": 2945,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 2968,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 2912,
									"end": 2968,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2948,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 2948,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 2948,
									"end": 2966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2948,
									"end": 2966,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 2948,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2977,
									"end": 3074,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 3067,
									"end": 3073,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3027,
									"end": 3065,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 3059,
									"end": 3063,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3053,
									"end": 3064,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3027,
									"end": 3065,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 3027,
									"end": 3065,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3027,
									"end": 3065,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 3027,
									"end": 3065,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3021,
									"end": 3025,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2977,
									"end": 3074,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2977,
									"end": 3074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2977,
									"end": 3074,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2977,
									"end": 3074,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3129,
									"end": 3133,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3129,
									"end": 3133,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3186,
									"end": 3188,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3175,
									"end": 3189,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3175,
									"end": 3189,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3203,
									"end": 3204,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3198,
									"end": 3861,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3198,
									"end": 3861,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 3198,
									"end": 3861,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 3198,
									"end": 3861,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3905,
									"end": 3906,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3922,
									"end": 3928,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3919,
									"end": 4008,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3919,
									"end": 4008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 3919,
									"end": 4008,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3974,
									"end": 3993,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3974,
									"end": 3993,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3974,
									"end": 3993,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3968,
									"end": 3994,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3919,
									"end": 4008,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 3919,
									"end": 4008,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2730,
									"end": 2731,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2726,
									"end": 2737,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2726,
									"end": 2737,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2726,
									"end": 2737,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2722,
									"end": 2746,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2718,
									"end": 2747,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2708,
									"end": 2748,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2754,
									"end": 2755,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2750,
									"end": 2761,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2750,
									"end": 2761,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2750,
									"end": 2761,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2705,
									"end": 2762,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4021,
									"end": 4102,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4021,
									"end": 4102,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3168,
									"end": 4112,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 3168,
									"end": 4112,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3198,
									"end": 3861,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 3198,
									"end": 3861,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2026,
									"end": 2027,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2019,
									"end": 2033,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2019,
									"end": 2033,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2019,
									"end": 2033,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2063,
									"end": 2067,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2050,
									"end": 2068,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2050,
									"end": 2068,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3234,
									"end": 3254,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3234,
									"end": 3254,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3234,
									"end": 3254,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3352,
									"end": 3588,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 3352,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3366,
									"end": 3373,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3363,
									"end": 3364,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3360,
									"end": 3374,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3352,
									"end": 3588,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3352,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 3352,
									"end": 3588,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3455,
									"end": 3474,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 3455,
									"end": 3474,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3455,
									"end": 3474,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3449,
									"end": 3475,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3434,
									"end": 3476,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3434,
									"end": 3476,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3547,
									"end": 3574,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3547,
									"end": 3574,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3547,
									"end": 3574,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3547,
									"end": 3574,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3515,
									"end": 3516,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3503,
									"end": 3517,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3517,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3517,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3517,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3382,
									"end": 3401,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3382,
									"end": 3401,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3352,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 3352,
									"end": 3588,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3352,
									"end": 3588,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 3352,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3356,
									"end": 3359,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3616,
									"end": 3622,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3607,
									"end": 3614,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3604,
									"end": 3623,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3601,
									"end": 3802,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3601,
									"end": 3802,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 3601,
									"end": 3802,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3677,
									"end": 3696,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3677,
									"end": 3696,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3677,
									"end": 3696,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3671,
									"end": 3697,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3760,
									"end": 3761,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3756,
									"end": 3770,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 3756,
									"end": 3770,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3756,
									"end": 3770,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 3772,
									"end": 3775,
									"name": "PUSH",
									"source": 11,
									"value": "F8"
								},
								{
									"begin": 3752,
									"end": 3776,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3748,
									"end": 3785,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3744,
									"end": 3786,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3729,
									"end": 3787,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3714,
									"end": 3788,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3714,
									"end": 3788,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3601,
									"end": 3802,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 3601,
									"end": 3802,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3601,
									"end": 3802,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3601,
									"end": 3802,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3839,
									"end": 3845,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3836,
									"end": 3837,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3832,
									"end": 3846,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 3828,
									"end": 3850,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3822,
									"end": 3826,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3815,
									"end": 3851,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3168,
									"end": 4112,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 3168,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3168,
									"end": 4112,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3168,
									"end": 4112,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3168,
									"end": 4112,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3168,
									"end": 4112,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2773,
									"end": 4118,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2773,
									"end": 4118,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2773,
									"end": 4118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2773,
									"end": 4118,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2773,
									"end": 4118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 5249,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c48e3458de6d3d01a6872cdc4a6f041ba627aac8bcae6799e277a28f25d32b7064736f6c63430008160033",
									".code": [
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "92B4C81B"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "CE2F4F53"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "DFE8478B"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "F0B305EB"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "DD4F079"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "2C90464D"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "3DC081B9"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "55F804B3"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "6C0360EB"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 5249,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4355,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 4355,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 4355,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3946,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3946,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1968,
											"end": 1997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1906,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4560,
											"end": 4611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4560,
											"end": 4611,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4548,
											"end": 4550,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4617,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2399,
											"end": 2988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2399,
											"end": 2988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 5941,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5927,
											"end": 5941,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5920,
											"end": 5942,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 5943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 5943,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5762,
											"end": 5949,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3355,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3171,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3171,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3171,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4766,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4766,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4471,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4483,
											"end": 4503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4506,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4594,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4601,
											"end": 4607,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4562,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4642,
											"end": 4646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4648,
											"end": 4656,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4627,
											"end": 4657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4627,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4657,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4097,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4081,
											"end": 4097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4097,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4097,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4081,
											"end": 4097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4157,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4077,
											"end": 4157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4128,
											"end": 4135,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 4120,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4113,
											"end": 4146,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4157,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4077,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4204,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4206,
											"end": 4224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4180,
											"end": 4225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4225,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1968,
											"end": 1997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1968,
											"end": 1997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3694,
											"end": 3701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3694,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3704,
											"end": 3712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3694,
											"end": 3701,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3694,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3694,
											"end": 3712,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3694,
											"end": 3712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3694,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3694,
											"end": 3712,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD"
										},
										{
											"begin": 3743,
											"end": 3751,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3751,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3728,
											"end": 3752,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3752,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1906,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2490,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2617,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2679,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2953,
											"end": 2979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 2979,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2953,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2903,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2980,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2981,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3355,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3171,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3273,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3257,
											"end": 3273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3273,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3257,
											"end": 3273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3273,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3310,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3310,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3348,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5902,
											"end": 5943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 5943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 5943,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "360C3D72EE193226275B842F85231C259C934E85459FED80FA68E502FFA9DBDE"
										},
										{
											"begin": 3325,
											"end": 3348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3348,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3348,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3348,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3348,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3348,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4892,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4985,
											"end": 5013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5055,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5082,
											"end": 5090,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5082,
											"end": 5102,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5082,
											"end": 5102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5082,
											"end": 5102,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5131,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5137,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5123,
											"end": 5137,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5137,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5174,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5187,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5166,
											"end": 5187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5187,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5233,
											"end": 5239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5215,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5215,
											"end": 5240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5208,
											"end": 5240,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5247,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4766,
											"end": 5247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4560,
											"end": 4611,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4560,
											"end": 4611,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4414,
											"end": 4617,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 476,
											"end": 3502,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 476,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 534,
											"end": 547,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 766,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 766,
											"end": 777,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 782,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 762,
											"end": 793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 3502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 762,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH data",
											"source": 1,
											"value": "84D8A590DE33E00CBDC16E1F28C3506F5EC15C599FAB9A6A4BCD575CC2F110CE"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1314,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1313,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1308,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1297,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1723,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1774,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1762,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1810,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1896,
											"end": 1903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1951,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2590,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2576,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2570,
											"end": 2584,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2591,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2564,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2594,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2641,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2721,
											"end": 2726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2707,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2687,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2737,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2783,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2771,
											"end": 2780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2784,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2850,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2878,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2879,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2994,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2992,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 3013,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3060,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3236,
											"end": 3240,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3245,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3314,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3315,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3363,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 3355,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3441,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3448,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 476,
											"end": 3502,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 476,
											"end": 3502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 146,
											"end": 394,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 146,
											"end": 394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 213,
											"end": 215,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 216,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 255,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 243,
											"end": 260,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 243,
											"end": 260,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 290,
											"end": 308,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 275,
											"end": 309,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 275,
											"end": 309,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 311,
											"end": 333,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 311,
											"end": 333,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 311,
											"end": 333,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 334,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 269,
											"end": 357,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 269,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 269,
											"end": 357,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 337,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 337,
											"end": 355,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 146,
											"end": 394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 146,
											"end": 394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 399,
											"end": 652,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 399,
											"end": 652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 471,
											"end": 473,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 474,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 513,
											"end": 517,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 501,
											"end": 518,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 501,
											"end": 518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 548,
											"end": 566,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 533,
											"end": 567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 533,
											"end": 567,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 569,
											"end": 591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 569,
											"end": 591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 569,
											"end": 591,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 530,
											"end": 592,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 527,
											"end": 615,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 527,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 527,
											"end": 615,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 657,
											"end": 1376,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 657,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 700,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 756,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 738,
											"end": 744,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 734,
											"end": 751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 730,
											"end": 757,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 720,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 720,
											"end": 775,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 771,
											"end": 772,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 769,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 761,
											"end": 773,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 720,
											"end": 775,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 720,
											"end": 775,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 807,
											"end": 813,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 794,
											"end": 814,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 872,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 866,
											"end": 868,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 863,
											"end": 873,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 860,
											"end": 896,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 876,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 876,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 876,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 876,
											"end": 894,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 876,
											"end": 894,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 951,
											"end": 953,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 954,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 919,
											"end": 921,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1005,
											"end": 1018,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1018,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 997,
											"end": 1028,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 993,
											"end": 1033,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 981,
											"end": 1034,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 981,
											"end": 1034,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 981,
											"end": 1034,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1069,
											"end": 1091,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1115,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 1043,
											"end": 1115,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 1095,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1145,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1146,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1216,
											"end": 1219,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1209,
											"end": 1213,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1206,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1196,
											"end": 1202,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1192,
											"end": 1207,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1220,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1237,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 1182,
											"end": 1237,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1231,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1237,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 1182,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1297,
											"end": 1299,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1294,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1278,
											"end": 1295,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1271,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 1269,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1246,
											"end": 1300,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1334,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1316,
											"end": 1342,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1309,
											"end": 1346,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1364,
											"end": 1370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1370,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 657,
											"end": 1376,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 657,
											"end": 1376,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 657,
											"end": 1376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 657,
											"end": 1376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 657,
											"end": 1376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1531,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 1381,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1476,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1476,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1506,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1485,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 1485,
											"end": 1525,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1485,
											"end": 1525,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 1485,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1531,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1531,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1531,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1536,
											"end": 2720,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 1536,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1604,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1651,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1626,
											"end": 1645,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1622,
											"end": 1652,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1619,
											"end": 1669,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1619,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1619,
											"end": 1669,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1665,
											"end": 1666,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1655,
											"end": 1667,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1619,
											"end": 1669,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1619,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1687,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1687,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1687,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1687,
											"end": 1704,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1687,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1727,
											"end": 1750,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1810,
											"end": 1812,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1802,
											"end": 1808,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1799,
											"end": 1813,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1796,
											"end": 1830,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1796,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1796,
											"end": 1830,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1828,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1796,
											"end": 1830,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1796,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 1895,
											"end": 1898,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1886,
											"end": 1892,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 1853,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 1853,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1900,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 1955,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1942,
											"end": 1951,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1957,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1972,
											"end": 1980,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1966,
											"end": 2002,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1966,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 1966,
											"end": 2002,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 1999,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 2000,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1966,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 1966,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2034,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2078,
											"end": 2081,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2056,
											"end": 2065,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2034,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 2034,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2034,
											"end": 2082,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2034,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2031,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2027,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2032,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2115,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2156,
											"end": 2158,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2154,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2115,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2115,
											"end": 2160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2115,
											"end": 2160,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2115,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2110,
											"end": 2112,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2108,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2099,
											"end": 2113,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2092,
											"end": 2161,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2216,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2186,
											"end": 2218,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2170,
											"end": 2218,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2170,
											"end": 2218,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2233,
											"end": 2241,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2246,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2263,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2227,
											"end": 2263,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2257,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2249,
											"end": 2261,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2263,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2227,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2328,
											"end": 2336,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2337,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 2295,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2343,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2295,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2292,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2283,
											"end": 2288,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2386,
											"end": 2395,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2382,
											"end": 2401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2447,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 2411,
											"end": 2447,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2441,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2445,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2447,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 2411,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2524,
											"end": 2527,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2521,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2502,
											"end": 2511,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 2480,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2528,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2480,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2477,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2467,
											"end": 2472,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2478,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2456,
											"end": 2529,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2582,
											"end": 2585,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 2571,
											"end": 2580,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2587,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2538,
											"end": 2587,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2538,
											"end": 2587,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2612,
											"end": 2614,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2602,
											"end": 2610,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2615,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2626,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2709,
											"end": 2712,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 2665,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2713,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2665,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2659,
											"end": 2662,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 2652,
											"end": 2657,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2714,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1536,
											"end": 2720,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1536,
											"end": 2720,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1536,
											"end": 2720,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1536,
											"end": 2720,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1536,
											"end": 2720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2725,
											"end": 3156,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 2725,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 2890,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2876,
											"end": 2885,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2867,
											"end": 2874,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2863,
											"end": 2886,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2859,
											"end": 2891,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2908,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2856,
											"end": 2908,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2894,
											"end": 2906,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2908,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2856,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2950,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2917,
											"end": 2950,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2917,
											"end": 2950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2986,
											"end": 3004,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2973,
											"end": 3005,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3028,
											"end": 3046,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3017,
											"end": 3047,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3083,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 3142,
											"end": 3149,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3122,
											"end": 3131,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3140,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3083,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3083,
											"end": 3150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3083,
											"end": 3150,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 3083,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3073,
											"end": 3150,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3073,
											"end": 3150,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3073,
											"end": 3150,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2725,
											"end": 3156,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2725,
											"end": 3156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2725,
											"end": 3156,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2725,
											"end": 3156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2725,
											"end": 3156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2725,
											"end": 3156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3411,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 3161,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3247,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3369,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3256,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3270,
											"end": 3276,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3267,
											"end": 3268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3277,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3369,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 3256,
											"end": 3369,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3346,
											"end": 3357,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3346,
											"end": 3357,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3346,
											"end": 3357,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3327,
											"end": 3338,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3327,
											"end": 3338,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3327,
											"end": 3338,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3320,
											"end": 3359,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3294,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3295,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3256,
											"end": 3369,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3369,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 3256,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3403,
											"end": 3404,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3401,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3378,
											"end": 3405,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3812,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 3416,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3567,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3591,
											"end": 3604,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3633,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3647,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3656,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 3725,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3695,
											"end": 3701,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3656,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 3656,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3656,
											"end": 3735,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3656,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3796,
											"end": 3798,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3775,
											"end": 3790,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3771,
											"end": 3800,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3801,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3801,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3801,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3752,
											"end": 3806,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3806,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3812,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3416,
											"end": 3812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 4409,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 3817,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 3894,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3902,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 3935,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 3947,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3920,
											"end": 3952,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3969,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 3917,
											"end": 3969,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 3966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3955,
											"end": 3967,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3969,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 3917,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4014,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4015,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4052,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4075,
											"end": 4077,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4067,
											"end": 4073,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4064,
											"end": 4078,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4061,
											"end": 4095,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4061,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 4061,
											"end": 4095,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4091,
											"end": 4092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4089,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4081,
											"end": 4093,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4061,
											"end": 4095,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 4061,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4104,
											"end": 4136,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4104,
											"end": 4136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4181,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4171,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 4145,
											"end": 4200,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4196,
											"end": 4197,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4186,
											"end": 4198,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4200,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 4145,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4223,
											"end": 4239,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4264,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4248,
											"end": 4282,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4248,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 4248,
											"end": 4282,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4279,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4276,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4268,
											"end": 4280,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4248,
											"end": 4282,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 4248,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4323,
											"end": 4330,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4320,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4309,
											"end": 4315,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4316,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4297,
											"end": 4321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4294,
											"end": 4331,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4291,
											"end": 4348,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4291,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 4291,
											"end": 4348,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4342,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4291,
											"end": 4348,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 4291,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4378,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4367,
											"end": 4378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4367,
											"end": 4378,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4367,
											"end": 4378,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4367,
											"end": 4378,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3817,
											"end": 4409,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 4409,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3817,
											"end": 4409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 5757,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4622,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4713,
											"end": 4719,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4768,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4754,
											"end": 4763,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4752,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4764,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4769,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4734,
											"end": 4786,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4734,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4734,
											"end": 4786,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4782,
											"end": 4783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4784,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4734,
											"end": 4786,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4734,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4831,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4851,
											"end": 4869,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4895,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 4991,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4965,
											"end": 4992,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4962,
											"end": 5009,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4962,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4962,
											"end": 5009,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5005,
											"end": 5006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5003,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5007,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4962,
											"end": 5009,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4962,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 5031,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5031,
											"end": 5053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5053,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 5031,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5091,
											"end": 5093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5094,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5119,
											"end": 5121,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5109,
											"end": 5117,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5103,
											"end": 5139,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5103,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 5103,
											"end": 5139,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5103,
											"end": 5139,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 5103,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5162,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 5199,
											"end": 5206,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5188,
											"end": 5196,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5184,
											"end": 5186,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5197,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5162,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5162,
											"end": 5207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5162,
											"end": 5207,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 5162,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5160,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5208,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5250,
											"end": 5252,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5258,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5281,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5270,
											"end": 5286,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5303,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5267,
											"end": 5303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5299,
											"end": 5300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5297,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5289,
											"end": 5301,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5303,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5267,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 5372,
											"end": 5379,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5369,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5359,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5353,
											"end": 5370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5335,
											"end": 5380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5380,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 5335,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5332,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5323,
											"end": 5328,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5319,
											"end": 5333,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5312,
											"end": 5381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5312,
											"end": 5381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5429,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5423,
											"end": 5425,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5446,
											"end": 5454,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5476,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 5440,
											"end": 5476,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5470,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5462,
											"end": 5474,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5476,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 5440,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5508,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 5545,
											"end": 5552,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5534,
											"end": 5542,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5532,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5526,
											"end": 5543,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5508,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5508,
											"end": 5553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5508,
											"end": 5553,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 5508,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5503,
											"end": 5505,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5501,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5492,
											"end": 5506,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5485,
											"end": 5554,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5485,
											"end": 5554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5602,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5596,
											"end": 5598,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5603,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5604,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5631,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5619,
											"end": 5627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5616,
											"end": 5632,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5613,
											"end": 5649,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5613,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 5613,
											"end": 5649,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5647,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5613,
											"end": 5649,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 5613,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5681,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 5718,
											"end": 5725,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5707,
											"end": 5715,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5705,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5699,
											"end": 5716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5681,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5681,
											"end": 5726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5681,
											"end": 5726,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 5681,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5658,
											"end": 5727,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5669,
											"end": 5674,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 5757,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4622,
											"end": 5757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5954,
											"end": 6538,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5954,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6080,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6127,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6113,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6102,
											"end": 6125,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6098,
											"end": 6130,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6147,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 6095,
											"end": 6147,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6144,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6140,
											"end": 6141,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6133,
											"end": 6145,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6147,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 6095,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6183,
											"end": 6192,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6170,
											"end": 6193,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6212,
											"end": 6230,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6245,
											"end": 6251,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6242,
											"end": 6256,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6239,
											"end": 6273,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6239,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 6239,
											"end": 6273,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6269,
											"end": 6270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6267,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6259,
											"end": 6271,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6239,
											"end": 6273,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 6239,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 6334,
											"end": 6341,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6325,
											"end": 6331,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6323,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 6292,
											"end": 6342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6342,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 6292,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6342,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6342,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 6397,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6384,
											"end": 6393,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6399,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6351,
											"end": 6399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6351,
											"end": 6399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6424,
											"end": 6426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6414,
											"end": 6422,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6411,
											"end": 6427,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6444,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 6408,
											"end": 6444,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6437,
											"end": 6438,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6442,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6444,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 6408,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 6524,
											"end": 6531,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6521,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6502,
											"end": 6511,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6498,
											"end": 6522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 6463,
											"end": 6532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6829,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6543,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6602,
											"end": 6608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6657,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6643,
											"end": 6652,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6634,
											"end": 6641,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6630,
											"end": 6653,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6658,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6623,
											"end": 6675,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6623,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 6623,
											"end": 6675,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6668,
											"end": 6669,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6673,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6623,
											"end": 6675,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 6623,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6697,
											"end": 6720,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6697,
											"end": 6720,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6749,
											"end": 6780,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6749,
											"end": 6780,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6739,
											"end": 6781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6739,
											"end": 6781,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6729,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 6729,
											"end": 6799,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6795,
											"end": 6796,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6792,
											"end": 6793,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6785,
											"end": 6797,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6729,
											"end": 6799,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 6729,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6818,
											"end": 6823,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6829,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6543,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6834,
											"end": 7214,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 6834,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 6914,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 6968,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 6968,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 6968,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6977,
											"end": 7038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 6977,
											"end": 7038,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7031,
											"end": 7035,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7036,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7036,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6977,
											"end": 7038,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 6977,
											"end": 7038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7084,
											"end": 7086,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7076,
											"end": 7082,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7073,
											"end": 7087,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7050,
											"end": 7088,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7047,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 7047,
											"end": 7208,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7130,
											"end": 7140,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 7125,
											"end": 7128,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 7121,
											"end": 7141,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7119,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7142,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7165,
											"end": 7169,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 7162,
											"end": 7163,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7155,
											"end": 7170,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7197,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7190,
											"end": 7191,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7183,
											"end": 7198,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7047,
											"end": 7208,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 7047,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7047,
											"end": 7208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6834,
											"end": 7214,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6834,
											"end": 7214,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6834,
											"end": 7214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6834,
											"end": 7214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 8068,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 7345,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7395,
											"end": 7398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7441,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7430,
											"end": 7442,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7465,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7491,
											"end": 7500,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7465,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 7465,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7465,
											"end": 7501,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7465,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7520,
											"end": 7521,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7537,
											"end": 7554,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7537,
											"end": 7554,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7537,
											"end": 7554,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7563,
											"end": 7696,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7563,
											"end": 7696,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7563,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7563,
											"end": 7696,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7710,
											"end": 7711,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7705,
											"end": 8062,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7705,
											"end": 8062,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7705,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 7705,
											"end": 8062,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7530,
											"end": 8062,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7563,
											"end": 7696,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7563,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7596,
											"end": 7620,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7596,
											"end": 7620,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7621,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7621,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7669,
											"end": 7683,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7669,
											"end": 7683,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7684,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7650,
											"end": 7685,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7650,
											"end": 7685,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7641,
											"end": 7686,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7641,
											"end": 7686,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7641,
											"end": 7686,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7563,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7563,
											"end": 7696,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7705,
											"end": 8062,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 7705,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7736,
											"end": 7741,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7733,
											"end": 7734,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7726,
											"end": 7742,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7810,
											"end": 7814,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7808,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7797,
											"end": 7815,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7851,
											"end": 8016,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7851,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7871,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 7863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7859,
											"end": 7872,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7851,
											"end": 8016,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7851,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 7851,
											"end": 8016,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7943,
											"end": 7957,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7943,
											"end": 7957,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7930,
											"end": 7941,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 7930,
											"end": 7941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7930,
											"end": 7941,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7923,
											"end": 7958,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8002,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8002,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7880,
											"end": 7890,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7880,
											"end": 7890,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7851,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7851,
											"end": 8016,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7851,
											"end": 8016,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 7851,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7855,
											"end": 7858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7855,
											"end": 7858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7855,
											"end": 7858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8045,
											"end": 8051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8040,
											"end": 8043,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8036,
											"end": 8052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8029,
											"end": 8052,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8029,
											"end": 8052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 8062,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7530,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 8062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 8062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 8062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 8062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 8068,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 8068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 8068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 8068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 8068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8073,
											"end": 8603,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 8073,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8350,
											"end": 8353,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8378,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 8412,
											"end": 8415,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8404,
											"end": 8410,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8378,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 8378,
											"end": 8416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8378,
											"end": 8416,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 8378,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8432,
											"end": 8434,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8425,
											"end": 8440,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8469,
											"end": 8475,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8463,
											"end": 8476,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8485,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 8551,
											"end": 8557,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8543,
											"end": 8545,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8539,
											"end": 8549,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8532,
											"end": 8536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8485,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 8485,
											"end": 8558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8485,
											"end": 8558,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 8485,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8578,
											"end": 8593,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 8596,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8574,
											"end": 8597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8574,
											"end": 8597,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8073,
											"end": 8603,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8073,
											"end": 8603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8608,
											"end": 8997,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 8608,
											"end": 8997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8784,
											"end": 8787,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8812,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 8846,
											"end": 8849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8812,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 8812,
											"end": 8850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8812,
											"end": 8850,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 8812,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8873,
											"end": 8886,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 8953,
											"end": 8959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8949,
											"end": 8951,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8942,
											"end": 8946,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8934,
											"end": 8940,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8930,
											"end": 8947,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 8895,
											"end": 8960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8976,
											"end": 8991,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8976,
											"end": 8991,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8608,
											"end": 8997,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8608,
											"end": 8997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9002,
											"end": 9520,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 9002,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9099,
											"end": 9102,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9096,
											"end": 9107,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9093,
											"end": 9514,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9093,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 9093,
											"end": 9514,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9140,
											"end": 9145,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9137,
											"end": 9138,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9130,
											"end": 9146,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9188,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9181,
											"end": 9182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9189,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9254,
											"end": 9256,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9242,
											"end": 9252,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9238,
											"end": 9257,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9235,
											"end": 9236,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9231,
											"end": 9258,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 9225,
											"end": 9229,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9290,
											"end": 9294,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9278,
											"end": 9288,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9275,
											"end": 9295,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9272,
											"end": 9319,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9272,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 9272,
											"end": 9319,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9272,
											"end": 9319,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 9272,
											"end": 9319,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9368,
											"end": 9370,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9363,
											"end": 9366,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9359,
											"end": 9371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9356,
											"end": 9357,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9352,
											"end": 9372,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 9346,
											"end": 9350,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9373,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9373,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9423,
											"end": 9504,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 9423,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9434,
											"end": 9439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9431,
											"end": 9444,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9423,
											"end": 9504,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9423,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 9423,
											"end": 9504,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9502,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9502,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9467,
											"end": 9468,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9423,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 9423,
											"end": 9504,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9423,
											"end": 9504,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 9423,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9427,
											"end": 9430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9427,
											"end": 9430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9093,
											"end": 9514,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 9093,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9002,
											"end": 9520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9002,
											"end": 9520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9002,
											"end": 9520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9002,
											"end": 9520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9696,
											"end": 10894,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 9696,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9820,
											"end": 9838,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9818,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9812,
											"end": 9839,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9809,
											"end": 9862,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9809,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 9809,
											"end": 9862,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 9842,
											"end": 9860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9871,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 9961,
											"end": 9964,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9921,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9953,
											"end": 9957,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9947,
											"end": 9958,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9921,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 9921,
											"end": 9959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9921,
											"end": 9959,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9921,
											"end": 9959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9915,
											"end": 9919,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9871,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 9871,
											"end": 9965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9871,
											"end": 9965,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 9871,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 9992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10018,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10011,
											"end": 10014,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10008,
											"end": 10019,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10033,
											"end": 10034,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10028,
											"end": 10636,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10028,
											"end": 10636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 10028,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 10028,
											"end": 10636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10700,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10694,
											"end": 10787,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10694,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 10694,
											"end": 10787,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10753,
											"end": 10772,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10753,
											"end": 10772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10753,
											"end": 10772,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10740,
											"end": 10773,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 10694,
											"end": 10787,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 10694,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9653,
											"end": 9654,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 9649,
											"end": 9660,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9649,
											"end": 9660,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9649,
											"end": 9660,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9645,
											"end": 9669,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 9641,
											"end": 9670,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 9631,
											"end": 9671,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9677,
											"end": 9678,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9673,
											"end": 9684,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9684,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9684,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9628,
											"end": 9685,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10800,
											"end": 10878,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10800,
											"end": 10878,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10001,
											"end": 10888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 10001,
											"end": 10888,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10028,
											"end": 10636,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 10028,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7292,
											"end": 7293,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7299,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7285,
											"end": 7299,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7285,
											"end": 7299,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7329,
											"end": 7333,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7316,
											"end": 7334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7316,
											"end": 7334,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10064,
											"end": 10081,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 10064,
											"end": 10081,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10064,
											"end": 10081,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10179,
											"end": 10408,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 10179,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10193,
											"end": 10200,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10190,
											"end": 10191,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10187,
											"end": 10201,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10179,
											"end": 10408,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10179,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 10179,
											"end": 10408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10282,
											"end": 10301,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10282,
											"end": 10301,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10282,
											"end": 10301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10269,
											"end": 10302,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 10254,
											"end": 10303,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10254,
											"end": 10303,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10389,
											"end": 10393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10374,
											"end": 10394,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 10374,
											"end": 10394,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10374,
											"end": 10394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10374,
											"end": 10394,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 10342,
											"end": 10343,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10330,
											"end": 10344,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10330,
											"end": 10344,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10330,
											"end": 10344,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10330,
											"end": 10344,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10179,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 10179,
											"end": 10408,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10179,
											"end": 10408,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 10179,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10183,
											"end": 10186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10436,
											"end": 10439,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10427,
											"end": 10434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10424,
											"end": 10440,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10580,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10580,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 10421,
											"end": 10580,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10560,
											"end": 10561,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10562,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 10550,
											"end": 10553,
											"name": "PUSH",
											"source": 11,
											"value": "F8"
										},
										{
											"begin": 10544,
											"end": 10547,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 10541,
											"end": 10542,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 10537,
											"end": 10548,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 10533,
											"end": 10554,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10529,
											"end": 10563,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 10525,
											"end": 10564,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 10512,
											"end": 10521,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10507,
											"end": 10510,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 10503,
											"end": 10522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10490,
											"end": 10523,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 10486,
											"end": 10565,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10478,
											"end": 10484,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10471,
											"end": 10566,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10580,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 10421,
											"end": 10580,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10623,
											"end": 10624,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10617,
											"end": 10620,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10614,
											"end": 10615,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10610,
											"end": 10621,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 10606,
											"end": 10625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10600,
											"end": 10604,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10593,
											"end": 10626,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10001,
											"end": 10888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10001,
											"end": 10888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9696,
											"end": 10894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9696,
											"end": 10894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9696,
											"end": 10894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9696,
											"end": 10894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10899,
											"end": 11289,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 10899,
											"end": 11289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11058,
											"end": 11060,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11047,
											"end": 11056,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11061,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11097,
											"end": 11103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11094,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11081,
											"end": 11090,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11070,
											"end": 11104,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11154,
											"end": 11160,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11152,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11141,
											"end": 11143,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11130,
											"end": 11139,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11113,
											"end": 11161,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 11210,
											"end": 11211,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11181,
											"end": 11203,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11181,
											"end": 11203,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11181,
											"end": 11203,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11205,
											"end": 11207,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11177,
											"end": 11208,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11177,
											"end": 11208,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11177,
											"end": 11208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11170,
											"end": 11212,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11170,
											"end": 11212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11170,
											"end": 11212,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11170,
											"end": 11212,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11273,
											"end": 11275,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11252,
											"end": 11267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11252,
											"end": 11267,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11252,
											"end": 11267,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11248,
											"end": 11277,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11233,
											"end": 11278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11229,
											"end": 11283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11229,
											"end": 11283,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10899,
											"end": 11289,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10899,
											"end": 11289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11294,
											"end": 13071,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 11294,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D913730B6B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12092,
											"end": 12135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12092,
											"end": 12135,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12158,
											"end": 12171,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12158,
											"end": 12171,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12074,
											"end": 12077,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12074,
											"end": 12077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12180,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 12158,
											"end": 12171,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12243,
											"end": 12244,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 12234,
											"end": 12245,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12234,
											"end": 12245,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12227,
											"end": 12231,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12180,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 12180,
											"end": 12254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12180,
											"end": 12254,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 12180,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "111610113232B9B1B934B83A34B7B7111D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12313,
											"end": 12314,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 12273,
											"end": 12289,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12273,
											"end": 12289,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12273,
											"end": 12289,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12305,
											"end": 12315,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12305,
											"end": 12315,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12305,
											"end": 12315,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12298,
											"end": 12366,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12391,
											"end": 12404,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12391,
											"end": 12404,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12413,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 12391,
											"end": 12404,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12475,
											"end": 12477,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 12467,
											"end": 12478,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12478,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12460,
											"end": 12464,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12448,
											"end": 12465,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 12448,
											"end": 12465,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12413,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 12413,
											"end": 12489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12413,
											"end": 12489,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 12413,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116101134B6B0B3B2911D1011"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12549,
											"end": 12551,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 12508,
											"end": 12525,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12508,
											"end": 12525,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12508,
											"end": 12525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12508,
											"end": 12525,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12541,
											"end": 12552,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12541,
											"end": 12552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12541,
											"end": 12552,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12534,
											"end": 12593,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12618,
											"end": 12631,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12618,
											"end": 12631,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12640,
											"end": 12716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 12618,
											"end": 12631,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12702,
											"end": 12704,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 12694,
											"end": 12705,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12694,
											"end": 12705,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12687,
											"end": 12691,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12675,
											"end": 12692,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 12675,
											"end": 12692,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12640,
											"end": 12716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 12640,
											"end": 12716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12640,
											"end": 12716,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 12640,
											"end": 12716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116101130B734B6B0BA34B7B72FBAB936111D1011"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12776,
											"end": 12778,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 12735,
											"end": 12752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12752,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12768,
											"end": 12779,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12768,
											"end": 12779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12768,
											"end": 12779,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12860,
											"end": 12873,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12860,
											"end": 12873,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12882,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12860,
											"end": 12873,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12944,
											"end": 12946,
											"name": "PUSH",
											"source": 11,
											"value": "3D"
										},
										{
											"begin": 12936,
											"end": 12947,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12936,
											"end": 12947,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12917,
											"end": 12934,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 12917,
											"end": 12934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12882,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 12882,
											"end": 12958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12882,
											"end": 12958,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12882,
											"end": 12958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "227D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13018,
											"end": 13020,
											"name": "PUSH",
											"source": 11,
											"value": "3D"
										},
										{
											"begin": 12977,
											"end": 12994,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12977,
											"end": 12994,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12977,
											"end": 12994,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12977,
											"end": 12994,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13010,
											"end": 13021,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13010,
											"end": 13021,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13010,
											"end": 13021,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13003,
											"end": 13038,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13062,
											"end": 13064,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 13054,
											"end": 13065,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13054,
											"end": 13065,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 11294,
											"end": 13071,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11294,
											"end": 13071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13076,
											"end": 13537,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 13076,
											"end": 13537,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13338,
											"end": 13369,
											"name": "PUSH",
											"source": 11,
											"value": "646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000"
										},
										{
											"begin": 13333,
											"end": 13336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13326,
											"end": 13370,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13308,
											"end": 13311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13399,
											"end": 13405,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13393,
											"end": 13406,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13415,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 13483,
											"end": 13489,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13478,
											"end": 13480,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 13473,
											"end": 13476,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13469,
											"end": 13481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13462,
											"end": 13466,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13454,
											"end": 13460,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 13450,
											"end": 13467,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13415,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 13415,
											"end": 13490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13415,
											"end": 13490,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 13415,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13526,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13526,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13526,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13526,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13528,
											"end": 13530,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 13506,
											"end": 13531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13506,
											"end": 13531,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13076,
											"end": 13537,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13076,
											"end": 13537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13801,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 13674,
											"end": 13801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13735,
											"end": 13745,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 13730,
											"end": 13733,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 13726,
											"end": 13746,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 13723,
											"end": 13724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13716,
											"end": 13747,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13766,
											"end": 13770,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 13763,
											"end": 13764,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13756,
											"end": 13771,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13790,
											"end": 13794,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13787,
											"end": 13788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13780,
											"end": 13795,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13806,
											"end": 13931,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 13806,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13892,
											"end": 13902,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13892,
											"end": 13902,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13892,
											"end": 13902,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13889,
											"end": 13925,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13889,
											"end": 13925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 13889,
											"end": 13925,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13905,
											"end": 13923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 13905,
											"end": 13923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 13905,
											"end": 13923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13936,
											"end": 14153,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 13936,
											"end": 14153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13976,
											"end": 13977,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14002,
											"end": 14003,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13992,
											"end": 14124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 13992,
											"end": 14124,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14046,
											"end": 14056,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 14041,
											"end": 14044,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 14037,
											"end": 14057,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 14034,
											"end": 14035,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14027,
											"end": 14058,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14081,
											"end": 14085,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 14078,
											"end": 14079,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14071,
											"end": 14086,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14109,
											"end": 14113,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14106,
											"end": 14107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14099,
											"end": 14114,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13992,
											"end": 14124,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 13992,
											"end": 14124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14138,
											"end": 14147,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 14138,
											"end": 14147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13936,
											"end": 14153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14158,
											"end": 14326,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 14158,
											"end": 14326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14231,
											"end": 14240,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14231,
											"end": 14240,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14231,
											"end": 14240,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14262,
											"end": 14271,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14262,
											"end": 14271,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14279,
											"end": 14294,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14279,
											"end": 14294,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14279,
											"end": 14294,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 14273,
											"end": 14295,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14273,
											"end": 14295,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14259,
											"end": 14296,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 14249,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 14249,
											"end": 14320,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14300,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 14300,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 14300,
											"end": 14318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"84D8A590DE33E00CBDC16E1F28C3506F5EC15C599FAB9A6A4BCD575CC2F110CE": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"packages/revolution-contracts/IERC20.sol",
								"packages/revolution-contracts/VerbsDescriptor.sol",
								"packages/revolution-contracts/interfaces/ICultureIndex.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"baseURI()": "6c0360eb",
							"constructTokenURI((string,string,string,string))": "92b4c81b",
							"dataURI(uint256,(string,string,uint8,string,string,string))": "0dd4f079",
							"genericDataURI(string,(string,string,uint8,string,string,string))": "f0b305eb",
							"isDataURIEnabled()": "ce2f4f53",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBaseURI(string)": "55f804b3",
							"toggleDataURIEnabled()": "dfe8478b",
							"tokenNamePrefix()": "3dc081b9",
							"tokenURI(uint256,(string,string,uint8,string,string,string))": "2c90464d",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenNamePrefix\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"BaseURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"DataURIToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PartsLocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animation_url\",\"type\":\"string\"}],\"internalType\":\"struct VerbsDescriptor.TokenURIParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"constructTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"dataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"genericDataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDataURIEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleDataURIEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenNamePrefix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setBaseURI(string)\":{\"details\":\"This can only be called by the owner.\"},\"toggleDataURIEnabled()\":{\"details\":\"This can only be called by the owner.\"},\"tokenURI(uint256,(string,string,uint8,string,string,string))\":{\"details\":\"The returned value may be a base64 encoded data URI or an API URL.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructTokenURI((string,string,string,string))\":{\"notice\":\"Construct an ERC721 token URI.\"},\"dataURI(uint256,(string,string,uint8,string,string,string))\":{\"notice\":\"Given a token ID, construct a base64 encoded data URI for an official Vrbs DAO verb.\"},\"genericDataURI(string,(string,string,uint8,string,string,string))\":{\"notice\":\"Given a name, and metadata, construct a base64 encoded data URI.\"},\"setBaseURI(string)\":{\"notice\":\"Set the base URI for all token IDs. It is automatically added as a prefix to the value returned in {tokenURI}, or to the token ID if {tokenURI} is empty.\"},\"toggleDataURIEnabled()\":{\"notice\":\"Toggle a boolean value which determines if `tokenURI` returns a data URI or an HTTP URL.\"},\"tokenURI(uint256,(string,string,uint8,string,string,string))\":{\"notice\":\"Given a token ID, construct a token URI for an official Vrbs DAO verb.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/VerbsDescriptor.sol\":\"VerbsDescriptor\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x6f7014d688c4386c26e8c02371ecb7f7740d2542f1ecadffd5a3084511e2a344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81d8f5aabdb088f19c80ce460a2e670ecc651ff4ca46878d239e29bfe705e52c\",\"dweb:/ipfs/QmUveDGa7vEtYBxbVUajNcDvyjP6oaD7Va1M5qwZbudmAn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]},\"packages/revolution-contracts/VerbsDescriptor.sol\":{\"keccak256\":\"0x92a20e5fd4cd07702618435a322cad1dac91697da14a320531b0f3400fb3db9c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a6c4b980536eb0be44d34f58c4d42a5b6ed31e5ce3adc64939a9ce8378fd6fe7\",\"dweb:/ipfs/QmQBhc8W6hDjGXiSQmaQEY861TvqdhHUfSMbNsFnnv8BtA\"]},\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":{\"keccak256\":\"0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0\",\"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs\"]},\"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol\":{\"keccak256\":\"0x2065a3f6eb43b5a06e531b15ac8e32a46521c7c80b2e73ecd7e285438ec2e26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6190c0c4fdfcb40006e5b08238638c0f92f92f648216f3d1d4ff435892b32437\",\"dweb:/ipfs/Qmc9VQc6WWjMUZaeEojVaHtzmTBPfa9V2ZHTuhSZkDK5Wo\"]},\"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol\":{\"keccak256\":\"0xc26ef29b32d9afe3074b02e522d42a39ccadc9653069011ea5436717c4e32211\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8b013f8790795e8e42320ba278792606efaa67ecf94814dc768b8984f02f0b6f\",\"dweb:/ipfs/QmZU5CWYPsfaU3bsFrX8B13ri8AYVYxBtJtV5z9WrYCCLS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "packages/revolution-contracts/VerbsDescriptor.sol:VerbsDescriptor",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1734,
								"contract": "packages/revolution-contracts/VerbsDescriptor.sol:VerbsDescriptor",
								"label": "isDataURIEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1737,
								"contract": "packages/revolution-contracts/VerbsDescriptor.sol:VerbsDescriptor",
								"label": "baseURI",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1739,
								"contract": "packages/revolution-contracts/VerbsDescriptor.sol:VerbsDescriptor",
								"label": "tokenNamePrefix",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructTokenURI((string,string,string,string))": {
								"notice": "Construct an ERC721 token URI."
							},
							"dataURI(uint256,(string,string,uint8,string,string,string))": {
								"notice": "Given a token ID, construct a base64 encoded data URI for an official Vrbs DAO verb."
							},
							"genericDataURI(string,(string,string,uint8,string,string,string))": {
								"notice": "Given a name, and metadata, construct a base64 encoded data URI."
							},
							"setBaseURI(string)": {
								"notice": "Set the base URI for all token IDs. It is automatically added as a prefix to the value returned in {tokenURI}, or to the token ID if {tokenURI} is empty."
							},
							"toggleDataURIEnabled()": {
								"notice": "Toggle a boolean value which determines if `tokenURI` returns a data URI or an HTTP URL."
							},
							"tokenURI(uint256,(string,string,uint8,string,string,string))": {
								"notice": "Given a token ID, construct a token URI for an official Vrbs DAO verb."
							}
						},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/interfaces/ICultureIndex.sol": {
				"ICultureIndex": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "image",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "animationUrl",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "text",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "mediaType",
									"type": "uint8"
								}
							],
							"name": "PieceCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bps",
									"type": "uint256"
								}
							],
							"name": "PieceCreatorAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "remover",
									"type": "address"
								}
							],
							"name": "PieceDropped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bps",
									"type": "uint256"
								}
							],
							"name": "PieceDroppedCreator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalWeight",
									"type": "uint256"
								}
							],
							"name": "VoteCast",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "metadata",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "bps",
											"type": "uint256"
										}
									],
									"internalType": "struct ICultureIndex.CreatorBps[]",
									"name": "creatorArray",
									"type": "tuple[]"
								}
							],
							"name": "createPiece",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dropTopVotedPiece",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "pieceId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "name",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "description",
													"type": "string"
												},
												{
													"internalType": "enum ICultureIndex.MediaType",
													"name": "mediaType",
													"type": "uint8"
												},
												{
													"internalType": "string",
													"name": "image",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "text",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "animationUrl",
													"type": "string"
												}
											],
											"internalType": "struct ICultureIndex.ArtPieceMetadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "creator",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "bps",
													"type": "uint256"
												}
											],
											"internalType": "struct ICultureIndex.CreatorBps[]",
											"name": "creators",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "dropper",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isDropped",
											"type": "bool"
										}
									],
									"internalType": "struct ICultureIndex.ArtPiece",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								}
							],
							"name": "getPieceById",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "pieceId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "name",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "description",
													"type": "string"
												},
												{
													"internalType": "enum ICultureIndex.MediaType",
													"name": "mediaType",
													"type": "uint8"
												},
												{
													"internalType": "string",
													"name": "image",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "text",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "animationUrl",
													"type": "string"
												}
											],
											"internalType": "struct ICultureIndex.ArtPieceMetadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "creator",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "bps",
													"type": "uint256"
												}
											],
											"internalType": "struct ICultureIndex.CreatorBps[]",
											"name": "creators",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "dropper",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isDropped",
											"type": "bool"
										}
									],
									"internalType": "struct ICultureIndex.ArtPiece",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTopVotedPiece",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "pieceId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "name",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "description",
													"type": "string"
												},
												{
													"internalType": "enum ICultureIndex.MediaType",
													"name": "mediaType",
													"type": "uint8"
												},
												{
													"internalType": "string",
													"name": "image",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "text",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "animationUrl",
													"type": "string"
												}
											],
											"internalType": "struct ICultureIndex.ArtPieceMetadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "creator",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "bps",
													"type": "uint256"
												}
											],
											"internalType": "struct ICultureIndex.CreatorBps[]",
											"name": "creators",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "dropper",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isDropped",
											"type": "bool"
										}
									],
									"internalType": "struct ICultureIndex.ArtPiece",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "getVote",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "voterAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "weight",
											"type": "uint256"
										}
									],
									"internalType": "struct ICultureIndex.Vote",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "hasVoted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pieceCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topVotedPieceId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								}
							],
							"name": "totalVoteWeights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This interface defines the methods for the CultureIndex contract for art piece management and voting.",
						"events": {
							"PieceCreated(uint256,address,string,string,string,string,string,uint8)": {
								"details": "Emitted when a new piece is created.",
								"params": {
									"animationUrl": "(Optional) URL for the animation associated with the art piece.",
									"description": "Description of the art piece.",
									"dropper": "Address that created the piece.",
									"image": "URL for the image associated with the art piece.",
									"mediaType": "Integer representation of the media type for the art piece.",
									"name": "Name of the art piece.",
									"pieceId": "Unique identifier for the newly created piece.",
									"text": "Text content for the art piece."
								}
							},
							"PieceDropped(uint256,address)": {
								"details": "Emitted when a top-voted piece is dropped or released.",
								"params": {
									"pieceId": "Unique identifier for the dropped piece.",
									"remover": "Address that initiated the drop."
								}
							},
							"PieceDroppedCreator(uint256,address,address,uint256)": {
								"details": "Emitted for each creator added to a piece when it is dropped.",
								"params": {
									"bps": "Basis points associated with the creator for revenue sharing.",
									"creatorAddress": "Address of the creator.",
									"dropper": "Address that created the piece.",
									"pieceId": "Unique identifier for the dropped piece."
								}
							},
							"VoteCast(uint256,address,uint256,uint256)": {
								"details": "Emitted when a vote is cast for a piece.",
								"params": {
									"pieceId": "Unique identifier for the piece being voted for.",
									"totalWeight": "Total weight of votes for the piece after the new vote.",
									"voter": "Address of the voter.",
									"weight": "Weight of the vote."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPiece((string,string,uint8,string,string,string),(address,uint256)[])": {
								"params": {
									"creatorArray": "An array of creators and their associated basis points.",
									"metadata": "The metadata associated with the art piece."
								},
								"returns": {
									"_0": "The ID of the newly created art piece."
								}
							},
							"dropTopVotedPiece()": {
								"details": "This function also updates internal state to reflect the piece's dropped status.",
								"returns": {
									"_0": "The ArtPiece struct of the top voted piece that was just dropped."
								}
							},
							"getPieceById(uint256)": {
								"params": {
									"pieceId": "The ID of the art piece."
								},
								"returns": {
									"_0": "The ArtPiece struct associated with the given ID."
								}
							},
							"getTopVotedPiece()": {
								"returns": {
									"_0": "The ArtPiece struct representing the piece with the most votes."
								}
							},
							"getVote(uint256,address)": {
								"params": {
									"pieceId": "The ID of the art piece.",
									"voter": "The address of the voter."
								},
								"returns": {
									"_0": "An Voter structs associated with the given art piece ID."
								}
							},
							"hasVoted(uint256,address)": {
								"params": {
									"pieceId": "The ID of the art piece.",
									"voter": "The address of the voter."
								},
								"returns": {
									"_0": "A boolean indicating if the voter has voted for the art piece."
								}
							},
							"pieceCount()": {
								"returns": {
									"_0": "The total count of art pieces."
								}
							},
							"topVotedPieceId()": {
								"returns": {
									"_0": "The ID of the art piece with the most votes."
								}
							},
							"totalVoteWeights(uint256)": {
								"params": {
									"pieceId": "The ID of the art piece."
								},
								"returns": {
									"_0": "The total vote weight for the art piece."
								}
							},
							"vote(uint256)": {
								"params": {
									"pieceId": "The ID of the art piece."
								}
							}
						},
						"title": "ICultureIndex",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPiece((string,string,uint8,string,string,string),(address,uint256)[])": "d75d43c9",
							"dropTopVotedPiece()": "bad22aff",
							"getPieceById(uint256)": "deb50c35",
							"getTopVotedPiece()": "f8a8be40",
							"getVote(uint256,address)": "bc3f931f",
							"hasVoted(uint256,address)": "43859632",
							"pieceCount()": "4a5c4dfe",
							"topVotedPieceId()": "b7b61494",
							"totalVoteWeights(uint256)": "04f50270",
							"vote(uint256)": "0121b93f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"mediaType\",\"type\":\"uint8\"}],\"name\":\"PieceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"PieceCreatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remover\",\"type\":\"address\"}],\"name\":\"PieceDropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"PieceDroppedCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.CreatorBps[]\",\"name\":\"creatorArray\",\"type\":\"tuple[]\"}],\"name\":\"createPiece\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dropTopVotedPiece\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.CreatorBps[]\",\"name\":\"creators\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDropped\",\"type\":\"bool\"}],\"internalType\":\"struct ICultureIndex.ArtPiece\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"}],\"name\":\"getPieceById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.CreatorBps[]\",\"name\":\"creators\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDropped\",\"type\":\"bool\"}],\"internalType\":\"struct ICultureIndex.ArtPiece\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTopVotedPiece\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.CreatorBps[]\",\"name\":\"creators\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDropped\",\"type\":\"bool\"}],\"internalType\":\"struct ICultureIndex.ArtPiece\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVote\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.Vote\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pieceCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topVotedPieceId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"}],\"name\":\"totalVoteWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the methods for the CultureIndex contract for art piece management and voting.\",\"events\":{\"PieceCreated(uint256,address,string,string,string,string,string,uint8)\":{\"details\":\"Emitted when a new piece is created.\",\"params\":{\"animationUrl\":\"(Optional) URL for the animation associated with the art piece.\",\"description\":\"Description of the art piece.\",\"dropper\":\"Address that created the piece.\",\"image\":\"URL for the image associated with the art piece.\",\"mediaType\":\"Integer representation of the media type for the art piece.\",\"name\":\"Name of the art piece.\",\"pieceId\":\"Unique identifier for the newly created piece.\",\"text\":\"Text content for the art piece.\"}},\"PieceDropped(uint256,address)\":{\"details\":\"Emitted when a top-voted piece is dropped or released.\",\"params\":{\"pieceId\":\"Unique identifier for the dropped piece.\",\"remover\":\"Address that initiated the drop.\"}},\"PieceDroppedCreator(uint256,address,address,uint256)\":{\"details\":\"Emitted for each creator added to a piece when it is dropped.\",\"params\":{\"bps\":\"Basis points associated with the creator for revenue sharing.\",\"creatorAddress\":\"Address of the creator.\",\"dropper\":\"Address that created the piece.\",\"pieceId\":\"Unique identifier for the dropped piece.\"}},\"VoteCast(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when a vote is cast for a piece.\",\"params\":{\"pieceId\":\"Unique identifier for the piece being voted for.\",\"totalWeight\":\"Total weight of votes for the piece after the new vote.\",\"voter\":\"Address of the voter.\",\"weight\":\"Weight of the vote.\"}}},\"kind\":\"dev\",\"methods\":{\"createPiece((string,string,uint8,string,string,string),(address,uint256)[])\":{\"params\":{\"creatorArray\":\"An array of creators and their associated basis points.\",\"metadata\":\"The metadata associated with the art piece.\"},\"returns\":{\"_0\":\"The ID of the newly created art piece.\"}},\"dropTopVotedPiece()\":{\"details\":\"This function also updates internal state to reflect the piece's dropped status.\",\"returns\":{\"_0\":\"The ArtPiece struct of the top voted piece that was just dropped.\"}},\"getPieceById(uint256)\":{\"params\":{\"pieceId\":\"The ID of the art piece.\"},\"returns\":{\"_0\":\"The ArtPiece struct associated with the given ID.\"}},\"getTopVotedPiece()\":{\"returns\":{\"_0\":\"The ArtPiece struct representing the piece with the most votes.\"}},\"getVote(uint256,address)\":{\"params\":{\"pieceId\":\"The ID of the art piece.\",\"voter\":\"The address of the voter.\"},\"returns\":{\"_0\":\"An Voter structs associated with the given art piece ID.\"}},\"hasVoted(uint256,address)\":{\"params\":{\"pieceId\":\"The ID of the art piece.\",\"voter\":\"The address of the voter.\"},\"returns\":{\"_0\":\"A boolean indicating if the voter has voted for the art piece.\"}},\"pieceCount()\":{\"returns\":{\"_0\":\"The total count of art pieces.\"}},\"topVotedPieceId()\":{\"returns\":{\"_0\":\"The ID of the art piece with the most votes.\"}},\"totalVoteWeights(uint256)\":{\"params\":{\"pieceId\":\"The ID of the art piece.\"},\"returns\":{\"_0\":\"The total vote weight for the art piece.\"}},\"vote(uint256)\":{\"params\":{\"pieceId\":\"The ID of the art piece.\"}}},\"title\":\"ICultureIndex\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createPiece((string,string,uint8,string,string,string),(address,uint256)[])\":{\"notice\":\"Allows a user to create a new art piece.\"},\"dropTopVotedPiece()\":{\"notice\":\"Officially release or \\\"drop\\\" the art piece with the most votes.\"},\"getPieceById(uint256)\":{\"notice\":\"Fetch an art piece by its ID.\"},\"getTopVotedPiece()\":{\"notice\":\"Retrieve the top-voted art piece based on the accumulated votes.\"},\"getVote(uint256,address)\":{\"notice\":\"Fetch the list of voters for a given art piece.\"},\"hasVoted(uint256,address)\":{\"notice\":\"Checks if a specific voter has already voted for a given art piece.\"},\"pieceCount()\":{\"notice\":\"Returns the total number of art pieces.\"},\"topVotedPieceId()\":{\"notice\":\"Fetch the ID of the top-voted art piece.\"},\"totalVoteWeights(uint256)\":{\"notice\":\"Returns the total voting weight for a specific art piece.\"},\"vote(uint256)\":{\"notice\":\"Allows a user to vote for a specific art piece.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":\"ICultureIndex\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]},\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":{\"keccak256\":\"0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0\",\"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createPiece((string,string,uint8,string,string,string),(address,uint256)[])": {
								"notice": "Allows a user to create a new art piece."
							},
							"dropTopVotedPiece()": {
								"notice": "Officially release or \"drop\" the art piece with the most votes."
							},
							"getPieceById(uint256)": {
								"notice": "Fetch an art piece by its ID."
							},
							"getTopVotedPiece()": {
								"notice": "Retrieve the top-voted art piece based on the accumulated votes."
							},
							"getVote(uint256,address)": {
								"notice": "Fetch the list of voters for a given art piece."
							},
							"hasVoted(uint256,address)": {
								"notice": "Checks if a specific voter has already voted for a given art piece."
							},
							"pieceCount()": {
								"notice": "Returns the total number of art pieces."
							},
							"topVotedPieceId()": {
								"notice": "Fetch the ID of the top-voted art piece."
							},
							"totalVoteWeights(uint256)": {
								"notice": "Returns the total voting weight for a specific art piece."
							},
							"vote(uint256)": {
								"notice": "Allows a user to vote for a specific art piece."
							}
						},
						"version": 1
					}
				},
				"ICultureIndexEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "image",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "animationUrl",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "text",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "mediaType",
									"type": "uint8"
								}
							],
							"name": "PieceCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bps",
									"type": "uint256"
								}
							],
							"name": "PieceCreatorAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "remover",
									"type": "address"
								}
							],
							"name": "PieceDropped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bps",
									"type": "uint256"
								}
							],
							"name": "PieceDroppedCreator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalWeight",
									"type": "uint256"
								}
							],
							"name": "VoteCast",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This interface defines the events for the CultureIndex contract.",
						"events": {
							"PieceCreated(uint256,address,string,string,string,string,string,uint8)": {
								"details": "Emitted when a new piece is created.",
								"params": {
									"animationUrl": "(Optional) URL for the animation associated with the art piece.",
									"description": "Description of the art piece.",
									"dropper": "Address that created the piece.",
									"image": "URL for the image associated with the art piece.",
									"mediaType": "Integer representation of the media type for the art piece.",
									"name": "Name of the art piece.",
									"pieceId": "Unique identifier for the newly created piece.",
									"text": "Text content for the art piece."
								}
							},
							"PieceDropped(uint256,address)": {
								"details": "Emitted when a top-voted piece is dropped or released.",
								"params": {
									"pieceId": "Unique identifier for the dropped piece.",
									"remover": "Address that initiated the drop."
								}
							},
							"PieceDroppedCreator(uint256,address,address,uint256)": {
								"details": "Emitted for each creator added to a piece when it is dropped.",
								"params": {
									"bps": "Basis points associated with the creator for revenue sharing.",
									"creatorAddress": "Address of the creator.",
									"dropper": "Address that created the piece.",
									"pieceId": "Unique identifier for the dropped piece."
								}
							},
							"VoteCast(uint256,address,uint256,uint256)": {
								"details": "Emitted when a vote is cast for a piece.",
								"params": {
									"pieceId": "Unique identifier for the piece being voted for.",
									"totalWeight": "Total weight of votes for the piece after the new vote.",
									"voter": "Address of the voter.",
									"weight": "Weight of the vote."
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "ICultureIndexEvents",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"mediaType\",\"type\":\"uint8\"}],\"name\":\"PieceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"PieceCreatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remover\",\"type\":\"address\"}],\"name\":\"PieceDropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"PieceDroppedCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface defines the events for the CultureIndex contract.\",\"events\":{\"PieceCreated(uint256,address,string,string,string,string,string,uint8)\":{\"details\":\"Emitted when a new piece is created.\",\"params\":{\"animationUrl\":\"(Optional) URL for the animation associated with the art piece.\",\"description\":\"Description of the art piece.\",\"dropper\":\"Address that created the piece.\",\"image\":\"URL for the image associated with the art piece.\",\"mediaType\":\"Integer representation of the media type for the art piece.\",\"name\":\"Name of the art piece.\",\"pieceId\":\"Unique identifier for the newly created piece.\",\"text\":\"Text content for the art piece.\"}},\"PieceDropped(uint256,address)\":{\"details\":\"Emitted when a top-voted piece is dropped or released.\",\"params\":{\"pieceId\":\"Unique identifier for the dropped piece.\",\"remover\":\"Address that initiated the drop.\"}},\"PieceDroppedCreator(uint256,address,address,uint256)\":{\"details\":\"Emitted for each creator added to a piece when it is dropped.\",\"params\":{\"bps\":\"Basis points associated with the creator for revenue sharing.\",\"creatorAddress\":\"Address of the creator.\",\"dropper\":\"Address that created the piece.\",\"pieceId\":\"Unique identifier for the dropped piece.\"}},\"VoteCast(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when a vote is cast for a piece.\",\"params\":{\"pieceId\":\"Unique identifier for the piece being voted for.\",\"totalWeight\":\"Total weight of votes for the piece after the new vote.\",\"voter\":\"Address of the voter.\",\"weight\":\"Weight of the vote.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"ICultureIndexEvents\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":\"ICultureIndexEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]},\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":{\"keccak256\":\"0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0\",\"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol": {
				"IVerbsDescriptor": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								}
							],
							"name": "BaseURIUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "DataURIToggled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PartsLocked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "baseURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "",
									"type": "tuple"
								}
							],
							"name": "dataURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "",
									"type": "tuple"
								}
							],
							"name": "genericDataURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isDataURIEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toggleDataURIEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "",
									"type": "tuple"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"baseURI()": "6c0360eb",
							"dataURI(uint256,(string,string,uint8,string,string,string))": "0dd4f079",
							"genericDataURI(string,(string,string,uint8,string,string,string))": "f0b305eb",
							"isDataURIEnabled()": "ce2f4f53",
							"setBaseURI(string)": "55f804b3",
							"toggleDataURIEnabled()": "dfe8478b",
							"tokenURI(uint256,(string,string,uint8,string,string,string))": "2c90464d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"BaseURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"DataURIToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PartsLocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"dataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"genericDataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDataURIEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleDataURIEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol\":\"IVerbsDescriptor\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]},\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":{\"keccak256\":\"0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0\",\"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs\"]},\"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol\":{\"keccak256\":\"0x2065a3f6eb43b5a06e531b15ac8e32a46521c7c80b2e73ecd7e285438ec2e26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6190c0c4fdfcb40006e5b08238638c0f92f92f648216f3d1d4ff435892b32437\",\"dweb:/ipfs/Qmc9VQc6WWjMUZaeEojVaHtzmTBPfa9V2ZHTuhSZkDK5Wo\"]},\"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol\":{\"keccak256\":\"0xc26ef29b32d9afe3074b02e522d42a39ccadc9653069011ea5436717c4e32211\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8b013f8790795e8e42320ba278792606efaa67ecf94814dc768b8984f02f0b6f\",\"dweb:/ipfs/QmZU5CWYPsfaU3bsFrX8B13ri8AYVYxBtJtV5z9WrYCCLS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol": {
				"IVerbsDescriptorMinimal": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "dataURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"dataURI(uint256,(string,string,uint8,string,string,string))": "0dd4f079",
							"tokenURI(uint256,(string,string,uint8,string,string,string))": "2c90464d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"dataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"tokenURI(uint256,(string,string,uint8,string,string,string))\":{\"notice\":\" USED BY TOKEN\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol\":\"IVerbsDescriptorMinimal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]},\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":{\"keccak256\":\"0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0\",\"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs\"]},\"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol\":{\"keccak256\":\"0xc26ef29b32d9afe3074b02e522d42a39ccadc9653069011ea5436717c4e32211\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8b013f8790795e8e42320ba278792606efaa67ecf94814dc768b8984f02f0b6f\",\"dweb:/ipfs/QmZU5CWYPsfaU3bsFrX8B13ri8AYVYxBtJtV5z9WrYCCLS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"tokenURI(uint256,(string,string,uint8,string,string,string))": {
								"notice": " USED BY TOKEN"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							216
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 217,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 216,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 216,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								216
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 206,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
					"exportedSymbols": {
						"Base64": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Base64",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "126:75:1",
								"text": " @dev Provides a set of functions to operate with Base64 strings."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "Base64",
							"nameLocation": "210:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "223:54:1",
										"text": " @dev Base64 Encoding/Decoding Table"
									},
									"id": 154,
									"mutability": "constant",
									"name": "_TABLE",
									"nameLocation": "307:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "282:100:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 152,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "282:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f",
										"id": 153,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce",
											"typeString": "literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""
										},
										"value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "549:2953:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 162,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "766:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "771:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "766:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "781:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "766:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": " Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol",
												"id": 168,
												"nodeType": "IfStatement",
												"src": "762:31:1",
												"trueBody": {
													"expression": {
														"hexValue": "",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "791:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"functionReturnParameters": 161,
													"id": 167,
													"nodeType": "Return",
													"src": "784:9:1"
												}
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "table",
														"nameLocation": "857:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "843:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 169,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "843:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 172,
												"initialValue": {
													"id": 171,
													"name": "_TABLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 154,
													"src": "865:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "843:28:1"
											},
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1288:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "1274:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 173,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1274:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "34",
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1308:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 178,
																							"name": "data",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 157,
																							"src": "1314:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 179,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1319:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1314:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "32",
																						"id": 180,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1328:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "1314:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 182,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1313:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1333:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "1313:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 185,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1312:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1308:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1297:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 175,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1301:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1274:62:1"
											},
											{
												"AST": {
													"nativeSrc": "1399:2073:1",
													"nodeType": "YulBlock",
													"src": "1399:2073:1",
													"statements": [
														{
															"nativeSrc": "1484:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1484:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "table",
																		"nativeSrc": "1504:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1504:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1511:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:1"
																},
																"nativeSrc": "1500:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1500:13:1"
															},
															"variables": [
																{
																	"name": "tablePtr",
																	"nativeSrc": "1488:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1488:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1583:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1583:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "1604:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1612:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1612:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1600:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:1"
																},
																"nativeSrc": "1600:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1600:15:1"
															},
															"variables": [
																{
																	"name": "resultPtr",
																	"nativeSrc": "1587:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1587:9:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1828:1257:1",
																"nodeType": "YulBlock",
																"src": "1828:1257:1",
																"statements": [
																	{
																		"nativeSrc": "1881:26:1",
																		"nodeType": "YulAssignment",
																		"src": "1881:26:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nativeSrc": "1896:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "1896:7:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1905:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1905:1:1",
																					"type": "",
																					"value": "3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1892:3:1"
																			},
																			"nativeSrc": "1892:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1892:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "1881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1881:7:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1924:27:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1924:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nativeSrc": "1943:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "1943:7:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1937:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1937:5:1"
																			},
																			"nativeSrc": "1937:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1937:14:1"
																		},
																		"variables": [
																			{
																				"name": "input",
																				"nativeSrc": "1928:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1928:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2535:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2535:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2556:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "2556:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2574:2:1",
																													"nodeType": "YulLiteral",
																													"src": "2574:2:1",
																													"type": "",
																													"value": "18"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2578:5:1",
																													"nodeType": "YulIdentifier",
																													"src": "2578:5:1"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2570:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2570:3:1"
																											},
																											"nativeSrc": "2570:14:1",
																											"nodeType": "YulFunctionCall",
																											"src": "2570:14:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2586:4:1",
																											"nodeType": "YulLiteral",
																											"src": "2586:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2566:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2566:3:1"
																									},
																									"nativeSrc": "2566:25:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2566:25:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2552:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2552:3:1"
																							},
																							"nativeSrc": "2552:40:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2552:40:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2546:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2546:5:1"
																					},
																					"nativeSrc": "2546:47:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2546:47:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2527:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2527:7:1"
																			},
																			"nativeSrc": "2527:67:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2527:67:1"
																		},
																		"nativeSrc": "2527:67:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2527:67:1"
																	},
																	{
																		"nativeSrc": "2611:30:1",
																		"nodeType": "YulAssignment",
																		"src": "2611:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2628:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2628:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2639:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2624:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2624:3:1"
																			},
																			"nativeSrc": "2624:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2624:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2611:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2678:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2678:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2699:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "2699:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2717:2:1",
																													"nodeType": "YulLiteral",
																													"src": "2717:2:1",
																													"type": "",
																													"value": "12"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2721:5:1",
																													"nodeType": "YulIdentifier",
																													"src": "2721:5:1"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2713:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2713:3:1"
																											},
																											"nativeSrc": "2713:14:1",
																											"nodeType": "YulFunctionCall",
																											"src": "2713:14:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2729:4:1",
																											"nodeType": "YulLiteral",
																											"src": "2729:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2709:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2709:3:1"
																									},
																									"nativeSrc": "2709:25:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2709:25:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2695:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:1"
																							},
																							"nativeSrc": "2695:40:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2695:40:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2689:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:1"
																					},
																					"nativeSrc": "2689:47:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2689:47:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2670:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2670:7:1"
																			},
																			"nativeSrc": "2670:67:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:67:1"
																		},
																		"nativeSrc": "2670:67:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:67:1"
																	},
																	{
																		"nativeSrc": "2754:30:1",
																		"nodeType": "YulAssignment",
																		"src": "2754:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2771:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2771:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2782:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2782:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2767:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2767:3:1"
																			},
																			"nativeSrc": "2767:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2767:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2821:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2821:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2842:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "2842:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2860:1:1",
																													"nodeType": "YulLiteral",
																													"src": "2860:1:1",
																													"type": "",
																													"value": "6"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2863:5:1",
																													"nodeType": "YulIdentifier",
																													"src": "2863:5:1"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2856:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2856:3:1"
																											},
																											"nativeSrc": "2856:13:1",
																											"nodeType": "YulFunctionCall",
																											"src": "2856:13:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2871:4:1",
																											"nodeType": "YulLiteral",
																											"src": "2871:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2852:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2852:3:1"
																									},
																									"nativeSrc": "2852:24:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2852:24:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2838:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2838:3:1"
																							},
																							"nativeSrc": "2838:39:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2838:39:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2832:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2832:5:1"
																					},
																					"nativeSrc": "2832:46:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:46:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2813:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2813:7:1"
																			},
																			"nativeSrc": "2813:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2813:66:1"
																		},
																		"nativeSrc": "2813:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2813:66:1"
																	},
																	{
																		"nativeSrc": "2896:30:1",
																		"nodeType": "YulAssignment",
																		"src": "2896:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2913:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2913:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2924:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2924:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2909:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2909:3:1"
																			},
																			"nativeSrc": "2909:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2909:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2896:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2896:9:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2963:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2963:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2984:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "2984:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"name": "input",
																											"nativeSrc": "2998:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2998:5:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3005:4:1",
																											"nodeType": "YulLiteral",
																											"src": "3005:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2994:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2994:3:1"
																									},
																									"nativeSrc": "2994:16:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2994:16:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2980:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2980:3:1"
																							},
																							"nativeSrc": "2980:31:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2980:31:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2974:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2974:5:1"
																					},
																					"nativeSrc": "2974:38:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2974:38:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2955:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2955:7:1"
																			},
																			"nativeSrc": "2955:58:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2955:58:1"
																		},
																		"nativeSrc": "2955:58:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2955:58:1"
																	},
																	{
																		"nativeSrc": "3030:30:1",
																		"nodeType": "YulAssignment",
																		"src": "3030:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3047:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "3047:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3058:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3058:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3043:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3043:3:1"
																			},
																			"nativeSrc": "3043:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3043:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "3030:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3030:9:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "dataPtr",
																		"nativeSrc": "1794:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1794:7:1"
																	},
																	{
																		"name": "endPtr",
																		"nativeSrc": "1803:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1803:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1791:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1791:2:1"
																},
																"nativeSrc": "1791:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1791:19:1"
															},
															"nativeSrc": "1682:1403:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1811:16:1",
																"nodeType": "YulBlock",
																"src": "1811:16:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "1686:104:1",
																"nodeType": "YulBlock",
																"src": "1686:104:1",
																"statements": [
																	{
																		"nativeSrc": "1704:19:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1704:19:1",
																		"value": {
																			"name": "data",
																			"nativeSrc": "1719:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "1719:4:1"
																		},
																		"variables": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "1708:7:1",
																				"nodeType": "YulTypedName",
																				"src": "1708:7:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1740:36:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1740:36:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1758:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1758:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "data",
																							"nativeSrc": "1770:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1770:4:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1764:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1764:5:1"
																					},
																					"nativeSrc": "1764:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1764:11:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1754:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1754:3:1"
																			},
																			"nativeSrc": "1754:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1754:22:1"
																		},
																		"variables": [
																			{
																				"name": "endPtr",
																				"nativeSrc": "1744:6:1",
																				"nodeType": "YulTypedName",
																				"src": "1744:6:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1682:1403:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3265:113:1",
																		"nodeType": "YulBlock",
																		"src": "3265:113:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3295:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3295:9:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3306:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3306:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3291:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3291:3:1"
																							},
																							"nativeSrc": "3291:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3291:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3310:4:1",
																							"nodeType": "YulLiteral",
																							"src": "3310:4:1",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3283:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "3283:7:1"
																					},
																					"nativeSrc": "3283:32:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3283:32:1"
																				},
																				"nativeSrc": "3283:32:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3283:32:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3344:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3344:9:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3355:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3355:1:1",
																									"type": "",
																									"value": "2"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3340:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3340:3:1"
																							},
																							"nativeSrc": "3340:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3340:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3359:4:1",
																							"nodeType": "YulLiteral",
																							"src": "3359:4:1",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3332:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "3332:7:1"
																					},
																					"nativeSrc": "3332:32:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3332:32:1"
																				},
																				"nativeSrc": "3332:32:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3332:32:1"
																			}
																		]
																	},
																	"nativeSrc": "3258:120:1",
																	"nodeType": "YulCase",
																	"src": "3258:120:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3263:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3263:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3398:64:1",
																		"nodeType": "YulBlock",
																		"src": "3398:64:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3428:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3428:9:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3439:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3439:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3424:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3424:3:1"
																							},
																							"nativeSrc": "3424:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3424:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3443:4:1",
																							"nodeType": "YulLiteral",
																							"src": "3443:4:1",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3416:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "3416:7:1"
																					},
																					"nativeSrc": "3416:32:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3416:32:1"
																				},
																				"nativeSrc": "3416:32:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3416:32:1"
																			}
																		]
																	},
																	"nativeSrc": "3391:71:1",
																	"nodeType": "YulCase",
																	"src": "3391:71:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3396:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3236:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3236:4:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3230:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "3230:5:1"
																		},
																		"nativeSrc": "3230:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3230:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3243:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3243:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "3226:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:1"
																},
																"nativeSrc": "3226:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3226:19:1"
															},
															"nativeSrc": "3219:243:1",
															"nodeType": "YulSwitch",
															"src": "3219:243:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 157,
														"isOffset": false,
														"isSlot": false,
														"src": "1719:4:1",
														"valueSize": 1
													},
													{
														"declaration": 157,
														"isOffset": false,
														"isSlot": false,
														"src": "1758:4:1",
														"valueSize": 1
													},
													{
														"declaration": 157,
														"isOffset": false,
														"isSlot": false,
														"src": "1770:4:1",
														"valueSize": 1
													},
													{
														"declaration": 157,
														"isOffset": false,
														"isSlot": false,
														"src": "3236:4:1",
														"valueSize": 1
													},
													{
														"declaration": 174,
														"isOffset": false,
														"isSlot": false,
														"src": "1604:6:1",
														"valueSize": 1
													},
													{
														"declaration": 170,
														"isOffset": false,
														"isSlot": false,
														"src": "1504:5:1",
														"valueSize": 1
													}
												],
												"id": 189,
												"nodeType": "InlineAssembly",
												"src": "1390:2082:1"
											},
											{
												"expression": {
													"id": 190,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "3489:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 161,
												"id": 191,
												"nodeType": "Return",
												"src": "3482:13:1"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "389:82:1",
										"text": " @dev Converts a `bytes` to its Bytes64 `string` representation."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nameLocation": "485:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "505:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "492:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "492:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:19:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "534:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "534:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:15:1"
									},
									"scope": 194,
									"src": "476:3026:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "202:3302:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:3405:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							216
						]
					},
					"id": 217,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 216,
							"linearizedBaseContracts": [
								216
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 202,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 201,
												"id": 204,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 216,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 211,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 210,
												"id": 213,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 216,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 217,
							"src": "624:235:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1525
						],
						"SignedMath": [
							1630
						],
						"Strings": [
							471
						]
					},
					"id": 472,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 218,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 472,
							"sourceUnit": 1526,
							"src": "127:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 219,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1525,
										"src": "135:4:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 222,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 472,
							"sourceUnit": 1631,
							"src": "165:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 221,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1630,
										"src": "173:10:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:3",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 471,
							"linearizedBaseContracts": [
								471
							],
							"name": "Strings",
							"nameLocation": "259:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 226,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 471,
									"src": "273:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 224,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 229,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 471,
									"src": "335:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 227,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 228,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:3",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 236,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "505:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "520:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:3"
									},
									"src": "470:66:3"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "708:627:3",
										"statements": [
											{
												"id": 282,
												"nodeType": "UncheckedBlock",
												"src": "718:611:3",
												"statements": [
													{
														"assignments": [
															245
														],
														"declarations": [
															{
																"constant": false,
																"id": 245,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 282,
																"src": "742:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 244,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 252,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 248,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 239,
																		"src": "770:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 246,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "759:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1525_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:3",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1345,
																	"src": "759:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:3"
													},
													{
														"assignments": [
															254
														],
														"declarations": [
															{
																"constant": false,
																"id": 254,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 282,
																"src": "794:20:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 253,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 259,
														"initialValue": {
															"arguments": [
																{
																	"id": 257,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "828:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 255,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:3"
													},
													{
														"assignments": [
															261
														],
														"declarations": [
															{
																"constant": false,
																"id": 261,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 282,
																"src": "849:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 260,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 262,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:3"
													},
													{
														"AST": {
															"nativeSrc": "930:67:3",
															"nodeType": "YulBlock",
															"src": "930:67:3",
															"statements": [
																{
																	"nativeSrc": "948:35:3",
																	"nodeType": "YulAssignment",
																	"src": "948:35:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:3",
																						"nodeType": "YulLiteral",
																						"src": "971:2:3",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:3"
																				},
																				"nativeSrc": "967:15:3",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:3"
																		},
																		"nativeSrc": "955:28:3",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:3"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:3"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 254,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:3",
																"valueSize": 1
															},
															{
																"declaration": 245,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:3",
																"valueSize": 1
															},
															{
																"declaration": 261,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:3",
																"valueSize": 1
															}
														],
														"id": 263,
														"nodeType": "InlineAssembly",
														"src": "921:76:3"
													},
													{
														"body": {
															"id": 278,
															"nodeType": "Block",
															"src": "1023:269:3",
															"statements": [
																{
																	"expression": {
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:3",
																		"subExpression": {
																			"id": 265,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1041:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 267,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:3"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:3",
																		"nodeType": "YulBlock",
																		"src": "1124:86:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:3"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:3",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:3",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:3"
																									},
																									"nativeSrc": "1164:14:3",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:3"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:3",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:3"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:3",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:3"
																							},
																							"nativeSrc": "1159:32:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:3",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:3"
																					},
																					"nativeSrc": "1146:46:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:3"
																				},
																				"nativeSrc": "1146:46:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:3"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 226,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 261,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 239,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:3",
																			"valueSize": 1
																		}
																	],
																	"id": 268,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:3"
																},
																{
																	"expression": {
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 269,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 239,
																			"src": "1227:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 272,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 273,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 239,
																			"src": "1260:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 277,
																	"nodeType": "IfStatement",
																	"src": "1256:21:3",
																	"trueBody": {
																		"id": 276,
																		"nodeType": "Break",
																		"src": "1272:5:3"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 279,
														"nodeType": "WhileStatement",
														"src": "1010:282:3"
													},
													{
														"expression": {
															"id": 280,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "1312:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 243,
														"id": 281,
														"nodeType": "Return",
														"src": "1305:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "655:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:3"
									},
									"scope": 471,
									"src": "637:698:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "1511:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 295,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "1542:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:3",
															"trueExpression": {
																"hexValue": "2d",
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 304,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1588:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 302,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1630,
																			"src": "1573:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1630_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:3",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1629,
																		"src": "1573:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 301,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "1564:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 292,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:3",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 308,
												"nodeType": "Return",
												"src": "1521:75:3"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:3",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1459:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 286,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:3"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1496:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:3"
									},
									"scope": 471,
									"src": "1435:168:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "1782:100:3",
										"statements": [
											{
												"id": 328,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 319,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "1835:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 322,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 313,
																				"src": "1854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 320,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1525,
																				"src": "1842:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1525_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:3",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1467,
																			"src": "1842:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 318,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	330,
																	413,
																	433
																],
																"referencedDeclaration": 413,
																"src": "1823:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 317,
														"id": 327,
														"nodeType": "Return",
														"src": "1816:49:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1729:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1767:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:3"
									},
									"scope": 471,
									"src": "1708:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2095:435:3",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 412,
														"src": "2105:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"id": 342,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 333,
													"src": "2126:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:3"
											},
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 412,
														"src": "2141:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 344,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 349,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "2177:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 346,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:3"
											},
											{
												"expression": {
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 355,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "2198:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 357,
														"indexExpression": {
															"hexValue": "30",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:3"
											},
											{
												"expression": {
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 361,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "2223:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 363,
														"indexExpression": {
															"hexValue": "31",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:3"
											},
											{
												"body": {
													"id": 395,
													"nodeType": "Block",
													"src": "2293:95:3",
													"statements": [
														{
															"expression": {
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 381,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "2307:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 383,
																	"indexExpression": {
																		"id": 382,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "2314:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 384,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "2319:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 388,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 385,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "2330:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 390,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:3"
														},
														{
															"expression": {
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 391,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "2361:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 394,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 375,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "2281:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"initializationExpression": {
													"assignments": [
														368
													],
													"declarations": [
														{
															"constant": false,
															"id": 368,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 396,
															"src": "2253:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 367,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 374,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 370,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "2269:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:3"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:3",
														"subExpression": {
															"id": 378,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "2290:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 380,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 397,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2401:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 406,
												"nodeType": "IfStatement",
												"src": "2397:96:3",
												"trueBody": {
													"id": 405,
													"nodeType": "Block",
													"src": "2418:75:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 401,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "2468:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 402,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "2475:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 400,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "2439:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 404,
															"nodeType": "RevertStatement",
															"src": "2432:50:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 409,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "2516:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 407,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 339,
												"id": 411,
												"nodeType": "Return",
												"src": "2502:21:3"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2026:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2041:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2080:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:3"
									},
									"scope": 471,
									"src": "2005:525:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2762:75:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 426,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 416,
																			"src": "2807:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 424,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 422,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 429,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2815:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 421,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															330,
															413,
															433
														],
														"referencedDeclaration": 413,
														"src": "2779:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 420,
												"id": 431,
												"nodeType": "Return",
												"src": "2772:58:3"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2710:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:3"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2747:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:3"
									},
									"scope": 471,
									"src": "2689:148:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "2992:104:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "3015:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 443,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 450,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "3034:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 448,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 457,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "3063:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 455,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 454,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 463,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "3086:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 461,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 460,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 442,
												"id": 468,
												"nodeType": "Return",
												"src": "3002:87:3"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:3",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2929:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 435,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2946:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:3"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2986:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:3"
									},
									"scope": 471,
									"src": "2914:182:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 472,
							"src": "251:2847:3",
							"usedErrors": [
								236
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1525
						]
					},
					"id": 1526,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 473,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 474,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:4",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1525,
							"linearizedBaseContracts": [
								1525
							],
							"name": "Math",
							"nameLocation": "211:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:4",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 477,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:4"
									},
									"src": "277:29:4"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 482,
									"members": [
										{
											"id": 478,
											"name": "Floor",
											"nameLocation": "336:5:4",
											"nodeType": "EnumValue",
											"src": "336:5:4"
										},
										{
											"id": 479,
											"name": "Ceil",
											"nameLocation": "379:4:4",
											"nodeType": "EnumValue",
											"src": "379:4:4"
										},
										{
											"id": 480,
											"name": "Trunc",
											"nameLocation": "421:5:4",
											"nodeType": "EnumValue",
											"src": "421:5:4"
										},
										{
											"id": 481,
											"name": "Expand",
											"nameLocation": "451:6:4",
											"nodeType": "EnumValue",
											"src": "451:6:4"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:4",
									"nodeType": "EnumDefinition",
									"src": "312:169:4"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "661:140:4",
										"statements": [
											{
												"id": 512,
												"nodeType": "UncheckedBlock",
												"src": "671:124:4",
												"statements": [
													{
														"assignments": [
															495
														],
														"declarations": [
															{
																"constant": false,
																"id": 495,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 512,
																"src": "695:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 499,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "707:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 497,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "711:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 500,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "730:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 501,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "734:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 507,
														"nodeType": "IfStatement",
														"src": "726:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 505,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 493,
															"id": 506,
															"nodeType": "Return",
															"src": "737:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 509,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "782:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 510,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 493,
														"id": 511,
														"nodeType": "Return",
														"src": "768:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "612:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:4"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "646:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:4"
									},
									"scope": 1525,
									"src": "585:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "984:113:4",
										"statements": [
											{
												"id": 540,
												"nodeType": "UncheckedBlock",
												"src": "994:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 526,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "1022:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 527,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "1026:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 533,
														"nodeType": "IfStatement",
														"src": "1018:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 525,
															"id": 532,
															"nodeType": "Return",
															"src": "1029:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "1074:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 536,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1078:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 538,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 525,
														"id": 539,
														"nodeType": "Return",
														"src": "1060:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "924:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "935:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:4"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "969:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "975:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:4"
									},
									"scope": 1525,
									"src": "908:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "1283:417:4",
										"statements": [
											{
												"id": 582,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 554,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "1551:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 561,
														"nodeType": "IfStatement",
														"src": "1547:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 559,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 553,
															"id": 560,
															"nodeType": "Return",
															"src": "1559:16:4"
														}
													},
													{
														"assignments": [
															563
														],
														"declarations": [
															{
																"constant": false,
																"id": 563,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 582,
																"src": "1589:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 562,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 567,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 564,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "1601:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 565,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "1605:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 568,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "1624:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 569,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "1628:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 571,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "1633:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 577,
														"nodeType": "IfStatement",
														"src": "1620:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 575,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 553,
															"id": 576,
															"nodeType": "Return",
															"src": "1636:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 579,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "1681:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 580,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 553,
														"id": 581,
														"nodeType": "Return",
														"src": "1667:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1223:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1234:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:4"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1274:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:4"
									},
									"scope": 1525,
									"src": "1207:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "1887:114:4",
										"statements": [
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "1925:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "1921:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 595,
															"id": 602,
															"nodeType": "Return",
															"src": "1933:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 605,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "1978:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 606,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "1982:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 608,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 595,
														"id": 609,
														"nodeType": "Return",
														"src": "1964:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1827:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1838:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:4"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1872:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1878:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:4"
									},
									"scope": 1525,
									"src": "1811:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "2198:114:4",
										"statements": [
											{
												"id": 638,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 624,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "2236:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 631,
														"nodeType": "IfStatement",
														"src": "2232:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 623,
															"id": 630,
															"nodeType": "Return",
															"src": "2244:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 633,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "2289:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 634,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "2293:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 636,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 623,
														"id": 637,
														"nodeType": "Return",
														"src": "2275:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2138:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2149:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2183:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2189:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:4"
									},
									"scope": 1525,
									"src": "2122:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "2449:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 650,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "2466:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 651,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "2470:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 654,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "2478:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:4",
													"trueExpression": {
														"id": 653,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "2474:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 656,
												"nodeType": "Return",
												"src": "2459:20:4"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:4",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2395:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2406:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:4"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2440:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:4"
									},
									"scope": 1525,
									"src": "2382:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "2624:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 668,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "2641:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 669,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "2645:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 672,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2653:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:4",
													"trueExpression": {
														"id": 671,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "2649:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 667,
												"id": 674,
												"nodeType": "Return",
												"src": "2634:20:4"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:4",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2570:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2581:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:4"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2615:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:4"
									},
									"scope": 1525,
									"src": "2557:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "2845:82:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 686,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "2900:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 687,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "2904:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 689,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 690,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "2910:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 691,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "2914:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 693,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 685,
												"id": 697,
												"nodeType": "Return",
												"src": "2892:28:4"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:4",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2791:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2802:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:4"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2836:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:4"
									},
									"scope": 1525,
									"src": "2774:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "3219:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 709,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3233:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 717,
												"nodeType": "IfStatement",
												"src": "3229:127:4",
												"trueBody": {
													"id": 716,
													"nodeType": "Block",
													"src": "3241:115:4",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 712,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "3340:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 713,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "3344:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 708,
															"id": 715,
															"nodeType": "Return",
															"src": "3333:12:4"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 718,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "3444:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 722,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 702,
																			"src": "3458:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 726,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "3467:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:4",
													"trueExpression": {
														"hexValue": "30",
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 708,
												"id": 731,
												"nodeType": "Return",
												"src": "3437:35:4"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:4",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3165:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3176:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:4"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3210:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:4"
									},
									"scope": 1525,
									"src": "3148:331:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "3901:4018:4",
										"statements": [
											{
												"id": 857,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:4",
												"statements": [
													{
														"assignments": [
															746
														],
														"declarations": [
															{
																"constant": false,
																"id": 746,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 857,
																"src": "4232:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 745,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 750,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 747,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "4248:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 748,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "4252:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:4"
													},
													{
														"assignments": [
															752
														],
														"declarations": [
															{
																"constant": false,
																"id": 752,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 857,
																"src": "4312:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 751,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 753,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:4"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:4",
															"nodeType": "YulBlock",
															"src": "4392:122:4",
															"statements": [
																{
																	"nativeSrc": "4410:30:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:4"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:4",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:4"
																				},
																				"nativeSrc": "4433:6:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:4"
																		},
																		"nativeSrc": "4420:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:4"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:4",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:4",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:4"
																				},
																				"nativeSrc": "4470:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:4"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:4"
																				},
																				"nativeSrc": "4486:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:4"
																		},
																		"nativeSrc": "4466:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 746,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:4",
																"valueSize": 1
															},
															{
																"declaration": 746,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:4",
																"valueSize": 1
															},
															{
																"declaration": 752,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:4",
																"valueSize": 1
															},
															{
																"declaration": 736,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:4",
																"valueSize": 1
															},
															{
																"declaration": 738,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:4",
																"valueSize": 1
															}
														],
														"id": 754,
														"nodeType": "InlineAssembly",
														"src": "4383:131:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 755,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "4595:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 763,
														"nodeType": "IfStatement",
														"src": "4591:368:4",
														"trueBody": {
															"id": 762,
															"nodeType": "Block",
															"src": "4607:352:4",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 758,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "4925:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 759,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "4933:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 744,
																	"id": 761,
																	"nodeType": "Return",
																	"src": "4918:26:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 764,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5065:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 765,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "5080:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 771,
														"nodeType": "IfStatement",
														"src": "5061:88:4",
														"trueBody": {
															"id": 770,
															"nodeType": "Block",
															"src": "5087:62:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 767,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "5112:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 769,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:4"
																}
															]
														}
													},
													{
														"assignments": [
															773
														],
														"declarations": [
															{
																"constant": false,
																"id": 773,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:4",
																"nodeType": "VariableDeclaration",
																"scope": 857,
																"src": "5404:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 772,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 774,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:4"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:4",
															"nodeType": "YulBlock",
															"src": "5444:291:4",
															"statements": [
																{
																	"nativeSrc": "5513:38:4",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:4"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:4"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:4",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:4"
																		},
																		"nativeSrc": "5526:25:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:4"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:4",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:4"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:4",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:4"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:4"
																				},
																				"nativeSrc": "5653:20:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:4"
																		},
																		"nativeSrc": "5642:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:4"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:4",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:4"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:4"
																		},
																		"nativeSrc": "5700:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:4",
																"valueSize": 1
															},
															{
																"declaration": 746,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:4",
																"valueSize": 1
															},
															{
																"declaration": 746,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:4",
																"valueSize": 1
															},
															{
																"declaration": 746,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:4",
																"valueSize": 1
															},
															{
																"declaration": 752,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:4",
																"valueSize": 1
															},
															{
																"declaration": 752,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:4",
																"valueSize": 1
															},
															{
																"declaration": 773,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:4",
																"valueSize": 1
															},
															{
																"declaration": 773,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:4",
																"valueSize": 1
															},
															{
																"declaration": 773,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:4",
																"valueSize": 1
															},
															{
																"declaration": 736,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:4",
																"valueSize": 1
															},
															{
																"declaration": 738,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:4",
																"valueSize": 1
															}
														],
														"id": 775,
														"nodeType": "InlineAssembly",
														"src": "5435:300:4"
													},
													{
														"assignments": [
															777
														],
														"declarations": [
															{
																"constant": false,
																"id": 777,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:4",
																"nodeType": "VariableDeclaration",
																"scope": 857,
																"src": "5939:12:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 784,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5954:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 780,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "5973:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 782,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:4"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:4",
															"nodeType": "YulBlock",
															"src": "6008:362:4",
															"statements": [
																{
																	"nativeSrc": "6073:37:4",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:4",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:4"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:4"
																		},
																		"nativeSrc": "6088:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:4"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:4",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:4"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:4",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:4"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:4"
																		},
																		"nativeSrc": "6186:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:4"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:4",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:4",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:4",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:4",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:4"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:4"
																						},
																						"nativeSrc": "6333:12:4",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:4"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:4"
																				},
																				"nativeSrc": "6329:23:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:4"
																		},
																		"nativeSrc": "6325:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:4"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:4",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:4",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:4",
																"valueSize": 1
															},
															{
																"declaration": 746,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:4",
																"valueSize": 1
															},
															{
																"declaration": 746,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:4",
																"valueSize": 1
															},
															{
																"declaration": 777,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:4",
																"valueSize": 1
															},
															{
																"declaration": 777,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:4",
																"valueSize": 1
															},
															{
																"declaration": 777,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:4",
																"valueSize": 1
															},
															{
																"declaration": 777,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:4",
																"valueSize": 1
															},
															{
																"declaration": 777,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:4",
																"valueSize": 1
															}
														],
														"id": 785,
														"nodeType": "InlineAssembly",
														"src": "5999:371:4"
													},
													{
														"expression": {
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 786,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "6436:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "6445:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 788,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "6453:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 791,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:4"
													},
													{
														"assignments": [
															793
														],
														"declarations": [
															{
																"constant": false,
																"id": 793,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:4",
																"nodeType": "VariableDeclaration",
																"scope": 857,
																"src": "6775:15:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 792,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 800,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 795,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "6798:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 797,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:4"
													},
													{
														"expression": {
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 801,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "7031:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 803,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "7046:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 804,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "7060:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 808,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:4"
													},
													{
														"expression": {
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 809,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "7100:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 811,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "7115:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 812,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "7129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 816,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:4"
													},
													{
														"expression": {
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 817,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "7170:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 819,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "7185:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 820,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "7199:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 824,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:4"
													},
													{
														"expression": {
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 825,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "7240:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 827,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "7255:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 828,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "7269:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 832,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:4"
													},
													{
														"expression": {
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 833,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "7310:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "7325:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 836,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "7339:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 840,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:4"
													},
													{
														"expression": {
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 841,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "7381:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 843,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "7396:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 844,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "7410:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 848,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:4"
													},
													{
														"expression": {
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 849,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "7851:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 850,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "7860:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 851,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7868:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 854,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:4"
													},
													{
														"expression": {
															"id": 855,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "7896:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 744,
														"id": 856,
														"nodeType": "Return",
														"src": "7889:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:4",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "3819:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "3830:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "3841:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:4"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "3885:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:4"
									},
									"scope": 1525,
									"src": "3803:4116:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "8161:192:4",
										"statements": [
											{
												"assignments": [
													875
												],
												"declarations": [
													{
														"constant": false,
														"id": 875,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "8171:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 874,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"arguments": [
														{
															"id": 877,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "8195:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 878,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "8198:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 879,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "8201:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 876,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															859,
															902
														],
														"referencedDeclaration": 859,
														"src": "8188:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 883,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "8244:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$482",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$482",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 882,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "8227:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$482_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 886,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "8264:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 887,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "8267:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 888,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "8270:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 885,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "8223:101:4",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "8288:36:4",
													"statements": [
														{
															"expression": {
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 893,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "8302:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 896,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 899,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 875,
													"src": "8340:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 873,
												"id": 900,
												"nodeType": "Return",
												"src": "8333:13:4"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:4",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "8067:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "8078:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "8089:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "8110:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$482",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 867,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 482,
														"src": "8110:8:4"
													},
													"referencedDeclaration": 482,
													"src": "8110:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$482",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:4"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "8152:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:4"
									},
									"scope": 1525,
									"src": "8051:302:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "8644:1585:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "8658:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "8654:45:4",
												"trueBody": {
													"id": 915,
													"nodeType": "Block",
													"src": "8666:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 909,
															"id": 914,
															"nodeType": "Return",
															"src": "8680:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													918
												],
												"declarations": [
													{
														"constant": false,
														"id": 918,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "9378:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 921,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "9406:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 920,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1181,
																			1216
																		],
																		"referencedDeclaration": 1181,
																		"src": "9401:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 925,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:4"
											},
											{
												"id": 1012,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:4",
												"statements": [
													{
														"expression": {
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 928,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "9839:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 929,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 918,
																				"src": "9849:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 930,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "9858:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 931,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 918,
																					"src": "9862:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 934,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 938,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:4"
													},
													{
														"expression": {
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 939,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "9888:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 940,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 918,
																				"src": "9898:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 941,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "9907:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 942,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 918,
																					"src": "9911:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 945,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 949,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:4"
													},
													{
														"expression": {
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 950,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "9937:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 951,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 918,
																				"src": "9947:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 954,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 952,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "9956:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 953,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 918,
																					"src": "9960:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 956,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 960,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:4"
													},
													{
														"expression": {
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 961,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "9986:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 962,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 918,
																				"src": "9996:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 965,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 963,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "10005:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 964,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 918,
																					"src": "10009:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 967,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 971,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:4"
													},
													{
														"expression": {
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 972,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "10035:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 973,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 918,
																				"src": "10045:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 974,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "10054:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 975,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 918,
																					"src": "10058:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 978,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 982,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:4"
													},
													{
														"expression": {
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 983,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "10084:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 984,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 918,
																				"src": "10094:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 985,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "10103:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 986,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 918,
																					"src": "10107:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 989,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 993,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:4"
													},
													{
														"expression": {
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 994,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "10133:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 995,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 918,
																				"src": "10143:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 996,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "10152:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 997,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 918,
																					"src": "10156:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1000,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1004,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1006,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "10193:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1007,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "10201:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1008,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "10205:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1005,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "10189:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 909,
														"id": 1011,
														"nodeType": "Return",
														"src": "10182:30:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:4",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "8601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:4"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "8635:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:4"
									},
									"scope": 1525,
									"src": "8587:1642:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "10405:164:4",
										"statements": [
											{
												"id": 1047,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:4",
												"statements": [
													{
														"assignments": [
															1026
														],
														"declarations": [
															{
																"constant": false,
																"id": 1026,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1047,
																"src": "10439:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1025,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1030,
														"initialValue": {
															"arguments": [
																{
																	"id": 1028,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "10461:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1027,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1014,
																	1049
																],
																"referencedDeclaration": 1014,
																"src": "10456:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1031,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "10484:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1033,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1020,
																						"src": "10511:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$482",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$482",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1032,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1524,
																					"src": "10494:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$482_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1037,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1035,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1026,
																						"src": "10524:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1036,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1026,
																						"src": "10533:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1038,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1017,
																					"src": "10542:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1024,
														"id": 1046,
														"nodeType": "Return",
														"src": "10477:75:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:4",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "10343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "10354:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$482",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1018,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 482,
														"src": "10354:8:4"
													},
													"referencedDeclaration": 482,
													"src": "10354:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$482",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:4"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "10396:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:4"
									},
									"scope": 1525,
									"src": "10329:240:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "10760:922:4",
										"statements": [
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1180,
														"src": "10770:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1057,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"hexValue": "30",
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:4"
											},
											{
												"id": 1177,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1061,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "10826:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1075,
														"nodeType": "IfStatement",
														"src": "10822:99:4",
														"trueBody": {
															"id": 1074,
															"nodeType": "Block",
															"src": "10844:77:4",
															"statements": [
																{
																	"expression": {
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1066,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "10862:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1069,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:4"
																},
																{
																	"expression": {
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1070,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "10893:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1073,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1076,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "10938:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1090,
														"nodeType": "IfStatement",
														"src": "10934:96:4",
														"trueBody": {
															"id": 1089,
															"nodeType": "Block",
															"src": "10955:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1081,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "10973:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1084,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:4"
																},
																{
																	"expression": {
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1085,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "11003:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1088,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1091,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "11047:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1105,
														"nodeType": "IfStatement",
														"src": "11043:96:4",
														"trueBody": {
															"id": 1104,
															"nodeType": "Block",
															"src": "11064:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1096,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "11082:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1099,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:4"
																},
																{
																	"expression": {
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1100,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "11112:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1103,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1106,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "11156:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1120,
														"nodeType": "IfStatement",
														"src": "11152:96:4",
														"trueBody": {
															"id": 1119,
															"nodeType": "Block",
															"src": "11173:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1111,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "11191:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1114,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:4"
																},
																{
																	"expression": {
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1115,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "11221:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1118,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1121,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "11265:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1135,
														"nodeType": "IfStatement",
														"src": "11261:93:4",
														"trueBody": {
															"id": 1134,
															"nodeType": "Block",
															"src": "11281:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1126,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "11299:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1129,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:4"
																},
																{
																	"expression": {
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1130,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "11328:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1133,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1136,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "11371:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1150,
														"nodeType": "IfStatement",
														"src": "11367:93:4",
														"trueBody": {
															"id": 1149,
															"nodeType": "Block",
															"src": "11387:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1141,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "11405:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1144,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:4"
																},
																{
																	"expression": {
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1145,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "11434:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1148,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1151,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "11477:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1165,
														"nodeType": "IfStatement",
														"src": "11473:93:4",
														"trueBody": {
															"id": 1164,
															"nodeType": "Block",
															"src": "11493:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1156,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "11511:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1159,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:4"
																},
																{
																	"expression": {
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1160,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "11540:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1163,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "11583:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1176,
														"nodeType": "IfStatement",
														"src": "11579:64:4",
														"trueBody": {
															"id": 1175,
															"nodeType": "Block",
															"src": "11599:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1171,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "11617:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1174,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1178,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1058,
													"src": "11669:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1056,
												"id": 1179,
												"nodeType": "Return",
												"src": "11662:13:4"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:4",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "10713:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "10751:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:4"
									},
									"scope": 1525,
									"src": "10699:983:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "11915:168:4",
										"statements": [
											{
												"id": 1214,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:4",
												"statements": [
													{
														"assignments": [
															1193
														],
														"declarations": [
															{
																"constant": false,
																"id": 1193,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1214,
																"src": "11949:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1192,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1197,
														"initialValue": {
															"arguments": [
																{
																	"id": 1195,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "11971:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1194,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1181,
																	1216
																],
																"referencedDeclaration": 1181,
																"src": "11966:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1198,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "11998:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1200,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1187,
																						"src": "12025:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$482",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$482",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1199,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1524,
																					"src": "12008:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$482_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1204,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1202,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1203,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1193,
																						"src": "12043:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1205,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1184,
																					"src": "12052:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1211,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1191,
														"id": 1213,
														"nodeType": "Return",
														"src": "11991:75:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:4",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "11849:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "11864:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$482",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1186,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1185,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 482,
														"src": "11864:8:4"
													},
													"referencedDeclaration": 482,
													"src": "11864:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$482",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:4"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "11906:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:4"
									},
									"scope": 1525,
									"src": "11835:248:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "12276:854:4",
										"statements": [
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1344,
														"src": "12286:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"hexValue": "30",
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:4"
											},
											{
												"id": 1341,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1228,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "12342:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1244,
														"nodeType": "IfStatement",
														"src": "12338:103:4",
														"trueBody": {
															"id": 1243,
															"nodeType": "Block",
															"src": "12361:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "12379:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1238,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:4"
																},
																{
																	"expression": {
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1239,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "12414:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1242,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1245,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "12458:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1261,
														"nodeType": "IfStatement",
														"src": "12454:103:4",
														"trueBody": {
															"id": 1260,
															"nodeType": "Block",
															"src": "12477:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1250,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "12495:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1255,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:4"
																},
																{
																	"expression": {
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1256,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "12530:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1259,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1262,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "12574:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1278,
														"nodeType": "IfStatement",
														"src": "12570:103:4",
														"trueBody": {
															"id": 1277,
															"nodeType": "Block",
															"src": "12593:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1267,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "12611:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1272,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:4"
																},
																{
																	"expression": {
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1273,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "12646:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1276,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1279,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "12690:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1295,
														"nodeType": "IfStatement",
														"src": "12686:100:4",
														"trueBody": {
															"id": 1294,
															"nodeType": "Block",
															"src": "12708:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1284,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "12726:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1289,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:4"
																},
																{
																	"expression": {
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1290,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "12760:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1293,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1296,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "12803:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1312,
														"nodeType": "IfStatement",
														"src": "12799:100:4",
														"trueBody": {
															"id": 1311,
															"nodeType": "Block",
															"src": "12821:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1301,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "12839:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1306,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:4"
																},
																{
																	"expression": {
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1307,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "12873:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1310,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1313,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "12916:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1329,
														"nodeType": "IfStatement",
														"src": "12912:100:4",
														"trueBody": {
															"id": 1328,
															"nodeType": "Block",
															"src": "12934:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "12952:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1323,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:4"
																},
																{
																	"expression": {
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1324,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "12986:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1327,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1330,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "13029:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1340,
														"nodeType": "IfStatement",
														"src": "13025:66:4",
														"trueBody": {
															"id": 1339,
															"nodeType": "Block",
															"src": "13047:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1335,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "13065:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1338,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1342,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1225,
													"src": "13117:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1223,
												"id": 1343,
												"nodeType": "Return",
												"src": "13110:13:4"
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:4",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "12229:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:4"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "12267:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:4"
									},
									"scope": 1525,
									"src": "12214:916:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "13365:170:4",
										"statements": [
											{
												"id": 1378,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:4",
												"statements": [
													{
														"assignments": [
															1357
														],
														"declarations": [
															{
																"constant": false,
																"id": 1357,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1378,
																"src": "13399:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1356,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1361,
														"initialValue": {
															"arguments": [
																{
																	"id": 1359,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "13422:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1358,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1345,
																	1380
																],
																"referencedDeclaration": 1345,
																"src": "13416:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1362,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "13449:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1364,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1351,
																						"src": "13476:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$482",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$482",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1363,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1524,
																					"src": "13459:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$482_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1368,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1366,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1367,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1357,
																						"src": "13495:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1369,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1348,
																					"src": "13504:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1375,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1355,
														"id": 1377,
														"nodeType": "Return",
														"src": "13442:76:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "13299:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "13314:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$482",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1350,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1349,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 482,
														"src": "13314:8:4"
													},
													"referencedDeclaration": 482,
													"src": "13314:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$482",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:4"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "13356:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:4"
									},
									"scope": 1525,
									"src": "13284:251:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "13855:600:4",
										"statements": [
											{
												"assignments": [
													1389
												],
												"declarations": [
													{
														"constant": false,
														"id": 1389,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1466,
														"src": "13865:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1388,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1391,
												"initialValue": {
													"hexValue": "30",
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:4"
											},
											{
												"id": 1463,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1392,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "13921:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1406,
														"nodeType": "IfStatement",
														"src": "13917:98:4",
														"trueBody": {
															"id": 1405,
															"nodeType": "Block",
															"src": "13939:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1397,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "13957:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1400,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:4"
																},
																{
																	"expression": {
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1401,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1389,
																			"src": "13988:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1404,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1407,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "14032:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1421,
														"nodeType": "IfStatement",
														"src": "14028:95:4",
														"trueBody": {
															"id": 1420,
															"nodeType": "Block",
															"src": "14049:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1412,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "14067:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1415,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:4"
																},
																{
																	"expression": {
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1416,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1389,
																			"src": "14097:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1419,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1422,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "14140:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1436,
														"nodeType": "IfStatement",
														"src": "14136:95:4",
														"trueBody": {
															"id": 1435,
															"nodeType": "Block",
															"src": "14157:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1427,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "14175:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1430,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:4"
																},
																{
																	"expression": {
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1431,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1389,
																			"src": "14205:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1434,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1437,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "14248:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1451,
														"nodeType": "IfStatement",
														"src": "14244:95:4",
														"trueBody": {
															"id": 1450,
															"nodeType": "Block",
															"src": "14265:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1442,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "14283:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1445,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:4"
																},
																{
																	"expression": {
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1446,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1389,
																			"src": "14313:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1449,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1452,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "14356:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1462,
														"nodeType": "IfStatement",
														"src": "14352:64:4",
														"trueBody": {
															"id": 1461,
															"nodeType": "Block",
															"src": "14372:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1457,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1389,
																			"src": "14390:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1460,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1464,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1389,
													"src": "14442:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1387,
												"id": 1465,
												"nodeType": "Return",
												"src": "14435:13:4"
											}
										]
									},
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:4",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "13808:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:4"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "13846:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:4"
									},
									"scope": 1525,
									"src": "13792:663:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "14692:177:4",
										"statements": [
											{
												"id": 1503,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:4",
												"statements": [
													{
														"assignments": [
															1479
														],
														"declarations": [
															{
																"constant": false,
																"id": 1479,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1503,
																"src": "14726:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1478,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1483,
														"initialValue": {
															"arguments": [
																{
																	"id": 1481,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "14750:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1480,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1467,
																	1505
																],
																"referencedDeclaration": 1467,
																"src": "14743:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "14777:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1486,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1473,
																						"src": "14804:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$482",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$482",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1485,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1524,
																					"src": "14787:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$482_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1493,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1488,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1491,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1489,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1479,
																									"src": "14823:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1490,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1492,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1494,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1470,
																					"src": "14838:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1500,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1477,
														"id": 1502,
														"nodeType": "Return",
														"src": "14770:82:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:4",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "14626:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "14641:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$482",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1471,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 482,
														"src": "14641:8:4"
													},
													"referencedDeclaration": 482,
													"src": "14641:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$482",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:4"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "14683:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:4"
									},
									"scope": 1525,
									"src": "14610:259:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "15067:48:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1516,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "15090:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$482",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$482",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1514,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1513,
												"id": 1522,
												"nodeType": "Return",
												"src": "15077:31:4"
											}
										]
									},
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:4",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "15019:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$482",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1507,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 482,
														"src": "15019:8:4"
													},
													"referencedDeclaration": 482,
													"src": "15019:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$482",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:4"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "15061:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:4"
									},
									"scope": 1525,
									"src": "14993:122:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1526,
							"src": "203:14914:4",
							"usedErrors": [
								477
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1630
						]
					},
					"id": 1631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1527,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1528,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:5",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1630,
							"linearizedBaseContracts": [
								1630
							],
							"name": "SignedMath",
							"nameLocation": "224:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "376:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1538,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "393:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1539,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "397:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1542,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "405:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:5",
													"trueExpression": {
														"id": 1541,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "401:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1537,
												"id": 1544,
												"nodeType": "Return",
												"src": "386:20:5"
											}
										]
									},
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:5",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "325:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1530,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "335:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1532,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:5"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "368:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1535,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:5"
									},
									"scope": 1630,
									"src": "312:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "555:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1556,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1557,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "576:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1560,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "584:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:5",
													"trueExpression": {
														"id": 1559,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "580:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1562,
												"nodeType": "Return",
												"src": "565:20:5"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:5",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "504:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1548,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "514:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1550,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:5"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "547:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1553,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:5"
									},
									"scope": 1630,
									"src": "491:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "797:162:5",
										"statements": [
											{
												"assignments": [
													1575
												],
												"declarations": [
													{
														"constant": false,
														"id": 1575,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "859:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1574,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1588,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1576,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "871:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1577,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1569,
																	"src": "875:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1579,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1580,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1567,
																				"src": "882:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1581,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1569,
																				"src": "886:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1583,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1586,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1589,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "911:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1594,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1575,
																						"src": "931:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1593,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1592,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1590,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1599,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1567,
																				"src": "945:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1600,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1569,
																				"src": "949:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1602,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1604,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1573,
												"id": 1606,
												"nodeType": "Return",
												"src": "904:48:5"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:5",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "746:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1566,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "756:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1568,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:5"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "789:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1571,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:5"
									},
									"scope": 1630,
									"src": "729:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "1103:158:5",
										"statements": [
											{
												"id": 1627,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1618,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "1228:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:5",
																		"subExpression": {
																			"id": 1622,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "1242:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:5",
																	"trueExpression": {
																		"id": 1621,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "1237:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1616,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1615,
														"id": 1626,
														"nodeType": "Return",
														"src": "1213:31:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:5",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "1061:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1610,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:5"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "1094:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:5"
									},
									"scope": 1630,
									"src": "1048:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1631,
							"src": "216:1047:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:5"
				},
				"id": 5
			},
			"packages/revolution-contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1708
						]
					},
					"id": 1709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1633,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1708,
							"linearizedBaseContracts": [
								1708
							],
							"name": "IERC20",
							"nameLocation": "213:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1642,
									"name": "Transfer",
									"nameLocation": "395:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "404:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "426:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:6"
									},
									"src": "389:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1651,
									"name": "Approval",
									"nameLocation": "626:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "635:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "658:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "683:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:6"
									},
									"src": "620:78:6"
								},
								{
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:6"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "820:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:6"
									},
									"scope": 1708,
									"src": "774:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "930:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:6"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "970:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:6"
									},
									"scope": 1708,
									"src": "911:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1221:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1233:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:6"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1266:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:6"
									},
									"scope": 1708,
									"src": "1203:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1566:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1581:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:6"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1621:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:6"
									},
									"scope": 1708,
									"src": "1547:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "2325:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:6"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 1708,
									"src": "2308:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "2711:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "2725:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "2737:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:6"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "2770:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:6"
									},
									"scope": 1708,
									"src": "2689:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1709,
							"src": "203:2575:6",
							"usedErrors": [],
							"usedEvents": [
								1642,
								1651
							]
						}
					],
					"src": "106:2673:6"
				},
				"id": 6
			},
			"packages/revolution-contracts/VerbsDescriptor.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/VerbsDescriptor.sol",
					"exportedSymbols": {
						"Base64": [
							194
						],
						"ICultureIndex": [
							2142
						],
						"IVerbsDescriptor": [
							2209
						],
						"Ownable": [
							147
						],
						"Strings": [
							471
						],
						"VerbsDescriptor": [
							1946
						]
					},
					"id": 1947,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "1076:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1712,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1947,
							"sourceUnit": 148,
							"src": "1102:69:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1711,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "1111:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1947,
							"sourceUnit": 472,
							"src": "1172:68:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1713,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 471,
										"src": "1181:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/IVerbsDescriptor.sol",
							"file": "./interfaces/IVerbsDescriptor.sol",
							"id": 1716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1947,
							"sourceUnit": 2210,
							"src": "1241:69:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1715,
										"name": "IVerbsDescriptor",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2209,
										"src": "1250:16:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
							"file": "@openzeppelin/contracts/utils/Base64.sol",
							"id": 1718,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1947,
							"sourceUnit": 195,
							"src": "1311:66:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1717,
										"name": "Base64",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 194,
										"src": "1320:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/ICultureIndex.sol",
							"file": "./interfaces/ICultureIndex.sol",
							"id": 1720,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1947,
							"sourceUnit": 2143,
							"src": "1378:63:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1719,
										"name": "ICultureIndex",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2142,
										"src": "1387:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1721,
										"name": "IVerbsDescriptor",
										"nameLocations": [
											"1471:16:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2209,
										"src": "1471:16:7"
									},
									"id": 1722,
									"nodeType": "InheritanceSpecifier",
									"src": "1471:16:7"
								},
								{
									"baseName": {
										"id": 1723,
										"name": "Ownable",
										"nameLocations": [
											"1489:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1489:7:7"
									},
									"id": 1724,
									"nodeType": "InheritanceSpecifier",
									"src": "1489:7:7"
								}
							],
							"canonicalName": "VerbsDescriptor",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1946,
							"linearizedBaseContracts": [
								1946,
								147,
								216,
								2209,
								2235
							],
							"name": "VerbsDescriptor",
							"nameLocation": "1452:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1727,
									"libraryName": {
										"id": 1725,
										"name": "Strings",
										"nameLocations": [
											"1509:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 471,
										"src": "1509:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "1503:26:7",
									"typeName": {
										"id": 1726,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1521:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1730,
									"mutability": "constant",
									"name": "COPYRIGHT_CC0_1_0_UNIVERSAL_LICENSE",
									"nameLocation": "1646:35:7",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "1629:121:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1728,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1629:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861323031306633343334383764336637363138616666653534663738396635343837363032333331633061386430336634396539613763353437636630343939",
										"id": 1729,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1684:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_73276553251198477413435956387434821907850263885238219195969079133408498484377_by_1",
											"typeString": "int_const 7327...(69 digits omitted)...4377"
										},
										"value": "0xa2010f343487d3f7618affe54f789f5487602331c0a8d03f49e9a7c547cf0499"
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2165
									],
									"constant": false,
									"functionSelector": "ce2f4f53",
									"id": 1734,
									"mutability": "mutable",
									"name": "isDataURIEnabled",
									"nameLocation": "1860:16:7",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1732,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1851:8:7"
									},
									"scope": 1946,
									"src": "1839:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1731,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1839:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 1733,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1879:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2170
									],
									"constant": false,
									"functionSelector": "6c0360eb",
									"id": 1737,
									"mutability": "mutable",
									"name": "baseURI",
									"nameLocation": "1929:7:7",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1736,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1920:8:7"
									},
									"scope": 1946,
									"src": "1906:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1735,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1906:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3dc081b9",
									"id": 1739,
									"mutability": "mutable",
									"name": "tokenNamePrefix",
									"nameLocation": "1982:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "1968:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1738,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1968:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "VerbsDescriptor.TokenURIParams",
									"id": 1748,
									"members": [
										{
											"constant": false,
											"id": 1741,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2093:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1748,
											"src": "2086:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1740,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2086:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1743,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "2114:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 1748,
											"src": "2107:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1742,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2107:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1745,
											"mutability": "mutable",
											"name": "image",
											"nameLocation": "2142:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1748,
											"src": "2135:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1744,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2135:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1747,
											"mutability": "mutable",
											"name": "animation_url",
											"nameLocation": "2164:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1748,
											"src": "2157:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1746,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2157:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenURIParams",
									"nameLocation": "2061:14:7",
									"nodeType": "StructDefinition",
									"scope": 1946,
									"src": "2054:130:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "2280:51:7",
										"statements": [
											{
												"expression": {
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1758,
														"name": "tokenNamePrefix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "2290:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1759,
														"name": "_tokenNamePrefix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "2308:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2290:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "2290:34:7"
											}
										]
									},
									"id": 1763,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1755,
													"name": "_initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1750,
													"src": "2265:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1756,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1754,
												"name": "Ownable",
												"nameLocations": [
													"2257:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2257:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2257:22:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "2210:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2202:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "_tokenNamePrefix",
												"nameLocation": "2239:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2225:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1751,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2225:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:55:7"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2280:0:7"
									},
									"scope": 1946,
									"src": "2190:141:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "2492:496:7",
										"statements": [
											{
												"assignments": [
													1773
												],
												"declarations": [
													{
														"constant": false,
														"id": 1773,
														"mutability": "mutable",
														"name": "json",
														"nameLocation": "2516:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "2502:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1772,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2502:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1793,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "7b226e616d65223a22",
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2577:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																		"typeString": "literal_string \"{\"name\":\"\""
																	},
																	"value": "{\"name\":\""
																},
																{
																	"expression": {
																		"id": 1779,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "2606:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenURIParams_$1748_memory_ptr",
																			"typeString": "struct VerbsDescriptor.TokenURIParams memory"
																		}
																	},
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2613:4:7",
																	"memberName": "name",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1741,
																	"src": "2606:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "222c20226465736372697074696f6e223a22",
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2635:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9780691b4087a1893a28b24020f5f6d0c7583060bd6cfeb54b8284a5bf55f11f",
																		"typeString": "literal_string \"\", \"description\":\"\""
																	},
																	"value": "\", \"description\":\""
																},
																{
																	"expression": {
																		"id": 1782,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "2673:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenURIParams_$1748_memory_ptr",
																			"typeString": "struct VerbsDescriptor.TokenURIParams memory"
																		}
																	},
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2680:11:7",
																	"memberName": "description",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1743,
																	"src": "2673:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "222c2022696d616765223a2022",
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2709:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_8d0de490dde571af103e878aa265925a94dd83b4f74e62b617db5ad43a4f76af",
																		"typeString": "literal_string \"\", \"image\": \"\""
																	},
																	"value": "\", \"image\": \""
																},
																{
																	"expression": {
																		"id": 1785,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "2742:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenURIParams_$1748_memory_ptr",
																			"typeString": "struct VerbsDescriptor.TokenURIParams memory"
																		}
																	},
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2749:5:7",
																	"memberName": "image",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1745,
																	"src": "2742:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "222c2022616e696d6174696f6e5f75726c223a2022",
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2772:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f900c545a58378754ad8b5c331b48c15e2a79c6ef80b3dc97d883d860e9e1c18",
																		"typeString": "literal_string \"\", \"animation_url\": \"\""
																	},
																	"value": "\", \"animation_url\": \""
																},
																{
																	"expression": {
																		"id": 1788,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "2813:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenURIParams_$1748_memory_ptr",
																			"typeString": "struct VerbsDescriptor.TokenURIParams memory"
																		}
																	},
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2820:13:7",
																	"memberName": "animation_url",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1747,
																	"src": "2813:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "227d",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2851:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
																		"typeString": "literal_string \"\"}\""
																	},
																	"value": "\"}"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																		"typeString": "literal_string \"{\"name\":\"\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_9780691b4087a1893a28b24020f5f6d0c7583060bd6cfeb54b8284a5bf55f11f",
																		"typeString": "literal_string \"\", \"description\":\"\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_8d0de490dde571af103e878aa265925a94dd83b4f74e62b617db5ad43a4f76af",
																		"typeString": "literal_string \"\", \"image\": \"\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f900c545a58378754ad8b5c331b48c15e2a79c6ef80b3dc97d883d860e9e1c18",
																		"typeString": "literal_string \"\", \"animation_url\": \"\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
																		"typeString": "literal_string \"\"}\""
																	}
																],
																"expression": {
																	"id": 1776,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2543:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2547:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2543:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2543:326:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2523:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1774,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2523:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2523:356:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2502:377:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2920:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	"value": "data:application/json;base64,"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1803,
																					"name": "json",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1773,
																					"src": "2973:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2967:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1801,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "2967:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2967:11:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"id": 1799,
																			"name": "Base64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "2953:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Base64_$194_$",
																				"typeString": "type(library Base64)"
																			}
																		},
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2960:6:7",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 193,
																		"src": "2953:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (bytes memory) pure returns (string memory)"
																		}
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2953:26:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1796,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2903:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2907:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2903:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2903:77:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2896:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1794,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2896:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2896:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1771,
												"id": 1808,
												"nodeType": "Return",
												"src": "2889:92:7"
											}
										]
									},
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "2337:57:7",
										"text": " @notice Construct an ERC721 token URI."
									},
									"functionSelector": "92b4c81b",
									"id": 1810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "constructTokenURI",
									"nameLocation": "2408:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2448:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2426:28:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenURIParams_$1748_memory_ptr",
													"typeString": "struct VerbsDescriptor.TokenURIParams"
												},
												"typeName": {
													"id": 1766,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1765,
														"name": "TokenURIParams",
														"nameLocations": [
															"2426:14:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1748,
														"src": "2426:14:7"
													},
													"referencedDeclaration": 1748,
													"src": "2426:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenURIParams_$1748_storage_ptr",
														"typeString": "struct VerbsDescriptor.TokenURIParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2425:30:7"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2477:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1769,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2477:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:15:7"
									},
									"scope": 1946,
									"src": "2399:589:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2173
									],
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "3231:124:7",
										"statements": [
											{
												"assignments": [
													1818
												],
												"declarations": [
													{
														"constant": false,
														"id": 1818,
														"mutability": "mutable",
														"name": "enabled",
														"nameLocation": "3246:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1830,
														"src": "3241:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1817,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3241:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1821,
												"initialValue": {
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3256:17:7",
													"subExpression": {
														"id": 1819,
														"name": "isDataURIEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "3257:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3241:32:7"
											},
											{
												"expression": {
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1822,
														"name": "isDataURIEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "3284:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1823,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "3303:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3284:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1825,
												"nodeType": "ExpressionStatement",
												"src": "3284:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1827,
															"name": "enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "3340:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1826,
														"name": "DataURIToggled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2156,
														"src": "3325:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1829,
												"nodeType": "EmitStatement",
												"src": "3320:28:7"
											}
										]
									},
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "2994:172:7",
										"text": " @notice Toggle a boolean value which determines if `tokenURI` returns a data URI\n or an HTTP URL.\n @dev This can only be called by the owner."
									},
									"functionSelector": "dfe8478b",
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1815,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1814,
												"name": "onlyOwner",
												"nameLocations": [
													"3221:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3221:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3221:9:7"
										}
									],
									"name": "toggleDataURIEnabled",
									"nameLocation": "3180:20:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1813,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3212:8:7"
									},
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3200:2:7"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:7"
									},
									"scope": 1946,
									"src": "3171:184:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2178
									],
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "3684:75:7",
										"statements": [
											{
												"expression": {
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1840,
														"name": "baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "3694:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1841,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "3704:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "3694:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "3694:18:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1845,
															"name": "_baseURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "3743:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 1844,
														"name": "BaseURIUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2160,
														"src": "3728:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3728:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1847,
												"nodeType": "EmitStatement",
												"src": "3723:29:7"
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "3361:244:7",
										"text": " @notice Set the base URI for all token IDs. It is automatically\n added as a prefix to the value returned in {tokenURI}, or to the\n token ID if {tokenURI} is empty.\n @dev This can only be called by the owner."
									},
									"functionSelector": "55f804b3",
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1838,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1837,
												"name": "onlyOwner",
												"nameLocations": [
													"3674:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3674:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3674:9:7"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "3619:10:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1836,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3665:8:7"
									},
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "_baseURI",
												"nameLocation": "3646:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "3630:24:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3629:26:7"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:0:7"
									},
									"scope": 1946,
									"src": "3610:149:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2188
									],
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "4067:166:7",
										"statements": [
											{
												"condition": {
													"id": 1860,
													"name": "isDataURIEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1734,
													"src": "4081:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1867,
												"nodeType": "IfStatement",
												"src": "4077:80:7",
												"trueBody": {
													"id": 1866,
													"nodeType": "Block",
													"src": "4099:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1862,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1852,
																		"src": "4128:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1863,
																		"name": "metadata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "4137:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
																			"typeString": "struct ICultureIndex.ArtPieceMetadata memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
																			"typeString": "struct ICultureIndex.ArtPieceMetadata memory"
																		}
																	],
																	"id": 1861,
																	"name": "dataURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "4120:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_ArtPieceMetadata_$2034_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (uint256,struct ICultureIndex.ArtPieceMetadata memory) view returns (string memory)"
																	}
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4120:26:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1859,
															"id": 1865,
															"nodeType": "Return",
															"src": "4113:33:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1872,
																	"name": "baseURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "4197:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1873,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1852,
																			"src": "4206:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4214:8:7",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 284,
																		"src": "4206:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4206:18:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1870,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4180:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4184:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4180:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4180:45:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4173:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1868,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4173:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4173:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1859,
												"id": 1878,
												"nodeType": "Return",
												"src": "4166:60:7"
											}
										]
									},
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "3765:176:7",
										"text": " @notice Given a token ID, construct a token URI for an official Vrbs DAO verb.\n @dev The returned value may be a base64 encoded data URI or an API URL."
									},
									"functionSelector": "2c90464d",
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "3955:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3972:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "3964:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3964:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "4019:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "3981:46:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 1854,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1853,
														"name": "ICultureIndex.ArtPieceMetadata",
														"nameLocations": [
															"3981:13:7",
															"3995:16:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2034,
														"src": "3981:30:7"
													},
													"referencedDeclaration": 2034,
													"src": "3981:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3963:65:7"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4052:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4052:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:15:7"
									},
									"scope": 1946,
									"src": "3946:287:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2198
									],
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "4473:191:7",
										"statements": [
											{
												"assignments": [
													1892
												],
												"declarations": [
													{
														"constant": false,
														"id": 1892,
														"mutability": "mutable",
														"name": "verbId",
														"nameLocation": "4497:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1914,
														"src": "4483:20:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1891,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4483:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1896,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1893,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "4506:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4514:8:7",
														"memberName": "toString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "4506:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4506:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4483:41:7"
											},
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "name",
														"nameLocation": "4548:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1914,
														"src": "4534:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1897,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4534:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1908,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1903,
																	"name": "tokenNamePrefix",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "4579:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"hexValue": "20",
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4596:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
																		"typeString": "literal_string \" \""
																	},
																	"value": " "
																},
																{
																	"id": 1905,
																	"name": "verbId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1892,
																	"src": "4601:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
																		"typeString": "literal_string \" \""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1901,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4562:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4566:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4562:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4562:46:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4555:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1899,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4555:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4534:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1910,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "4642:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1911,
															"name": "metadata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "4648:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
																"typeString": "struct ICultureIndex.ArtPieceMetadata memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
																"typeString": "struct ICultureIndex.ArtPieceMetadata memory"
															}
														],
														"id": 1909,
														"name": "genericDataURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "4627:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_struct$_ArtPieceMetadata_$2034_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,struct ICultureIndex.ArtPieceMetadata memory) pure returns (string memory)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1890,
												"id": 1913,
												"nodeType": "Return",
												"src": "4620:37:7"
											}
										]
									},
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "4239:111:7",
										"text": " @notice Given a token ID, construct a base64 encoded data URI for an official Vrbs DAO verb."
									},
									"functionSelector": "0dd4f079",
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dataURI",
									"nameLocation": "4364:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4380:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "4372:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "4427:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "4389:46:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 1885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1884,
														"name": "ICultureIndex.ArtPieceMetadata",
														"nameLocations": [
															"4389:13:7",
															"4403:16:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2034,
														"src": "4389:30:7"
													},
													"referencedDeclaration": 2034,
													"src": "4389:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4371:65:7"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "4458:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1888,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4458:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4457:15:7"
									},
									"scope": 1946,
									"src": "4355:309:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2208
									],
									"body": {
										"id": 1944,
										"nodeType": "Block",
										"src": "4894:353:7",
										"statements": [
											{
												"assignments": [
													1929
												],
												"declarations": [
													{
														"constant": false,
														"id": 1929,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "5007:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1944,
														"src": "4985:28:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenURIParams_$1748_memory_ptr",
															"typeString": "struct VerbsDescriptor.TokenURIParams"
														},
														"typeName": {
															"id": 1928,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1927,
																"name": "TokenURIParams",
																"nameLocations": [
																	"4985:14:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1748,
																"src": "4985:14:7"
															},
															"referencedDeclaration": 1748,
															"src": "4985:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenURIParams_$1748_storage_ptr",
																"typeString": "struct VerbsDescriptor.TokenURIParams"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "@dev Get name description image and animation_url from CultureIndex",
												"id": 1939,
												"initialValue": {
													"arguments": [
														{
															"id": 1931,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "5051:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1932,
																"name": "metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "5082:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
																	"typeString": "struct ICultureIndex.ArtPieceMetadata memory"
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5091:11:7",
															"memberName": "description",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2024,
															"src": "5082:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1934,
																"name": "metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "5123:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
																	"typeString": "struct ICultureIndex.ArtPieceMetadata memory"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5132:5:7",
															"memberName": "image",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2029,
															"src": "5123:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1936,
																"name": "metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "5166:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
																	"typeString": "struct ICultureIndex.ArtPieceMetadata memory"
																}
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5175:12:7",
															"memberName": "animationUrl",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2033,
															"src": "5166:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1930,
														"name": "TokenURIParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "5016:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_TokenURIParams_$1748_storage_ptr_$",
															"typeString": "type(struct VerbsDescriptor.TokenURIParams storage pointer)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"5045:4:7",
														"5069:11:7",
														"5116:5:7",
														"5151:13:7"
													],
													"names": [
														"name",
														"description",
														"image",
														"animation_url"
													],
													"nodeType": "FunctionCall",
													"src": "5016:182:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenURIParams_$1748_memory_ptr",
														"typeString": "struct VerbsDescriptor.TokenURIParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4985:213:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1941,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "5233:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenURIParams_$1748_memory_ptr",
																"typeString": "struct VerbsDescriptor.TokenURIParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokenURIParams_$1748_memory_ptr",
																"typeString": "struct VerbsDescriptor.TokenURIParams memory"
															}
														],
														"id": 1940,
														"name": "constructTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "5215:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_TokenURIParams_$1748_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (struct VerbsDescriptor.TokenURIParams memory) pure returns (string memory)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5215:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1925,
												"id": 1943,
												"nodeType": "Return",
												"src": "5208:32:7"
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "4670:91:7",
										"text": " @notice Given a name, and metadata, construct a base64 encoded data URI."
									},
									"functionSelector": "f0b305eb",
									"id": 1945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "genericDataURI",
									"nameLocation": "4775:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "4804:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "4790:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1917,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4790:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "4848:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "4810:46:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 1920,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1919,
														"name": "ICultureIndex.ArtPieceMetadata",
														"nameLocations": [
															"4810:13:7",
															"4824:16:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2034,
														"src": "4810:30:7"
													},
													"referencedDeclaration": 2034,
													"src": "4810:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4789:68:7"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "4879:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1923,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4879:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4878:15:7"
									},
									"scope": 1946,
									"src": "4766:481:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1947,
							"src": "1443:3806:7",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								2152,
								2156,
								2160
							]
						}
					],
					"src": "1076:4174:7"
				},
				"id": 7
			},
			"packages/revolution-contracts/interfaces/ICultureIndex.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/interfaces/ICultureIndex.sol",
					"exportedSymbols": {
						"ICultureIndex": [
							2142
						],
						"ICultureIndexEvents": [
							2010
						],
						"IERC20": [
							1708
						]
					},
					"id": 2143,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1948,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:8"
						},
						{
							"absolutePath": "packages/revolution-contracts/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1950,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2143,
							"sourceUnit": 1709,
							"src": "63:39:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1949,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1708,
										"src": "72:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICultureIndexEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1951,
								"nodeType": "StructuredDocumentation",
								"src": "104:110:8",
								"text": " @title ICultureIndexEvents\n @dev This interface defines the events for the CultureIndex contract."
							},
							"fullyImplemented": true,
							"id": 2010,
							"linearizedBaseContracts": [
								2010
							],
							"name": "ICultureIndexEvents",
							"nameLocation": "225:19:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "251:576:8",
										"text": " @dev Emitted when a new piece is created.\n @param pieceId Unique identifier for the newly created piece.\n @param dropper Address that created the piece.\n @param name Name of the art piece.\n @param description Description of the art piece.\n @param image URL for the image associated with the art piece.\n @param animationUrl (Optional) URL for the animation associated with the art piece.\n @param text Text content for the art piece.\n @param mediaType Integer representation of the media type for the art piece."
									},
									"eventSelector": "c6dda5d2a7a2baaaa424904e38bc3992b0dc78bfb2900bbdeca620424fa64570",
									"id": 1970,
									"name": "PieceCreated",
									"nameLocation": "838:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"indexed": true,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "876:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "860:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"indexed": true,
												"mutability": "mutable",
												"name": "dropper",
												"nameLocation": "909:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "893:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1958,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "933:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "926:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1957,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "926:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"indexed": false,
												"mutability": "mutable",
												"name": "description",
												"nameLocation": "954:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "947:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1959,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "947:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"indexed": false,
												"mutability": "mutable",
												"name": "image",
												"nameLocation": "982:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "975:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1961,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "975:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"indexed": false,
												"mutability": "mutable",
												"name": "animationUrl",
												"nameLocation": "1004:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "997:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "997:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"indexed": false,
												"mutability": "mutable",
												"name": "text",
												"nameLocation": "1033:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "1026:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1965,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1026:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"indexed": false,
												"mutability": "mutable",
												"name": "mediaType",
												"nameLocation": "1053:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "1047:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1967,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1047:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:218:8"
									},
									"src": "832:237:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "1075:196:8",
										"text": " @dev Emitted when a top-voted piece is dropped or released.\n @param pieceId Unique identifier for the dropped piece.\n @param remover Address that initiated the drop."
									},
									"eventSelector": "a9bd530a1a995fe2b42bddf7938e2e1acaef954cc9b31ffd1d13b7c3337502c8",
									"id": 1977,
									"name": "PieceDropped",
									"nameLocation": "1282:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"indexed": true,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "1311:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "1295:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1295:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"indexed": true,
												"mutability": "mutable",
												"name": "remover",
												"nameLocation": "1336:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "1320:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1294:50:8"
									},
									"src": "1276:69:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "1351:335:8",
										"text": " @dev Emitted for each creator added to a piece when it is dropped.\n @param pieceId Unique identifier for the dropped piece.\n @param creatorAddress Address of the creator.\n @param dropper Address that created the piece.\n @param bps Basis points associated with the creator for revenue sharing."
									},
									"eventSelector": "1d1b857a6a6c5e310602c1448332e9b2799ba4c6ae3d1fb7527b62828dc7b91d",
									"id": 1988,
									"name": "PieceDroppedCreator",
									"nameLocation": "1697:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"indexed": true,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "1733:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1717:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"indexed": true,
												"mutability": "mutable",
												"name": "creatorAddress",
												"nameLocation": "1758:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1742:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"indexed": true,
												"mutability": "mutable",
												"name": "dropper",
												"nameLocation": "1790:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1774:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"indexed": false,
												"mutability": "mutable",
												"name": "bps",
												"nameLocation": "1807:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1799:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:95:8"
									},
									"src": "1691:121:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "1818:300:8",
										"text": " @dev Emitted when a vote is cast for a piece.\n @param pieceId Unique identifier for the piece being voted for.\n @param voter Address of the voter.\n @param weight Weight of the vote.\n @param totalWeight Total weight of votes for the piece after the new vote."
									},
									"eventSelector": "0271f53eebbe20450d9578f28ec279231556c34545b30e2278d754ffd39cd63c",
									"id": 1999,
									"name": "VoteCast",
									"nameLocation": "2129:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"indexed": true,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "2154:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2138:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"indexed": true,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "2179:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2163:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2163:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "2194:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2186:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalWeight",
												"nameLocation": "2210:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2202:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:85:8"
									},
									"src": "2123:100:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1cd5f4915fbea5fb35c9ebdfb2bfd7d12423db85aea22a9b5e92d6b0ec08fce1",
									"id": 2009,
									"name": "PieceCreatorAdded",
									"nameLocation": "2300:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"indexed": true,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "2334:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "2318:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"indexed": true,
												"mutability": "mutable",
												"name": "creatorAddress",
												"nameLocation": "2359:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "2343:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"indexed": true,
												"mutability": "mutable",
												"name": "dropper",
												"nameLocation": "2391:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "2375:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"indexed": false,
												"mutability": "mutable",
												"name": "bps",
												"nameLocation": "2408:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "2400:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:95:8"
									},
									"src": "2294:119:8"
								}
							],
							"scope": 2143,
							"src": "215:2200:8",
							"usedErrors": [],
							"usedEvents": [
								1970,
								1977,
								1988,
								1999,
								2009
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2012,
										"name": "ICultureIndexEvents",
										"nameLocations": [
											"2586:19:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2010,
										"src": "2586:19:8"
									},
									"id": 2013,
									"nodeType": "InheritanceSpecifier",
									"src": "2586:19:8"
								}
							],
							"canonicalName": "ICultureIndex",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2011,
								"nodeType": "StructuredDocumentation",
								"src": "2417:141:8",
								"text": " @title ICultureIndex\n @dev This interface defines the methods for the CultureIndex contract for art piece management and voting."
							},
							"fullyImplemented": false,
							"id": 2142,
							"linearizedBaseContracts": [
								2142,
								2010
							],
							"name": "ICultureIndex",
							"nameLocation": "2569:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ICultureIndex.MediaType",
									"id": 2020,
									"members": [
										{
											"id": 2014,
											"name": "NONE",
											"nameLocation": "2700:4:8",
											"nodeType": "EnumValue",
											"src": "2700:4:8"
										},
										{
											"id": 2015,
											"name": "IMAGE",
											"nameLocation": "2714:5:8",
											"nodeType": "EnumValue",
											"src": "2714:5:8"
										},
										{
											"id": 2016,
											"name": "ANIMATION",
											"nameLocation": "2729:9:8",
											"nodeType": "EnumValue",
											"src": "2729:9:8"
										},
										{
											"id": 2017,
											"name": "AUDIO",
											"nameLocation": "2748:5:8",
											"nodeType": "EnumValue",
											"src": "2748:5:8"
										},
										{
											"id": 2018,
											"name": "TEXT",
											"nameLocation": "2763:4:8",
											"nodeType": "EnumValue",
											"src": "2763:4:8"
										},
										{
											"id": 2019,
											"name": "OTHER",
											"nameLocation": "2777:5:8",
											"nodeType": "EnumValue",
											"src": "2777:5:8"
										}
									],
									"name": "MediaType",
									"nameLocation": "2680:9:8",
									"nodeType": "EnumDefinition",
									"src": "2675:113:8"
								},
								{
									"canonicalName": "ICultureIndex.ArtPieceMetadata",
									"id": 2034,
									"members": [
										{
											"constant": false,
											"id": 2022,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2885:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 2034,
											"src": "2878:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2021,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2878:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2024,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "2906:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2034,
											"src": "2899:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2023,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2899:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2027,
											"mutability": "mutable",
											"name": "mediaType",
											"nameLocation": "2937:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2034,
											"src": "2927:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_MediaType_$2020",
												"typeString": "enum ICultureIndex.MediaType"
											},
											"typeName": {
												"id": 2026,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2025,
													"name": "MediaType",
													"nameLocations": [
														"2927:9:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2020,
													"src": "2927:9:8"
												},
												"referencedDeclaration": 2020,
												"src": "2927:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_MediaType_$2020",
													"typeString": "enum ICultureIndex.MediaType"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2029,
											"mutability": "mutable",
											"name": "image",
											"nameLocation": "2963:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 2034,
											"src": "2956:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2028,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2956:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2031,
											"mutability": "mutable",
											"name": "text",
											"nameLocation": "2985:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 2034,
											"src": "2978:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2030,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2978:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2033,
											"mutability": "mutable",
											"name": "animationUrl",
											"nameLocation": "3006:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2034,
											"src": "2999:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2032,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2999:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ArtPieceMetadata",
									"nameLocation": "2851:16:8",
									"nodeType": "StructDefinition",
									"scope": 2142,
									"src": "2844:181:8",
									"visibility": "public"
								},
								{
									"canonicalName": "ICultureIndex.CreatorBps",
									"id": 2039,
									"members": [
										{
											"constant": false,
											"id": 2036,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "3144:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2039,
											"src": "3136:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2035,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3136:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2038,
											"mutability": "mutable",
											"name": "bps",
											"nameLocation": "3169:3:8",
											"nodeType": "VariableDeclaration",
											"scope": 2039,
											"src": "3161:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2037,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3161:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CreatorBps",
									"nameLocation": "3115:10:8",
									"nodeType": "StructDefinition",
									"scope": 2142,
									"src": "3108:71:8",
									"visibility": "public"
								},
								{
									"canonicalName": "ICultureIndex.ArtPiece",
									"id": 2053,
									"members": [
										{
											"constant": false,
											"id": 2041,
											"mutability": "mutable",
											"name": "pieceId",
											"nameLocation": "3256:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2053,
											"src": "3248:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2040,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3248:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2044,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "3290:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2053,
											"src": "3273:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
												"typeString": "struct ICultureIndex.ArtPieceMetadata"
											},
											"typeName": {
												"id": 2043,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2042,
													"name": "ArtPieceMetadata",
													"nameLocations": [
														"3273:16:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2034,
													"src": "3273:16:8"
												},
												"referencedDeclaration": 2034,
												"src": "3273:16:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2048,
											"mutability": "mutable",
											"name": "creators",
											"nameLocation": "3321:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2053,
											"src": "3308:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_CreatorBps_$2039_storage_$dyn_storage_ptr",
												"typeString": "struct ICultureIndex.CreatorBps[]"
											},
											"typeName": {
												"baseType": {
													"id": 2046,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2045,
														"name": "CreatorBps",
														"nameLocations": [
															"3308:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2039,
														"src": "3308:10:8"
													},
													"referencedDeclaration": 2039,
													"src": "3308:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CreatorBps_$2039_storage_ptr",
														"typeString": "struct ICultureIndex.CreatorBps"
													}
												},
												"id": 2047,
												"nodeType": "ArrayTypeName",
												"src": "3308:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_CreatorBps_$2039_storage_$dyn_storage_ptr",
													"typeString": "struct ICultureIndex.CreatorBps[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2050,
											"mutability": "mutable",
											"name": "dropper",
											"nameLocation": "3347:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2053,
											"src": "3339:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2049,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3339:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2052,
											"mutability": "mutable",
											"name": "isDropped",
											"nameLocation": "3369:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2053,
											"src": "3364:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2051,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3364:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ArtPiece",
									"nameLocation": "3229:8:8",
									"nodeType": "StructDefinition",
									"scope": 2142,
									"src": "3222:163:8",
									"visibility": "public"
								},
								{
									"canonicalName": "ICultureIndex.Vote",
									"id": 2058,
									"members": [
										{
											"constant": false,
											"id": 2055,
											"mutability": "mutable",
											"name": "voterAddress",
											"nameLocation": "3499:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2058,
											"src": "3491:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2054,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3491:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2057,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "3529:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2058,
											"src": "3521:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2056,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3521:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Vote",
									"nameLocation": "3476:4:8",
									"nodeType": "StructDefinition",
									"scope": 2142,
									"src": "3469:73:8",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "3548:112:8",
										"text": " @notice Returns the total number of art pieces.\n @return The total count of art pieces."
									},
									"functionSelector": "4a5c4dfe",
									"id": 2064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pieceCount",
									"nameLocation": "3674:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:2:8"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "3710:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3709:9:8"
									},
									"scope": 2142,
									"src": "3665:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "3725:187:8",
										"text": " @notice Returns the total voting weight for a specific art piece.\n @param pieceId The ID of the art piece.\n @return The total vote weight for the art piece."
									},
									"functionSelector": "04f50270",
									"id": 2072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVoteWeights",
									"nameLocation": "3926:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "3951:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "3943:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:17:8"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "3983:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:9:8"
									},
									"scope": 2142,
									"src": "3917:75:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2073,
										"nodeType": "StructuredDocumentation",
										"src": "3998:265:8",
										"text": " @notice Checks if a specific voter has already voted for a given art piece.\n @param pieceId The ID of the art piece.\n @param voter The address of the voter.\n @return A boolean indicating if the voter has voted for the art piece."
									},
									"functionSelector": "43859632",
									"id": 2082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasVoted",
									"nameLocation": "4277:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "4294:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "4286:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "4311:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "4303:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4303:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4285:32:8"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "4341:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2079,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4341:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4340:6:8"
									},
									"scope": 2142,
									"src": "4268:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "4353:271:8",
										"text": " @notice Allows a user to create a new art piece.\n @param metadata The metadata associated with the art piece.\n @param creatorArray An array of creators and their associated basis points.\n @return The ID of the newly created art piece."
									},
									"functionSelector": "d75d43c9",
									"id": 2095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPiece",
									"nameLocation": "4638:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "4674:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "4650:32:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 2085,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2084,
														"name": "ArtPieceMetadata",
														"nameLocations": [
															"4650:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2034,
														"src": "4650:16:8"
													},
													"referencedDeclaration": 2034,
													"src": "4650:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "creatorArray",
												"nameLocation": "4704:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "4684:32:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_CreatorBps_$2039_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ICultureIndex.CreatorBps[]"
												},
												"typeName": {
													"baseType": {
														"id": 2088,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2087,
															"name": "CreatorBps",
															"nameLocations": [
																"4684:10:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2039,
															"src": "4684:10:8"
														},
														"referencedDeclaration": 2039,
														"src": "4684:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CreatorBps_$2039_storage_ptr",
															"typeString": "struct ICultureIndex.CreatorBps"
														}
													},
													"id": 2089,
													"nodeType": "ArrayTypeName",
													"src": "4684:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_CreatorBps_$2039_storage_$dyn_storage_ptr",
														"typeString": "struct ICultureIndex.CreatorBps[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4649:68:8"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "4736:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4736:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4735:9:8"
									},
									"scope": 2142,
									"src": "4629:116:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2096,
										"nodeType": "StructuredDocumentation",
										"src": "4751:121:8",
										"text": " @notice Allows a user to vote for a specific art piece.\n @param pieceId The ID of the art piece."
									},
									"functionSelector": "0121b93f",
									"id": 2101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "4886:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "4899:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "4891:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4891:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4890:17:8"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4916:0:8"
									},
									"scope": 2142,
									"src": "4877:40:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "4923:168:8",
										"text": " @notice Fetch an art piece by its ID.\n @param pieceId The ID of the art piece.\n @return The ArtPiece struct associated with the given ID."
									},
									"functionSelector": "deb50c35",
									"id": 2110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPieceById",
									"nameLocation": "5105:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "5126:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "5118:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5118:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5117:17:8"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "5158:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPiece_$2053_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPiece"
												},
												"typeName": {
													"id": 2107,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2106,
														"name": "ArtPiece",
														"nameLocations": [
															"5158:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2053,
														"src": "5158:8:8"
													},
													"referencedDeclaration": 2053,
													"src": "5158:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPiece_$2053_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPiece"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5157:17:8"
									},
									"scope": 2142,
									"src": "5096:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "5181:239:8",
										"text": " @notice Fetch the list of voters for a given art piece.\n @param pieceId The ID of the art piece.\n @param voter The address of the voter.\n @return An Voter structs associated with the given art piece ID."
									},
									"functionSelector": "bc3f931f",
									"id": 2121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVote",
									"nameLocation": "5434:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "5450:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "5442:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5442:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "5467:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "5459:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5441:32:8"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "5497:11:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Vote_$2058_memory_ptr",
													"typeString": "struct ICultureIndex.Vote"
												},
												"typeName": {
													"id": 2118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2117,
														"name": "Vote",
														"nameLocations": [
															"5497:4:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2058,
														"src": "5497:4:8"
													},
													"referencedDeclaration": 2058,
													"src": "5497:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vote_$2058_storage_ptr",
														"typeString": "struct ICultureIndex.Vote"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5496:13:8"
									},
									"scope": 2142,
									"src": "5425:85:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "5516:170:8",
										"text": " @notice Retrieve the top-voted art piece based on the accumulated votes.\n @return The ArtPiece struct representing the piece with the most votes."
									},
									"functionSelector": "f8a8be40",
									"id": 2128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTopVotedPiece",
									"nameLocation": "5700:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5716:2:8"
									},
									"returnParameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "5742:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPiece_$2053_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPiece"
												},
												"typeName": {
													"id": 2125,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2124,
														"name": "ArtPiece",
														"nameLocations": [
															"5742:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2053,
														"src": "5742:8:8"
													},
													"referencedDeclaration": 2053,
													"src": "5742:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPiece_$2053_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPiece"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5741:17:8"
									},
									"scope": 2142,
									"src": "5691:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2129,
										"nodeType": "StructuredDocumentation",
										"src": "5765:127:8",
										"text": " @notice Fetch the ID of the top-voted art piece.\n @return The ID of the art piece with the most votes."
									},
									"functionSelector": "b7b61494",
									"id": 2134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "topVotedPieceId",
									"nameLocation": "5906:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5921:2:8"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "5947:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5947:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5946:9:8"
									},
									"scope": 2142,
									"src": "5897:59:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2135,
										"nodeType": "StructuredDocumentation",
										"src": "5962:264:8",
										"text": " @notice Officially release or \"drop\" the art piece with the most votes.\n @dev This function also updates internal state to reflect the piece's dropped status.\n @return The ArtPiece struct of the top voted piece that was just dropped."
									},
									"functionSelector": "bad22aff",
									"id": 2141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dropTopVotedPiece",
									"nameLocation": "6240:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6257:2:8"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "6278:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPiece_$2053_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPiece"
												},
												"typeName": {
													"id": 2138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2137,
														"name": "ArtPiece",
														"nameLocations": [
															"6278:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2053,
														"src": "6278:8:8"
													},
													"referencedDeclaration": 2053,
													"src": "6278:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPiece_$2053_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPiece"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6277:17:8"
									},
									"scope": 2142,
									"src": "6231:64:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2143,
							"src": "2559:3738:8",
							"usedErrors": [],
							"usedEvents": [
								1970,
								1977,
								1988,
								1999,
								2009
							]
						}
					],
					"src": "37:6261:8"
				},
				"id": 8
			},
			"packages/revolution-contracts/interfaces/IVerbsDescriptor.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/interfaces/IVerbsDescriptor.sol",
					"exportedSymbols": {
						"ICultureIndex": [
							2142
						],
						"IVerbsDescriptor": [
							2209
						],
						"IVerbsDescriptorMinimal": [
							2235
						]
					},
					"id": 2210,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "1081:24:9"
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol",
							"file": "./IVerbsDescriptorMinimal.sol",
							"id": 2146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2210,
							"sourceUnit": 2236,
							"src": "1107:72:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2145,
										"name": "IVerbsDescriptorMinimal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2235,
										"src": "1116:23:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/ICultureIndex.sol",
							"file": "./ICultureIndex.sol",
							"id": 2148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2210,
							"sourceUnit": 2143,
							"src": "1180:52:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2147,
										"name": "ICultureIndex",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2142,
										"src": "1189:13:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2149,
										"name": "IVerbsDescriptorMinimal",
										"nameLocations": [
											"1264:23:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2235,
										"src": "1264:23:9"
									},
									"id": 2150,
									"nodeType": "InheritanceSpecifier",
									"src": "1264:23:9"
								}
							],
							"canonicalName": "IVerbsDescriptor",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2209,
							"linearizedBaseContracts": [
								2209,
								2235
							],
							"name": "IVerbsDescriptor",
							"nameLocation": "1244:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "1680ee6d421f70ed6030d2fc4fcb50217a5dd617858d56562b119eca59172e57",
									"id": 2152,
									"name": "PartsLocked",
									"nameLocation": "1300:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1311:2:9"
									},
									"src": "1294:20:9"
								},
								{
									"anonymous": false,
									"eventSelector": "360c3d72ee193226275b842f85231c259c934e85459fed80fa68e502ffa9dbde",
									"id": 2156,
									"name": "DataURIToggled",
									"nameLocation": "1326:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "1346:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "1341:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1341:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:14:9"
									},
									"src": "1320:35:9"
								},
								{
									"anonymous": false,
									"eventSelector": "6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad",
									"id": 2160,
									"name": "BaseURIUpdated",
									"nameLocation": "1367:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseURI",
												"nameLocation": "1389:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "1382:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1382:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:16:9"
									},
									"src": "1361:37:9"
								},
								{
									"functionSelector": "ce2f4f53",
									"id": 2165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isDataURIEnabled",
									"nameLocation": "1413:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1429:2:9"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "1450:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1450:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:6:9"
									},
									"scope": 2209,
									"src": "1404:52:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6c0360eb",
									"id": 2170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "baseURI",
									"nameLocation": "1471:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1478:2:9"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1499:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2167,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1499:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1498:15:9"
									},
									"scope": 2209,
									"src": "1462:52:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dfe8478b",
									"id": 2173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "toggleDataURIEnabled",
									"nameLocation": "1529:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1549:2:9"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1560:0:9"
									},
									"scope": 2209,
									"src": "1520:41:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "55f804b3",
									"id": 2178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseURI",
									"nameLocation": "1576:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "baseURI",
												"nameLocation": "1603:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "1587:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1587:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:25:9"
									},
									"returnParameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1620:0:9"
									},
									"scope": 2209,
									"src": "1567:54:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2224
									],
									"functionSelector": "2c90464d",
									"id": 2188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1636:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1653:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "1645:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "1662:37:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 2182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2181,
														"name": "ICultureIndex.ArtPieceMetadata",
														"nameLocations": [
															"1662:13:9",
															"1676:16:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2034,
														"src": "1662:30:9"
													},
													"referencedDeclaration": 2034,
													"src": "1662:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:56:9"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "1724:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1724:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1723:15:9"
									},
									"scope": 2209,
									"src": "1627:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2234
									],
									"functionSelector": "0dd4f079",
									"id": 2198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dataURI",
									"nameLocation": "1754:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1770:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "1762:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "1779:37:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 2192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2191,
														"name": "ICultureIndex.ArtPieceMetadata",
														"nameLocations": [
															"1779:13:9",
															"1793:16:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2034,
														"src": "1779:30:9"
													},
													"referencedDeclaration": 2034,
													"src": "1779:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:56:9"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "1841:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2195,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1841:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:15:9"
									},
									"scope": 2209,
									"src": "1745:111:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f0b305eb",
									"id": 2208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "genericDataURI",
									"nameLocation": "1871:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1902:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "1886:20:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1886:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "1908:37:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 2202,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2201,
														"name": "ICultureIndex.ArtPieceMetadata",
														"nameLocations": [
															"1908:13:9",
															"1922:16:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2034,
														"src": "1908:30:9"
													},
													"referencedDeclaration": 2034,
													"src": "1908:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:61:9"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "1970:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1970:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:15:9"
									},
									"scope": 2209,
									"src": "1862:123:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2210,
							"src": "1234:753:9",
							"usedErrors": [],
							"usedEvents": [
								2152,
								2156,
								2160
							]
						}
					],
					"src": "1081:907:9"
				},
				"id": 9
			},
			"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol",
					"exportedSymbols": {
						"ICultureIndex": [
							2142
						],
						"IVerbsDescriptorMinimal": [
							2235
						]
					},
					"id": 2236,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2211,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "1120:24:10"
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/ICultureIndex.sol",
							"file": "./ICultureIndex.sol",
							"id": 2213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2236,
							"sourceUnit": 2143,
							"src": "1146:52:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2212,
										"name": "ICultureIndex",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2142,
										"src": "1155:13:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVerbsDescriptorMinimal",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2235,
							"linearizedBaseContracts": [
								2235
							],
							"name": "IVerbsDescriptorMinimal",
							"nameLocation": "1210:23:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2214,
										"nodeType": "StructuredDocumentation",
										"src": "1240:34:10",
										"text": "\n USED BY TOKEN"
									},
									"functionSelector": "2c90464d",
									"id": 2224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1288:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1305:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "1297:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1352:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "1314:46:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 2218,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2217,
														"name": "ICultureIndex.ArtPieceMetadata",
														"nameLocations": [
															"1314:13:10",
															"1328:16:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2034,
														"src": "1314:30:10"
													},
													"referencedDeclaration": 2034,
													"src": "1314:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:65:10"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "1385:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1385:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:15:10"
									},
									"scope": 2235,
									"src": "1279:121:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dd4f079",
									"id": 2234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dataURI",
									"nameLocation": "1415:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1431:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "1423:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1478:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "1440:46:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 2228,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2227,
														"name": "ICultureIndex.ArtPieceMetadata",
														"nameLocations": [
															"1440:13:10",
															"1454:16:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2034,
														"src": "1440:30:10"
													},
													"referencedDeclaration": 2034,
													"src": "1440:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$2034_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:65:10"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "1511:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1511:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:15:10"
									},
									"scope": 2235,
									"src": "1406:120:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2236,
							"src": "1200:328:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1120:409:10"
				},
				"id": 10
			}
		}
	}
}