{
	"id": "a386ca2ed8678564b2e7937da85519fd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/revolution-contracts/NontransferableERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.22;\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract NontransferableERC20 is Ownable {\n    mapping(address => uint256) private _balances;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private immutable _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(address _initialOwner, string memory name_, string memory symbol_, uint8 decimals_) Ownable(_initialOwner) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address, uint256) public virtual returns (bool) {\n        return false;\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address, uint256) public virtual returns (bool) {\n        return false;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address, address, uint256) public virtual returns (bool) {\n        return false;\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        // only allow the owner to mint tokens\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    function mint(address account, uint256 amount) public onlyOwner {\n        _mint(account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    // solhint-disable-next-line no-empty-blocks\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    // solhint-disable-next-line no-empty-blocks\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/NontransferableERC20.sol": {
				"NontransferableERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/revolution-contracts/NontransferableERC20.sol\":1505:8273  contract NontransferableERC20 is Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":1987:2194  constructor(address _initialOwner, string memory name_, string memory symbol_, uint8 decimals_) Ownable(_initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2091:2104  _initialOwner */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2034:2085   */\n  mstore\n    /* \"#utility.yul\":2007:2025   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2116:2121  _name */\n  0x03\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2116:2129  _name = name_ */\n  tag_13\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2124:2129  name_ */\n  dup5\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2116:2121  _name */\n  dup3\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2116:2129  _name = name_ */\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2139:2146  _symbol */\n  0x04\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2139:2156  _symbol = symbol_ */\n  tag_15\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2149:2156  symbol_ */\n  dup4\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2139:2146  _symbol */\n  dup3\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2139:2156  _symbol = symbol_ */\n  tag_14\n  jump\t// in\ntag_15:\n  pop\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2166:2187  _decimals = decimals_ */\n  0xff\n  and\n  0x80\n  mstore\n  pop\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":1505:8273  contract NontransferableERC20 is Ownable {... */\n  tag_24\n  swap2\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_18:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:990   */\ntag_19:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_27:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_29\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_31\n  tag_18\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":732:735   */\n  dup7\n    /* \"#utility.yul\":725:729   */\n  0x20\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:730   */\n  add\n    /* \"#utility.yul\":701:736   */\n  gt\n    /* \"#utility.yul\":698:753   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":746:747   */\n  dup1\n    /* \"#utility.yul\":739:751   */\n  revert\n    /* \"#utility.yul\":698:753   */\ntag_32:\n    /* \"#utility.yul\":771:772   */\n  0x00\n    /* \"#utility.yul\":762:772   */\n  swap2\n  pop\n    /* \"#utility.yul\":781:914   */\ntag_33:\n    /* \"#utility.yul\":795:797   */\n  dup4\n    /* \"#utility.yul\":792:793   */\n  dup3\n    /* \"#utility.yul\":789:798   */\n  lt\n    /* \"#utility.yul\":781:914   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":883:897   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":879:902   */\n  dup4\n  add\n    /* \"#utility.yul\":873:903   */\n  mload\n    /* \"#utility.yul\":852:866   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":848:871   */\n  dup5\n  add\n    /* \"#utility.yul\":841:904   */\n  mstore\n    /* \"#utility.yul\":806:816   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":781:914   */\n  jump(tag_33)\ntag_35:\n    /* \"#utility.yul\":958:959   */\n  0x00\n    /* \"#utility.yul\":951:955   */\n  0x20\n    /* \"#utility.yul\":946:948   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup4\n    /* \"#utility.yul\":934:949   */\n  add\n    /* \"#utility.yul\":930:956   */\n  add\n    /* \"#utility.yul\":923:960   */\n  mstore\n    /* \"#utility.yul\":978:984   */\n  dup1\n    /* \"#utility.yul\":969:984   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":995:1883   */\ntag_3:\n    /* \"#utility.yul\":1110:1116   */\n  0x00\n    /* \"#utility.yul\":1118:1124   */\n  dup1\n    /* \"#utility.yul\":1126:1132   */\n  0x00\n    /* \"#utility.yul\":1134:1140   */\n  dup1\n    /* \"#utility.yul\":1187:1190   */\n  0x80\n    /* \"#utility.yul\":1175:1184   */\n  dup6\n    /* \"#utility.yul\":1166:1173   */\n  dup8\n    /* \"#utility.yul\":1162:1185   */\n  sub\n    /* \"#utility.yul\":1158:1191   */\n  slt\n    /* \"#utility.yul\":1155:1208   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1204:1205   */\n  0x00\n    /* \"#utility.yul\":1201:1202   */\n  dup1\n    /* \"#utility.yul\":1194:1206   */\n  revert\n    /* \"#utility.yul\":1155:1208   */\ntag_37:\n    /* \"#utility.yul\":1230:1246   */\n  dup5\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1275:1306   */\n  dup2\n  and\n    /* \"#utility.yul\":1265:1307   */\n  dup2\n  eq\n    /* \"#utility.yul\":1255:1325   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1321:1322   */\n  0x00\n    /* \"#utility.yul\":1318:1319   */\n  dup1\n    /* \"#utility.yul\":1311:1323   */\n  revert\n    /* \"#utility.yul\":1255:1325   */\ntag_38:\n    /* \"#utility.yul\":1393:1395   */\n  0x20\n    /* \"#utility.yul\":1378:1396   */\n  dup7\n  add\n    /* \"#utility.yul\":1372:1397   */\n  mload\n    /* \"#utility.yul\":1344:1349   */\n  swap1\n  swap5\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1446:1460   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1443:1477   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1470:1471   */\n  dup1\n    /* \"#utility.yul\":1463:1475   */\n  revert\n    /* \"#utility.yul\":1443:1477   */\ntag_39:\n    /* \"#utility.yul\":1496:1557   */\n  tag_40\n    /* \"#utility.yul\":1549:1556   */\n  dup9\n    /* \"#utility.yul\":1540:1546   */\n  dup4\n    /* \"#utility.yul\":1529:1538   */\n  dup10\n    /* \"#utility.yul\":1525:1547   */\n  add\n    /* \"#utility.yul\":1496:1557   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1486:1557   */\n  swap5\n  pop\n    /* \"#utility.yul\":1603:1605   */\n  0x40\n    /* \"#utility.yul\":1592:1601   */\n  dup8\n    /* \"#utility.yul\":1588:1606   */\n  add\n    /* \"#utility.yul\":1582:1607   */\n  mload\n    /* \"#utility.yul\":1566:1607   */\n  swap2\n  pop\n    /* \"#utility.yul\":1632:1634   */\n  dup1\n    /* \"#utility.yul\":1622:1630   */\n  dup3\n    /* \"#utility.yul\":1619:1635   */\n  gt\n    /* \"#utility.yul\":1616:1652   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1648:1649   */\n  0x00\n    /* \"#utility.yul\":1645:1646   */\n  dup1\n    /* \"#utility.yul\":1638:1650   */\n  revert\n    /* \"#utility.yul\":1616:1652   */\ntag_41:\n  pop\n    /* \"#utility.yul\":1671:1734   */\n  tag_42\n    /* \"#utility.yul\":1726:1733   */\n  dup8\n    /* \"#utility.yul\":1715:1723   */\n  dup3\n    /* \"#utility.yul\":1704:1713   */\n  dup9\n    /* \"#utility.yul\":1700:1724   */\n  add\n    /* \"#utility.yul\":1671:1734   */\n  tag_19\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1661:1734   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x60\n    /* \"#utility.yul\":1768:1777   */\n  dup6\n    /* \"#utility.yul\":1764:1782   */\n  add\n    /* \"#utility.yul\":1758:1783   */\n  mload\n    /* \"#utility.yul\":1827:1831   */\n  0xff\n    /* \"#utility.yul\":1818:1825   */\n  dup2\n    /* \"#utility.yul\":1814:1832   */\n  and\n    /* \"#utility.yul\":1805:1812   */\n  dup2\n    /* \"#utility.yul\":1802:1833   */\n  eq\n    /* \"#utility.yul\":1792:1851   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1847:1848   */\n  0x00\n    /* \"#utility.yul\":1844:1845   */\n  dup1\n    /* \"#utility.yul\":1837:1849   */\n  revert\n    /* \"#utility.yul\":1792:1851   */\ntag_43:\n    /* \"#utility.yul\":995:1883   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  swap1\n  swap4\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2096:2476   */\ntag_20:\n    /* \"#utility.yul\":2175:2176   */\n  0x01\n    /* \"#utility.yul\":2171:2183   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2218:2230   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2239:2300   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2293:2297   */\n  0x7f\n    /* \"#utility.yul\":2285:2291   */\n  dup3\n    /* \"#utility.yul\":2281:2298   */\n  and\n    /* \"#utility.yul\":2271:2298   */\n  swap2\n  pop\n    /* \"#utility.yul\":2239:2300   */\ntag_46:\n    /* \"#utility.yul\":2346:2348   */\n  0x20\n    /* \"#utility.yul\":2338:2344   */\n  dup3\n    /* \"#utility.yul\":2335:2349   */\n  lt\n    /* \"#utility.yul\":2315:2333   */\n  dup2\n    /* \"#utility.yul\":2312:2350   */\n  sub\n    /* \"#utility.yul\":2309:2470   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2392:2402   */\n  0x4e487b71\n    /* \"#utility.yul\":2387:2390   */\n  0xe0\n    /* \"#utility.yul\":2383:2403   */\n  shl\n    /* \"#utility.yul\":2380:2381   */\n  0x00\n    /* \"#utility.yul\":2373:2404   */\n  mstore\n    /* \"#utility.yul\":2427:2431   */\n  0x22\n    /* \"#utility.yul\":2424:2425   */\n  0x04\n    /* \"#utility.yul\":2417:2432   */\n  mstore\n    /* \"#utility.yul\":2455:2459   */\n  0x24\n    /* \"#utility.yul\":2452:2453   */\n  0x00\n    /* \"#utility.yul\":2445:2460   */\n  revert\n    /* \"#utility.yul\":2309:2470   */\ntag_47:\n  pop\n    /* \"#utility.yul\":2096:2476   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2607:3125   */\ntag_22:\n    /* \"#utility.yul\":2709:2711   */\n  0x1f\n    /* \"#utility.yul\":2704:2707   */\n  dup3\n    /* \"#utility.yul\":2701:2712   */\n  gt\n    /* \"#utility.yul\":2698:3119   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2745:2750   */\n  dup1\n    /* \"#utility.yul\":2742:2743   */\n  0x00\n    /* \"#utility.yul\":2735:2751   */\n  mstore\n    /* \"#utility.yul\":2789:2793   */\n  0x20\n    /* \"#utility.yul\":2786:2787   */\n  0x00\n    /* \"#utility.yul\":2776:2794   */\n  keccak256\n    /* \"#utility.yul\":2859:2861   */\n  0x1f\n    /* \"#utility.yul\":2847:2857   */\n  dup5\n    /* \"#utility.yul\":2843:2862   */\n  add\n    /* \"#utility.yul\":2840:2841   */\n  0x05\n    /* \"#utility.yul\":2836:2863   */\n  shr\n    /* \"#utility.yul\":2830:2834   */\n  dup2\n    /* \"#utility.yul\":2826:2864   */\n  add\n    /* \"#utility.yul\":2895:2899   */\n  0x20\n    /* \"#utility.yul\":2883:2893   */\n  dup6\n    /* \"#utility.yul\":2880:2900   */\n  lt\n    /* \"#utility.yul\":2877:2924   */\n  iszero\n  tag_51\n  jumpi\n  pop\n    /* \"#utility.yul\":2918:2922   */\n  dup1\n    /* \"#utility.yul\":2877:2924   */\ntag_51:\n    /* \"#utility.yul\":2973:2975   */\n  0x1f\n    /* \"#utility.yul\":2968:2971   */\n  dup5\n    /* \"#utility.yul\":2964:2976   */\n  add\n    /* \"#utility.yul\":2961:2962   */\n  0x05\n    /* \"#utility.yul\":2957:2977   */\n  shr\n    /* \"#utility.yul\":2951:2955   */\n  dup3\n    /* \"#utility.yul\":2947:2978   */\n  add\n    /* \"#utility.yul\":2937:2978   */\n  swap2\n  pop\n    /* \"#utility.yul\":3028:3109   */\ntag_52:\n    /* \"#utility.yul\":3046:3048   */\n  dup2\n    /* \"#utility.yul\":3039:3044   */\n  dup2\n    /* \"#utility.yul\":3036:3049   */\n  lt\n    /* \"#utility.yul\":3028:3109   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3105:3106   */\n  0x00\n    /* \"#utility.yul\":3091:3107   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3072:3073   */\n  0x01\n    /* \"#utility.yul\":3061:3074   */\n  add\n    /* \"#utility.yul\":3028:3109   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3032:3035   */\n  pop\n  pop\n    /* \"#utility.yul\":2698:3119   */\ntag_50:\n    /* \"#utility.yul\":2607:3125   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3301:4646   */\ntag_14:\n    /* \"#utility.yul\":3421:3431   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3443:3473   */\n  dup2\n  gt\n    /* \"#utility.yul\":3440:3496   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3476:3494   */\n  tag_58\n  tag_18\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":3505:3602   */\n  tag_59\n    /* \"#utility.yul\":3595:3601   */\n  dup2\n    /* \"#utility.yul\":3555:3593   */\n  tag_60\n    /* \"#utility.yul\":3587:3591   */\n  dup5\n    /* \"#utility.yul\":3581:3592   */\n  sload\n    /* \"#utility.yul\":3555:3593   */\n  tag_20\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":3549:3553   */\n  dup5\n    /* \"#utility.yul\":3505:3602   */\n  tag_22\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":3657:3661   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3714:3716   */\n  0x1f\n    /* \"#utility.yul\":3703:3717   */\n  dup4\n  gt\n    /* \"#utility.yul\":3731:3732   */\n  0x01\n    /* \"#utility.yul\":3726:4389   */\n  dup2\n  eq\n  tag_62\n  jumpi\n    /* \"#utility.yul\":4433:4434   */\n  0x00\n    /* \"#utility.yul\":4450:4456   */\n  dup5\n    /* \"#utility.yul\":4447:4536   */\n  iszero\n  tag_63\n  jumpi\n  pop\n    /* \"#utility.yul\":4502:4521   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4496:4522   */\n  mload\n    /* \"#utility.yul\":4447:4536   */\ntag_63:\n  not(0x00)\n    /* \"#utility.yul\":3258:3259   */\n  0x03\n    /* \"#utility.yul\":3254:3265   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":3250:3274   */\n  shr\n    /* \"#utility.yul\":3246:3275   */\n  not\n    /* \"#utility.yul\":3236:3276   */\n  and\n    /* \"#utility.yul\":3282:3283   */\n  0x01\n    /* \"#utility.yul\":3278:3289   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3233:3290   */\n  or\n    /* \"#utility.yul\":4549:4630   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3696:4640   */\n  jump(tag_61)\n    /* \"#utility.yul\":3726:4389   */\ntag_62:\n    /* \"#utility.yul\":2554:2555   */\n  0x00\n    /* \"#utility.yul\":2547:2561   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2591:2595   */\n  0x20\n    /* \"#utility.yul\":2578:2596   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3762:3782   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3880:4116   */\ntag_66:\n    /* \"#utility.yul\":3894:3901   */\n  dup3\n    /* \"#utility.yul\":3891:3892   */\n  dup2\n    /* \"#utility.yul\":3888:3902   */\n  lt\n    /* \"#utility.yul\":3880:4116   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3983:4002   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3977:4003   */\n  mload\n    /* \"#utility.yul\":3962:4004   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4075:4102   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":4043:4044   */\n  0x01\n    /* \"#utility.yul\":4031:4045   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3910:3929   */\n  dup5\n  add\n    /* \"#utility.yul\":3880:4116   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":3884:3887   */\n  pop\n    /* \"#utility.yul\":4144:4150   */\n  dup6\n    /* \"#utility.yul\":4135:4142   */\n  dup3\n    /* \"#utility.yul\":4132:4151   */\n  lt\n    /* \"#utility.yul\":4129:4330   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":4205:4224   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4199:4225   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4288:4289   */\n  0x03\n    /* \"#utility.yul\":4284:4298   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4300:4303   */\n  0xf8\n    /* \"#utility.yul\":4280:4304   */\n  and\n    /* \"#utility.yul\":4276:4313   */\n  shr\n    /* \"#utility.yul\":4272:4314   */\n  not\n    /* \"#utility.yul\":4257:4315   */\n  and\n    /* \"#utility.yul\":4242:4316   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4129:4330   */\ntag_69:\n  pop\n  pop\n    /* \"#utility.yul\":4376:4377   */\n  0x01\n    /* \"#utility.yul\":4367:4373   */\n  dup5\n    /* \"#utility.yul\":4364:4365   */\n  0x01\n    /* \"#utility.yul\":4360:4374   */\n  shl\n    /* \"#utility.yul\":4356:4378   */\n  add\n    /* \"#utility.yul\":4350:4354   */\n  dup6\n    /* \"#utility.yul\":4343:4379   */\n  sstore\n    /* \"#utility.yul\":3696:4640   */\ntag_61:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3301:4646   */\n  pop\n  pop\n  jump\t// out\ntag_24:\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":1505:8273  contract NontransferableERC20 is Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xdd5c0e85d12671451a2813ab72960178ae895d157199d23818aec59b00ee9e8b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":1505:8273  contract NontransferableERC20 is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2259:2348  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4206:4300  function approve(address, uint256) public virtual returns (bool) {... */\n    tag_4:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4206:4300  function approve(address, uint256) public virtual returns (bool) {... */\n      tag_18\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3336:3433  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3414:3426  _totalSupply */\n      sload(0x02)\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3336:3433  function totalSupply() public view virtual returns (uint256) {... */\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3336:3433  function totalSupply() public view virtual returns (uint256) {... */\n      tag_18\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4862:4970  function transferFrom(address, address, uint256) public virtual returns (bool) {... */\n    tag_6:\n      tag_20\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4935:4939  bool */\n      0x00\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4862:4970  function transferFrom(address, address, uint256) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3187:3276  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"#utility.yul\":1883:1887   */\n      0xff\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3260:3269  _decimals */\n      immutable(\"0xdd5c0e85d12671451a2813ab72960178ae895d157199d23818aec59b00ee9e8b\")\n        /* \"#utility.yul\":1871:1888   */\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3187:3276  function decimals() public view virtual returns (uint8) {... */\n      tag_18\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5759:5862  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3491:3607  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_26\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3582:3600  _balances[account] */\n      and\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3556:3563  uint256 */\n      0x00\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3582:3600  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3582:3591  _balances */\n      0x01\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3582:3600  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3491:3607  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_39\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2237:2288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_18\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2461:2554  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_16\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_39\n      tag_61\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2259:2348  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2304:2317  string memory */\n      0x60\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2336:2341  _name */\n      0x03\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2329:2341  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2259:2348  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4206:4300  function approve(address, uint256) public virtual returns (bool) {... */\n    tag_23:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4265:4269  bool */\n      0x00\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4206:4300  function approve(address, uint256) public virtual returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5759:5862  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5833:5855  _mint(account, amount) */\n      tag_78\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5839:5846  account */\n      dup3\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5848:5854  amount */\n      dup3\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5833:5838  _mint */\n      tag_79\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5833:5855  _mint(account, amount) */\n      jump\t// in\n    tag_78:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5759:5862  function mint(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2461:2554  function symbol() public view virtual returns (string memory) {... */\n    tag_54:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2508:2521  string memory */\n      0x60\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2540:2547  _symbol */\n      0x04\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2533:2547  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_97\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_98\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5246:5753  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5445:5451  amount */\n      dup1\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5429:5441  _totalSupply */\n      0x02\n      0x00\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5429:5451  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5597:5615  _balances[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5597:5606  _balances */\n      0x01\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5597:5615  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5597:5625  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5650:5687  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5650:5687  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5650:5687  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5759:5862  function mint(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_19:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_122:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_122)\n    tag_124:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_119:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_126:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_22:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_128:\n        /* \"#utility.yul\":913:942   */\n      tag_129\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_119\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_32:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_133:\n        /* \"#utility.yul\":1563:1592   */\n      tag_134\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_119\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_135\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_119\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_138:\n        /* \"#utility.yul\":2051:2080   */\n      tag_139\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_119\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2679   */\n    tag_65:\n        /* \"#utility.yul\":2378:2379   */\n      0x01\n        /* \"#utility.yul\":2374:2386   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2421:2433   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2442:2503   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":2496:2500   */\n      0x7f\n        /* \"#utility.yul\":2488:2494   */\n      dup3\n        /* \"#utility.yul\":2484:2501   */\n      and\n        /* \"#utility.yul\":2474:2501   */\n      swap2\n      pop\n        /* \"#utility.yul\":2442:2503   */\n    tag_142:\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2541:2547   */\n      dup3\n        /* \"#utility.yul\":2538:2552   */\n      lt\n        /* \"#utility.yul\":2518:2536   */\n      dup2\n        /* \"#utility.yul\":2515:2553   */\n      sub\n        /* \"#utility.yul\":2512:2673   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2595:2605   */\n      0x4e487b71\n        /* \"#utility.yul\":2590:2593   */\n      0xe0\n        /* \"#utility.yul\":2586:2606   */\n      shl\n        /* \"#utility.yul\":2583:2584   */\n      0x00\n        /* \"#utility.yul\":2576:2607   */\n      mstore\n        /* \"#utility.yul\":2630:2634   */\n      0x22\n        /* \"#utility.yul\":2627:2628   */\n      0x04\n        /* \"#utility.yul\":2620:2635   */\n      mstore\n        /* \"#utility.yul\":2658:2662   */\n      0x24\n        /* \"#utility.yul\":2655:2656   */\n      0x00\n        /* \"#utility.yul\":2648:2663   */\n      revert\n        /* \"#utility.yul\":2512:2673   */\n    tag_143:\n      pop\n        /* \"#utility.yul\":2299:2679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2684:2906   */\n    tag_111:\n        /* \"#utility.yul\":2749:2758   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2770:2780   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2767:2900   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2822:2832   */\n      0x4e487b71\n        /* \"#utility.yul\":2817:2820   */\n      0xe0\n        /* \"#utility.yul\":2813:2833   */\n      shl\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2834   */\n      mstore\n        /* \"#utility.yul\":2857:2861   */\n      0x11\n        /* \"#utility.yul\":2854:2855   */\n      0x04\n        /* \"#utility.yul\":2847:2862   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x24\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2875:2890   */\n      revert\n\n    auxdata: 0xa2646970667358221220e66871006899e4bf01d97832268ed0e00aa7aca6d09bb4af2ec16f3923a1ac7064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_223": {
									"entryPoint": null,
									"id": 223,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 143,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4648:3",
										"nodeType": "YulBlock",
										"src": "0:4648:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:3",
													"nodeType": "YulBlock",
													"src": "46:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:3",
																		"nodeType": "YulLiteral",
																		"src": "63:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:3",
																				"nodeType": "YulLiteral",
																				"src": "70:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:3",
																				"nodeType": "YulLiteral",
																				"src": "75:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:3"
																		},
																		"nativeSrc": "66:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:3"
																},
																"nativeSrc": "56:31:3",
																"nodeType": "YulFunctionCall",
																"src": "56:31:3"
															},
															"nativeSrc": "56:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:3",
																		"nodeType": "YulLiteral",
																		"src": "103:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:3",
																		"nodeType": "YulLiteral",
																		"src": "106:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:3"
																},
																"nativeSrc": "96:15:3",
																"nodeType": "YulFunctionCall",
																"src": "96:15:3"
															},
															"nativeSrc": "96:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:3",
																		"nodeType": "YulLiteral",
																		"src": "127:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:3",
																		"nodeType": "YulLiteral",
																		"src": "130:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:3"
																},
																"nativeSrc": "120:15:3",
																"nodeType": "YulFunctionCall",
																"src": "120:15:3"
															},
															"nativeSrc": "120:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:3"
											},
											{
												"body": {
													"nativeSrc": "210:780:3",
													"nodeType": "YulBlock",
													"src": "210:780:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:3",
																"nodeType": "YulBlock",
																"src": "259:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:3",
																					"nodeType": "YulLiteral",
																					"src": "268:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:3",
																					"nodeType": "YulLiteral",
																					"src": "271:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:3"
																			},
																			"nativeSrc": "261:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:3"
																		},
																		"nativeSrc": "261:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:3",
																						"nodeType": "YulLiteral",
																						"src": "246:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:3"
																				},
																				"nativeSrc": "234:17:3",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:3"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:3"
																		},
																		"nativeSrc": "230:27:3",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:3"
																},
																"nativeSrc": "223:35:3",
																"nodeType": "YulFunctionCall",
																"src": "223:35:3"
															},
															"nativeSrc": "220:55:3",
															"nodeType": "YulIf",
															"src": "220:55:3"
														},
														{
															"nativeSrc": "284:23:3",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:3"
																},
																"nativeSrc": "294:13:3",
																"nodeType": "YulFunctionCall",
																"src": "294:13:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:3",
																	"nodeType": "YulTypedName",
																	"src": "288:2:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:3",
																				"nodeType": "YulLiteral",
																				"src": "334:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:3",
																				"nodeType": "YulLiteral",
																				"src": "338:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:3"
																		},
																		"nativeSrc": "330:10:3",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:3",
																		"nodeType": "YulLiteral",
																		"src": "342:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:3"
																},
																"nativeSrc": "326:18:3",
																"nodeType": "YulFunctionCall",
																"src": "326:18:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:3",
																	"nodeType": "YulTypedName",
																	"src": "320:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:3",
																"nodeType": "YulBlock",
																"src": "367:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:3"
																			},
																			"nativeSrc": "369:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:3"
																		},
																		"nativeSrc": "369:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:3"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:3"
																},
																"nativeSrc": "356:10:3",
																"nodeType": "YulFunctionCall",
																"src": "356:10:3"
															},
															"nativeSrc": "353:36:3",
															"nodeType": "YulIf",
															"src": "353:36:3"
														},
														{
															"nativeSrc": "398:17:3",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:3",
																		"nodeType": "YulLiteral",
																		"src": "412:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:3"
																},
																"nativeSrc": "408:7:3",
																"nodeType": "YulFunctionCall",
																"src": "408:7:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:3",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:3",
																		"nodeType": "YulLiteral",
																		"src": "444:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:3"
																},
																"nativeSrc": "438:9:3",
																"nodeType": "YulFunctionCall",
																"src": "438:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:3",
																	"nodeType": "YulTypedName",
																	"src": "428:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:3",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:3",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:3"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:3",
																										"nodeType": "YulLiteral",
																										"src": "506:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:3"
																								},
																								"nativeSrc": "498:13:3",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:3"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:3"
																						},
																						"nativeSrc": "494:22:3",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:3",
																						"nodeType": "YulLiteral",
																						"src": "518:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:3"
																				},
																				"nativeSrc": "490:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:3"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:3"
																		},
																		"nativeSrc": "486:40:3",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:3"
																},
																"nativeSrc": "474:53:3",
																"nodeType": "YulFunctionCall",
																"src": "474:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:3",
																	"nodeType": "YulTypedName",
																	"src": "460:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:3",
																"nodeType": "YulBlock",
																"src": "586:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:3"
																			},
																			"nativeSrc": "588:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:3"
																		},
																		"nativeSrc": "588:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:3",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:3"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:3"
																		},
																		"nativeSrc": "542:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:3",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:3"
																		},
																		"nativeSrc": "562:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:3"
																},
																"nativeSrc": "539:46:3",
																"nodeType": "YulFunctionCall",
																"src": "539:46:3"
															},
															"nativeSrc": "536:72:3",
															"nodeType": "YulIf",
															"src": "536:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:3",
																		"nodeType": "YulLiteral",
																		"src": "624:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:3",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:3"
																},
																"nativeSrc": "617:22:3",
																"nodeType": "YulFunctionCall",
																"src": "617:22:3"
															},
															"nativeSrc": "617:22:3",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:3"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:3"
																},
																"nativeSrc": "648:18:3",
																"nodeType": "YulFunctionCall",
																"src": "648:18:3"
															},
															"nativeSrc": "648:18:3",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:3"
														},
														{
															"nativeSrc": "675:14:3",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:3",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:3",
																"nodeType": "YulLiteral",
																"src": "685:4:3",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:3",
																	"nodeType": "YulTypedName",
																	"src": "679:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:16:3",
																"nodeType": "YulBlock",
																"src": "737:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "746:1:3",
																					"nodeType": "YulLiteral",
																					"src": "746:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:3",
																					"nodeType": "YulLiteral",
																					"src": "749:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "739:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:3"
																			},
																			"nativeSrc": "739:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:3"
																		},
																		"nativeSrc": "739:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:3"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:3"
																				},
																				"nativeSrc": "708:15:3",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "725:4:3",
																				"nodeType": "YulLiteral",
																				"src": "725:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:3"
																		},
																		"nativeSrc": "704:26:3",
																		"nodeType": "YulFunctionCall",
																		"src": "704:26:3"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "732:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:3"
																},
																"nativeSrc": "701:35:3",
																"nodeType": "YulFunctionCall",
																"src": "701:35:3"
															},
															"nativeSrc": "698:55:3",
															"nodeType": "YulIf",
															"src": "698:55:3"
														},
														{
															"nativeSrc": "762:10:3",
															"nodeType": "YulVariableDeclaration",
															"src": "762:10:3",
															"value": {
																"kind": "number",
																"nativeSrc": "771:1:3",
																"nodeType": "YulLiteral",
																"src": "771:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "766:1:3",
																	"nodeType": "YulTypedName",
																	"src": "766:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "827:87:3",
																"nodeType": "YulBlock",
																"src": "827:87:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "856:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "856:6:3"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "864:1:3",
																									"nodeType": "YulIdentifier",
																									"src": "864:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "852:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "852:3:3"
																							},
																							"nativeSrc": "852:14:3",
																							"nodeType": "YulFunctionCall",
																							"src": "852:14:3"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "868:2:3",
																							"nodeType": "YulIdentifier",
																							"src": "868:2:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:3"
																					},
																					"nativeSrc": "848:23:3",
																					"nodeType": "YulFunctionCall",
																					"src": "848:23:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "887:6:3",
																											"nodeType": "YulIdentifier",
																											"src": "887:6:3"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "895:1:3",
																											"nodeType": "YulIdentifier",
																											"src": "895:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "883:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "883:3:3"
																									},
																									"nativeSrc": "883:14:3",
																									"nodeType": "YulFunctionCall",
																									"src": "883:14:3"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "899:2:3",
																									"nodeType": "YulIdentifier",
																									"src": "899:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "879:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "879:3:3"
																							},
																							"nativeSrc": "879:23:3",
																							"nodeType": "YulFunctionCall",
																							"src": "879:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "873:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:3"
																					},
																					"nativeSrc": "873:30:3",
																					"nodeType": "YulFunctionCall",
																					"src": "873:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:3"
																			},
																			"nativeSrc": "841:63:3",
																			"nodeType": "YulFunctionCall",
																			"src": "841:63:3"
																		},
																		"nativeSrc": "841:63:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:63:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "792:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:3"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "795:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "789:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "789:2:3"
																},
																"nativeSrc": "789:9:3",
																"nodeType": "YulFunctionCall",
																"src": "789:9:3"
															},
															"nativeSrc": "781:133:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "799:19:3",
																"nodeType": "YulBlock",
																"src": "799:19:3",
																"statements": [
																	{
																		"nativeSrc": "801:15:3",
																		"nodeType": "YulAssignment",
																		"src": "801:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "810:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:3"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "813:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "813:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "806:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:3"
																			},
																			"nativeSrc": "806:10:3",
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "801:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "785:3:3",
																"nodeType": "YulBlock",
																"src": "785:3:3",
																"statements": []
															},
															"src": "781:133:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "938:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:3"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "934:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:3"
																				},
																				"nativeSrc": "934:15:3",
																				"nodeType": "YulFunctionCall",
																				"src": "934:15:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:4:3",
																				"nodeType": "YulLiteral",
																				"src": "951:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "930:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:3"
																		},
																		"nativeSrc": "930:26:3",
																		"nodeType": "YulFunctionCall",
																		"src": "930:26:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:1:3",
																		"nodeType": "YulLiteral",
																		"src": "958:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "923:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:3"
																},
																"nativeSrc": "923:37:3",
																"nodeType": "YulFunctionCall",
																"src": "923:37:3"
															},
															"nativeSrc": "923:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "923:37:3"
														},
														{
															"nativeSrc": "969:15:3",
															"nodeType": "YulAssignment",
															"src": "969:15:3",
															"value": {
																"name": "memPtr",
																"nativeSrc": "978:6:3",
																"nodeType": "YulIdentifier",
																"src": "978:6:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "969:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:844:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:3",
														"nodeType": "YulTypedName",
														"src": "184:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:3",
														"nodeType": "YulTypedName",
														"src": "192:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:3",
														"nodeType": "YulTypedName",
														"src": "200:5:3",
														"type": ""
													}
												],
												"src": "146:844:3"
											},
											{
												"body": {
													"nativeSrc": "1145:738:3",
													"nodeType": "YulBlock",
													"src": "1145:738:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1192:16:3",
																"nodeType": "YulBlock",
																"src": "1192:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1201:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1201:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1204:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1204:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1194:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1194:6:3"
																			},
																			"nativeSrc": "1194:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1194:12:3"
																		},
																		"nativeSrc": "1194:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1194:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1166:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1166:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1175:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1175:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1162:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1162:3:3"
																		},
																		"nativeSrc": "1162:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1187:3:3",
																		"nodeType": "YulLiteral",
																		"src": "1187:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1158:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1158:3:3"
																},
																"nativeSrc": "1158:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1158:33:3"
															},
															"nativeSrc": "1155:53:3",
															"nodeType": "YulIf",
															"src": "1155:53:3"
														},
														{
															"nativeSrc": "1217:29:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1217:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1236:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1236:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1230:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:3"
																},
																"nativeSrc": "1230:16:3",
																"nodeType": "YulFunctionCall",
																"src": "1230:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1221:5:3",
																	"nodeType": "YulTypedName",
																	"src": "1221:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1309:16:3",
																"nodeType": "YulBlock",
																"src": "1309:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1318:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1318:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1321:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1321:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1311:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1311:6:3"
																			},
																			"nativeSrc": "1311:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1311:12:3"
																		},
																		"nativeSrc": "1311:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1311:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1268:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1268:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1279:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1279:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1294:3:3",
																										"nodeType": "YulLiteral",
																										"src": "1294:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1299:1:3",
																										"nodeType": "YulLiteral",
																										"src": "1299:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1290:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "1290:3:3"
																								},
																								"nativeSrc": "1290:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "1290:11:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1303:1:3",
																								"nodeType": "YulLiteral",
																								"src": "1303:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1286:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1286:3:3"
																						},
																						"nativeSrc": "1286:19:3",
																						"nodeType": "YulFunctionCall",
																						"src": "1286:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1275:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1275:3:3"
																				},
																				"nativeSrc": "1275:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1275:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1265:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1265:2:3"
																		},
																		"nativeSrc": "1265:42:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1265:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1258:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:3"
																},
																"nativeSrc": "1258:50:3",
																"nodeType": "YulFunctionCall",
																"src": "1258:50:3"
															},
															"nativeSrc": "1255:70:3",
															"nodeType": "YulIf",
															"src": "1255:70:3"
														},
														{
															"nativeSrc": "1334:15:3",
															"nodeType": "YulAssignment",
															"src": "1334:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "1344:5:3",
																"nodeType": "YulIdentifier",
																"src": "1344:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1334:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																}
															]
														},
														{
															"nativeSrc": "1358:39:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1358:39:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1382:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1382:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1393:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1393:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1378:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1378:3:3"
																		},
																		"nativeSrc": "1378:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1378:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1372:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1372:5:3"
																},
																"nativeSrc": "1372:25:3",
																"nodeType": "YulFunctionCall",
																"src": "1372:25:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1362:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1362:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1406:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1406:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1424:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1424:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1428:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1428:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1420:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1420:3:3"
																		},
																		"nativeSrc": "1420:10:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1420:10:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1416:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:3"
																},
																"nativeSrc": "1416:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1416:18:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1410:2:3",
																	"nodeType": "YulTypedName",
																	"src": "1410:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1461:16:3",
																"nodeType": "YulBlock",
																"src": "1461:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1470:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1470:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1463:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1463:6:3"
																			},
																			"nativeSrc": "1463:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1463:12:3"
																		},
																		"nativeSrc": "1463:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1463:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1449:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:3"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1457:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "1457:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1446:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1446:2:3"
																},
																"nativeSrc": "1446:14:3",
																"nodeType": "YulFunctionCall",
																"src": "1446:14:3"
															},
															"nativeSrc": "1443:34:3",
															"nodeType": "YulIf",
															"src": "1443:34:3"
														},
														{
															"nativeSrc": "1486:71:3",
															"nodeType": "YulAssignment",
															"src": "1486:71:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1529:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1529:9:3"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1540:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1540:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1525:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:3"
																		},
																		"nativeSrc": "1525:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:22:3"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1549:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "1549:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1496:28:3",
																	"nodeType": "YulIdentifier",
																	"src": "1496:28:3"
																},
																"nativeSrc": "1496:61:3",
																"nodeType": "YulFunctionCall",
																"src": "1496:61:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1486:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:3"
																}
															]
														},
														{
															"nativeSrc": "1566:41:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1566:41:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1592:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1592:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1603:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1603:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1588:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1588:3:3"
																		},
																		"nativeSrc": "1588:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1588:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1582:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1582:5:3"
																},
																"nativeSrc": "1582:25:3",
																"nodeType": "YulFunctionCall",
																"src": "1582:25:3"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1570:8:3",
																	"nodeType": "YulTypedName",
																	"src": "1570:8:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1636:16:3",
																"nodeType": "YulBlock",
																"src": "1636:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1645:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1645:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1648:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1648:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1638:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1638:6:3"
																			},
																			"nativeSrc": "1638:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1638:12:3"
																		},
																		"nativeSrc": "1638:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1638:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1622:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "1622:8:3"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1632:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "1632:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1619:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1619:2:3"
																},
																"nativeSrc": "1619:16:3",
																"nodeType": "YulFunctionCall",
																"src": "1619:16:3"
															},
															"nativeSrc": "1616:36:3",
															"nodeType": "YulIf",
															"src": "1616:36:3"
														},
														{
															"nativeSrc": "1661:73:3",
															"nodeType": "YulAssignment",
															"src": "1661:73:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1704:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1704:9:3"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1715:8:3",
																				"nodeType": "YulIdentifier",
																				"src": "1715:8:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1700:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1700:3:3"
																		},
																		"nativeSrc": "1700:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1700:24:3"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1726:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "1726:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1671:28:3",
																	"nodeType": "YulIdentifier",
																	"src": "1671:28:3"
																},
																"nativeSrc": "1671:63:3",
																"nodeType": "YulFunctionCall",
																"src": "1671:63:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1661:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:3"
																}
															]
														},
														{
															"nativeSrc": "1743:40:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1743:40:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1768:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1768:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1779:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1779:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1764:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1764:3:3"
																		},
																		"nativeSrc": "1764:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1758:5:3"
																},
																"nativeSrc": "1758:25:3",
																"nodeType": "YulFunctionCall",
																"src": "1758:25:3"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1747:7:3",
																	"nodeType": "YulTypedName",
																	"src": "1747:7:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1835:16:3",
																"nodeType": "YulBlock",
																"src": "1835:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1844:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1844:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1847:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1847:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1837:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:3"
																			},
																			"nativeSrc": "1837:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1837:12:3"
																		},
																		"nativeSrc": "1837:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1837:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "1805:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1805:7:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "1818:7:3",
																						"nodeType": "YulIdentifier",
																						"src": "1818:7:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1827:4:3",
																						"nodeType": "YulLiteral",
																						"src": "1827:4:3",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1814:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1814:3:3"
																				},
																				"nativeSrc": "1814:18:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1814:18:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1802:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1802:2:3"
																		},
																		"nativeSrc": "1802:31:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1802:31:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1795:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1795:6:3"
																},
																"nativeSrc": "1795:39:3",
																"nodeType": "YulFunctionCall",
																"src": "1795:39:3"
															},
															"nativeSrc": "1792:59:3",
															"nodeType": "YulIf",
															"src": "1792:59:3"
														},
														{
															"nativeSrc": "1860:17:3",
															"nodeType": "YulAssignment",
															"src": "1860:17:3",
															"value": {
																"name": "value_1",
																"nativeSrc": "1870:7:3",
																"nodeType": "YulIdentifier",
																"src": "1870:7:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1860:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory",
												"nativeSrc": "995:888:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1087:9:3",
														"nodeType": "YulTypedName",
														"src": "1087:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1098:7:3",
														"nodeType": "YulTypedName",
														"src": "1098:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1110:6:3",
														"nodeType": "YulTypedName",
														"src": "1110:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1118:6:3",
														"nodeType": "YulTypedName",
														"src": "1118:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1126:6:3",
														"nodeType": "YulTypedName",
														"src": "1126:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1134:6:3",
														"nodeType": "YulTypedName",
														"src": "1134:6:3",
														"type": ""
													}
												],
												"src": "995:888:3"
											},
											{
												"body": {
													"nativeSrc": "1989:102:3",
													"nodeType": "YulBlock",
													"src": "1989:102:3",
													"statements": [
														{
															"nativeSrc": "1999:26:3",
															"nodeType": "YulAssignment",
															"src": "1999:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2011:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2022:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2007:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2007:3:3"
																},
																"nativeSrc": "2007:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2007:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1999:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1999:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2041:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2041:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2056:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2056:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2072:3:3",
																								"nodeType": "YulLiteral",
																								"src": "2072:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2077:1:3",
																								"nodeType": "YulLiteral",
																								"src": "2077:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2068:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "2068:3:3"
																						},
																						"nativeSrc": "2068:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "2068:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2081:1:3",
																						"nodeType": "YulLiteral",
																						"src": "2081:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2064:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2064:3:3"
																				},
																				"nativeSrc": "2064:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2064:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2052:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2052:3:3"
																		},
																		"nativeSrc": "2052:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2052:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2034:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2034:6:3"
																},
																"nativeSrc": "2034:51:3",
																"nodeType": "YulFunctionCall",
																"src": "2034:51:3"
															},
															"nativeSrc": "2034:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "2034:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1888:203:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1958:9:3",
														"nodeType": "YulTypedName",
														"src": "1958:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1969:6:3",
														"nodeType": "YulTypedName",
														"src": "1969:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1980:4:3",
														"nodeType": "YulTypedName",
														"src": "1980:4:3",
														"type": ""
													}
												],
												"src": "1888:203:3"
											},
											{
												"body": {
													"nativeSrc": "2151:325:3",
													"nodeType": "YulBlock",
													"src": "2151:325:3",
													"statements": [
														{
															"nativeSrc": "2161:22:3",
															"nodeType": "YulAssignment",
															"src": "2161:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2175:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2178:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "2178:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2171:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2171:3:3"
																},
																"nativeSrc": "2171:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2171:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2161:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2161:6:3"
																}
															]
														},
														{
															"nativeSrc": "2192:38:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2192:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2222:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "2222:4:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2228:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2228:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2218:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2218:3:3"
																},
																"nativeSrc": "2218:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2218:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2196:18:3",
																	"nodeType": "YulTypedName",
																	"src": "2196:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2269:31:3",
																"nodeType": "YulBlock",
																"src": "2269:31:3",
																"statements": [
																	{
																		"nativeSrc": "2271:27:3",
																		"nodeType": "YulAssignment",
																		"src": "2271:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2285:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "2285:6:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2293:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2293:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2281:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2281:3:3"
																			},
																			"nativeSrc": "2281:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2281:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2271:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2271:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2249:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "2249:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2242:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2242:6:3"
																},
																"nativeSrc": "2242:26:3",
																"nodeType": "YulFunctionCall",
																"src": "2242:26:3"
															},
															"nativeSrc": "2239:61:3",
															"nodeType": "YulIf",
															"src": "2239:61:3"
														},
														{
															"body": {
																"nativeSrc": "2359:111:3",
																"nodeType": "YulBlock",
																"src": "2359:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2387:3:3",
																							"nodeType": "YulLiteral",
																							"src": "2387:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2392:10:3",
																							"nodeType": "YulLiteral",
																							"src": "2392:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2383:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2383:3:3"
																					},
																					"nativeSrc": "2383:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2383:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2373:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:3"
																			},
																			"nativeSrc": "2373:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2373:31:3"
																		},
																		"nativeSrc": "2373:31:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2424:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2424:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2427:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2427:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2417:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2417:6:3"
																			},
																			"nativeSrc": "2417:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2417:15:3"
																		},
																		"nativeSrc": "2417:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2417:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2452:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2452:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2455:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2455:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2445:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2445:6:3"
																			},
																			"nativeSrc": "2445:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2445:15:3"
																		},
																		"nativeSrc": "2445:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2445:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2315:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "2315:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2338:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2338:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2346:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2346:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2335:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2335:2:3"
																		},
																		"nativeSrc": "2335:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2335:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2312:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2312:2:3"
																},
																"nativeSrc": "2312:38:3",
																"nodeType": "YulFunctionCall",
																"src": "2312:38:3"
															},
															"nativeSrc": "2309:161:3",
															"nodeType": "YulIf",
															"src": "2309:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2096:380:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2131:4:3",
														"nodeType": "YulTypedName",
														"src": "2131:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2140:6:3",
														"nodeType": "YulTypedName",
														"src": "2140:6:3",
														"type": ""
													}
												],
												"src": "2096:380:3"
											},
											{
												"body": {
													"nativeSrc": "2537:65:3",
													"nodeType": "YulBlock",
													"src": "2537:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2554:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2554:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2557:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2557:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2547:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2547:6:3"
																},
																"nativeSrc": "2547:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2547:14:3"
															},
															"nativeSrc": "2547:14:3",
															"nodeType": "YulExpressionStatement",
															"src": "2547:14:3"
														},
														{
															"nativeSrc": "2570:26:3",
															"nodeType": "YulAssignment",
															"src": "2570:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2588:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2588:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2591:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2591:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2578:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "2578:9:3"
																},
																"nativeSrc": "2578:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2578:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2570:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2570:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2481:121:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2520:3:3",
														"nodeType": "YulTypedName",
														"src": "2520:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2528:4:3",
														"nodeType": "YulTypedName",
														"src": "2528:4:3",
														"type": ""
													}
												],
												"src": "2481:121:3"
											},
											{
												"body": {
													"nativeSrc": "2688:437:3",
													"nodeType": "YulBlock",
													"src": "2688:437:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2721:398:3",
																"nodeType": "YulBlock",
																"src": "2721:398:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2742:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2742:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2745:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "2745:5:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2735:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2735:6:3"
																			},
																			"nativeSrc": "2735:16:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2735:16:3"
																		},
																		"nativeSrc": "2735:16:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2735:16:3"
																	},
																	{
																		"nativeSrc": "2764:30:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2764:30:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2786:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2786:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2789:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2789:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2776:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2776:9:3"
																			},
																			"nativeSrc": "2776:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2776:18:3"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2768:4:3",
																				"nodeType": "YulTypedName",
																				"src": "2768:4:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2807:57:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2807:57:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2830:4:3",
																					"nodeType": "YulIdentifier",
																					"src": "2830:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2840:1:3",
																							"nodeType": "YulLiteral",
																							"src": "2840:1:3",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2847:10:3",
																									"nodeType": "YulIdentifier",
																									"src": "2847:10:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2859:2:3",
																									"nodeType": "YulLiteral",
																									"src": "2859:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2843:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "2843:3:3"
																							},
																							"nativeSrc": "2843:19:3",
																							"nodeType": "YulFunctionCall",
																							"src": "2843:19:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2836:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2836:3:3"
																					},
																					"nativeSrc": "2836:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2836:27:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2826:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2826:3:3"
																			},
																			"nativeSrc": "2826:38:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2826:38:3"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2811:11:3",
																				"nodeType": "YulTypedName",
																				"src": "2811:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2901:23:3",
																			"nodeType": "YulBlock",
																			"src": "2901:23:3",
																			"statements": [
																				{
																					"nativeSrc": "2903:19:3",
																					"nodeType": "YulAssignment",
																					"src": "2903:19:3",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2918:4:3",
																						"nodeType": "YulIdentifier",
																						"src": "2918:4:3"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2903:11:3",
																							"nodeType": "YulIdentifier",
																							"src": "2903:11:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2883:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "2883:10:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2895:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2895:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2880:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "2880:2:3"
																			},
																			"nativeSrc": "2880:20:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2880:20:3"
																		},
																		"nativeSrc": "2877:47:3",
																		"nodeType": "YulIf",
																		"src": "2877:47:3"
																	},
																	{
																		"nativeSrc": "2937:41:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2937:41:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2951:4:3",
																					"nodeType": "YulIdentifier",
																					"src": "2951:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2961:1:3",
																							"nodeType": "YulLiteral",
																							"src": "2961:1:3",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2968:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "2968:3:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2973:2:3",
																									"nodeType": "YulLiteral",
																									"src": "2973:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2964:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "2964:3:3"
																							},
																							"nativeSrc": "2964:12:3",
																							"nodeType": "YulFunctionCall",
																							"src": "2964:12:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2957:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2957:3:3"
																					},
																					"nativeSrc": "2957:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2957:20:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2947:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2947:3:3"
																			},
																			"nativeSrc": "2947:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2947:31:3"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2941:2:3",
																				"nodeType": "YulTypedName",
																				"src": "2941:2:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2991:24:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2991:24:3",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "3004:11:3",
																			"nodeType": "YulIdentifier",
																			"src": "3004:11:3"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2995:5:3",
																				"nodeType": "YulTypedName",
																				"src": "2995:5:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3089:20:3",
																			"nodeType": "YulBlock",
																			"src": "3089:20:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3098:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "3098:5:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3105:1:3",
																								"nodeType": "YulLiteral",
																								"src": "3105:1:3",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "3091:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "3091:6:3"
																						},
																						"nativeSrc": "3091:16:3",
																						"nodeType": "YulFunctionCall",
																						"src": "3091:16:3"
																					},
																					"nativeSrc": "3091:16:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "3091:16:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3039:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "3039:5:3"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3046:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "3046:2:3"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3036:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "3036:2:3"
																			},
																			"nativeSrc": "3036:13:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3036:13:3"
																		},
																		"nativeSrc": "3028:81:3",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "3050:26:3",
																			"nodeType": "YulBlock",
																			"src": "3050:26:3",
																			"statements": [
																				{
																					"nativeSrc": "3052:22:3",
																					"nodeType": "YulAssignment",
																					"src": "3052:22:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3065:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "3065:5:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3072:1:3",
																								"nodeType": "YulLiteral",
																								"src": "3072:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3061:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "3061:3:3"
																						},
																						"nativeSrc": "3061:13:3",
																						"nodeType": "YulFunctionCall",
																						"src": "3061:13:3"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "3052:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "3052:5:3"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "3032:3:3",
																			"nodeType": "YulBlock",
																			"src": "3032:3:3",
																			"statements": []
																		},
																		"src": "3028:81:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2704:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2704:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2709:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2701:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2701:2:3"
																},
																"nativeSrc": "2701:11:3",
																"nodeType": "YulFunctionCall",
																"src": "2701:11:3"
															},
															"nativeSrc": "2698:421:3",
															"nodeType": "YulIf",
															"src": "2698:421:3"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2607:518:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2660:5:3",
														"nodeType": "YulTypedName",
														"src": "2660:5:3",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2667:3:3",
														"nodeType": "YulTypedName",
														"src": "2667:3:3",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2672:10:3",
														"nodeType": "YulTypedName",
														"src": "2672:10:3",
														"type": ""
													}
												],
												"src": "2607:518:3"
											},
											{
												"body": {
													"nativeSrc": "3215:81:3",
													"nodeType": "YulBlock",
													"src": "3215:81:3",
													"statements": [
														{
															"nativeSrc": "3225:65:3",
															"nodeType": "YulAssignment",
															"src": "3225:65:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3240:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3240:4:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3258:1:3",
																										"nodeType": "YulLiteral",
																										"src": "3258:1:3",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3261:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "3261:3:3"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3254:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "3254:3:3"
																								},
																								"nativeSrc": "3254:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "3254:11:3"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3271:1:3",
																										"nodeType": "YulLiteral",
																										"src": "3271:1:3",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3267:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "3267:3:3"
																								},
																								"nativeSrc": "3267:6:3",
																								"nodeType": "YulFunctionCall",
																								"src": "3267:6:3"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3250:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "3250:3:3"
																						},
																						"nativeSrc": "3250:24:3",
																						"nodeType": "YulFunctionCall",
																						"src": "3250:24:3"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3246:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3246:3:3"
																				},
																				"nativeSrc": "3246:29:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3246:29:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3236:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3236:3:3"
																		},
																		"nativeSrc": "3236:40:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3236:40:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3282:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3282:1:3",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3285:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "3285:3:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3278:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3278:3:3"
																		},
																		"nativeSrc": "3278:11:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3278:11:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3233:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3233:2:3"
																},
																"nativeSrc": "3233:57:3",
																"nodeType": "YulFunctionCall",
																"src": "3233:57:3"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3225:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:3"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3130:166:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3192:4:3",
														"nodeType": "YulTypedName",
														"src": "3192:4:3",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3198:3:3",
														"nodeType": "YulTypedName",
														"src": "3198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3206:4:3",
														"nodeType": "YulTypedName",
														"src": "3206:4:3",
														"type": ""
													}
												],
												"src": "3130:166:3"
											},
											{
												"body": {
													"nativeSrc": "3397:1249:3",
													"nodeType": "YulBlock",
													"src": "3397:1249:3",
													"statements": [
														{
															"nativeSrc": "3407:24:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3407:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3427:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3427:3:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3421:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3421:5:3"
																},
																"nativeSrc": "3421:10:3",
																"nodeType": "YulFunctionCall",
																"src": "3421:10:3"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3411:6:3",
																	"nodeType": "YulTypedName",
																	"src": "3411:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3474:22:3",
																"nodeType": "YulBlock",
																"src": "3474:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3476:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "3476:16:3"
																			},
																			"nativeSrc": "3476:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3476:18:3"
																		},
																		"nativeSrc": "3476:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3446:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3462:2:3",
																						"nodeType": "YulLiteral",
																						"src": "3462:2:3",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3466:1:3",
																						"nodeType": "YulLiteral",
																						"src": "3466:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3458:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3458:3:3"
																				},
																				"nativeSrc": "3458:10:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3458:10:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3470:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3470:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3454:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3454:3:3"
																		},
																		"nativeSrc": "3454:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3454:18:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3443:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3443:2:3"
																},
																"nativeSrc": "3443:30:3",
																"nodeType": "YulFunctionCall",
																"src": "3443:30:3"
															},
															"nativeSrc": "3440:56:3",
															"nodeType": "YulIf",
															"src": "3440:56:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3549:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3549:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3587:4:3",
																						"nodeType": "YulIdentifier",
																						"src": "3587:4:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3581:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "3581:5:3"
																				},
																				"nativeSrc": "3581:11:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3581:11:3"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3555:25:3",
																			"nodeType": "YulIdentifier",
																			"src": "3555:25:3"
																		},
																		"nativeSrc": "3555:38:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3555:38:3"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3595:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3595:6:3"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3505:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3505:43:3"
																},
																"nativeSrc": "3505:97:3",
																"nodeType": "YulFunctionCall",
																"src": "3505:97:3"
															},
															"nativeSrc": "3505:97:3",
															"nodeType": "YulExpressionStatement",
															"src": "3505:97:3"
														},
														{
															"nativeSrc": "3611:18:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3611:18:3",
															"value": {
																"kind": "number",
																"nativeSrc": "3628:1:3",
																"nodeType": "YulLiteral",
																"src": "3628:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3615:9:3",
																	"nodeType": "YulTypedName",
																	"src": "3615:9:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3638:23:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3638:23:3",
															"value": {
																"kind": "number",
																"nativeSrc": "3657:4:3",
																"nodeType": "YulLiteral",
																"src": "3657:4:3",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3642:11:3",
																	"nodeType": "YulTypedName",
																	"src": "3642:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3670:17:3",
															"nodeType": "YulAssignment",
															"src": "3670:17:3",
															"value": {
																"kind": "number",
																"nativeSrc": "3683:4:3",
																"nodeType": "YulLiteral",
																"src": "3683:4:3",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3670:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "3670:9:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3733:656:3",
																		"nodeType": "YulBlock",
																		"src": "3733:656:3",
																		"statements": [
																			{
																				"nativeSrc": "3747:35:3",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3747:35:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3766:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "3766:6:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3778:2:3",
																									"nodeType": "YulLiteral",
																									"src": "3778:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3774:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "3774:3:3"
																							},
																							"nativeSrc": "3774:7:3",
																							"nodeType": "YulFunctionCall",
																							"src": "3774:7:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3762:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "3762:3:3"
																					},
																					"nativeSrc": "3762:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3762:20:3"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3751:7:3",
																						"nodeType": "YulTypedName",
																						"src": "3751:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3795:49:3",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3795:49:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3839:4:3",
																							"nodeType": "YulIdentifier",
																							"src": "3839:4:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3809:29:3",
																						"nodeType": "YulIdentifier",
																						"src": "3809:29:3"
																					},
																					"nativeSrc": "3809:35:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:35:3"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3799:6:3",
																						"nodeType": "YulTypedName",
																						"src": "3799:6:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3857:10:3",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3857:10:3",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3866:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3866:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3861:1:3",
																						"nodeType": "YulTypedName",
																						"src": "3861:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3944:172:3",
																					"nodeType": "YulBlock",
																					"src": "3944:172:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3969:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "3969:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3987:3:3",
																														"nodeType": "YulIdentifier",
																														"src": "3987:3:3"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3992:9:3",
																														"nodeType": "YulIdentifier",
																														"src": "3992:9:3"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3983:3:3",
																													"nodeType": "YulIdentifier",
																													"src": "3983:3:3"
																												},
																												"nativeSrc": "3983:19:3",
																												"nodeType": "YulFunctionCall",
																												"src": "3983:19:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3977:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "3977:5:3"
																										},
																										"nativeSrc": "3977:26:3",
																										"nodeType": "YulFunctionCall",
																										"src": "3977:26:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3962:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "3962:6:3"
																								},
																								"nativeSrc": "3962:42:3",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:42:3"
																							},
																							"nativeSrc": "3962:42:3",
																							"nodeType": "YulExpressionStatement",
																							"src": "3962:42:3"
																						},
																						{
																							"nativeSrc": "4021:24:3",
																							"nodeType": "YulAssignment",
																							"src": "4021:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4035:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "4035:6:3"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4043:1:3",
																										"nodeType": "YulLiteral",
																										"src": "4043:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4031:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "4031:3:3"
																								},
																								"nativeSrc": "4031:14:3",
																								"nodeType": "YulFunctionCall",
																								"src": "4031:14:3"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4021:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "4021:6:3"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4062:40:3",
																							"nodeType": "YulAssignment",
																							"src": "4062:40:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4079:9:3",
																										"nodeType": "YulIdentifier",
																										"src": "4079:9:3"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "4090:11:3",
																										"nodeType": "YulIdentifier",
																										"src": "4090:11:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4075:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "4075:3:3"
																								},
																								"nativeSrc": "4075:27:3",
																								"nodeType": "YulFunctionCall",
																								"src": "4075:27:3"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4062:9:3",
																									"nodeType": "YulIdentifier",
																									"src": "4062:9:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3891:1:3",
																							"nodeType": "YulIdentifier",
																							"src": "3891:1:3"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3894:7:3",
																							"nodeType": "YulIdentifier",
																							"src": "3894:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3888:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "3888:2:3"
																					},
																					"nativeSrc": "3888:14:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3888:14:3"
																				},
																				"nativeSrc": "3880:236:3",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3903:28:3",
																					"nodeType": "YulBlock",
																					"src": "3903:28:3",
																					"statements": [
																						{
																							"nativeSrc": "3905:24:3",
																							"nodeType": "YulAssignment",
																							"src": "3905:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3914:1:3",
																										"nodeType": "YulIdentifier",
																										"src": "3914:1:3"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3917:11:3",
																										"nodeType": "YulIdentifier",
																										"src": "3917:11:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3910:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "3910:3:3"
																								},
																								"nativeSrc": "3910:19:3",
																								"nodeType": "YulFunctionCall",
																								"src": "3910:19:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3905:1:3",
																									"nodeType": "YulIdentifier",
																									"src": "3905:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3884:3:3",
																					"nodeType": "YulBlock",
																					"src": "3884:3:3",
																					"statements": []
																				},
																				"src": "3880:236:3"
																			},
																			{
																				"body": {
																					"nativeSrc": "4164:166:3",
																					"nodeType": "YulBlock",
																					"src": "4164:166:3",
																					"statements": [
																						{
																							"nativeSrc": "4182:43:3",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4182:43:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4209:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "4209:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4214:9:3",
																												"nodeType": "YulIdentifier",
																												"src": "4214:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4205:3:3",
																											"nodeType": "YulIdentifier",
																											"src": "4205:3:3"
																										},
																										"nativeSrc": "4205:19:3",
																										"nodeType": "YulFunctionCall",
																										"src": "4205:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4199:5:3",
																									"nodeType": "YulIdentifier",
																									"src": "4199:5:3"
																								},
																								"nativeSrc": "4199:26:3",
																								"nodeType": "YulFunctionCall",
																								"src": "4199:26:3"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4186:9:3",
																									"nodeType": "YulTypedName",
																									"src": "4186:9:3",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4249:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "4249:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4261:9:3",
																												"nodeType": "YulIdentifier",
																												"src": "4261:9:3"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4288:1:3",
																																				"nodeType": "YulLiteral",
																																				"src": "4288:1:3",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4291:6:3",
																																				"nodeType": "YulIdentifier",
																																				"src": "4291:6:3"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4284:3:3",
																																			"nodeType": "YulIdentifier",
																																			"src": "4284:3:3"
																																		},
																																		"nativeSrc": "4284:14:3",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4284:14:3"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4300:3:3",
																																		"nodeType": "YulLiteral",
																																		"src": "4300:3:3",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4280:3:3",
																																	"nodeType": "YulIdentifier",
																																	"src": "4280:3:3"
																																},
																																"nativeSrc": "4280:24:3",
																																"nodeType": "YulFunctionCall",
																																"src": "4280:24:3"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4310:1:3",
																																		"nodeType": "YulLiteral",
																																		"src": "4310:1:3",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4306:3:3",
																																	"nodeType": "YulIdentifier",
																																	"src": "4306:3:3"
																																},
																																"nativeSrc": "4306:6:3",
																																"nodeType": "YulFunctionCall",
																																"src": "4306:6:3"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4276:3:3",
																															"nodeType": "YulIdentifier",
																															"src": "4276:3:3"
																														},
																														"nativeSrc": "4276:37:3",
																														"nodeType": "YulFunctionCall",
																														"src": "4276:37:3"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4272:3:3",
																													"nodeType": "YulIdentifier",
																													"src": "4272:3:3"
																												},
																												"nativeSrc": "4272:42:3",
																												"nodeType": "YulFunctionCall",
																												"src": "4272:42:3"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "4257:3:3",
																											"nodeType": "YulIdentifier",
																											"src": "4257:3:3"
																										},
																										"nativeSrc": "4257:58:3",
																										"nodeType": "YulFunctionCall",
																										"src": "4257:58:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4242:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "4242:6:3"
																								},
																								"nativeSrc": "4242:74:3",
																								"nodeType": "YulFunctionCall",
																								"src": "4242:74:3"
																							},
																							"nativeSrc": "4242:74:3",
																							"nodeType": "YulExpressionStatement",
																							"src": "4242:74:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4135:7:3",
																							"nodeType": "YulIdentifier",
																							"src": "4135:7:3"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4144:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "4144:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4132:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "4132:2:3"
																					},
																					"nativeSrc": "4132:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "4132:19:3"
																				},
																				"nativeSrc": "4129:201:3",
																				"nodeType": "YulIf",
																				"src": "4129:201:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4350:4:3",
																							"nodeType": "YulIdentifier",
																							"src": "4350:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4364:1:3",
																											"nodeType": "YulLiteral",
																											"src": "4364:1:3",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4367:6:3",
																											"nodeType": "YulIdentifier",
																											"src": "4367:6:3"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4360:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "4360:3:3"
																									},
																									"nativeSrc": "4360:14:3",
																									"nodeType": "YulFunctionCall",
																									"src": "4360:14:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4376:1:3",
																									"nodeType": "YulLiteral",
																									"src": "4376:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4356:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "4356:3:3"
																							},
																							"nativeSrc": "4356:22:3",
																							"nodeType": "YulFunctionCall",
																							"src": "4356:22:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4343:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "4343:6:3"
																					},
																					"nativeSrc": "4343:36:3",
																					"nodeType": "YulFunctionCall",
																					"src": "4343:36:3"
																				},
																				"nativeSrc": "4343:36:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "4343:36:3"
																			}
																		]
																	},
																	"nativeSrc": "3726:663:3",
																	"nodeType": "YulCase",
																	"src": "3726:663:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3731:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3731:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4406:234:3",
																		"nodeType": "YulBlock",
																		"src": "4406:234:3",
																		"statements": [
																			{
																				"nativeSrc": "4420:14:3",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4420:14:3",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4433:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4433:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4424:5:3",
																						"nodeType": "YulTypedName",
																						"src": "4424:5:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4469:67:3",
																					"nodeType": "YulBlock",
																					"src": "4469:67:3",
																					"statements": [
																						{
																							"nativeSrc": "4487:35:3",
																							"nodeType": "YulAssignment",
																							"src": "4487:35:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4506:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "4506:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4511:9:3",
																												"nodeType": "YulIdentifier",
																												"src": "4511:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4502:3:3",
																											"nodeType": "YulIdentifier",
																											"src": "4502:3:3"
																										},
																										"nativeSrc": "4502:19:3",
																										"nodeType": "YulFunctionCall",
																										"src": "4502:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4496:5:3",
																									"nodeType": "YulIdentifier",
																									"src": "4496:5:3"
																								},
																								"nativeSrc": "4496:26:3",
																								"nodeType": "YulFunctionCall",
																								"src": "4496:26:3"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4487:5:3",
																									"nodeType": "YulIdentifier",
																									"src": "4487:5:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4450:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "4450:6:3"
																				},
																				"nativeSrc": "4447:89:3",
																				"nodeType": "YulIf",
																				"src": "4447:89:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4556:4:3",
																							"nodeType": "YulIdentifier",
																							"src": "4556:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4615:5:3",
																									"nodeType": "YulIdentifier",
																									"src": "4615:5:3"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4622:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "4622:6:3"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4562:52:3",
																								"nodeType": "YulIdentifier",
																								"src": "4562:52:3"
																							},
																							"nativeSrc": "4562:67:3",
																							"nodeType": "YulFunctionCall",
																							"src": "4562:67:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4549:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "4549:6:3"
																					},
																					"nativeSrc": "4549:81:3",
																					"nodeType": "YulFunctionCall",
																					"src": "4549:81:3"
																				},
																				"nativeSrc": "4549:81:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "4549:81:3"
																			}
																		]
																	},
																	"nativeSrc": "4398:242:3",
																	"nodeType": "YulCase",
																	"src": "4398:242:3",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3706:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3706:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3714:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3714:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3703:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3703:2:3"
																},
																"nativeSrc": "3703:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3703:14:3"
															},
															"nativeSrc": "3696:944:3",
															"nodeType": "YulSwitch",
															"src": "3696:944:3"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3301:1345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3382:4:3",
														"nodeType": "YulTypedName",
														"src": "3382:4:3",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3388:3:3",
														"nodeType": "YulTypedName",
														"src": "3388:3:3",
														"type": ""
													}
												],
												"src": "3301:1345:3"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value_1 := mload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(0, 0) }\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b506040516108b83803806108b883398101604081905261002e91610195565b836001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100658161008f565b50600361007284826102ad565b50600461007f83826102ad565b5060ff166080525061036c915050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610101575f80fd5b81516001600160401b038082111561011b5761011b6100de565b604051601f8301601f19908116603f01168101908282118183101715610143576101436100de565b816040528381526020925086602085880101111561015f575f80fd5b5f91505b838210156101805785820183015181830184015290820190610163565b5f602085830101528094505050505092915050565b5f805f80608085870312156101a8575f80fd5b84516001600160a01b03811681146101be575f80fd5b60208601519094506001600160401b03808211156101da575f80fd5b6101e6888389016100f2565b945060408701519150808211156101fb575f80fd5b50610208878288016100f2565b925050606085015160ff8116811461021e575f80fd5b939692955090935050565b600181811c9082168061023d57607f821691505b60208210810361025b57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102a857805f5260205f20601f840160051c810160208510156102865750805b601f840160051c820191505b818110156102a5575f8155600101610292565b50505b505050565b81516001600160401b038111156102c6576102c66100de565b6102da816102d48454610229565b84610261565b602080601f83116001811461030d575f84156102f65750858301515b5f19600386901b1c1916600185901b178555610364565b5f85815260208120601f198616915b8281101561033b5788860151825594840194600190910190840161031c565b508582101561035857878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6080516105346103845f395f61012501526105345ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806370a082311161006e57806370a0823114610164578063715018a61461018c5780638da5cb5b1461019457806395d89b41146101ae578063a9059cbb146100d3578063f2fde38b146101b6575f80fd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011e57806340c10f191461014f575b5f80fd5b6100bd6101c9565b6040516100ca91906103bf565b60405180910390f35b6100e66100e1366004610426565b610259565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e661011636600461044e565b5f9392505050565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100ca565b61016261015d366004610426565b610261565b005b6100fa610172366004610487565b6001600160a01b03165f9081526001602052604090205490565b610162610277565b5f546040516001600160a01b0390911681526020016100ca565b6100bd61028a565b6101626101c4366004610487565b610299565b6060600380546101d8906104a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610204906104a7565b801561024f5780601f106102265761010080835404028352916020019161024f565b820191905f5260205f20905b81548152906001019060200180831161023257829003601f168201915b5050505050905090565b5f5b92915050565b6102696102db565b6102738282610307565b5050565b61027f6102db565b6102885f610370565b565b6060600480546101d8906104a7565b6102a16102db565b6001600160a01b0381166102cf57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6102d881610370565b50565b5f546001600160a01b031633146102885760405163118cdaa760e01b81523360048201526024016102c6565b8060025f82825461031891906104df565b90915550506001600160a01b0382165f818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b818110156103eb578581018301518582016040015282016103cf565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610421575f80fd5b919050565b5f8060408385031215610437575f80fd5b6104408361040b565b946020939093013593505050565b5f805f60608486031215610460575f80fd5b6104698461040b565b92506104776020850161040b565b9150604084013590509250925092565b5f60208284031215610497575f80fd5b6104a08261040b565b9392505050565b600181811c908216806104bb57607f821691505b6020821081036104d957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561025b57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e66871006899e4bf01d97832268ed0e00aa7aca6d09bb4af2ec16f3923a1ac7064736f6c63430008160033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8B8 CODESIZE SUB DUP1 PUSH2 0x8B8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x195 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x8F JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x72 DUP5 DUP3 PUSH2 0x2AD JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x7F DUP4 DUP3 PUSH2 0x2AD JUMP JUMPDEST POP PUSH1 0xFF AND PUSH1 0x80 MSTORE POP PUSH2 0x36C SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x11B JUMPI PUSH2 0x11B PUSH2 0xDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x143 JUMPI PUSH2 0x143 PUSH2 0xDE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x15F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH2 0x180 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH2 0x163 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1DA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E6 DUP9 DUP4 DUP10 ADD PUSH2 0xF2 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 DUP8 DUP3 DUP9 ADD PUSH2 0xF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A8 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x286 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x292 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C6 PUSH2 0xDE JUMP JUMPDEST PUSH2 0x2DA DUP2 PUSH2 0x2D4 DUP5 SLOAD PUSH2 0x229 JUMP JUMPDEST DUP5 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x30D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x364 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x33B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x31C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x358 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x534 PUSH2 0x384 PUSH0 CODECOPY PUSH0 PUSH2 0x125 ADD MSTORE PUSH2 0x534 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x44E JUMP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x277 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xBD PUSH2 0x28A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x487 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D8 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x204 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x226 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x232 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x273 DUP3 DUP3 PUSH2 0x307 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x288 PUSH0 PUSH2 0x370 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D8 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D8 DUP2 PUSH2 0x370 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2C6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3EB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3CF JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x437 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x440 DUP4 PUSH2 0x40B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x469 DUP5 PUSH2 0x40B JUMP JUMPDEST SWAP3 POP PUSH2 0x477 PUSH1 0x20 DUP6 ADD PUSH2 0x40B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x497 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A0 DUP3 PUSH2 0x40B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4BB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 PUSH9 0x71006899E4BF01D978 ORIGIN 0x26 DUP15 0xD0 0xE0 EXP 0xA7 0xAC 0xA6 0xD0 SWAP12 0xB4 0xAF 0x2E 0xC1 PUSH16 0x3923A1AC7064736F6C63430008160033 ",
							"sourceMap": "1505:6768:2:-:0;;;1987:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2091:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2034:51:3;2007:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2116:5:2::1;:13;2124:5:::0;2116;:13:::1;:::i;:::-;-1:-1:-1::0;2139:7:2::1;:17;2149:7:::0;2139;:17:::1;:::i;:::-;-1:-1:-1::0;2166:21:2::1;;;::::0;-1:-1:-1;1505:6768:2;;-1:-1:-1;;1505:6768:2;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:3:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:3;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:3;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:888::-;1110:6;1118;1126;1134;1187:3;1175:9;1166:7;1162:23;1158:33;1155:53;;;1204:1;1201;1194:12;1155:53;1230:16;;-1:-1:-1;;;;;1275:31:3;;1265:42;;1255:70;;1321:1;1318;1311:12;1255:70;1393:2;1378:18;;1372:25;1344:5;;-1:-1:-1;;;;;;1446:14:3;;;1443:34;;;1473:1;1470;1463:12;1443:34;1496:61;1549:7;1540:6;1529:9;1525:22;1496:61;:::i;:::-;1486:71;;1603:2;1592:9;1588:18;1582:25;1566:41;;1632:2;1622:8;1619:16;1616:36;;;1648:1;1645;1638:12;1616:36;;1671:63;1726:7;1715:8;1704:9;1700:24;1671:63;:::i;:::-;1661:73;;;1779:2;1768:9;1764:18;1758:25;1827:4;1818:7;1814:18;1805:7;1802:31;1792:59;;1847:1;1844;1837:12;1792:59;995:888;;;;-1:-1:-1;995:888:3;;-1:-1:-1;;995:888:3:o;2096:380::-;2175:1;2171:12;;;;2218;;;2239:61;;2293:4;2285:6;2281:17;2271:27;;2239:61;2346:2;2338:6;2335:14;2315:18;2312:38;2309:161;;2392:10;2387:3;2383:20;2380:1;2373:31;2427:4;2424:1;2417:15;2455:4;2452:1;2445:15;2309:161;;2096:380;;;:::o;2607:518::-;2709:2;2704:3;2701:11;2698:421;;;2745:5;2742:1;2735:16;2789:4;2786:1;2776:18;2859:2;2847:10;2843:19;2840:1;2836:27;2830:4;2826:38;2895:4;2883:10;2880:20;2877:47;;;-1:-1:-1;2918:4:3;2877:47;2973:2;2968:3;2964:12;2961:1;2957:20;2951:4;2947:31;2937:41;;3028:81;3046:2;3039:5;3036:13;3028:81;;;3105:1;3091:16;;3072:1;3061:13;3028:81;;;3032:3;;2698:421;2607:518;;;:::o;3301:1345::-;3421:10;;-1:-1:-1;;;;;3443:30:3;;3440:56;;;3476:18;;:::i;:::-;3505:97;3595:6;3555:38;3587:4;3581:11;3555:38;:::i;:::-;3549:4;3505:97;:::i;:::-;3657:4;;3714:2;3703:14;;3731:1;3726:663;;;;4433:1;4450:6;4447:89;;;-1:-1:-1;4502:19:3;;;4496:26;4447:89;-1:-1:-1;;3258:1:3;3254:11;;;3250:24;3246:29;3236:40;3282:1;3278:11;;;3233:57;4549:81;;3696:944;;3726:663;2554:1;2547:14;;;2591:4;2578:18;;-1:-1:-1;;3762:20:3;;;3880:236;3894:7;3891:1;3888:14;3880:236;;;3983:19;;;3977:26;3962:42;;4075:27;;;;4043:1;4031:14;;;;3910:19;;3880:236;;;3884:3;4144:6;4135:7;4132:19;4129:201;;;4205:19;;;4199:26;-1:-1:-1;;4288:1:3;4284:14;;;4300:3;4280:24;4276:37;4272:42;4257:58;4242:74;;4129:201;;;4376:1;4367:6;4364:1;4360:14;4356:22;4350:4;4343:36;3696:944;;;;;3301:1345;;:::o;:::-;1505:6768:2;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_469": {
									"entryPoint": null,
									"id": 469,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_458": {
									"entryPoint": null,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 731,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_360": {
									"entryPoint": 775,
									"id": 360,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 880,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_298": {
									"entryPoint": 601,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_272": {
									"entryPoint": null,
									"id": 272,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_250": {
									"entryPoint": null,
									"id": 250,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_375": {
									"entryPoint": 609,
									"id": 375,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_232": {
									"entryPoint": 457,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 631,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_241": {
									"entryPoint": 650,
									"id": 241,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_259": {
									"entryPoint": null,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_313": {
									"entryPoint": null,
									"id": 313,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 665,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_285": {
									"entryPoint": null,
									"id": 285,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2908:3",
										"nodeType": "YulBlock",
										"src": "0:2908:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:3",
													"nodeType": "YulBlock",
													"src": "135:427:3",
													"statements": [
														{
															"nativeSrc": "145:12:3",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:3",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:3",
																"nodeType": "YulLiteral",
																"src": "155:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:3",
																	"nodeType": "YulTypedName",
																	"src": "149:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:3",
																		"nodeType": "YulLiteral",
																		"src": "184:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:3"
																},
																"nativeSrc": "166:21:3",
																"nodeType": "YulFunctionCall",
																"src": "166:21:3"
															},
															"nativeSrc": "166:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:3"
														},
														{
															"nativeSrc": "196:27:3",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:3"
																},
																"nativeSrc": "210:13:3",
																"nodeType": "YulFunctionCall",
																"src": "210:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:3",
																	"nodeType": "YulTypedName",
																	"src": "200:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:3",
																				"nodeType": "YulLiteral",
																				"src": "254:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:3"
																		},
																		"nativeSrc": "239:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:3"
																},
																"nativeSrc": "232:34:3",
																"nodeType": "YulFunctionCall",
																"src": "232:34:3"
															},
															"nativeSrc": "232:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:3"
														},
														{
															"nativeSrc": "275:10:3",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:3",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:3",
																"nodeType": "YulLiteral",
																"src": "284:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:3",
																	"nodeType": "YulTypedName",
																	"src": "279:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:3",
																"nodeType": "YulBlock",
																"src": "344:90:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:3",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:3"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:3",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:3"
																							},
																							"nativeSrc": "369:17:3",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:3"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:3",
																							"nodeType": "YulLiteral",
																							"src": "388:2:3",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:3"
																					},
																					"nativeSrc": "365:26:3",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:3",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:3"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:3",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:3"
																									},
																									"nativeSrc": "403:14:3",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:3"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:3",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:3"
																							},
																							"nativeSrc": "399:23:3",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:3"
																					},
																					"nativeSrc": "393:30:3",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:3"
																			},
																			"nativeSrc": "358:66:3",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:3"
																		},
																		"nativeSrc": "358:66:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:3"
																},
																"nativeSrc": "302:13:3",
																"nodeType": "YulFunctionCall",
																"src": "302:13:3"
															},
															"nativeSrc": "294:140:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:3",
																"nodeType": "YulBlock",
																"src": "316:19:3",
																"statements": [
																	{
																		"nativeSrc": "318:15:3",
																		"nodeType": "YulAssignment",
																		"src": "318:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:3"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:3"
																			},
																			"nativeSrc": "323:10:3",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:3",
																"nodeType": "YulBlock",
																"src": "298:3:3",
																"statements": []
															},
															"src": "294:140:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:3"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:3"
																				},
																				"nativeSrc": "454:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:3",
																				"nodeType": "YulLiteral",
																				"src": "478:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:3"
																		},
																		"nativeSrc": "450:31:3",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:3",
																		"nodeType": "YulLiteral",
																		"src": "483:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:3"
																},
																"nativeSrc": "443:42:3",
																"nodeType": "YulFunctionCall",
																"src": "443:42:3"
															},
															"nativeSrc": "443:42:3",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:3"
														},
														{
															"nativeSrc": "494:62:3",
															"nodeType": "YulAssignment",
															"src": "494:62:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:3",
																								"nodeType": "YulLiteral",
																								"src": "537:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:3"
																						},
																						"nativeSrc": "525:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:3",
																								"nodeType": "YulLiteral",
																								"src": "546:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:3"
																						},
																						"nativeSrc": "542:7:3",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:3"
																				},
																				"nativeSrc": "521:29:3",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:3"
																		},
																		"nativeSrc": "506:45:3",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:3",
																		"nodeType": "YulLiteral",
																		"src": "553:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:3"
																},
																"nativeSrc": "502:54:3",
																"nodeType": "YulFunctionCall",
																"src": "502:54:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:3",
														"nodeType": "YulTypedName",
														"src": "104:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:3",
														"nodeType": "YulTypedName",
														"src": "115:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:3",
														"nodeType": "YulTypedName",
														"src": "126:4:3",
														"type": ""
													}
												],
												"src": "14:548:3"
											},
											{
												"body": {
													"nativeSrc": "616:124:3",
													"nodeType": "YulBlock",
													"src": "616:124:3",
													"statements": [
														{
															"nativeSrc": "626:29:3",
															"nodeType": "YulAssignment",
															"src": "626:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:3"
																},
																"nativeSrc": "635:20:3",
																"nodeType": "YulFunctionCall",
																"src": "635:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:3",
																"nodeType": "YulBlock",
																"src": "718:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:3",
																					"nodeType": "YulLiteral",
																					"src": "727:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:3",
																					"nodeType": "YulLiteral",
																					"src": "730:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:3"
																			},
																			"nativeSrc": "720:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:3"
																		},
																		"nativeSrc": "720:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:3",
																										"nodeType": "YulLiteral",
																										"src": "703:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:3",
																										"nodeType": "YulLiteral",
																										"src": "708:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:3"
																								},
																								"nativeSrc": "699:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:3",
																								"nodeType": "YulLiteral",
																								"src": "712:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:3"
																						},
																						"nativeSrc": "695:19:3",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:3"
																				},
																				"nativeSrc": "684:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:3"
																		},
																		"nativeSrc": "674:42:3",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:3"
																},
																"nativeSrc": "667:50:3",
																"nodeType": "YulFunctionCall",
																"src": "667:50:3"
															},
															"nativeSrc": "664:70:3",
															"nodeType": "YulIf",
															"src": "664:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:3",
														"nodeType": "YulTypedName",
														"src": "595:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:3",
														"nodeType": "YulTypedName",
														"src": "606:5:3",
														"type": ""
													}
												],
												"src": "567:173:3"
											},
											{
												"body": {
													"nativeSrc": "832:167:3",
													"nodeType": "YulBlock",
													"src": "832:167:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:3",
																"nodeType": "YulBlock",
																"src": "878:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:3",
																					"nodeType": "YulLiteral",
																					"src": "887:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:3",
																					"nodeType": "YulLiteral",
																					"src": "890:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:3"
																			},
																			"nativeSrc": "880:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:3"
																		},
																		"nativeSrc": "880:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:3"
																		},
																		"nativeSrc": "849:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:3",
																		"nodeType": "YulLiteral",
																		"src": "874:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:3"
																},
																"nativeSrc": "845:32:3",
																"nodeType": "YulFunctionCall",
																"src": "845:32:3"
															},
															"nativeSrc": "842:52:3",
															"nodeType": "YulIf",
															"src": "842:52:3"
														},
														{
															"nativeSrc": "903:39:3",
															"nodeType": "YulAssignment",
															"src": "903:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:3"
																},
																"nativeSrc": "913:29:3",
																"nodeType": "YulFunctionCall",
																"src": "913:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:3"
																}
															]
														},
														{
															"nativeSrc": "951:42:3",
															"nodeType": "YulAssignment",
															"src": "951:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:3",
																				"nodeType": "YulLiteral",
																				"src": "989:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:3"
																		},
																		"nativeSrc": "974:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:3"
																},
																"nativeSrc": "961:32:3",
																"nodeType": "YulFunctionCall",
																"src": "961:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:3",
														"nodeType": "YulTypedName",
														"src": "790:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:3",
														"nodeType": "YulTypedName",
														"src": "801:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:3",
														"nodeType": "YulTypedName",
														"src": "813:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:3",
														"nodeType": "YulTypedName",
														"src": "821:6:3",
														"type": ""
													}
												],
												"src": "745:254:3"
											},
											{
												"body": {
													"nativeSrc": "1099:92:3",
													"nodeType": "YulBlock",
													"src": "1099:92:3",
													"statements": [
														{
															"nativeSrc": "1109:26:3",
															"nodeType": "YulAssignment",
															"src": "1109:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:3"
																},
																"nativeSrc": "1117:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:3"
																				},
																				"nativeSrc": "1169:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:3"
																		},
																		"nativeSrc": "1162:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:3"
																},
																"nativeSrc": "1144:41:3",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:3"
															},
															"nativeSrc": "1144:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:3",
														"nodeType": "YulTypedName",
														"src": "1068:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:3",
														"nodeType": "YulTypedName",
														"src": "1079:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:3",
														"nodeType": "YulTypedName",
														"src": "1090:4:3",
														"type": ""
													}
												],
												"src": "1004:187:3"
											},
											{
												"body": {
													"nativeSrc": "1297:76:3",
													"nodeType": "YulBlock",
													"src": "1297:76:3",
													"statements": [
														{
															"nativeSrc": "1307:26:3",
															"nodeType": "YulAssignment",
															"src": "1307:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:3"
																},
																"nativeSrc": "1315:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:3"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:3"
																},
																"nativeSrc": "1342:25:3",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:3"
															},
															"nativeSrc": "1342:25:3",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:3",
														"nodeType": "YulTypedName",
														"src": "1266:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:3",
														"nodeType": "YulTypedName",
														"src": "1277:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:3",
														"nodeType": "YulTypedName",
														"src": "1288:4:3",
														"type": ""
													}
												],
												"src": "1196:177:3"
											},
											{
												"body": {
													"nativeSrc": "1482:224:3",
													"nodeType": "YulBlock",
													"src": "1482:224:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:3",
																"nodeType": "YulBlock",
																"src": "1528:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:3"
																			},
																			"nativeSrc": "1530:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:3"
																		},
																		"nativeSrc": "1530:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:3"
																		},
																		"nativeSrc": "1499:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:3"
																},
																"nativeSrc": "1495:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:3"
															},
															"nativeSrc": "1492:52:3",
															"nodeType": "YulIf",
															"src": "1492:52:3"
														},
														{
															"nativeSrc": "1553:39:3",
															"nodeType": "YulAssignment",
															"src": "1553:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:3"
																},
																"nativeSrc": "1563:29:3",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:3"
																}
															]
														},
														{
															"nativeSrc": "1601:48:3",
															"nodeType": "YulAssignment",
															"src": "1601:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:3"
																		},
																		"nativeSrc": "1630:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:3"
																},
																"nativeSrc": "1611:38:3",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:3"
																}
															]
														},
														{
															"nativeSrc": "1658:42:3",
															"nodeType": "YulAssignment",
															"src": "1658:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:3"
																		},
																		"nativeSrc": "1681:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:3"
																},
																"nativeSrc": "1668:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:3",
														"nodeType": "YulTypedName",
														"src": "1432:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:3",
														"nodeType": "YulTypedName",
														"src": "1443:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:3",
														"nodeType": "YulTypedName",
														"src": "1455:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:3",
														"nodeType": "YulTypedName",
														"src": "1463:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:3",
														"nodeType": "YulTypedName",
														"src": "1471:6:3",
														"type": ""
													}
												],
												"src": "1378:328:3"
											},
											{
												"body": {
													"nativeSrc": "1808:87:3",
													"nodeType": "YulBlock",
													"src": "1808:87:3",
													"statements": [
														{
															"nativeSrc": "1818:26:3",
															"nodeType": "YulAssignment",
															"src": "1818:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:3"
																},
																"nativeSrc": "1826:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:3",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:3",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:3"
																		},
																		"nativeSrc": "1871:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:3"
																},
																"nativeSrc": "1853:36:3",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:3"
															},
															"nativeSrc": "1853:36:3",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:3",
														"nodeType": "YulTypedName",
														"src": "1777:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:3",
														"nodeType": "YulTypedName",
														"src": "1788:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:3",
														"nodeType": "YulTypedName",
														"src": "1799:4:3",
														"type": ""
													}
												],
												"src": "1711:184:3"
											},
											{
												"body": {
													"nativeSrc": "1970:116:3",
													"nodeType": "YulBlock",
													"src": "1970:116:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:3",
																"nodeType": "YulBlock",
																"src": "2016:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:3"
																			},
																			"nativeSrc": "2018:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:3"
																		},
																		"nativeSrc": "2018:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:3"
																		},
																		"nativeSrc": "1987:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:3"
																},
																"nativeSrc": "1983:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:3"
															},
															"nativeSrc": "1980:52:3",
															"nodeType": "YulIf",
															"src": "1980:52:3"
														},
														{
															"nativeSrc": "2041:39:3",
															"nodeType": "YulAssignment",
															"src": "2041:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:3"
																},
																"nativeSrc": "2051:29:3",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:3",
														"nodeType": "YulTypedName",
														"src": "1936:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:3",
														"nodeType": "YulTypedName",
														"src": "1947:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:3",
														"nodeType": "YulTypedName",
														"src": "1959:6:3",
														"type": ""
													}
												],
												"src": "1900:186:3"
											},
											{
												"body": {
													"nativeSrc": "2192:102:3",
													"nodeType": "YulBlock",
													"src": "2192:102:3",
													"statements": [
														{
															"nativeSrc": "2202:26:3",
															"nodeType": "YulAssignment",
															"src": "2202:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2214:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2225:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2210:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:3"
																},
																"nativeSrc": "2210:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2210:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2202:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2244:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2259:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2275:3:3",
																								"nodeType": "YulLiteral",
																								"src": "2275:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2280:1:3",
																								"nodeType": "YulLiteral",
																								"src": "2280:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2271:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "2271:3:3"
																						},
																						"nativeSrc": "2271:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "2271:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2284:1:3",
																						"nodeType": "YulLiteral",
																						"src": "2284:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2267:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:3"
																				},
																				"nativeSrc": "2267:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2267:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2255:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:3"
																		},
																		"nativeSrc": "2255:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2237:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:3"
																},
																"nativeSrc": "2237:51:3",
																"nodeType": "YulFunctionCall",
																"src": "2237:51:3"
															},
															"nativeSrc": "2237:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "2237:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2091:203:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2161:9:3",
														"nodeType": "YulTypedName",
														"src": "2161:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2172:6:3",
														"nodeType": "YulTypedName",
														"src": "2172:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2183:4:3",
														"nodeType": "YulTypedName",
														"src": "2183:4:3",
														"type": ""
													}
												],
												"src": "2091:203:3"
											},
											{
												"body": {
													"nativeSrc": "2354:325:3",
													"nodeType": "YulBlock",
													"src": "2354:325:3",
													"statements": [
														{
															"nativeSrc": "2364:22:3",
															"nodeType": "YulAssignment",
															"src": "2364:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2378:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2378:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2381:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "2381:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2374:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:3"
																},
																"nativeSrc": "2374:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2374:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2364:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2364:6:3"
																}
															]
														},
														{
															"nativeSrc": "2395:38:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2395:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2425:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "2425:4:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2431:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2431:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2421:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2421:3:3"
																},
																"nativeSrc": "2421:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2421:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2399:18:3",
																	"nodeType": "YulTypedName",
																	"src": "2399:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2472:31:3",
																"nodeType": "YulBlock",
																"src": "2472:31:3",
																"statements": [
																	{
																		"nativeSrc": "2474:27:3",
																		"nodeType": "YulAssignment",
																		"src": "2474:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2488:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "2488:6:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2496:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2496:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2484:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2484:3:3"
																			},
																			"nativeSrc": "2484:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2484:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2474:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2474:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2452:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "2452:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2445:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2445:6:3"
																},
																"nativeSrc": "2445:26:3",
																"nodeType": "YulFunctionCall",
																"src": "2445:26:3"
															},
															"nativeSrc": "2442:61:3",
															"nodeType": "YulIf",
															"src": "2442:61:3"
														},
														{
															"body": {
																"nativeSrc": "2562:111:3",
																"nodeType": "YulBlock",
																"src": "2562:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2583:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2583:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2590:3:3",
																							"nodeType": "YulLiteral",
																							"src": "2590:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2595:10:3",
																							"nodeType": "YulLiteral",
																							"src": "2595:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2586:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2586:3:3"
																					},
																					"nativeSrc": "2586:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2586:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2576:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2576:6:3"
																			},
																			"nativeSrc": "2576:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2576:31:3"
																		},
																		"nativeSrc": "2576:31:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2576:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2627:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2627:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2630:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2630:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2620:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2620:6:3"
																			},
																			"nativeSrc": "2620:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:15:3"
																		},
																		"nativeSrc": "2620:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2620:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2655:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2655:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2658:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2658:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2648:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2648:6:3"
																			},
																			"nativeSrc": "2648:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2648:15:3"
																		},
																		"nativeSrc": "2648:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2648:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2518:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "2518:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2541:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2541:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2549:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2538:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2538:2:3"
																		},
																		"nativeSrc": "2538:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2538:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2515:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2515:2:3"
																},
																"nativeSrc": "2515:38:3",
																"nodeType": "YulFunctionCall",
																"src": "2515:38:3"
															},
															"nativeSrc": "2512:161:3",
															"nodeType": "YulIf",
															"src": "2512:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2299:380:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2334:4:3",
														"nodeType": "YulTypedName",
														"src": "2334:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2343:6:3",
														"nodeType": "YulTypedName",
														"src": "2343:6:3",
														"type": ""
													}
												],
												"src": "2299:380:3"
											},
											{
												"body": {
													"nativeSrc": "2732:174:3",
													"nodeType": "YulBlock",
													"src": "2732:174:3",
													"statements": [
														{
															"nativeSrc": "2742:16:3",
															"nodeType": "YulAssignment",
															"src": "2742:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2753:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2753:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2756:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2756:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2749:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:3"
																},
																"nativeSrc": "2749:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2749:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2742:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2789:111:3",
																"nodeType": "YulBlock",
																"src": "2789:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2810:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2810:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2817:3:3",
																							"nodeType": "YulLiteral",
																							"src": "2817:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2822:10:3",
																							"nodeType": "YulLiteral",
																							"src": "2822:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2813:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2813:3:3"
																					},
																					"nativeSrc": "2813:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2803:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:3"
																			},
																			"nativeSrc": "2803:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2803:31:3"
																		},
																		"nativeSrc": "2803:31:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2803:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2854:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2854:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2857:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2857:4:3",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2847:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:3"
																			},
																			"nativeSrc": "2847:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:15:3"
																		},
																		"nativeSrc": "2847:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2882:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2885:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2885:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2875:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:3"
																			},
																			"nativeSrc": "2875:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:15:3"
																		},
																		"nativeSrc": "2875:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2773:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2773:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2776:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2776:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2770:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2770:2:3"
																},
																"nativeSrc": "2770:10:3",
																"nodeType": "YulFunctionCall",
																"src": "2770:10:3"
															},
															"nativeSrc": "2767:133:3",
															"nodeType": "YulIf",
															"src": "2767:133:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2684:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2715:1:3",
														"nodeType": "YulTypedName",
														"src": "2715:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2718:1:3",
														"nodeType": "YulTypedName",
														"src": "2718:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2724:3:3",
														"nodeType": "YulTypedName",
														"src": "2724:3:3",
														"type": ""
													}
												],
												"src": "2684:222:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"195": [
									{
										"length": 32,
										"start": 293
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806370a082311161006e57806370a0823114610164578063715018a61461018c5780638da5cb5b1461019457806395d89b41146101ae578063a9059cbb146100d3578063f2fde38b146101b6575f80fd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011e57806340c10f191461014f575b5f80fd5b6100bd6101c9565b6040516100ca91906103bf565b60405180910390f35b6100e66100e1366004610426565b610259565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e661011636600461044e565b5f9392505050565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100ca565b61016261015d366004610426565b610261565b005b6100fa610172366004610487565b6001600160a01b03165f9081526001602052604090205490565b610162610277565b5f546040516001600160a01b0390911681526020016100ca565b6100bd61028a565b6101626101c4366004610487565b610299565b6060600380546101d8906104a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610204906104a7565b801561024f5780601f106102265761010080835404028352916020019161024f565b820191905f5260205f20905b81548152906001019060200180831161023257829003601f168201915b5050505050905090565b5f5b92915050565b6102696102db565b6102738282610307565b5050565b61027f6102db565b6102885f610370565b565b6060600480546101d8906104a7565b6102a16102db565b6001600160a01b0381166102cf57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6102d881610370565b50565b5f546001600160a01b031633146102885760405163118cdaa760e01b81523360048201526024016102c6565b8060025f82825461031891906104df565b90915550506001600160a01b0382165f818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b818110156103eb578581018301518582016040015282016103cf565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610421575f80fd5b919050565b5f8060408385031215610437575f80fd5b6104408361040b565b946020939093013593505050565b5f805f60608486031215610460575f80fd5b6104698461040b565b92506104776020850161040b565b9150604084013590509250925092565b5f60208284031215610497575f80fd5b6104a08261040b565b9392505050565b600181811c908216806104bb57607f821691505b6020821081036104d957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561025b57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e66871006899e4bf01d97832268ed0e00aa7aca6d09bb4af2ec16f3923a1ac7064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x44E JUMP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x277 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xBD PUSH2 0x28A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x487 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D8 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x204 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x226 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x232 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x273 DUP3 DUP3 PUSH2 0x307 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x288 PUSH0 PUSH2 0x370 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D8 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D8 DUP2 PUSH2 0x370 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2C6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3EB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3CF JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x437 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x440 DUP4 PUSH2 0x40B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x469 DUP5 PUSH2 0x40B JUMP JUMPDEST SWAP3 POP PUSH2 0x477 PUSH1 0x20 DUP6 ADD PUSH2 0x40B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x497 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A0 DUP3 PUSH2 0x40B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4BB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 PUSH9 0x71006899E4BF01D978 ORIGIN 0x26 DUP15 0xD0 0xE0 EXP 0xA7 0xAC 0xA6 0xD0 SWAP12 0xB4 0xAF 0x2E 0xC1 PUSH16 0x3923A1AC7064736F6C63430008160033 ",
							"sourceMap": "1505:6768:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2259:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4206:94;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:3;;1162:22;1144:41;;1132:2;1117:18;4206:94:2;1004:187:3;3336:97:2;3414:12;;3336:97;;;1342:25:3;;;1330:2;1315:18;3336:97:2;1196:177:3;4862:108:2;;;;;;:::i;:::-;4935:4;4862:108;;;;;;3187:89;;;1883:4:3;3260:9:2;1871:17:3;1853:36;;1841:2;1826:18;3187:89:2;1711:184:3;5759:103:2;;;;;;:::i;:::-;;:::i;:::-;;3491:116;;;;;;:::i;:::-;-1:-1:-1;;;;;3582:18:2;3556:7;3582:18;;;:9;:18;;;;;;;3491:116;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2237:51:3;;2225:2;2210:18;1638:85:0;2091:203:3;2461:93:2;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2259:89:2:-;2304:13;2336:5;2329:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2259:89;:::o;4206:94::-;4265:4;4206:94;;;;;:::o;5759:103::-;1531:13:0;:11;:13::i;:::-;5833:22:2::1;5839:7;5848:6;5833:5;:22::i;:::-;5759:103:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2461:93:2:-;2508:13;2540:7;2533:14;;;;;:::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2237:51:3::0;2210:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;2237:51:3;2210:18;;1901:40:0;2091:203:3;5246:507:2;5445:6;5429:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;5597:18:2;;;;;;:9;:18;;;;;;;;:28;;;;;;5650:37;1342:25:3;;;5650:37:2;;1315:18:3;5650:37:2;;;;;;;5759:103;;:::o;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:548:3:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:3;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:3:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:3:o;2299:380::-;2378:1;2374:12;;;;2421;;;2442:61;;2496:4;2488:6;2484:17;2474:27;;2442:61;2549:2;2541:6;2538:14;2518:18;2515:38;2512:161;;2595:10;2590:3;2586:20;2583:1;2576:31;2630:4;2627:1;2620:15;2658:4;2655:1;2648:15;2512:161;;2299:380;;;:::o;2684:222::-;2749:9;;;2770:10;;;2767:133;;;2822:10;2817:3;2813:20;2810:1;2803:31;2857:4;2854:1;2847:15;2885:4;2882:1;2875:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "266400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "420",
								"balanceOf(address)": "2534",
								"decimals()": "infinite",
								"mint(address,uint256)": "53043",
								"name()": "infinite",
								"owner()": "2343",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "485",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28439"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1987,
									"end": 2194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2091,
									"end": 2104,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2034,
									"end": 2085,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2007,
									"end": 2025,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2007,
									"end": 2025,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2116,
									"end": 2121,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2116,
									"end": 2129,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2124,
									"end": 2129,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2121,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2129,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2116,
									"end": 2129,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2129,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2116,
									"end": 2129,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2139,
									"end": 2146,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2139,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2149,
									"end": 2156,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2139,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2139,
									"end": 2156,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2139,
									"end": 2156,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2139,
									"end": 2156,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2166,
									"end": 2187,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 2166,
									"end": 2187,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2187,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2166,
									"end": 2187,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 146,
									"end": 990,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 990,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 3,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 732,
									"end": 735,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 725,
									"end": 729,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 704,
									"end": 730,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 701,
									"end": 736,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 698,
									"end": 753,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 698,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 747,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 739,
									"end": 751,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 698,
									"end": 753,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 771,
									"end": 772,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 795,
									"end": 797,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 792,
									"end": 793,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 789,
									"end": 798,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 781,
									"end": 914,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 883,
									"end": 897,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 879,
									"end": 902,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 879,
									"end": 902,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 873,
									"end": 903,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 852,
									"end": 866,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 848,
									"end": 871,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 848,
									"end": 871,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 841,
									"end": 904,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 806,
									"end": 816,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 806,
									"end": 816,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 958,
									"end": 959,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 955,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 948,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 934,
									"end": 949,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 930,
									"end": 956,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 923,
									"end": 960,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 978,
									"end": 984,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 969,
									"end": 984,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 146,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1110,
									"end": 1116,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1118,
									"end": 1124,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1126,
									"end": 1132,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1190,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1175,
									"end": 1184,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1166,
									"end": 1173,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1185,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1158,
									"end": 1191,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1208,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1208,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1155,
									"end": 1208,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1204,
									"end": 1205,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1194,
									"end": 1206,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1208,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1155,
									"end": 1208,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1246,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1246,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1275,
									"end": 1306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1275,
									"end": 1306,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 1307,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 1307,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1325,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1255,
									"end": 1325,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 1322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1319,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1323,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1325,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1255,
									"end": 1325,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1393,
									"end": 1395,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1372,
									"end": 1397,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1349,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1349,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1446,
									"end": 1460,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1446,
									"end": 1460,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1446,
									"end": 1460,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1443,
									"end": 1477,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1443,
									"end": 1477,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1443,
									"end": 1477,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1470,
									"end": 1471,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1463,
									"end": 1475,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1443,
									"end": 1477,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1443,
									"end": 1477,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1496,
									"end": 1557,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1549,
									"end": 1556,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 1540,
									"end": 1546,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1529,
									"end": 1538,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 1525,
									"end": 1547,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1496,
									"end": 1557,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1496,
									"end": 1557,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1496,
									"end": 1557,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1496,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1486,
									"end": 1557,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 1486,
									"end": 1557,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1603,
									"end": 1605,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1592,
									"end": 1601,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1588,
									"end": 1606,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1607,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1607,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1607,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 1634,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1622,
									"end": 1630,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1619,
									"end": 1635,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1649,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1645,
									"end": 1646,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1638,
									"end": 1650,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1726,
									"end": 1733,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1715,
									"end": 1723,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1713,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1724,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1671,
									"end": 1734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1734,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1671,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1661,
									"end": 1734,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1661,
									"end": 1734,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1661,
									"end": 1734,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 1768,
									"end": 1777,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1758,
									"end": 1783,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1827,
									"end": 1831,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1818,
									"end": 1825,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1805,
									"end": 1812,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1802,
									"end": 1833,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1792,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1792,
									"end": 1851,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1847,
									"end": 1848,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1844,
									"end": 1845,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1792,
									"end": 1851,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1792,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP7",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 995,
									"end": 1883,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2218,
									"end": 2230,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2218,
									"end": 2230,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2218,
									"end": 2230,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2293,
									"end": 2297,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 2285,
									"end": 2291,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2281,
									"end": 2298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2271,
									"end": 2298,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2271,
									"end": 2298,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2346,
									"end": 2348,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2338,
									"end": 2344,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2335,
									"end": 2349,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2315,
									"end": 2333,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2312,
									"end": 2350,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2392,
									"end": 2402,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 2387,
									"end": 2390,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 2383,
									"end": 2403,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2373,
									"end": 2404,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2427,
									"end": 2431,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2424,
									"end": 2425,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2417,
									"end": 2432,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2455,
									"end": 2459,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2452,
									"end": 2453,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2445,
									"end": 2460,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2096,
									"end": 2476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2709,
									"end": 2711,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2704,
									"end": 2707,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2701,
									"end": 2712,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2745,
									"end": 2750,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2742,
									"end": 2743,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2735,
									"end": 2751,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2789,
									"end": 2793,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2786,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 2859,
									"end": 2861,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2847,
									"end": 2857,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2843,
									"end": 2862,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2840,
									"end": 2841,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2836,
									"end": 2863,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2830,
									"end": 2834,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2826,
									"end": 2864,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2895,
									"end": 2899,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2883,
									"end": 2893,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2880,
									"end": 2900,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2918,
									"end": 2922,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2973,
									"end": 2975,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2968,
									"end": 2971,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2964,
									"end": 2976,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2957,
									"end": 2977,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2951,
									"end": 2955,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2947,
									"end": 2978,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2937,
									"end": 2978,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2937,
									"end": 2978,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3046,
									"end": 3048,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3044,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3036,
									"end": 3049,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3105,
									"end": 3106,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3091,
									"end": 3107,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3091,
									"end": 3107,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3072,
									"end": 3073,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3061,
									"end": 3074,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3032,
									"end": 3035,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3032,
									"end": 3035,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2607,
									"end": 3125,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3421,
									"end": 3431,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3421,
									"end": 3431,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3443,
									"end": 3473,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3443,
									"end": 3473,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 3476,
									"end": 3494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 3595,
									"end": 3601,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 3587,
									"end": 3591,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3581,
									"end": 3592,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3555,
									"end": 3593,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3549,
									"end": 3553,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 3505,
									"end": 3602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3714,
									"end": 3716,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3703,
									"end": 3717,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3703,
									"end": 3717,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 3731,
									"end": 3732,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4433,
									"end": 4434,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4450,
									"end": 4456,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4447,
									"end": 4536,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4447,
									"end": 4536,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 4447,
									"end": 4536,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4502,
									"end": 4521,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4502,
									"end": 4521,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4502,
									"end": 4521,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4496,
									"end": 4522,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4447,
									"end": 4536,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 4447,
									"end": 4536,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3259,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 3254,
									"end": 3265,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3254,
									"end": 3265,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3254,
									"end": 3265,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 3250,
									"end": 3274,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 3246,
									"end": 3275,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3276,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3282,
									"end": 3283,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3278,
									"end": 3289,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3278,
									"end": 3289,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3278,
									"end": 3289,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 3233,
									"end": 3290,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 4549,
									"end": 4630,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4549,
									"end": 4630,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2554,
									"end": 2555,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2547,
									"end": 2561,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2547,
									"end": 2561,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2547,
									"end": 2561,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2591,
									"end": 2595,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2578,
									"end": 2596,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2578,
									"end": 2596,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3762,
									"end": 3782,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3762,
									"end": 3782,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3762,
									"end": 3782,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "tag",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3894,
									"end": 3901,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3891,
									"end": 3892,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3888,
									"end": 3902,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3983,
									"end": 4002,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 3983,
									"end": 4002,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3983,
									"end": 4002,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3977,
									"end": 4003,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3962,
									"end": 4004,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3962,
									"end": 4004,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4075,
									"end": 4102,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 4075,
									"end": 4102,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4075,
									"end": 4102,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4075,
									"end": 4102,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 4043,
									"end": 4044,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4031,
									"end": 4045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4031,
									"end": 4045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4031,
									"end": 4045,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4031,
									"end": 4045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3910,
									"end": 3929,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3910,
									"end": 3929,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3884,
									"end": 3887,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4144,
									"end": 4150,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4135,
									"end": 4142,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4132,
									"end": 4151,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4205,
									"end": 4224,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 4205,
									"end": 4224,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4205,
									"end": 4224,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4199,
									"end": 4225,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4288,
									"end": 4289,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 4284,
									"end": 4298,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 4284,
									"end": 4298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4284,
									"end": 4298,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 4300,
									"end": 4303,
									"name": "PUSH",
									"source": 3,
									"value": "F8"
								},
								{
									"begin": 4280,
									"end": 4304,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4276,
									"end": 4313,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 4272,
									"end": 4314,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 4257,
									"end": 4315,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4242,
									"end": 4316,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4242,
									"end": 4316,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "tag",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4376,
									"end": 4377,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4367,
									"end": 4373,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4364,
									"end": 4365,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4360,
									"end": 4374,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 4356,
									"end": 4378,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4350,
									"end": 4354,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4343,
									"end": 4379,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3301,
									"end": 4646,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "195"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e66871006899e4bf01d97832268ed0e00aa7aca6d09bb4af2ec16f3923a1ac7064736f6c63430008160033",
									".code": [
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "40C10F19"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2259,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2259,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4206,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4206,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4862,
											"end": 4970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3276,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3187,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3260,
											"end": 3269,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3187,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5759,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5759,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3491,
											"end": 3607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3556,
											"end": 3563,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2461,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2317,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2329,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2329,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5839,
											"end": 5846,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5833,
											"end": 5838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5833,
											"end": 5855,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5833,
											"end": 5855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5833,
											"end": 5855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2533,
											"end": 2547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2547,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2533,
											"end": 2547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2533,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5753,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5246,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5445,
											"end": 5451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5441,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5429,
											"end": 5441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5429,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2679,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2299,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2374,
											"end": 2386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2386,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2433,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2442,
											"end": 2503,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2500,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 2488,
											"end": 2494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2474,
											"end": 2501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2474,
											"end": 2501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2503,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2442,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2552,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2512,
											"end": 2673,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2590,
											"end": 2593,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2634,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2627,
											"end": 2628,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2620,
											"end": 2635,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2662,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2655,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2663,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2673,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2512,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2679,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2906,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2684,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2900,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2767,
											"end": 2900,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2862,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"packages/revolution-contracts/NontransferableERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/NontransferableERC20.sol\":\"NontransferableERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"packages/revolution-contracts/NontransferableERC20.sol\":{\"keccak256\":\"0xd68565d51e1b9a109f494d1df0c39555bd61c7b921e9e732b52902bac333a89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca11bc6d0d22e87b8b1c7caec1ce389fa69acc5b421fae5ca9a11ef9562ed9d0\",\"dweb:/ipfs/QmXktFkEqTY6eTaPP8YRbDcn9UirpXWnGkgRzqbG4bigAC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "packages/revolution-contracts/NontransferableERC20.sol:NontransferableERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 179,
								"contract": "packages/revolution-contracts/NontransferableERC20.sol:NontransferableERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 189,
								"contract": "packages/revolution-contracts/NontransferableERC20.sol:NontransferableERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 191,
								"contract": "packages/revolution-contracts/NontransferableERC20.sol:NontransferableERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 193,
								"contract": "packages/revolution-contracts/NontransferableERC20.sol:NontransferableERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							169
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 170,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 169,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 169,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								169
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							169
						]
					},
					"id": 170,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 169,
							"linearizedBaseContracts": [
								169
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 169,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 169,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 170,
							"src": "624:235:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:1"
				},
				"id": 1
			},
			"packages/revolution-contracts/NontransferableERC20.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/NontransferableERC20.sol",
					"exportedSymbols": {
						"NontransferableERC20": [
							470
						],
						"Ownable": [
							147
						]
					},
					"id": 471,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 471,
							"sourceUnit": 148,
							"src": "1434:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "1443:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 174,
										"name": "Ownable",
										"nameLocations": [
											"1538:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1538:7:2"
									},
									"id": 175,
									"nodeType": "InheritanceSpecifier",
									"src": "1538:7:2"
								}
							],
							"canonicalName": "NontransferableERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 470,
							"linearizedBaseContracts": [
								470,
								147,
								169
							],
							"name": "NontransferableERC20",
							"nameLocation": "1514:20:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1588:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "1552:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 178,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1560:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1552:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1571:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 187,
									"name": "Transfer",
									"nameLocation": "1610:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1635:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1619:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1657:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1641:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1669:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1661:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1618:57:2"
									},
									"src": "1604:72:2"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1698:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "1682:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1682:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 191,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1732:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "1717:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 190,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1717:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 193,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1758:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "1743:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 192,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1743:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 195,
									"mutability": "immutable",
									"name": "_decimals",
									"nameLocation": "1795:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "1771:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 194,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1771:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "2106:88:2",
										"statements": [
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 210,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2116:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 211,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2124:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2116:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2116:13:2"
											},
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 214,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2139:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 215,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2149:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2139:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "2139:17:2"
											},
											{
												"expression": {
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 218,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2166:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 219,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2178:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2166:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "2166:21:2"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "1811:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 223,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 207,
													"name": "_initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "2091:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 208,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 206,
												"name": "Ownable",
												"nameLocations": [
													"2083:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2083:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2083:22:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "2007:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1999:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2036:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2022:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2022:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2057:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2043:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2043:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "2072:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2066:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 203,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:84:2"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2106:0:2"
									},
									"scope": 470,
									"src": "1987:207:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2319:29:2",
										"statements": [
											{
												"expression": {
													"id": 229,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 191,
													"src": "2336:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 228,
												"id": 230,
												"nodeType": "Return",
												"src": "2329:12:2"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2200:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2268:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2272:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2304:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:15:2"
									},
									"scope": 470,
									"src": "2259:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "2523:31:2",
										"statements": [
											{
												"expression": {
													"id": 238,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 193,
													"src": "2540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 237,
												"id": 239,
												"nodeType": "Return",
												"src": "2533:14:2"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2354:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2470:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2476:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2508:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2508:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2507:15:2"
									},
									"scope": 470,
									"src": "2461:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "3243:33:2",
										"statements": [
											{
												"expression": {
													"id": 247,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 195,
													"src": "3260:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 246,
												"id": 248,
												"nodeType": "Return",
												"src": "3253:16:2"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "2560:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3196:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3204:2:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3236:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 244,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:7:2"
									},
									"scope": 470,
									"src": "3187:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "3397:36:2",
										"statements": [
											{
												"expression": {
													"id": 256,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 189,
													"src": "3414:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 255,
												"id": 257,
												"nodeType": "Return",
												"src": "3407:19:2"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "3282:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3345:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3356:2:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3388:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3388:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:9:2"
									},
									"scope": 470,
									"src": "3336:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "3565:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 267,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3582:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 269,
													"indexExpression": {
														"id": 268,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "3592:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3582:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 270,
												"nodeType": "Return",
												"src": "3575:25:2"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "3439:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3500:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3518:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3510:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3510:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:17:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3556:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3555:9:2"
									},
									"scope": 470,
									"src": "3491:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "3869:29:2",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3886:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 281,
												"id": 283,
												"nodeType": "Return",
												"src": "3879:12:2"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3613:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3812:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3830:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:18:2"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:6:2"
									},
									"scope": 470,
									"src": "3803:95:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "4271:29:2",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4288:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 294,
												"id": 296,
												"nodeType": "Return",
												"src": "4281:12:2"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "3904:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4215:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "4223:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "4232:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4232:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4222:18:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "4265:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4265:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4264:6:2"
									},
									"scope": 470,
									"src": "4206:94:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4941:29:2",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4958:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 309,
												"id": 311,
												"nodeType": "Return",
												"src": "4951:12:2"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "4306:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4871:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4884:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4893:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4902:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4902:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4883:27:2"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4935:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4935:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4934:6:2"
									},
									"scope": 470,
									"src": "4862:108:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "5311:442:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5398:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5390:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5390:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5390:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 326,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "5402:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5411:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 321,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5369:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5369:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "5369:49:2"
											},
											{
												"expression": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 330,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "5429:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 331,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5445:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5429:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "5429:22:2"
											},
											{
												"id": 340,
												"nodeType": "UncheckedBlock",
												"src": "5461:175:2",
												"statements": [
													{
														"expression": {
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 334,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "5597:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 336,
																"indexExpression": {
																	"id": 335,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "5607:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5597:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 337,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5619:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5597:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 339,
														"nodeType": "ExpressionStatement",
														"src": "5597:28:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5667:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5659:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 342,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5659:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5659:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "5671:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5680:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 341,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "5650:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5650:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "EmitStatement",
												"src": "5645:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5726:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5718:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 351,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5718:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5718:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 355,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "5730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5739:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "5698:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5698:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "5698:48:2"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4976:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5255:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5269:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "5261:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5286:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "5278:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:33:2"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5311:0:2"
									},
									"scope": 470,
									"src": "5246:507:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "5823:39:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5839:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5848:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "5833:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5833:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5833:22:2"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 367,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 366,
												"name": "onlyOwner",
												"nameLocations": [
													"5813:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5813:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5813:9:2"
										}
									],
									"name": "mint",
									"nameLocation": "5768:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5781:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "5773:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5798:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "5790:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:33:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5823:0:2"
									},
									"scope": 470,
									"src": "5759:103:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "6247:573:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "6265:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6284:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6276:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 385,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6276:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6276:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6265:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6288:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69b5c9c0a6c597382847bfa3cd65f513fd5b62b9d8416111652afeec522ea587",
																"typeString": "literal_string \"ERC20: zero address\""
															},
															"value": "ERC20: zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69b5c9c0a6c597382847bfa3cd65f513fd5b62b9d8416111652afeec522ea587",
																"typeString": "literal_string \"ERC20: zero address\""
															}
														],
														"id": 383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6257:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6257:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "6257:53:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 394,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6342:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6359:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6351:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 395,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6351:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6351:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6363:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "6321:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6321:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "6321:49:2"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "6389:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "6381:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6381:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"baseExpression": {
														"id": 404,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "6406:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 406,
													"indexExpression": {
														"id": 405,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "6416:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6406:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6381:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 409,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "6442:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 410,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6460:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6442:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20657863656564732062616c616e6365",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6468:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff335a729c63857f083345d941c4a64d2f7b56d711e48a0a184e4e7a4642864f",
																"typeString": "literal_string \"ERC20: burn exceeds balance\""
															},
															"value": "ERC20: burn exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff335a729c63857f083345d941c4a64d2f7b56d711e48a0a184e4e7a4642864f",
																"typeString": "literal_string \"ERC20: burn exceeds balance\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6434:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6434:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "6434:64:2"
											},
											{
												"id": 427,
												"nodeType": "UncheckedBlock",
												"src": "6508:194:2",
												"statements": [
													{
														"expression": {
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 415,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "6532:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 417,
																"indexExpression": {
																	"id": 416,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "6542:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6532:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 418,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6553:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 419,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6570:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6553:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6532:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 422,
														"nodeType": "ExpressionStatement",
														"src": "6532:44:2"
													},
													{
														"expression": {
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 423,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "6669:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 424,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6685:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6669:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 426,
														"nodeType": "ExpressionStatement",
														"src": "6669:22:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 429,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6743:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6735:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 430,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6735:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6735:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 434,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6747:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 428,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "6717:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "EmitStatement",
												"src": "6712:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 438,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6785:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6802:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6794:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 439,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6794:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6794:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6806:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 437,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "6765:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "6765:48:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "5868:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6191:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6205:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6197:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6197:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6222:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6214:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6214:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:33:2"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6247:0:2"
									},
									"scope": 470,
									"src": "6182:638:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "7542:2:2",
										"statements": []
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "6826:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "7462:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7491:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "7483:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7483:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7505:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "7497:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7497:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7517:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "7509:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7509:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7482:42:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7542:0:2"
									},
									"scope": 470,
									"src": "7453:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "8269:2:2",
										"statements": []
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7550:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "8190:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8218:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8210:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8210:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8232:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8224:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8224:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8244:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8236:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8236:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8209:42:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8269:0:2"
									},
									"scope": 470,
									"src": "8181:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 471,
							"src": "1505:6768:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								187
							]
						}
					],
					"src": "105:8169:2"
				},
				"id": 2
			}
		}
	}
}