{
	"id": "cd37be289039919fec758b7593f1c5cc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/revolution-contracts/VerbsAuctionHouse.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n/// @title The Verbs DAO auction house\n\n/*********************************\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░██░░░████░░██░░░████░░░ *\n * ░░██████░░░████████░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n *********************************/\n\n// LICENSE\n// VerbsAuctionHouse.sol is a modified version of Zora's AuctionHouse.sol:\n// https://github.com/ourzora/auction-house/blob/54a12ec1a6cf562e49f0a4917990474b11350a2d/contracts/AuctionHouse.sol\n//\n// AuctionHouse.sol source code Copyright Zora licensed under the GPL-3.0 license.\n\npragma solidity ^0.8.22;\n\nimport { PausableUpgradeable } from \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport { ReentrancyGuardUpgradeable } from \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport { OwnableUpgradeable } from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { IVerbsAuctionHouse } from \"./interfaces/IVerbsAuctionHouse.sol\";\nimport { IVerbsToken } from \"./interfaces/IVerbsToken.sol\";\nimport { IWETH } from \"./interfaces/IWETH.sol\";\nimport { ITokenEmitter } from \"./interfaces/ITokenEmitter.sol\";\nimport { wadMul, wadDiv } from \"./libs/SignedWadMath.sol\";\nimport { ICultureIndex } from \"./interfaces/ICultureIndex.sol\";\n\ncontract VerbsAuctionHouse is IVerbsAuctionHouse, PausableUpgradeable, ReentrancyGuardUpgradeable, OwnableUpgradeable {\n    // The Verbs ERC721 token contract\n    IVerbsToken public verbs;\n\n    // The ERC20 governance token\n    ITokenEmitter public tokenEmitter;\n\n    // The address of the WETH contract\n    address public weth;\n\n    // The minimum amount of time left in an auction after a new bid is created\n    uint256 public timeBuffer;\n\n    // The minimum price accepted in an auction\n    uint256 public reservePrice;\n\n    // The minimum percentage difference between the last bid amount and the current bid\n    uint8 public minBidIncrementPercentage;\n\n    // The split of the winning bid that is reserved for the creator of the Verb in basis points\n    uint256 public creatorRateBps;\n\n    // The split of (auction proceeds * creatorRate) that is sent to the creator as ether in basis points\n    uint256 public entropyRateBps;\n\n    // The duration of a single auction\n    uint256 public duration;\n\n    // The active auction\n    IVerbsAuctionHouse.Auction public auction;\n\n    /**\n     * @notice Initialize the auction house and base contracts,\n     * populate configuration values, and pause the contract.\n     * @dev This function can only be called once.\n     */\n    function initialize(\n        IVerbsToken _verbs,\n        ITokenEmitter _tokenEmitter,\n        address _weth,\n        address _founder,\n        uint256 _timeBuffer,\n        uint256 _reservePrice,\n        uint8 _minBidIncrementPercentage,\n        uint256 _duration,\n        uint256 _creatorRateBps,\n        uint256 _entropyRateBps\n    ) external initializer {\n        __Pausable_init();\n        __ReentrancyGuard_init();\n        __Ownable_init(_founder);\n\n        _pause();\n\n        verbs = _verbs;\n        tokenEmitter = _tokenEmitter;\n        weth = _weth;\n        timeBuffer = _timeBuffer;\n        reservePrice = _reservePrice;\n        minBidIncrementPercentage = _minBidIncrementPercentage;\n        duration = _duration;\n        creatorRateBps = _creatorRateBps;\n        entropyRateBps = _entropyRateBps;\n    }\n\n    /**\n     * @notice Settle the current auction, mint a new Verb, and put it up for auction.\n     */\n    function settleCurrentAndCreateNewAuction() external override nonReentrant whenNotPaused {\n        _settleAuction();\n        _createAuction();\n    }\n\n    /**\n     * @notice Settle the current auction.\n     * @dev This function can only be called when the contract is paused.\n     */\n    function settleAuction() external override whenPaused nonReentrant {\n        _settleAuction();\n    }\n\n    /**\n     * @notice Create a bid for a Verb, with a given amount.\n     * @dev This contract only accepts payment in ETH.\n     */\n    function createBid(uint256 verbId) external payable override nonReentrant {\n        IVerbsAuctionHouse.Auction memory _auction = auction;\n\n        require(_auction.verbId == verbId, \"Verb not up for auction\");\n        require(block.timestamp < _auction.endTime, \"Auction expired\");\n        require(msg.value >= reservePrice, \"Must send at least reservePrice\");\n        require(msg.value >= _auction.amount + ((_auction.amount * minBidIncrementPercentage) / 100), \"Must send more than last bid by minBidIncrementPercentage amount\");\n\n        address payable lastBidder = _auction.bidder;\n\n        // Refund the last bidder, if applicable\n        if (lastBidder != address(0)) {\n            _safeTransferETHWithFallback(lastBidder, _auction.amount);\n        }\n\n        auction.amount = msg.value;\n        auction.bidder = payable(msg.sender);\n\n        // Extend the auction if the bid was received within `timeBuffer` of the auction end time\n        bool extended = _auction.endTime - block.timestamp < timeBuffer;\n        if (extended) {\n            auction.endTime = _auction.endTime = block.timestamp + timeBuffer;\n        }\n\n        emit AuctionBid(_auction.verbId, msg.sender, msg.value, extended);\n\n        if (extended) {\n            emit AuctionExtended(_auction.verbId, _auction.endTime);\n        }\n    }\n\n    /**\n     * @notice Pause the Verbs auction house.\n     * @dev This function can only be called by the owner when the\n     * contract is unpaused. While no new auctions can be started when paused,\n     * anyone can settle an ongoing auction.\n     */\n    function pause() external override onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @notice Unpause the Verbs auction house.\n     * @dev This function can only be called by the owner when the\n     * contract is paused. If required, this function will start a new auction.\n     */\n    function unpause() external override onlyOwner {\n        _unpause();\n\n        if (auction.startTime == 0 || auction.settled) {\n            _createAuction();\n        }\n    }\n\n    /**\n     * @notice Set the auction time buffer.\n     * @dev Only callable by the owner.\n     */\n    function setTimeBuffer(uint256 _timeBuffer) external override onlyOwner {\n        timeBuffer = _timeBuffer;\n\n        emit AuctionTimeBufferUpdated(_timeBuffer);\n    }\n\n    /**\n     * @notice Set the auction reserve price.\n     * @dev Only callable by the owner.\n     */\n    function setReservePrice(uint256 _reservePrice) external override onlyOwner {\n        reservePrice = _reservePrice;\n\n        emit AuctionReservePriceUpdated(_reservePrice);\n    }\n\n    /**\n     * @notice Set the auction minimum bid increment percentage.\n     * @dev Only callable by the owner.\n     */\n    function setMinBidIncrementPercentage(uint8 _minBidIncrementPercentage) external override onlyOwner {\n        minBidIncrementPercentage = _minBidIncrementPercentage;\n\n        emit AuctionMinBidIncrementPercentageUpdated(_minBidIncrementPercentage);\n    }\n\n    /**\n     * @notice Create an auction.\n     * @dev Store the auction details in the `auction` state variable and emit an AuctionCreated event.\n     * If the mint reverts, the minter was updated without pausing this contract first. To remedy this,\n     * catch the revert and pause this contract.\n     */\n    function _createAuction() internal {\n        try verbs.mint() returns (uint256 verbId) {\n            uint256 startTime = block.timestamp;\n            uint256 endTime = startTime + duration;\n\n            auction = Auction({ verbId: verbId, amount: 0, startTime: startTime, endTime: endTime, bidder: payable(0), settled: false });\n\n            emit AuctionCreated(verbId, startTime, endTime);\n        } catch Error(string memory) {\n            _pause();\n        }\n    }\n\n    /**\n     * @notice Settle an auction, finalizing the bid and paying out to the owner.\n     * @dev If there are no bids, the Verb is burned.\n     */\n    function _settleAuction() internal {\n        IVerbsAuctionHouse.Auction memory _auction = auction;\n\n        require(_auction.startTime != 0, \"Auction hasn't begun\");\n        require(!_auction.settled, \"Auction has already been settled\");\n        require(block.timestamp >= _auction.endTime, \"Auction hasn't completed\");\n\n        auction.settled = true;\n\n        if (_auction.bidder == address(0)) {\n            verbs.burn(_auction.verbId);\n        } else {\n            verbs.transferFrom(address(this), _auction.bidder, _auction.verbId);\n        }\n\n        if (_auction.amount > 0) {\n            // Ether going to owner of the auction\n            uint256 auctioneerPayment = uint256(wadDiv(wadMul(int256(_auction.amount), 10000 - int256(creatorRateBps)), 10000));\n\n            //Total amount of ether going to creator\n            uint256 creatorPayment = _auction.amount - auctioneerPayment;\n\n            //Ether reserved to pay the creator directly\n            uint256 creatorDirectPayment = uint256(wadDiv(wadMul(int256(creatorPayment), int256(entropyRateBps)), 10000));\n            //Ether reserved to buy creator governance\n            uint256 creatorGovernancePayment = creatorPayment - creatorDirectPayment;\n\n            uint256 numCreators = verbs.getArtPieceById(_auction.verbId).creators.length;\n\n            //Build arrays for tokenEmitter.buyToken\n            address[] memory vrgdaReceivers = new address[](numCreators);\n            uint256[] memory vrgdaSplits = new uint256[](numCreators);\n\n            //Transfer auction amount to the DAO treasury\n            _safeTransferETHWithFallback(owner(), auctioneerPayment);\n\n            //Transfer creator's share to the creator, for each creator, and build arrays for tokenEmitter.buyToken\n            for (uint256 i = 0; i < numCreators; i++) {\n                ICultureIndex.CreatorBps memory creator = verbs.getArtPieceById(_auction.verbId).creators[i];\n                vrgdaReceivers[i] = creator.creator;\n                vrgdaSplits[i] = creator.bps;\n\n                //Calculate etherAmount for specific creator based on BPS splits\n                uint256 etherAmount = uint256(wadDiv(wadMul(int256(creatorDirectPayment), int256(creator.bps)), 10000));\n\n                //Transfer creator's share to the creator\n                _safeTransferETHWithFallback(creator.creator, etherAmount);\n            }\n\n            //Buy token from tokenEmitter for all the creators\n            tokenEmitter.buyToken{ value: creatorGovernancePayment }(vrgdaReceivers, vrgdaSplits, creatorGovernancePayment);\n        }\n\n        emit AuctionSettled(_auction.verbId, _auction.bidder, _auction.amount);\n    }\n\n    /**\n     * @notice Transfer ETH. If the ETH transfer fails, wrap the ETH and try send it as WETH.\n     */\n    function _safeTransferETHWithFallback(address to, uint256 amount) internal {\n        if (!_safeTransferETH(to, amount)) {\n            IWETH(weth).deposit{ value: amount }();\n            IERC20(weth).transfer(to, amount);\n        }\n    }\n\n    /**\n     * @notice Transfer ETH and return the success status.\n     * @dev This function only forwards 30,000 gas to the callee.\n     */\n    function _safeTransferETH(address to, uint256 value) internal returns (bool) {\n        (bool success, ) = to.call{ value: value, gas: 30_000 }(new bytes(0));\n        return success;\n    }\n}\n"
			},
			"packages/revolution-contracts/interfaces/ICultureIndex.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.22;\n\nimport { IERC20 } from \"../IERC20.sol\";\n\n/**\n * @title ICultureIndexEvents\n * @dev This interface defines the events for the CultureIndex contract.\n */\ninterface ICultureIndexEvents {\n    /**\n     * @dev Emitted when a new piece is created.\n     * @param pieceId Unique identifier for the newly created piece.\n     * @param dropper Address that created the piece.\n     * @param name Name of the art piece.\n     * @param description Description of the art piece.\n     * @param image URL for the image associated with the art piece.\n     * @param animationUrl (Optional) URL for the animation associated with the art piece.\n     * @param text Text content for the art piece.\n     * @param mediaType Integer representation of the media type for the art piece.\n     */\n    event PieceCreated(\n        uint256 indexed pieceId,\n        address indexed dropper,\n        string name,\n        string description,\n        string image,\n        string animationUrl,\n        string text,\n        uint8 mediaType\n    );\n\n    /**\n     * @dev Emitted when a top-voted piece is dropped or released.\n     * @param pieceId Unique identifier for the dropped piece.\n     * @param remover Address that initiated the drop.\n     */\n    event PieceDropped(uint256 indexed pieceId, address indexed remover);\n\n    /**\n     * @dev Emitted for each creator added to a piece when it is dropped.\n     * @param pieceId Unique identifier for the dropped piece.\n     * @param creatorAddress Address of the creator.\n     * @param dropper Address that created the piece.\n     * @param bps Basis points associated with the creator for revenue sharing.\n     */\n    event PieceDroppedCreator(uint256 indexed pieceId, address indexed creatorAddress, address indexed dropper, uint256 bps);\n\n    /**\n     * @dev Emitted when a vote is cast for a piece.\n     * @param pieceId Unique identifier for the piece being voted for.\n     * @param voter Address of the voter.\n     * @param weight Weight of the vote.\n     * @param totalWeight Total weight of votes for the piece after the new vote.\n     */\n    event VoteCast(uint256 indexed pieceId, address indexed voter, uint256 weight, uint256 totalWeight);\n\n    // The events emitted for the respective creators of a piece\n    event PieceCreatorAdded(uint256 indexed pieceId, address indexed creatorAddress, address indexed dropper, uint256 bps);\n}\n\n/**\n * @title ICultureIndex\n * @dev This interface defines the methods for the CultureIndex contract for art piece management and voting.\n */\ninterface ICultureIndex is ICultureIndexEvents {\n    // Enum representing different media types for art pieces.\n    enum MediaType {\n        NONE,\n        IMAGE,\n        ANIMATION,\n        AUDIO,\n        TEXT,\n        OTHER\n    }\n\n    // Struct defining metadata for an art piece.\n    struct ArtPieceMetadata {\n        string name;\n        string description;\n        MediaType mediaType;\n        string image;\n        string text;\n        string animationUrl;\n    }\n\n    // Struct representing a creator of an art piece and their basis points.\n    struct CreatorBps {\n        address creator;\n        uint256 bps;\n    }\n\n    // Struct defining an art piece.\n    struct ArtPiece {\n        uint256 pieceId;\n        ArtPieceMetadata metadata;\n        CreatorBps[] creators;\n        address dropper;\n        bool isDropped;\n    }\n\n    // Struct representing a voter and their weight for a specific art piece.\n    struct Vote {\n        address voterAddress;\n        uint256 weight;\n    }\n\n    /**\n     * @notice Returns the total number of art pieces.\n     * @return The total count of art pieces.\n     */\n    function pieceCount() external view returns (uint256);\n\n    /**\n     * @notice Returns the total voting weight for a specific art piece.\n     * @param pieceId The ID of the art piece.\n     * @return The total vote weight for the art piece.\n     */\n    function totalVoteWeights(uint256 pieceId) external view returns (uint256);\n\n    /**\n     * @notice Checks if a specific voter has already voted for a given art piece.\n     * @param pieceId The ID of the art piece.\n     * @param voter The address of the voter.\n     * @return A boolean indicating if the voter has voted for the art piece.\n     */\n    function hasVoted(uint256 pieceId, address voter) external view returns (bool);\n\n    /**\n     * @notice Allows a user to create a new art piece.\n     * @param metadata The metadata associated with the art piece.\n     * @param creatorArray An array of creators and their associated basis points.\n     * @return The ID of the newly created art piece.\n     */\n    function createPiece(ArtPieceMetadata memory metadata, CreatorBps[] memory creatorArray) external returns (uint256);\n\n    /**\n     * @notice Allows a user to vote for a specific art piece.\n     * @param pieceId The ID of the art piece.\n     */\n    function vote(uint256 pieceId) external;\n\n    /**\n     * @notice Fetch an art piece by its ID.\n     * @param pieceId The ID of the art piece.\n     * @return The ArtPiece struct associated with the given ID.\n     */\n    function getPieceById(uint256 pieceId) external view returns (ArtPiece memory);\n\n    /**\n     * @notice Fetch the list of voters for a given art piece.\n     * @param pieceId The ID of the art piece.\n     * @param voter The address of the voter.\n     * @return An Voter structs associated with the given art piece ID.\n     */\n    function getVote(uint256 pieceId, address voter) external view returns (Vote memory);\n\n    /**\n     * @notice Retrieve the top-voted art piece based on the accumulated votes.\n     * @return The ArtPiece struct representing the piece with the most votes.\n     */\n    function getTopVotedPiece() external view returns (ArtPiece memory);\n\n    /**\n     * @notice Fetch the ID of the top-voted art piece.\n     * @return The ID of the art piece with the most votes.\n     */\n    function topVotedPieceId() external view returns (uint256);\n\n    /**\n     * @notice Officially release or \"drop\" the art piece with the most votes.\n     * @dev This function also updates internal state to reflect the piece's dropped status.\n     * @return The ArtPiece struct of the top voted piece that was just dropped.\n     */\n    function dropTopVotedPiece() external returns (ArtPiece memory);\n}\n"
			},
			"packages/revolution-contracts/libs/SignedWadMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\n/// @notice Signed 18 decimal fixed point (wad) arithmetic library.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SignedWadMath.sol)\n/// @author Modified from Remco Bloemen (https://xn--2-umb.com/22/exp-ln/index.html)\n\n/// @dev Will not revert on overflow, only use where overflow is not possible.\nfunction toWadUnsafe(uint256 x) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Multiply x by 1e18.\n        r := mul(x, 1000000000000000000)\n    }\n}\n\n/// @dev Takes an integer amount of seconds and converts it to a wad amount of days.\n/// @dev Will not revert on overflow, only use where overflow is not possible.\n/// @dev Not meant for negative second amounts, it assumes x is positive.\nfunction toDaysWadUnsafe(uint256 x) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Multiply x by 1e18 and then divide it by 86400.\n        r := div(mul(x, 1000000000000000000), 86400)\n    }\n}\n\n/// @dev Takes a wad amount of days and converts it to an integer amount of seconds.\n/// @dev Will not revert on overflow, only use where overflow is not possible.\n/// @dev Not meant for negative day amounts, it assumes x is positive.\nfunction fromDaysWadUnsafe(int256 x) pure returns (uint256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Multiply x by 86400 and then divide it by 1e18.\n        r := div(mul(x, 86400), 1000000000000000000)\n    }\n}\n\n/// @dev Will not revert on overflow, only use where overflow is not possible.\nfunction unsafeWadMul(int256 x, int256 y) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Multiply x by y and divide by 1e18.\n        r := sdiv(mul(x, y), 1000000000000000000)\n    }\n}\n\n/// @dev Will return 0 instead of reverting if y is zero and will\n/// not revert on overflow, only use where overflow is not possible.\nfunction unsafeWadDiv(int256 x, int256 y) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Multiply x by 1e18 and divide it by y.\n        r := sdiv(mul(x, 1000000000000000000), y)\n    }\n}\n\nfunction wadMul(int256 x, int256 y) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Store x * y in r for now.\n        r := mul(x, y)\n\n        // Combined overflow check (`x == 0 || (x * y) / x == y`) and edge case check\n        // where x == -1 and y == type(int256).min, for y == -1 and x == min int256,\n        // the second overflow check will catch this.\n        // See: https://secure-contracts.com/learn_evm/arithmetic-checks.html#arithmetic-checks-for-int256-multiplication\n        // Combining into 1 expression saves gas as resulting bytecode will only have 1 `JUMPI`\n        // rather than 2.\n        if iszero(and(or(iszero(x), eq(sdiv(r, x), y)), or(lt(x, not(0)), sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000)))) {\n            revert(0, 0)\n        }\n\n        // Scale the result down by 1e18.\n        r := sdiv(r, 1000000000000000000)\n    }\n}\n\nfunction wadDiv(int256 x, int256 y) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Store x * 1e18 in r for now.\n        r := mul(x, 1000000000000000000)\n\n        // Equivalent to require(y != 0 && ((x * 1e18) / 1e18 == x))\n        if iszero(and(iszero(iszero(y)), eq(sdiv(r, 1000000000000000000), x))) {\n            revert(0, 0)\n        }\n\n        // Divide r by y.\n        r := sdiv(r, y)\n    }\n}\n\n/// @dev Will not work with negative bases, only use when x is positive.\nfunction wadPow(int256 x, int256 y) pure returns (int256) {\n    // Equivalent to x to the power of y because x ** y = (e ** ln(x)) ** y = e ** (ln(x) * y)\n    return wadExp((wadLn(x) * y) / 1e18); // Using ln(x) means x must be greater than 0.\n}\n\nfunction wadExp(int256 x) pure returns (int256 r) {\n    unchecked {\n        // When the result is < 0.5 we return zero. This happens when\n        // x <= floor(log(0.5e18) * 1e18) ~ -42e18\n        if (x <= -42139678854452767551) return 0;\n\n        // When the result is > (2**255 - 1) / 1e18 we can not represent it as an\n        // int. This happens when x >= floor(log((2**255 - 1) / 1e18) * 1e18) ~ 135.\n        if (x >= 135305999368893231589) revert(\"EXP_OVERFLOW\");\n\n        // x is now in the range (-42, 136) * 1e18. Convert to (-42, 136) * 2**96\n        // for more intermediate precision and a binary basis. This base conversion\n        // is a multiplication by 1e18 / 2**96 = 5**18 / 2**78.\n        x = (x << 78) / 5 ** 18;\n\n        // Reduce range of x to (-½ ln 2, ½ ln 2) * 2**96 by factoring out powers\n        // of two such that exp(x) = exp(x') * 2**k, where k is an integer.\n        // Solving this gives k = round(x / log(2)) and x' = x - k * log(2).\n        int256 k = ((x << 96) / 54916777467707473351141471128 + 2 ** 95) >> 96;\n        x = x - k * 54916777467707473351141471128;\n\n        // k is in the range [-61, 195].\n\n        // Evaluate using a (6, 7)-term rational approximation.\n        // p is made monic, we'll multiply by a scale factor later.\n        int256 y = x + 1346386616545796478920950773328;\n        y = ((y * x) >> 96) + 57155421227552351082224309758442;\n        int256 p = y + x - 94201549194550492254356042504812;\n        p = ((p * y) >> 96) + 28719021644029726153956944680412240;\n        p = p * x + (4385272521454847904659076985693276 << 96);\n\n        // We leave p in 2**192 basis so we don't need to scale it back up for the division.\n        int256 q = x - 2855989394907223263936484059900;\n        q = ((q * x) >> 96) + 50020603652535783019961831881945;\n        q = ((q * x) >> 96) - 533845033583426703283633433725380;\n        q = ((q * x) >> 96) + 3604857256930695427073651918091429;\n        q = ((q * x) >> 96) - 14423608567350463180887372962807573;\n        q = ((q * x) >> 96) + 26449188498355588339934803723976023;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Div in assembly because solidity adds a zero check despite the unchecked.\n            // The q polynomial won't have zeros in the domain as all its roots are complex.\n            // No scaling is necessary because p is already 2**96 too large.\n            r := sdiv(p, q)\n        }\n\n        // r should be in the range (0.09, 0.25) * 2**96.\n\n        // We now need to multiply r by:\n        // * the scale factor s = ~6.031367120.\n        // * the 2**k factor from the range reduction.\n        // * the 1e18 / 2**96 factor for base conversion.\n        // We do this all at once, with an intermediate result in 2**213\n        // basis, so the final right shift is always by a positive amount.\n        r = int256((uint256(r) * 3822833074963236453042738258902158003155416615667) >> uint256(195 - k));\n    }\n}\n\nfunction wadLn(int256 x) pure returns (int256 r) {\n    unchecked {\n        require(x > 0, \"UNDEFINED\");\n\n        // We want to convert x from 10**18 fixed point to 2**96 fixed point.\n        // We do this by multiplying by 2**96 / 10**18. But since\n        // ln(x * C) = ln(x) + ln(C), we can simply do nothing here\n        // and add ln(2**96 / 10**18) at the end.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            r := shl(7, lt(0xffffffffffffffffffffffffffffffff, x))\n            r := or(r, shl(6, lt(0xffffffffffffffff, shr(r, x))))\n            r := or(r, shl(5, lt(0xffffffff, shr(r, x))))\n            r := or(r, shl(4, lt(0xffff, shr(r, x))))\n            r := or(r, shl(3, lt(0xff, shr(r, x))))\n            r := or(r, shl(2, lt(0xf, shr(r, x))))\n            r := or(r, shl(1, lt(0x3, shr(r, x))))\n            r := or(r, lt(0x1, shr(r, x)))\n        }\n\n        // Reduce range of x to (1, 2) * 2**96\n        // ln(2^k * x) = k * ln(2) + ln(x)\n        int256 k = r - 96;\n        x <<= uint256(159 - k);\n        x = int256(uint256(x) >> 159);\n\n        // Evaluate using a (8, 8)-term rational approximation.\n        // p is made monic, we will multiply by a scale factor later.\n        int256 p = x + 3273285459638523848632254066296;\n        p = ((p * x) >> 96) + 24828157081833163892658089445524;\n        p = ((p * x) >> 96) + 43456485725739037958740375743393;\n        p = ((p * x) >> 96) - 11111509109440967052023855526967;\n        p = ((p * x) >> 96) - 45023709667254063763336534515857;\n        p = ((p * x) >> 96) - 14706773417378608786704636184526;\n        p = p * x - (795164235651350426258249787498 << 96);\n\n        // We leave p in 2**192 basis so we don't need to scale it back up for the division.\n        // q is monic by convention.\n        int256 q = x + 5573035233440673466300451813936;\n        q = ((q * x) >> 96) + 71694874799317883764090561454958;\n        q = ((q * x) >> 96) + 283447036172924575727196451306956;\n        q = ((q * x) >> 96) + 401686690394027663651624208769553;\n        q = ((q * x) >> 96) + 204048457590392012362485061816622;\n        q = ((q * x) >> 96) + 31853899698501571402653359427138;\n        q = ((q * x) >> 96) + 909429971244387300277376558375;\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Div in assembly because solidity adds a zero check despite the unchecked.\n            // The q polynomial is known not to have zeros in the domain.\n            // No scaling required because p is already 2**96 too large.\n            r := sdiv(p, q)\n        }\n\n        // r is in the range (0, 0.125) * 2**96\n\n        // Finalization, we need to:\n        // * multiply by the scale factor s = 5.549…\n        // * add ln(2**96 / 10**18)\n        // * add k * ln(2)\n        // * multiply by 10**18 / 2**96 = 5**18 >> 78\n\n        // mul s * 5e18 * 2**96, base is now 5**18 * 2**192\n        r *= 1677202110996718588342820967067443963516166;\n        // add ln(2) * k * 5e18 * 2**192\n        r += 16597577552685614221487285958193947469193820559219878177908093499208371 * k;\n        // add ln(2**96 / 10**18) * 5e18 * 2**192\n        r += 600920179829731861736702779321621459595472258049074101567377883020018308;\n        // base conversion: mul 2**18 / 2**192\n        r >>= 174;\n    }\n}\n\n/// @dev Will return 0 instead of reverting if y is zero.\nfunction unsafeDiv(int256 x, int256 y) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Divide x by y.\n        r := sdiv(x, y)\n    }\n}\n"
			},
			"packages/revolution-contracts/interfaces/ITokenEmitter.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.22;\n\ninterface ITokenEmitter {\n    function buyToken(address[] memory _addresses, uint[] memory _percentages, uint256 numChunks) external payable returns (uint256);\n\n    function _getTokenAmountForSinglePurchase(uint256 payment, uint256 supply) external view returns (uint256);\n\n    function getTokenAmountForMultiPurchase(uint256 payment) external view returns (uint256);\n\n    // solhint-disable-next-line func-name-mixedcase\n    function UNSAFE_getOverestimateTokenAmount(uint256 payment, uint256 supply) external view returns (uint256);\n\n    function getTokenPrice(uint256 currentTotalSupply) external view returns (uint256);\n\n    function totalSupply() external view returns (uint);\n\n    function balanceOf(address _owner) external view returns (uint);\n}\n"
			},
			"packages/revolution-contracts/interfaces/IWETH.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.22;\n\ninterface IWETH {\n    function deposit() external payable;\n\n    function withdraw(uint256 wad) external;\n\n    function transfer(address to, uint256 value) external returns (bool);\n}\n"
			},
			"packages/revolution-contracts/interfaces/IVerbsToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n/// @title Interface for VerbsToken\n\n/*********************************\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░██░░░████░░██░░░████░░░ *\n * ░░██████░░░████████░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n *********************************/\n\npragma solidity ^0.8.22;\n\nimport { IERC721 } from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport { IVerbsDescriptorMinimal } from \"./IVerbsDescriptorMinimal.sol\";\nimport { ICultureIndex } from \"./ICultureIndex.sol\";\n\ninterface IVerbsToken is IERC721 {\n    event VerbCreated(uint256 indexed tokenId, ICultureIndex.ArtPiece artPiece);\n\n    event VerbBurned(uint256 indexed tokenId);\n\n    event MinterUpdated(address minter);\n\n    event MinterLocked();\n\n    event DescriptorUpdated(IVerbsDescriptorMinimal descriptor);\n\n    event DescriptorLocked();\n\n    event CultureIndexUpdated(ICultureIndex cultureIndex);\n\n    event CultureIndexLocked();\n\n    function mint() external returns (uint256);\n\n    function burn(uint256 tokenId) external;\n\n    function dataURI(uint256 tokenId) external returns (string memory);\n\n    function setMinter(address minter) external;\n\n    function lockMinter() external;\n\n    function setDescriptor(IVerbsDescriptorMinimal descriptor) external;\n\n    function lockDescriptor() external;\n\n    function lockCultureIndex() external;\n\n    function getArtPieceById(uint256 tokenId) external view returns (ICultureIndex.ArtPiece memory);\n}\n"
			},
			"packages/revolution-contracts/interfaces/IVerbsAuctionHouse.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n/// @title Interface for Verb Auction Houses\n\n/*********************************\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░██░░░████░░██░░░████░░░ *\n * ░░██████░░░████████░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n *********************************/\n\npragma solidity ^0.8.22;\n\ninterface IVerbsAuctionHouse {\n    struct Auction {\n        // ID for the Verb (ERC721 token ID)\n        uint256 verbId;\n        // The current highest bid amount\n        uint256 amount;\n        // The time that the auction started\n        uint256 startTime;\n        // The time that the auction is scheduled to end\n        uint256 endTime;\n        // The address of the current highest bid\n        address payable bidder;\n        // Whether or not the auction has been settled\n        bool settled;\n    }\n\n    event AuctionCreated(uint256 indexed verbId, uint256 startTime, uint256 endTime);\n\n    event AuctionBid(uint256 indexed verbId, address sender, uint256 value, bool extended);\n\n    event AuctionExtended(uint256 indexed verbId, uint256 endTime);\n\n    event AuctionSettled(uint256 indexed verbId, address winner, uint256 amount);\n\n    event AuctionTimeBufferUpdated(uint256 timeBuffer);\n\n    event AuctionReservePriceUpdated(uint256 reservePrice);\n\n    event AuctionMinBidIncrementPercentageUpdated(uint256 minBidIncrementPercentage);\n\n    function settleAuction() external;\n\n    function settleCurrentAndCreateNewAuction() external;\n\n    function createBid(uint256 verbId) external payable;\n\n    function pause() external;\n\n    function unpause() external;\n\n    function setTimeBuffer(uint256 timeBuffer) external;\n\n    function setReservePrice(uint256 reservePrice) external;\n\n    function setMinBidIncrementPercentage(uint8 minBidIncrementPercentage) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n/// @title Common interface for VerbsDescriptor versions, as used by VerbsToken\n\n/*********************************\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░██░░░████░░██░░░████░░░ *\n * ░░██████░░░████████░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░██░░██░░░████░░██░░░████░░░ *\n * ░░░░░░█████████░░█████████░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n * ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ *\n *********************************/\n\npragma solidity ^0.8.22;\n\nimport { ICultureIndex } from \"./ICultureIndex.sol\";\n\ninterface IVerbsDescriptorMinimal {\n    ///\n    /// USED BY TOKEN\n    ///\n\n    function tokenURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) external view returns (string memory);\n\n    function dataURI(uint256 tokenId, ICultureIndex.ArtPieceMetadata memory metadata) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"packages/revolution-contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.22;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/VerbsAuctionHouse.sol": {
				"VerbsAuctionHouse": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "extended",
									"type": "bool"
								}
							],
							"name": "AuctionBid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "AuctionCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "AuctionExtended",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "minBidIncrementPercentage",
									"type": "uint256"
								}
							],
							"name": "AuctionMinBidIncrementPercentageUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reservePrice",
									"type": "uint256"
								}
							],
							"name": "AuctionReservePriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AuctionSettled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timeBuffer",
									"type": "uint256"
								}
							],
							"name": "AuctionTimeBufferUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "auction",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "bidder",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "settled",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								}
							],
							"name": "createBid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorRateBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "entropyRateBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IVerbsToken",
									"name": "_verbs",
									"type": "address"
								},
								{
									"internalType": "contract ITokenEmitter",
									"name": "_tokenEmitter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_founder",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_timeBuffer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_reservePrice",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "_minBidIncrementPercentage",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_creatorRateBps",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_entropyRateBps",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minBidIncrementPercentage",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reservePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_minBidIncrementPercentage",
									"type": "uint8"
								}
							],
							"name": "setMinBidIncrementPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_reservePrice",
									"type": "uint256"
								}
							],
							"name": "setReservePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_timeBuffer",
									"type": "uint256"
								}
							],
							"name": "setTimeBuffer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "settleAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "settleCurrentAndCreateNewAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeBuffer",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenEmitter",
							"outputs": [
								{
									"internalType": "contract ITokenEmitter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verbs",
							"outputs": [
								{
									"internalType": "contract IVerbsToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weth",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"createBid(uint256)": {
								"details": "This contract only accepts payment in ETH."
							},
							"initialize(address,address,address,address,uint256,uint256,uint8,uint256,uint256,uint256)": {
								"details": "This function can only be called once."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "This function can only be called by the owner when the contract is unpaused. While no new auctions can be started when paused, anyone can settle an ongoing auction."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setMinBidIncrementPercentage(uint8)": {
								"details": "Only callable by the owner."
							},
							"setReservePrice(uint256)": {
								"details": "Only callable by the owner."
							},
							"setTimeBuffer(uint256)": {
								"details": "Only callable by the owner."
							},
							"settleAuction()": {
								"details": "This function can only be called when the contract is paused."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "This function can only be called by the owner when the contract is paused. If required, this function will start a new auction."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2166:12132  contract VerbsAuctionHouse is IVerbsAuctionHouse, PausableUpgradeable, ReentrancyGuardUpgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2166:12132  contract VerbsAuctionHouse is IVerbsAuctionHouse, PausableUpgradeable, ReentrancyGuardUpgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7d9f6db5\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xce9c7c0d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xce9c7c0d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdb2e1eed\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xec91f2a4\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf25efffc\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfe95233b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x7d9f6db5\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa4d0a17e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa910d318\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb296024d\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3fc8cef3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x659dd2b4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7120334b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x0284464a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0802be0a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36ebdb38\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3d64baf1\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2329:2353  IVerbsToken public verbs */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      sload(0x00)\n      tag_29\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_29:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":198:230   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":180:231   */\n      dup2\n      mstore\n        /* \"#utility.yul\":168:170   */\n      0x20\n        /* \"#utility.yul\":153:171   */\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2329:2353  IVerbsToken public verbs */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2925:2954  uint256 public creatorRateBps */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      sload(0x06)\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":388:413   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":376:378   */\n      0x20\n        /* \"#utility.yul\":361:379   */\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2925:2954  uint256 public creatorRateBps */\n      tag_31\n        /* \"#utility.yul\":242:419   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3143:3166  uint256 public duration */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_34\n      sload(0x08)\n      dup2\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7600:7854  function setMinBidIncrementPercentage(uint8 _minBidIncrementPercentage) external override onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2394:2427  ITokenEmitter public tokenEmitter */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sload(0x01)\n      tag_29\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6743:6915  function unpause() external override onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_43\n      tag_54\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2474:2493  address public weth */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      sload(0x02)\n      tag_29\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":1375:1389   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1368:1390   */\n      iszero\n        /* \"#utility.yul\":1350:1391   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1338:1340   */\n      0x20\n        /* \"#utility.yul\":1323:1341   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      tag_31\n        /* \"#utility.yul\":1210:1397   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4886:6197  function createBid(uint256 verbId) external payable override nonReentrant {... */\n    tag_10:\n      tag_43\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7021:7187  function setTimeBuffer(uint256 _timeBuffer) external override onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_43\n      tag_71\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_43\n      tag_75\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3199:3240  IVerbsAuctionHouse.Auction public auction */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      sload(0x09)\n      sload(0x0a)\n      sload(0x0b)\n      sload(0x0c)\n      sload(0x0d)\n      tag_77\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup7\n      jump\n    tag_77:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1884:1909   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":1940:1942   */\n      0x20\n        /* \"#utility.yul\":1925:1943   */\n      dup8\n      add\n        /* \"#utility.yul\":1918:1952   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":1968:1986   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":1961:1995   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2026:2028   */\n      0x60\n        /* \"#utility.yul\":2011:2029   */\n      dup5\n      add\n        /* \"#utility.yul\":2004:2038   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2075:2107   */\n      and\n        /* \"#utility.yul\":2069:2072   */\n      0x80\n        /* \"#utility.yul\":2054:2073   */\n      dup4\n      add\n        /* \"#utility.yul\":2047:2108   */\n      mstore\n        /* \"#utility.yul\":2152:2166   */\n      iszero\n        /* \"#utility.yul\":2145:2167   */\n      iszero\n        /* \"#utility.yul\":2095:2098   */\n      0xa0\n        /* \"#utility.yul\":2124:2143   */\n      dup3\n      add\n        /* \"#utility.yul\":2117:2168   */\n      mstore\n        /* \"#utility.yul\":1871:1874   */\n      0xc0\n        /* \"#utility.yul\":1856:1875   */\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3199:3240  IVerbsAuctionHouse.Auction public auction */\n      tag_31\n        /* \"#utility.yul\":1587:2174   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6456:6526  function pause() external override onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_43\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_29\n      tag_86\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4648:4748  function settleAuction() external override whenPaused nonReentrant {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_43\n      tag_90\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3440:4252  function initialize(... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_43\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2783:2821  uint8 public minBidIncrementPercentage */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      sload(0x05)\n      tag_97\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_97:\n      mload(0x40)\n        /* \"#utility.yul\":3686:3690   */\n      0xff\n        /* \"#utility.yul\":3674:3691   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3656:3692   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3644:3646   */\n      0x20\n        /* \"#utility.yul\":3629:3647   */\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2783:2821  uint8 public minBidIncrementPercentage */\n      tag_31\n        /* \"#utility.yul\":3514:3698   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7295:7473  function setReservePrice(uint256 _reservePrice) external override onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_43\n      tag_103\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2660:2687  uint256 public reservePrice */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_34\n      sload(0x04)\n      dup2\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":2580:2605  uint256 public timeBuffer */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_34\n      sload(0x03)\n      dup2\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4361:4509  function settleCurrentAndCreateNewAuction() external override nonReentrant whenNotPaused {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_43\n      tag_115\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_43\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3067:3096  uint256 public entropyRateBps */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_34\n      sload(0x07)\n      dup2\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7600:7854  function setMinBidIncrementPercentage(uint8 _minBidIncrementPercentage) external override onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7710:7735  minBidIncrementPercentage */\n      0x05\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7710:7764  minBidIncrementPercentage = _minBidIncrementPercentage */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7780:7847  AuctionMinBidIncrementPercentageUpdated(_minBidIncrementPercentage) */\n      mload(0x40)\n        /* \"#utility.yul\":3656:3692   */\n      swap1\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7780:7847  AuctionMinBidIncrementPercentageUpdated(_minBidIncrementPercentage) */\n      0xec5ccd96cc77b6219e9d44143df916af68fc169339ea7de5008ff15eae13450d\n      swap1\n        /* \"#utility.yul\":3644:3646   */\n      0x20\n        /* \"#utility.yul\":3629:3647   */\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7780:7847  AuctionMinBidIncrementPercentageUpdated(_minBidIncrementPercentage) */\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7600:7854  function setMinBidIncrementPercentage(uint8 _minBidIncrementPercentage) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6743:6915  function unpause() external override onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6800:6810  _unpause() */\n      tag_134\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6800:6808  _unpause */\n      tag_135\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6800:6810  _unpause() */\n      jump\t// in\n    tag_134:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6825:6842  auction.startTime */\n      sload(0x0b)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6825:6847  auction.startTime == 0 */\n      iszero\n      dup1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6825:6866  auction.startTime == 0 || auction.settled */\n      tag_136\n      jumpi\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6851:6866  auction.settled */\n      sload(0x0d)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6825:6866  auction.startTime == 0 || auction.settled */\n    tag_136:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6821:6909  if (auction.startTime == 0 || auction.settled) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6882:6898  _createAuction() */\n      tag_138\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6882:6896  _createAuction */\n      tag_139\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6882:6898  _createAuction() */\n      jump\t// in\n    tag_138:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6743:6915  function unpause() external override onlyOwner {... */\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4886:6197  function createBid(uint256 verbId) external payable override nonReentrant {... */\n    tag_68:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3251:3272  _nonReentrantBefore() */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3251:3270  _nonReentrantBefore */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3251:3272  _nonReentrantBefore() */\n      jump\t// in\n    tag_144:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4970:5022  IVerbsAuctionHouse.Auction memory _auction = auction */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5015:5022  auction */\n      0x09\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4970:5022  IVerbsAuctionHouse.Auction memory _auction = auction */\n      sload\n      dup1\n      dup3\n      mstore\n      sload(0x0a)\n      0x20\n      dup4\n      add\n      mstore\n      sload(0x0b)\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      sload(0x0c)\n      0x60\n      dup3\n      add\n      mstore\n      sload(0x0d)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      0x80\n      dup4\n      add\n      mstore\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup3\n      add\n      mstore\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5041:5066  _auction.verbId == verbId */\n      dup3\n      eq\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5033:5094  require(_auction.verbId == verbId, \"Verb not up for auction\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4361:4363   */\n      0x20\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5033:5094  require(_auction.verbId == verbId, \"Verb not up for auction\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4343:4364   */\n      mstore\n        /* \"#utility.yul\":4400:4402   */\n      0x17\n        /* \"#utility.yul\":4380:4398   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4373:4403   */\n      mstore\n        /* \"#utility.yul\":4439:4464   */\n      0x56657262206e6f7420757020666f722061756374696f6e000000000000000000\n        /* \"#utility.yul\":4419:4437   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4412:4465   */\n      mstore\n        /* \"#utility.yul\":4482:4500   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5033:5094  require(_auction.verbId == verbId, \"Verb not up for auction\") */\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5130:5138  _auction */\n      dup1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5130:5146  _auction.endTime */\n      0x60\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5112:5127  block.timestamp */\n      timestamp\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5112:5146  block.timestamp < _auction.endTime */\n      lt\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5104:5166  require(block.timestamp < _auction.endTime, \"Auction expired\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4713:4715   */\n      0x20\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5104:5166  require(block.timestamp < _auction.endTime, \"Auction expired\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4695:4716   */\n      mstore\n        /* \"#utility.yul\":4752:4754   */\n      0x0f\n        /* \"#utility.yul\":4732:4750   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4725:4755   */\n      mstore\n      shl(0x8a, 0x105d58dd1a5bdb88195e1c1a5c9959)\n        /* \"#utility.yul\":4771:4789   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4764:4809   */\n      mstore\n        /* \"#utility.yul\":4826:4844   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5104:5166  require(block.timestamp < _auction.endTime, \"Auction expired\") */\n      tag_148\n        /* \"#utility.yul\":4511:4850   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5104:5166  require(block.timestamp < _auction.endTime, \"Auction expired\") */\n    tag_150:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5197:5209  reservePrice */\n      sload(0x04)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5184:5193  msg.value */\n      callvalue\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5184:5209  msg.value >= reservePrice */\n      lt\n      iszero\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5176:5245  require(msg.value >= reservePrice, \"Must send at least reservePrice\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5057:5059   */\n      0x20\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5176:5245  require(msg.value >= reservePrice, \"Must send at least reservePrice\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5039:5060   */\n      mstore\n        /* \"#utility.yul\":5096:5098   */\n      0x1f\n        /* \"#utility.yul\":5076:5094   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5069:5099   */\n      mstore\n        /* \"#utility.yul\":5135:5168   */\n      0x4d7573742073656e64206174206c656173742072657365727665507269636500\n        /* \"#utility.yul\":5115:5133   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5108:5169   */\n      mstore\n        /* \"#utility.yul\":5186:5204   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5176:5245  require(msg.value >= reservePrice, \"Must send at least reservePrice\") */\n      tag_148\n        /* \"#utility.yul\":4855:5210   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5176:5245  require(msg.value >= reservePrice, \"Must send at least reservePrice\") */\n    tag_153:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5314:5339  minBidIncrementPercentage */\n      sload(0x05)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5296:5311  _auction.amount */\n      0x20\n      dup3\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5343:5346  100 */\n      0x64\n      swap2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5296:5339  _auction.amount * minBidIncrementPercentage */\n      tag_156\n      swap2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5314:5339  minBidIncrementPercentage */\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5296:5339  _auction.amount * minBidIncrementPercentage */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5295:5346  (_auction.amount * minBidIncrementPercentage) / 100 */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5276:5284  _auction */\n      dup2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5276:5291  _auction.amount */\n      0x20\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5276:5347  _auction.amount + ((_auction.amount * minBidIncrementPercentage) / 100) */\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5263:5272  msg.value */\n      callvalue\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5263:5347  msg.value >= _auction.amount + ((_auction.amount * minBidIncrementPercentage) / 100) */\n      lt\n      iszero\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5255:5416  require(msg.value >= _auction.amount + ((_auction.amount * minBidIncrementPercentage) / 100), \"Must send more than last bid by minBidIncrementPercentage amount\") */\n      tag_162\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6074:6076   */\n      0x20\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5255:5416  require(msg.value >= _auction.amount + ((_auction.amount * minBidIncrementPercentage) / 100), \"Must send more than last bid by minBidIncrementPercentage amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6056:6077   */\n      mstore\n        /* \"#utility.yul\":6093:6111   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6086:6116   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6152:6186   */\n      0x4d7573742073656e64206d6f7265207468616e206c6173742062696420627920\n        /* \"#utility.yul\":6132:6150   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6125:6187   */\n      mstore\n        /* \"#utility.yul\":6223:6257   */\n      0x6d696e426964496e6372656d656e7450657263656e7461676520616d6f756e74\n        /* \"#utility.yul\":6203:6221   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6196:6258   */\n      mstore\n        /* \"#utility.yul\":6275:6294   */\n      0x84\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5255:5416  require(msg.value >= _auction.amount + ((_auction.amount * minBidIncrementPercentage) / 100), \"Must send more than last bid by minBidIncrementPercentage amount\") */\n      tag_148\n        /* \"#utility.yul\":5872:6300   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5255:5416  require(msg.value >= _auction.amount + ((_auction.amount * minBidIncrementPercentage) / 100), \"Must send more than last bid by minBidIncrementPercentage amount\") */\n    tag_162:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5456:5471  _auction.bidder */\n      0x80\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5535:5559  lastBidder != address(0) */\n      dup2\n      and\n      iszero\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5531:5643  if (lastBidder != address(0)) {... */\n      tag_166\n      jumpi\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5575:5632  _safeTransferETHWithFallback(lastBidder, _auction.amount) */\n      tag_166\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5604:5614  lastBidder */\n      dup2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5616:5624  _auction */\n      dup4\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5616:5631  _auction.amount */\n      0x20\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5575:5603  _safeTransferETHWithFallback */\n      tag_167\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5575:5632  _safeTransferETHWithFallback(lastBidder, _auction.amount) */\n      jump\t// in\n    tag_166:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5670:5679  msg.value */\n      callvalue\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5653:5667  auction.amount */\n      0x0a\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5653:5679  auction.amount = msg.value */\n      sstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5689:5703  auction.bidder */\n      0x0d\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5689:5725  auction.bidder = payable(msg.sender) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5714:5724  msg.sender */\n      caller\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5689:5725  auction.bidder = payable(msg.sender) */\n      or\n      swap1\n      sstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5887:5897  timeBuffer */\n      sload(0x03)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5850:5866  _auction.endTime */\n      0x60\n      dup4\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5689:5703  auction.bidder */\n      0x00\n      swap2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5887:5897  timeBuffer */\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5850:5884  _auction.endTime - block.timestamp */\n      tag_168\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5869:5884  block.timestamp */\n      timestamp\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5850:5884  _auction.endTime - block.timestamp */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5850:5897  _auction.endTime - block.timestamp < timeBuffer */\n      lt\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5834:5897  bool extended = _auction.endTime - block.timestamp < timeBuffer */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5911:5919  extended */\n      dup1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5907:6011  if (extended) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5990:6000  timeBuffer */\n      sload(0x03)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5972:6000  block.timestamp + timeBuffer */\n      tag_171\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5972:5987  block.timestamp */\n      timestamp\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5972:6000  block.timestamp + timeBuffer */\n      tag_161\n      jump\t// in\n    tag_171:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5953:5969  _auction.endTime */\n      0x60\n      dup5\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5953:6000  _auction.endTime = block.timestamp + timeBuffer */\n      dup2\n      swap1\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5935:5950  auction.endTime */\n      0x0c\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5935:6000  auction.endTime = _auction.endTime = block.timestamp + timeBuffer */\n      sstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":5907:6011  if (extended) {... */\n    tag_170:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6037:6052  _auction.verbId */\n      dup3\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6026:6086  AuctionBid(_auction.verbId, msg.sender, msg.value, extended) */\n      0x40\n      dup1\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6054:6064  msg.sender */\n      caller\n        /* \"#utility.yul\":6634:6685   */\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6066:6075  msg.value */\n      callvalue\n        /* \"#utility.yul\":6716:6718   */\n      0x20\n        /* \"#utility.yul\":6701:6719   */\n      dup3\n      add\n        /* \"#utility.yul\":6694:6728   */\n      mstore\n        /* \"#utility.yul\":6771:6785   */\n      dup4\n      iszero\n        /* \"#utility.yul\":6764:6786   */\n      iszero\n        /* \"#utility.yul\":6744:6762   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":6737:6787   */\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6026:6086  AuctionBid(_auction.verbId, msg.sender, msg.value, extended) */\n      swap1\n      mload\n      0x1159164c56f277e6fc99c11731bd380e0347deb969b75523398734c252706ea3\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":6622:6624   */\n      0x60\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6026:6086  AuctionBid(_auction.verbId, msg.sender, msg.value, extended) */\n      add\n      swap1\n      log2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6101:6109  extended */\n      dup1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6097:6191  if (extended) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6146:6161  _auction.verbId */\n      dup3\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6163:6179  _auction.endTime */\n      0x60\n      dup5\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6130:6180  AuctionExtended(_auction.verbId, _auction.endTime) */\n      mload(0x40)\n        /* \"#utility.yul\":388:413   */\n      swap1\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6130:6180  AuctionExtended(_auction.verbId, _auction.endTime) */\n      0x6e912a3a9105bdd2af817ba5adc14e6c127c1035b5b648faa29ca0d58ab8ff4e\n      swap1\n        /* \"#utility.yul\":376:378   */\n      0x20\n        /* \"#utility.yul\":361:379   */\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6130:6180  AuctionExtended(_auction.verbId, _auction.endTime) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6097:6191  if (extended) {... */\n    tag_174:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4960:6197  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3293:3313  _nonReentrantAfter() */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1805:1806  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3969:3992  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3716:3999  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3293:3313  _nonReentrantAfter() */\n    tag_176:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4886:6197  function createBid(uint256 verbId) external payable override nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7021:7187  function setTimeBuffer(uint256 _timeBuffer) external override onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7103:7113  timeBuffer */\n      0x03\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7103:7127  timeBuffer = _timeBuffer */\n      dup2\n      swap1\n      sstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7143:7180  AuctionTimeBufferUpdated(_timeBuffer) */\n      mload(0x40)\n        /* \"#utility.yul\":388:413   */\n      dup2\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7143:7180  AuctionTimeBufferUpdated(_timeBuffer) */\n      0x1b55d9f7002bda4490f467e326f22a4a847629c0f2d1ed421607d318d25b410d\n      swap1\n        /* \"#utility.yul\":376:378   */\n      0x20\n        /* \"#utility.yul\":361:379   */\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7143:7180  AuctionTimeBufferUpdated(_timeBuffer) */\n      tag_129\n        /* \"#utility.yul\":242:419   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6456:6526  function pause() external override onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_188:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6511:6519  _pause() */\n      tag_138\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6511:6517  _pause */\n      tag_191\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":6511:6519  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4648:4748  function settleAuction() external override whenPaused nonReentrant {... */\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3251:3272  _nonReentrantBefore() */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3251:3270  _nonReentrantBefore */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3251:3272  _nonReentrantBefore() */\n      jump\t// in\n    tag_199:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4725:4741  _settleAuction() */\n      tag_201\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4725:4739  _settleAuction */\n      tag_202\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4725:4741  _settleAuction() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3293:3313  _nonReentrantAfter() */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1805:1806  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3969:3992  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3716:3999  function _nonReentrantAfter() private {... */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3440:4252  function initialize(... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_207\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_208\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_209\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_211:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3806:3823  __Pausable_init() */\n      tag_213\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3806:3821  __Pausable_init */\n      tag_214\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3806:3823  __Pausable_init() */\n      jump\t// in\n    tag_213:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3833:3857  __ReentrancyGuard_init() */\n      tag_215\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3833:3855  __ReentrancyGuard_init */\n      tag_216\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3833:3857  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_215:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3867:3891  __Ownable_init(_founder) */\n      tag_217\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3882:3890  _founder */\n      dup13\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3867:3881  __Ownable_init */\n      tag_218\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3867:3891  __Ownable_init(_founder) */\n      jump\t// in\n    tag_217:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3902:3910  _pause() */\n      tag_219\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3902:3908  _pause */\n      tag_191\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3902:3910  _pause() */\n      jump\t// in\n    tag_219:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3929:3935  _verbs */\n      dup15\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3921:3926  verbs */\n      0x00\n      dup1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3921:3935  verbs = _verbs */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3960:3973  _tokenEmitter */\n      dup14\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3945:3957  tokenEmitter */\n      0x01\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3945:3973  tokenEmitter = _tokenEmitter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3990:3995  _weth */\n      dup13\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3983:3987  weth */\n      0x02\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3983:3995  weth = _weth */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4018:4029  _timeBuffer */\n      dup11\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4005:4015  timeBuffer */\n      0x03\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4005:4029  timeBuffer = _timeBuffer */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4054:4067  _reservePrice */\n      dup10\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4039:4051  reservePrice */\n      0x04\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4039:4067  reservePrice = _reservePrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4105:4131  _minBidIncrementPercentage */\n      dup9\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4077:4102  minBidIncrementPercentage */\n      0x05\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4077:4131  minBidIncrementPercentage = _minBidIncrementPercentage */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4152:4161  _duration */\n      dup8\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4141:4149  duration */\n      0x08\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4141:4161  duration = _duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4188:4203  _creatorRateBps */\n      dup7\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4171:4185  creatorRateBps */\n      0x06\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4171:4203  creatorRateBps = _creatorRateBps */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4230:4245  _entropyRateBps */\n      dup6\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4213:4227  entropyRateBps */\n      0x07\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4213:4245  entropyRateBps = _entropyRateBps */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":6951:7001   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":6939:6941   */\n      0x20\n        /* \"#utility.yul\":6924:6942   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":3440:4252  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7295:7473  function setReservePrice(uint256 _reservePrice) external override onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_224:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7381:7393  reservePrice */\n      0x04\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7381:7409  reservePrice = _reservePrice */\n      dup2\n      swap1\n      sstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7425:7466  AuctionReservePriceUpdated(_reservePrice) */\n      mload(0x40)\n        /* \"#utility.yul\":388:413   */\n      dup2\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7425:7466  AuctionReservePriceUpdated(_reservePrice) */\n      0x6ab2e127d7fdf53b8f304e59d3aab5bfe97979f52a85479691a6fab27a28a6b2\n      swap1\n        /* \"#utility.yul\":376:378   */\n      0x20\n        /* \"#utility.yul\":361:379   */\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":7425:7466  AuctionReservePriceUpdated(_reservePrice) */\n      tag_129\n        /* \"#utility.yul\":242:419   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4361:4509  function settleCurrentAndCreateNewAuction() external override nonReentrant whenNotPaused {... */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3251:3272  _nonReentrantBefore() */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3251:3270  _nonReentrantBefore */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3251:3272  _nonReentrantBefore() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_230:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4460:4476  _settleAuction() */\n      tag_233\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4460:4474  _settleAuction */\n      tag_202\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4460:4476  _settleAuction() */\n      jump\t// in\n    tag_233:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4486:4502  _createAuction() */\n      tag_201\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4486:4500  _createAuction */\n      tag_139\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":4486:4502  _createAuction() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":180:231   */\n      mstore\n        /* \"#utility.yul\":153:171   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_148\n        /* \"#utility.yul\":14:237   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":180:231   */\n      mstore\n        /* \"#utility.yul\":153:171   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_148\n        /* \"#utility.yul\":14:237   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_250:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":198:230   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":180:231   */\n      dup2\n      mstore\n        /* \"#utility.yul\":168:170   */\n      0x20\n        /* \"#utility.yul\":153:171   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      tag_129\n        /* \"#utility.yul\":14:237   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8167:8634  function _createAuction() internal {... */\n    tag_139:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8216:8221  verbs */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8216:8226  verbs.mint */\n      and\n      0x1249c58b\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8216:8228  verbs.mint() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_256\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_257\n      swap2\n      dup2\n      add\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      0x01\n    tag_256:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8212:8628  try verbs.mint() returns (uint256 verbId) {... */\n      tag_259\n      jumpi\n      tag_263\n      tag_264\n      jump\t// in\n    tag_263:\n      dup1\n      0x08c379a0\n      sub\n      tag_262\n      jumpi\n      pop\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n      dup1\n      tag_267\n      jumpi\n      pop\n      jump(tag_261)\n    tag_267:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8609:8617  _pause() */\n      tag_176\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8609:8615  _pause */\n      tag_191\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8609:8617  _pause() */\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8212:8628  try verbs.mint() returns (uint256 verbId) {... */\n    tag_262:\n      pop\n    tag_261:\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_259:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8347:8355  duration */\n      sload(0x08)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8288:8303  block.timestamp */\n      timestamp\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8268:8285  uint256 startTime */\n      0x00\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8335:8355  startTime + duration */\n      tag_270\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8288:8303  block.timestamp */\n      dup4\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8335:8355  startTime + duration */\n      tag_161\n      jump\t// in\n    tag_270:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8380:8494  Auction({ verbId: verbId, amount: 0, startTime: startTime, endTime: endTime, bidder: payable(0), settled: false }) */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      dup6\n      dup2\n      mstore\n      0x00\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      dup3\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      0x60\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n      0x80\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      0xa0\n      swap1\n      swap3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8370:8377  auction */\n      0x09\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8370:8494  auction = Auction({ verbId: verbId, amount: 0, startTime: startTime, endTime: endTime, bidder: payable(0), settled: false }) */\n      dup8\n      swap1\n      sstore\n      0x0a\n      sstore\n      0x0b\n      dup6\n      swap1\n      sstore\n      0x0c\n      dup4\n      swap1\n      sstore\n      0x0d\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8514:8556  AuctionCreated(verbId, startTime, endTime) */\n      dup2\n      mload\n        /* \"#utility.yul\":9079:9104   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":9120:9138   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":9113:9147   */\n      dup4\n      swap1\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8380:8494  Auction({ verbId: verbId, amount: 0, startTime: startTime, endTime: endTime, bidder: payable(0), settled: false }) */\n      swap2\n      swap3\n      pop\n      dup5\n      swap2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8514:8556  AuctionCreated(verbId, startTime, endTime) */\n      0xd6eddd1118d71820909c1197aa966dbc15ed6f508554252169cc3d5ccac756ca\n      swap2\n        /* \"#utility.yul\":9052:9070   */\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8514:8556  AuctionCreated(verbId, startTime, endTime) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8254:8567  {... */\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8229:8567  returns (uint256 verbId) {... */\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8167:8634  function _createAuction() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3326:3710  function _nonReentrantBefore() private {... */\n    tag_145:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3526:3535  $._status */\n      dup1\n      sload\n      not(0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3526:3546  $._status == ENTERED */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3522:3610  if ($._status == ENTERED) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3569:3599  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3522:3610  if ($._status == ENTERED) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1847:1848  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3684:3703  $._status = ENTERED */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3326:3710  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11560:11796  function _safeTransferETHWithFallback(address to, uint256 amount) internal {... */\n    tag_167:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11650:11678  _safeTransferETH(to, amount) */\n      tag_279\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11667:11669  to */\n      dup3\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11671:11677  amount */\n      dup3\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11650:11666  _safeTransferETH */\n      tag_280\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11650:11678  _safeTransferETH(to, amount) */\n      jump\t// in\n    tag_279:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11645:11790  if (!_safeTransferETH(to, amount)) {... */\n      tag_281\n      jumpi\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11700:11704  weth */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11694:11713  IWETH(weth).deposit */\n      and\n      0xd0e30db0\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11722:11728  amount */\n      dup3\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11694:11732  IWETH(weth).deposit{ value: amount }() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_282:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_284:\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11753:11757  weth */\n      sload(0x02)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11746:11779  IERC20(weth).transfer(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9350:9382   */\n      dup8\n      dup2\n      and\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11746:11779  IERC20(weth).transfer(to, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9332:9383   */\n      mstore\n        /* \"#utility.yul\":9399:9417   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9392:9426   */\n      dup8\n      swap1\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11753:11757  weth */\n      swap1\n      swap2\n      and\n      swap4\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11746:11767  IERC20(weth).transfer */\n      0xa9059cbb\n      swap3\n      pop\n        /* \"#utility.yul\":9305:9323   */\n      0x44\n      add\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11746:11779  IERC20(weth).transfer(to, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_288:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_289\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11645:11790  if (!_safeTransferETH(to, amount)) {... */\n    tag_281:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11560:11796  function _safeTransferETHWithFallback(address to, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3716:3999  function _nonReentrantAfter() private {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1805:1806  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3969:3992  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3716:3999  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_296\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_296:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      or\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_197:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8792:11444  function _settleAuction() internal {... */\n    tag_202:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8837:8889  IVerbsAuctionHouse.Auction memory _auction = auction */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8882:8889  auction */\n      0x09\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8837:8889  IVerbsAuctionHouse.Auction memory _auction = auction */\n      sload\n      dup2\n      mstore\n      sload(0x0a)\n      0x20\n      dup3\n      add\n      mstore\n      sload(0x0b)\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      sload(0x0c)\n      0x60\n      dup3\n      add\n      mstore\n      sload(0x0d)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      0x80\n      dup4\n      add\n      mstore\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup3\n      add\n      mstore\n      swap1\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8908:8931  _auction.startTime != 0 */\n      sub\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8900:8956  require(_auction.startTime != 0, \"Auction hasn't begun\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10015:10017   */\n      0x20\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8900:8956  require(_auction.startTime != 0, \"Auction hasn't begun\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9997:10018   */\n      mstore\n        /* \"#utility.yul\":10054:10056   */\n      0x14\n        /* \"#utility.yul\":10034:10052   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10027:10057   */\n      mstore\n      shl(0x61, 0x20bab1ba34b7b7103430b9b713ba103132b3bab7)\n        /* \"#utility.yul\":10073:10091   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10066:10116   */\n      mstore\n        /* \"#utility.yul\":10133:10151   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8900:8956  require(_auction.startTime != 0, \"Auction hasn't begun\") */\n      tag_148\n        /* \"#utility.yul\":9813:10157   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8900:8956  require(_auction.startTime != 0, \"Auction hasn't begun\") */\n    tag_306:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8975:8983  _auction */\n      dup1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8975:8991  _auction.settled */\n      0xa0\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8974:8991  !_auction.settled */\n      iszero\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8966:9028  require(!_auction.settled, \"Auction has already been settled\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10364:10366   */\n      0x20\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8966:9028  require(!_auction.settled, \"Auction has already been settled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10346:10367   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10383:10401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10376:10406   */\n      mstore\n        /* \"#utility.yul\":10442:10476   */\n      0x41756374696f6e2068617320616c7265616479206265656e20736574746c6564\n        /* \"#utility.yul\":10422:10440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10415:10477   */\n      mstore\n        /* \"#utility.yul\":10494:10512   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8966:9028  require(!_auction.settled, \"Auction has already been settled\") */\n      tag_148\n        /* \"#utility.yul\":10162:10518   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8966:9028  require(!_auction.settled, \"Auction has already been settled\") */\n    tag_309:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9065:9073  _auction */\n      dup1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9065:9081  _auction.endTime */\n      0x60\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9046:9061  block.timestamp */\n      timestamp\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9046:9081  block.timestamp >= _auction.endTime */\n      lt\n      iszero\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9038:9110  require(block.timestamp >= _auction.endTime, \"Auction hasn't completed\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10725:10727   */\n      0x20\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9038:9110  require(block.timestamp >= _auction.endTime, \"Auction hasn't completed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10707:10728   */\n      mstore\n        /* \"#utility.yul\":10764:10766   */\n      0x18\n        /* \"#utility.yul\":10744:10762   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10737:10767   */\n      mstore\n        /* \"#utility.yul\":10803:10829   */\n      0x41756374696f6e206861736e277420636f6d706c657465640000000000000000\n        /* \"#utility.yul\":10783:10801   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10776:10830   */\n      mstore\n        /* \"#utility.yul\":10847:10865   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9038:9110  require(block.timestamp >= _auction.endTime, \"Auction hasn't completed\") */\n      tag_148\n        /* \"#utility.yul\":10523:10871   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9038:9110  require(block.timestamp >= _auction.endTime, \"Auction hasn't completed\") */\n    tag_312:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9121:9136  auction.settled */\n      0x0d\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9121:9143  auction.settled = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9158:9173  _auction.bidder */\n      0x80\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9158:9187  _auction.bidder == address(0) */\n      and\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9154:9339  if (_auction.bidder == address(0)) {... */\n      tag_315\n      jumpi\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9203:9208  verbs */\n      sload(0x00)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9214:9229  _auction.verbId */\n      dup2\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9203:9230  verbs.burn(_auction.verbId) */\n      mload(0x40)\n      shl(0xe3, 0x0852cd8d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9203:9208  verbs */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9203:9213  verbs.burn */\n      0x42966c68\n      swap2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9203:9230  verbs.burn(_auction.verbId) */\n      tag_316\n      swap2\n      0x04\n      add\n        /* \"#utility.yul\":388:413   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":376:378   */\n      0x20\n        /* \"#utility.yul\":361:379   */\n      add\n      swap1\n        /* \"#utility.yul\":242:419   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9203:9230  verbs.burn(_auction.verbId) */\n    tag_316:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_319\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9154:9339  if (_auction.bidder == address(0)) {... */\n      jump(tag_320)\n    tag_315:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9261:9266  verbs */\n      sload(0x00)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9295:9310  _auction.bidder */\n      0x80\n      dup3\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9312:9327  _auction.verbId */\n      dup3\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9261:9328  verbs.transferFrom(address(this), _auction.bidder, _auction.verbId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9288:9292  this */\n      address\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9261:9328  verbs.transferFrom(address(this), _auction.bidder, _auction.verbId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11124:11158   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11194:11209   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":11174:11192   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11167:11210   */\n      mstore\n        /* \"#utility.yul\":11226:11244   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11219:11253   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9261:9266  verbs */\n      swap2\n      and\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9261:9279  verbs.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11059:11077   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9261:9328  verbs.transferFrom(address(this), _auction.bidder, _auction.verbId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_323\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_323:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_325\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_325:\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9154:9339  if (_auction.bidder == address(0)) {... */\n    tag_320:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9353:9368  _auction.amount */\n      0x20\n      dup2\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9353:9372  _auction.amount > 0 */\n      iszero\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9349:11357  if (_auction.amount > 0) {... */\n      tag_326\n      jumpi\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9439:9464  uint256 auctioneerPayment */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9475:9553  wadDiv(wadMul(int256(_auction.amount), 10000 - int256(creatorRateBps)), 10000) */\n      tag_327\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9482:9545  wadMul(int256(_auction.amount), 10000 - int256(creatorRateBps)) */\n      tag_328\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9496:9504  _auction */\n      dup4\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9496:9511  _auction.amount */\n      0x20\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9529:9543  creatorRateBps */\n      sload(0x06)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9514:9519  10000 */\n      0x2710\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9514:9544  10000 - int256(creatorRateBps) */\n      tag_329\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9482:9488  wadMul */\n      tag_331\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9482:9545  wadMul(int256(_auction.amount), 10000 - int256(creatorRateBps)) */\n      jump\t// in\n    tag_328:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9547:9552  10000 */\n      0x2710\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9475:9481  wadDiv */\n      tag_332\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9475:9553  wadDiv(wadMul(int256(_auction.amount), 10000 - int256(creatorRateBps)), 10000) */\n      jump\t// in\n    tag_327:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9439:9554  uint256 auctioneerPayment = uint256(wadDiv(wadMul(int256(_auction.amount), 10000 - int256(creatorRateBps)), 10000)) */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9622:9644  uint256 creatorPayment */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9665:9682  auctioneerPayment */\n      dup2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9647:9655  _auction */\n      dup4\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9647:9662  _auction.amount */\n      0x20\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9647:9682  _auction.amount - auctioneerPayment */\n      tag_333\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_333:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9622:9682  uint256 creatorPayment = _auction.amount - auctioneerPayment */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9754:9782  uint256 creatorDirectPayment */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9793:9862  wadDiv(wadMul(int256(creatorPayment), int256(entropyRateBps)), 10000) */\n      tag_334\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9800:9854  wadMul(int256(creatorPayment), int256(entropyRateBps)) */\n      tag_328\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9814:9828  creatorPayment */\n      dup4\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9838:9852  entropyRateBps */\n      sload(0x07)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9800:9806  wadMul */\n      tag_331\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9800:9854  wadMul(int256(creatorPayment), int256(entropyRateBps)) */\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9793:9862  wadDiv(wadMul(int256(creatorPayment), int256(entropyRateBps)), 10000) */\n    tag_334:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9754:9863  uint256 creatorDirectPayment = uint256(wadDiv(wadMul(int256(creatorPayment), int256(entropyRateBps)), 10000)) */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9932:9964  uint256 creatorGovernancePayment */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9967:10004  creatorPayment - creatorDirectPayment */\n      tag_336\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9754:9863  uint256 creatorDirectPayment = uint256(wadDiv(wadMul(int256(creatorPayment), int256(entropyRateBps)), 10000)) */\n      dup3\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9967:9981  creatorPayment */\n      dup5\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9967:10004  creatorPayment - creatorDirectPayment */\n      tag_169\n      jump\t// in\n    tag_336:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10019:10038  uint256 numCreators */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10041:10046  verbs */\n      dup1\n      sload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10063:10078  _auction.verbId */\n      dup8\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10041:10079  verbs.getArtPieceById(_auction.verbId) */\n      mload(0x40)\n      shl(0xe1, 0x24d19ab1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":388:413   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9932:10004  uint256 creatorGovernancePayment = creatorPayment - creatorDirectPayment */\n      swap3\n      swap4\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10019:10038  uint256 numCreators */\n      swap1\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10041:10046  verbs */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10041:10062  verbs.getArtPieceById */\n      0x49a33562\n      swap1\n        /* \"#utility.yul\":361:379   */\n      0x24\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10041:10079  verbs.getArtPieceById(_auction.verbId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_339\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_339:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_340\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10041:10088  verbs.getArtPieceById(_auction.verbId).creators */\n      0x40\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10041:10095  verbs.getArtPieceById(_auction.verbId).creators.length */\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10019:10095  uint256 numCreators = verbs.getArtPieceById(_auction.verbId).creators.length */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10163:10194  address[] memory vrgdaReceivers */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10211:10222  numCreators */\n      dup2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10197:10223  new address[](numCreators) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_343\n      jumpi\n      tag_343\n      tag_344\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_345\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_345:\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10163:10223  address[] memory vrgdaReceivers = new address[](numCreators) */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10237:10265  uint256[] memory vrgdaSplits */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10282:10293  numCreators */\n      dup3\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10268:10294  new uint256[](numCreators) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_347\n      jumpi\n      tag_347\n      tag_344\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_348\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_348:\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10237:10294  uint256[] memory vrgdaSplits = new uint256[](numCreators) */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10367:10423  _safeTransferETHWithFallback(owner(), auctioneerPayment) */\n      tag_349\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10396:10403  owner() */\n      tag_350\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10396:10401  owner */\n      tag_86\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10396:10403  owner() */\n      jump\t// in\n    tag_350:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10405:10422  auctioneerPayment */\n      dup9\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10367:10395  _safeTransferETHWithFallback */\n      tag_167\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10367:10423  _safeTransferETHWithFallback(owner(), auctioneerPayment) */\n      jump\t// in\n    tag_349:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10559:10568  uint256 i */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10554:11158  for (uint256 i = 0; i < numCreators; i++) {... */\n    tag_351:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10578:10589  numCreators */\n      dup4\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10574:10575  i */\n      dup2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10574:10589  i < numCreators */\n      lt\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10554:11158  for (uint256 i = 0; i < numCreators; i++) {... */\n      iszero\n      tag_352\n      jumpi\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10614:10653  ICultureIndex.CreatorBps memory creator */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10656:10661  verbs */\n      dup1\n      sload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10678:10693  _auction.verbId */\n      dup11\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10656:10694  verbs.getArtPieceById(_auction.verbId) */\n      mload(0x40)\n      shl(0xe1, 0x24d19ab1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10656:10661  verbs */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10656:10677  verbs.getArtPieceById */\n      0x49a33562\n      swap2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10656:10694  verbs.getArtPieceById(_auction.verbId) */\n      tag_354\n      swap2\n      0x04\n      add\n        /* \"#utility.yul\":388:413   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":376:378   */\n      0x20\n        /* \"#utility.yul\":361:379   */\n      add\n      swap1\n        /* \"#utility.yul\":242:419   */\n      jump\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10656:10694  verbs.getArtPieceById(_auction.verbId) */\n    tag_354:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_356\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_356:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_357\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_341\n      jump\t// in\n    tag_357:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10656:10703  verbs.getArtPieceById(_auction.verbId).creators */\n      0x40\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10704:10705  i */\n      dup3\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10656:10706  verbs.getArtPieceById(_auction.verbId).creators[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_359\n      jumpi\n      tag_359\n      tag_360\n      jump\t// in\n    tag_359:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10614:10706  ICultureIndex.CreatorBps memory creator = verbs.getArtPieceById(_auction.verbId).creators[i] */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10744:10751  creator */\n      dup1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10744:10759  creator.creator */\n      0x00\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10724:10738  vrgdaReceivers */\n      dup5\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10739:10740  i */\n      dup4\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10724:10741  vrgdaReceivers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_362\n      jumpi\n      tag_362\n      tag_360\n      jump\t// in\n    tag_362:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10724:10759  vrgdaReceivers[i] = creator.creator */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10794:10801  creator */\n      dup1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10794:10805  creator.bps */\n      0x20\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10777:10788  vrgdaSplits */\n      dup4\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10789:10790  i */\n      dup4\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10777:10791  vrgdaSplits[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_364\n      jumpi\n      tag_364\n      tag_360\n      jump\t// in\n    tag_364:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10777:10805  vrgdaSplits[i] = creator.bps */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10905:10924  uint256 etherAmount */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10935:11007  wadDiv(wadMul(int256(creatorDirectPayment), int256(creator.bps)), 10000) */\n      tag_365\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10942:10999  wadMul(int256(creatorDirectPayment), int256(creator.bps)) */\n      tag_328\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10956:10976  creatorDirectPayment */\n      dup10\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10986:10993  creator */\n      dup5\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10986:10997  creator.bps */\n      0x20\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10942:10948  wadMul */\n      tag_331\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10942:10999  wadMul(int256(creatorDirectPayment), int256(creator.bps)) */\n      jump\t// in\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10935:11007  wadDiv(wadMul(int256(creatorDirectPayment), int256(creator.bps)), 10000) */\n    tag_365:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10905:11008  uint256 etherAmount = uint256(wadDiv(wadMul(int256(creatorDirectPayment), int256(creator.bps)), 10000)) */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11085:11143  _safeTransferETHWithFallback(creator.creator, etherAmount) */\n      tag_367\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11114:11121  creator */\n      dup3\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11114:11129  creator.creator */\n      0x00\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11131:11142  etherAmount */\n      dup3\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11085:11113  _safeTransferETHWithFallback */\n      tag_167\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11085:11143  _safeTransferETHWithFallback(creator.creator, etherAmount) */\n      jump\t// in\n    tag_367:\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10591:10594  i++ */\n      0x01\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":10554:11158  for (uint256 i = 0; i < numCreators; i++) {... */\n      jump(tag_351)\n    tag_352:\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11235:11247  tokenEmitter */\n      sload(0x01)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11235:11346  tokenEmitter.buyToken{ value: creatorGovernancePayment }(vrgdaReceivers, vrgdaSplits, creatorGovernancePayment) */\n      mload(0x40)\n      shl(0xe0, 0xdec86df1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11235:11247  tokenEmitter */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11235:11256  tokenEmitter.buyToken */\n      0xdec86df1\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11265:11289  creatorGovernancePayment */\n      dup7\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11235:11346  tokenEmitter.buyToken{ value: creatorGovernancePayment }(vrgdaReceivers, vrgdaSplits, creatorGovernancePayment) */\n      tag_368\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11292:11306  vrgdaReceivers */\n      dup7\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11308:11319  vrgdaSplits */\n      dup7\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11265:11289  creatorGovernancePayment */\n      dup5\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11235:11346  tokenEmitter.buyToken{ value: creatorGovernancePayment }(vrgdaReceivers, vrgdaSplits, creatorGovernancePayment) */\n      0x04\n      add\n      tag_369\n      jump\t// in\n    tag_368:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_371\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_371:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_372\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_372:\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9374:11357  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":9349:11357  if (_auction.amount > 0) {... */\n    tag_326:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11387:11402  _auction.verbId */\n      dup1\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11404:11419  _auction.bidder */\n      0x80\n      dup3\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11421:11436  _auction.amount */\n      0x20\n      dup1\n      dup5\n      add\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11372:11437  AuctionSettled(_auction.verbId, _auction.bidder, _auction.amount) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9350:9382   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":9332:9383   */\n      dup5\n      mstore\n        /* \"#utility.yul\":9399:9417   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":9392:9426   */\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11372:11437  AuctionSettled(_auction.verbId, _auction.bidder, _auction.amount) */\n      0xc9f72b276a388619c6d185d146697036241880c36654b1a3ffdad07c24038d99\n      swap2\n        /* \"#utility.yul\":9305:9323   */\n      add\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11372:11437  AuctionSettled(_auction.verbId, _auction.bidder, _auction.amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8827:11444  {... */\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":8792:11444  function _settleAuction() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1924  __Pausable_init_unchained */\n      tag_381\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2540:2651  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2610:2644  __ReentrancyGuard_init_unchained() */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2610:2642  __ReentrancyGuard_init_unchained */\n      tag_386\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2610:2644  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_388\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_391\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_231:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11943:12130  function _safeTransferETH(address to, uint256 value) internal returns (bool) {... */\n    tag_280:\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":12086:12098  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":12014:12018  bool */\n      0x00\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":12086:12098  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":12014:12018  bool */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":12049:12056  to.call */\n      dup6\n      and\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":12077:12083  30_000 */\n      0x7530\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":12065:12070  value */\n      dup6\n      swap1\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":12049:12099  to.call{ value: value, gas: 30_000 }(new bytes(0)) */\n      mload(0x40)\n      tag_401\n      swap2\n      swap1\n      tag_402\n      jump\t// in\n    tag_401:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_405\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_404)\n    tag_405:\n      0x60\n      swap2\n      pop\n    tag_404:\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":12030:12099  (bool success, ) = to.call{ value: value, gas: 30_000 }(new bytes(0)) */\n      swap1\n      swap3\n      pop\n      pop\n      pop\n        /* \"packages/revolution-contracts/VerbsAuctionHouse.sol\":11943:12130  function _safeTransferETH(address to, uint256 value) internal returns (bool) {... */\n    tag_397:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2209:3136  function wadMul(int256 x, int256 y) pure returns (int256 r) {... */\n    tag_331:\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2375:2384  mul(x, y) */\n      dup2\n      dup2\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2880:2889  iszero(x) */\n      dup3\n      iszero\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2894:2904  sdiv(r, x) */\n      dup4\n      dup3\n      sdiv\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2891:2908  eq(sdiv(r, x), y) */\n      dup4\n      eq\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2877:2909  or(iszero(x), eq(sdiv(r, x), y)) */\n      or\n      not(0x00)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2914:2927  lt(x, not(0)) */\n      dup5\n      lt\n      shl(0xff, 0x01)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2929:3003  sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000) */\n      dup5\n      sgt\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2911:3004  or(lt(x, not(0)), sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) */\n      or\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2873:3005  and(or(iszero(x), eq(sdiv(r, x), y)), or(lt(x, not(0)), sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000))) */\n      and\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2863:3043  if iszero(and(or(iszero(x), eq(sdiv(r, x), y)), or(lt(x, not(0)), sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000)))) {... */\n      tag_407\n      jumpi\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3031:3032  0 */\n      0x00\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3028:3029  0 */\n      dup1\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3021:3033  revert(0, 0) */\n      revert\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2863:3043  if iszero(and(or(iszero(x), eq(sdiv(r, x), y)), or(lt(x, not(0)), sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000)))) {... */\n    tag_407:\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3108:3127  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3100:3128  sdiv(r, 1000000000000000000) */\n      swap1\n      sdiv\n      swap3\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2209:3136  function wadMul(int256 x, int256 y) pure returns (int256 r) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3138:3579  function wadDiv(int256 x, int256 y) pure returns (int256 r) {... */\n    tag_332:\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3314:3333  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3307:3334  mul(x, 1000000000000000000) */\n      dup3\n      dup2\n      mul\n      swap1\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3449:3477  sdiv(r, 1000000000000000000) */\n      dup2\n      sdiv\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3446:3481  eq(sdiv(r, 1000000000000000000), x) */\n      dup4\n      eq\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3434:3443  iszero(y) */\n      dup3\n      iszero\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3427:3444  iszero(iszero(y)) */\n      iszero\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3423:3482  and(iszero(iszero(y)), eq(sdiv(r, 1000000000000000000), x)) */\n      and\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3413:3520  if iszero(and(iszero(iszero(y)), eq(sdiv(r, 1000000000000000000), x))) {... */\n      tag_409\n      jumpi\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3508:3509  0 */\n      0x00\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3505:3506  0 */\n      dup1\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3498:3510  revert(0, 0) */\n      revert\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3413:3520  if iszero(and(iszero(iszero(y)), eq(sdiv(r, 1000000000000000000), x))) {... */\n    tag_409:\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3561:3571  sdiv(r, y) */\n      sdiv\n      swap2\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3138:3579  function wadDiv(int256 x, int256 y) pure returns (int256 r) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_381:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_415\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_415:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2657:2840  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_391:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"#utility.yul\":424:580   */\n    tag_430:\n        /* \"#utility.yul\":490:510   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":550:554   */\n      0xff\n        /* \"#utility.yul\":539:555   */\n      dup2\n      and\n        /* \"#utility.yul\":529:556   */\n      dup2\n      eq\n        /* \"#utility.yul\":519:574   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":570:571   */\n      0x00\n        /* \"#utility.yul\":567:568   */\n      dup1\n        /* \"#utility.yul\":560:572   */\n      revert\n        /* \"#utility.yul\":519:574   */\n    tag_447:\n        /* \"#utility.yul\":424:580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":585:767   */\n    tag_45:\n        /* \"#utility.yul\":642:648   */\n      0x00\n        /* \"#utility.yul\":695:697   */\n      0x20\n        /* \"#utility.yul\":683:692   */\n      dup3\n        /* \"#utility.yul\":674:681   */\n      dup5\n        /* \"#utility.yul\":670:693   */\n      sub\n        /* \"#utility.yul\":666:698   */\n      slt\n        /* \"#utility.yul\":663:715   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":711:712   */\n      0x00\n        /* \"#utility.yul\":708:709   */\n      dup1\n        /* \"#utility.yul\":701:713   */\n      revert\n        /* \"#utility.yul\":663:715   */\n    tag_449:\n        /* \"#utility.yul\":734:761   */\n      tag_450\n        /* \"#utility.yul\":751:760   */\n      dup3\n        /* \"#utility.yul\":734:761   */\n      tag_430\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":724:761   */\n      swap4\n        /* \"#utility.yul\":585:767   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1402:1582   */\n    tag_67:\n        /* \"#utility.yul\":1461:1467   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1502:1511   */\n      dup3\n        /* \"#utility.yul\":1493:1500   */\n      dup5\n        /* \"#utility.yul\":1489:1512   */\n      sub\n        /* \"#utility.yul\":1485:1517   */\n      slt\n        /* \"#utility.yul\":1482:1534   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":1530:1531   */\n      0x00\n        /* \"#utility.yul\":1527:1528   */\n      dup1\n        /* \"#utility.yul\":1520:1532   */\n      revert\n        /* \"#utility.yul\":1482:1534   */\n    tag_455:\n      pop\n        /* \"#utility.yul\":1553:1576   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1402:1582   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2179:2323   */\n    tag_431:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2267:2298   */\n      dup2\n      and\n        /* \"#utility.yul\":2257:2299   */\n      dup2\n      eq\n        /* \"#utility.yul\":2247:2317   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2313:2314   */\n      0x00\n        /* \"#utility.yul\":2310:2311   */\n      dup1\n        /* \"#utility.yul\":2303:2315   */\n      revert\n        /* \"#utility.yul\":2328:3509   */\n    tag_94:\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2516:2522   */\n      dup1\n        /* \"#utility.yul\":2524:2530   */\n      0x00\n        /* \"#utility.yul\":2532:2538   */\n      dup1\n        /* \"#utility.yul\":2540:2546   */\n      0x00\n        /* \"#utility.yul\":2548:2554   */\n      dup1\n        /* \"#utility.yul\":2556:2562   */\n      0x00\n        /* \"#utility.yul\":2564:2570   */\n      dup1\n        /* \"#utility.yul\":2572:2578   */\n      0x00\n        /* \"#utility.yul\":2580:2586   */\n      dup1\n        /* \"#utility.yul\":2633:2636   */\n      0x0140\n        /* \"#utility.yul\":2621:2630   */\n      dup12\n        /* \"#utility.yul\":2612:2619   */\n      dup14\n        /* \"#utility.yul\":2608:2631   */\n      sub\n        /* \"#utility.yul\":2604:2637   */\n      slt\n        /* \"#utility.yul\":2601:2654   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":2650:2651   */\n      0x00\n        /* \"#utility.yul\":2647:2648   */\n      dup1\n        /* \"#utility.yul\":2640:2652   */\n      revert\n        /* \"#utility.yul\":2601:2654   */\n    tag_460:\n        /* \"#utility.yul\":2689:2698   */\n      dup11\n        /* \"#utility.yul\":2676:2699   */\n      calldataload\n        /* \"#utility.yul\":2708:2752   */\n      tag_461\n        /* \"#utility.yul\":2746:2751   */\n      dup2\n        /* \"#utility.yul\":2708:2752   */\n      tag_431\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":2771:2776   */\n      swap10\n      pop\n        /* \"#utility.yul\":2828:2830   */\n      0x20\n        /* \"#utility.yul\":2813:2831   */\n      dup12\n      add\n        /* \"#utility.yul\":2800:2832   */\n      calldataload\n        /* \"#utility.yul\":2841:2887   */\n      tag_462\n        /* \"#utility.yul\":2800:2832   */\n      dup2\n        /* \"#utility.yul\":2841:2887   */\n      tag_431\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":2906:2913   */\n      swap9\n      pop\n        /* \"#utility.yul\":2965:2967   */\n      0x40\n        /* \"#utility.yul\":2950:2968   */\n      dup12\n      add\n        /* \"#utility.yul\":2937:2969   */\n      calldataload\n        /* \"#utility.yul\":2978:3024   */\n      tag_463\n        /* \"#utility.yul\":2937:2969   */\n      dup2\n        /* \"#utility.yul\":2978:3024   */\n      tag_431\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":3043:3050   */\n      swap8\n      pop\n        /* \"#utility.yul\":3102:3104   */\n      0x60\n        /* \"#utility.yul\":3087:3105   */\n      dup12\n      add\n        /* \"#utility.yul\":3074:3106   */\n      calldataload\n        /* \"#utility.yul\":3115:3161   */\n      tag_464\n        /* \"#utility.yul\":3074:3106   */\n      dup2\n        /* \"#utility.yul\":3115:3161   */\n      tag_431\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":3180:3187   */\n      swap7\n      pop\n        /* \"#utility.yul\":3234:3237   */\n      0x80\n        /* \"#utility.yul\":3219:3238   */\n      dup12\n      add\n        /* \"#utility.yul\":3206:3239   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":3286:3289   */\n      0xa0\n        /* \"#utility.yul\":3271:3290   */\n      dup12\n      add\n        /* \"#utility.yul\":3258:3291   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3310:3347   */\n      tag_465\n        /* \"#utility.yul\":3342:3345   */\n      0xc0\n        /* \"#utility.yul\":3327:3346   */\n      dup13\n      add\n        /* \"#utility.yul\":3310:3347   */\n      tag_430\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":3300:3347   */\n      swap4\n      pop\n        /* \"#utility.yul\":3394:3397   */\n      0xe0\n        /* \"#utility.yul\":3383:3392   */\n      dup12\n        /* \"#utility.yul\":3379:3398   */\n      add\n        /* \"#utility.yul\":3366:3399   */\n      calldataload\n        /* \"#utility.yul\":3356:3399   */\n      swap3\n      pop\n        /* \"#utility.yul\":3446:3449   */\n      0x0100\n        /* \"#utility.yul\":3435:3444   */\n      dup12\n        /* \"#utility.yul\":3431:3450   */\n      add\n        /* \"#utility.yul\":3418:3451   */\n      calldataload\n        /* \"#utility.yul\":3408:3451   */\n      swap2\n      pop\n        /* \"#utility.yul\":3498:3501   */\n      0x0120\n        /* \"#utility.yul\":3487:3496   */\n      dup12\n        /* \"#utility.yul\":3483:3502   */\n      add\n        /* \"#utility.yul\":3470:3503   */\n      calldataload\n        /* \"#utility.yul\":3460:3503   */\n      swap1\n      pop\n        /* \"#utility.yul\":2328:3509   */\n      swap3\n      swap6\n      swap9\n      swap12\n      swap2\n      swap5\n      swap8\n      swap11\n      pop\n      swap3\n      swap6\n      swap9\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:3963   */\n    tag_119:\n        /* \"#utility.yul\":3762:3768   */\n      0x00\n        /* \"#utility.yul\":3815:3817   */\n      0x20\n        /* \"#utility.yul\":3803:3812   */\n      dup3\n        /* \"#utility.yul\":3794:3801   */\n      dup5\n        /* \"#utility.yul\":3790:3813   */\n      sub\n        /* \"#utility.yul\":3786:3818   */\n      slt\n        /* \"#utility.yul\":3783:3835   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":3831:3832   */\n      0x00\n        /* \"#utility.yul\":3828:3829   */\n      dup1\n        /* \"#utility.yul\":3821:3833   */\n      revert\n        /* \"#utility.yul\":3783:3835   */\n    tag_468:\n        /* \"#utility.yul\":3870:3879   */\n      dup2\n        /* \"#utility.yul\":3857:3880   */\n      calldataload\n        /* \"#utility.yul\":3889:3933   */\n      tag_450\n        /* \"#utility.yul\":3927:3932   */\n      dup2\n        /* \"#utility.yul\":3889:3933   */\n      tag_431\n      jump\t// in\n        /* \"#utility.yul\":5215:5342   */\n    tag_432:\n        /* \"#utility.yul\":5276:5286   */\n      0x4e487b71\n        /* \"#utility.yul\":5271:5274   */\n      0xe0\n        /* \"#utility.yul\":5267:5287   */\n      shl\n        /* \"#utility.yul\":5264:5265   */\n      0x00\n        /* \"#utility.yul\":5257:5288   */\n      mstore\n        /* \"#utility.yul\":5307:5311   */\n      0x11\n        /* \"#utility.yul\":5304:5305   */\n      0x04\n        /* \"#utility.yul\":5297:5312   */\n      mstore\n        /* \"#utility.yul\":5331:5335   */\n      0x24\n        /* \"#utility.yul\":5328:5329   */\n      0x00\n        /* \"#utility.yul\":5321:5336   */\n      revert\n        /* \"#utility.yul\":5347:5515   */\n    tag_157:\n        /* \"#utility.yul\":5420:5429   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5451:5460   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5468:5483   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5462:5484   */\n      dup5\n      eq\n        /* \"#utility.yul\":5448:5485   */\n      or\n        /* \"#utility.yul\":5438:5509   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":5489:5507   */\n      tag_397\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":5520:5737   */\n    tag_159:\n        /* \"#utility.yul\":5560:5561   */\n      0x00\n        /* \"#utility.yul\":5586:5587   */\n      dup3\n        /* \"#utility.yul\":5576:5708   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":5630:5640   */\n      0x4e487b71\n        /* \"#utility.yul\":5625:5628   */\n      0xe0\n        /* \"#utility.yul\":5621:5641   */\n      shl\n        /* \"#utility.yul\":5618:5619   */\n      0x00\n        /* \"#utility.yul\":5611:5642   */\n      mstore\n        /* \"#utility.yul\":5665:5669   */\n      0x12\n        /* \"#utility.yul\":5662:5663   */\n      0x04\n        /* \"#utility.yul\":5655:5670   */\n      mstore\n        /* \"#utility.yul\":5693:5697   */\n      0x24\n        /* \"#utility.yul\":5690:5691   */\n      0x00\n        /* \"#utility.yul\":5683:5698   */\n      revert\n        /* \"#utility.yul\":5576:5708   */\n    tag_479:\n      pop\n        /* \"#utility.yul\":5722:5731   */\n      div\n      swap1\n        /* \"#utility.yul\":5520:5737   */\n      jump\t// out\n        /* \"#utility.yul\":5742:5867   */\n    tag_161:\n        /* \"#utility.yul\":5807:5816   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5828:5838   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5825:5861   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":5841:5859   */\n      tag_397\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":6305:6433   */\n    tag_169:\n        /* \"#utility.yul\":6372:6381   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6393:6404   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6390:6427   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":6407:6425   */\n      tag_397\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":7012:7196   */\n    tag_258:\n        /* \"#utility.yul\":7082:7088   */\n      0x00\n        /* \"#utility.yul\":7135:7137   */\n      0x20\n        /* \"#utility.yul\":7123:7132   */\n      dup3\n        /* \"#utility.yul\":7114:7121   */\n      dup5\n        /* \"#utility.yul\":7110:7133   */\n      sub\n        /* \"#utility.yul\":7106:7138   */\n      slt\n        /* \"#utility.yul\":7103:7155   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":7151:7152   */\n      0x00\n        /* \"#utility.yul\":7148:7149   */\n      dup1\n        /* \"#utility.yul\":7141:7153   */\n      revert\n        /* \"#utility.yul\":7103:7155   */\n    tag_490:\n      pop\n        /* \"#utility.yul\":7174:7190   */\n      mload\n      swap2\n        /* \"#utility.yul\":7012:7196   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7201:7380   */\n    tag_264:\n        /* \"#utility.yul\":7236:7239   */\n      0x00\n        /* \"#utility.yul\":7278:7279   */\n      0x03\n        /* \"#utility.yul\":7260:7276   */\n      returndatasize\n        /* \"#utility.yul\":7257:7280   */\n      gt\n        /* \"#utility.yul\":7254:7374   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":7324:7325   */\n      0x04\n        /* \"#utility.yul\":7321:7322   */\n      0x00\n        /* \"#utility.yul\":7318:7319   */\n      dup1\n        /* \"#utility.yul\":7303:7326   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":7361:7362   */\n      0x00\n        /* \"#utility.yul\":7355:7363   */\n      mload\n        /* \"#utility.yul\":7350:7353   */\n      0xe0\n        /* \"#utility.yul\":7346:7364   */\n      shr\n        /* \"#utility.yul\":7254:7374   */\n    tag_492:\n        /* \"#utility.yul\":7201:7380   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7385:7512   */\n    tag_344:\n        /* \"#utility.yul\":7446:7456   */\n      0x4e487b71\n        /* \"#utility.yul\":7441:7444   */\n      0xe0\n        /* \"#utility.yul\":7437:7457   */\n      shl\n        /* \"#utility.yul\":7434:7435   */\n      0x00\n        /* \"#utility.yul\":7427:7458   */\n      mstore\n        /* \"#utility.yul\":7477:7481   */\n      0x41\n        /* \"#utility.yul\":7474:7475   */\n      0x04\n        /* \"#utility.yul\":7467:7482   */\n      mstore\n        /* \"#utility.yul\":7501:7505   */\n      0x24\n        /* \"#utility.yul\":7498:7499   */\n      0x00\n        /* \"#utility.yul\":7491:7506   */\n      revert\n        /* \"#utility.yul\":7517:7740   */\n    tag_433:\n        /* \"#utility.yul\":7603:7605   */\n      0x40\n        /* \"#utility.yul\":7595:7601   */\n      dup2\n        /* \"#utility.yul\":7591:7606   */\n      add\n        /* \"#utility.yul\":7672:7678   */\n      dup2\n        /* \"#utility.yul\":7660:7670   */\n      dup2\n        /* \"#utility.yul\":7657:7679   */\n      lt\n        /* \"#utility.yul\":7636:7654   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7624:7634   */\n      dup3\n        /* \"#utility.yul\":7621:7655   */\n      gt\n        /* \"#utility.yul\":7618:7680   */\n      or\n        /* \"#utility.yul\":7615:7703   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":7683:7701   */\n      tag_496\n      tag_344\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7719:7721   */\n      0x40\n        /* \"#utility.yul\":7712:7734   */\n      mstore\n      pop\n        /* \"#utility.yul\":7517:7740   */\n      jump\t// out\n        /* \"#utility.yul\":7745:7970   */\n    tag_434:\n        /* \"#utility.yul\":7831:7835   */\n      0xa0\n        /* \"#utility.yul\":7823:7829   */\n      dup2\n        /* \"#utility.yul\":7819:7836   */\n      add\n        /* \"#utility.yul\":7902:7908   */\n      dup2\n        /* \"#utility.yul\":7890:7900   */\n      dup2\n        /* \"#utility.yul\":7887:7909   */\n      lt\n        /* \"#utility.yul\":7866:7884   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7854:7864   */\n      dup3\n        /* \"#utility.yul\":7851:7885   */\n      gt\n        /* \"#utility.yul\":7848:7910   */\n      or\n        /* \"#utility.yul\":7845:7933   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":7913:7931   */\n      tag_496\n      tag_344\n      jump\t// in\n        /* \"#utility.yul\":7975:8224   */\n    tag_435:\n        /* \"#utility.yul\":8085:8087   */\n      0x1f\n        /* \"#utility.yul\":8066:8079   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":8062:8089   */\n      and\n        /* \"#utility.yul\":8050:8090   */\n      dup2\n      add\n        /* \"#utility.yul\":8120:8138   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8105:8139   */\n      dup2\n      gt\n        /* \"#utility.yul\":8141:8163   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":8102:8164   */\n      or\n        /* \"#utility.yul\":8099:8187   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":8167:8185   */\n      tag_502\n      tag_344\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8203:8205   */\n      0x40\n        /* \"#utility.yul\":8196:8218   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":7975:8224   */\n      jump\t// out\n        /* \"#utility.yul\":8229:8900   */\n    tag_266:\n        /* \"#utility.yul\":8268:8271   */\n      0x00\n        /* \"#utility.yul\":8310:8314   */\n      0x44\n        /* \"#utility.yul\":8292:8308   */\n      returndatasize\n        /* \"#utility.yul\":8289:8315   */\n      lt\n        /* \"#utility.yul\":8286:8325   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":8229:8900   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":8286:8325   */\n    tag_504:\n        /* \"#utility.yul\":8352:8354   */\n      0x40\n        /* \"#utility.yul\":8346:8355   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":8417:8433   */\n      returndatasize\n        /* \"#utility.yul\":8413:8438   */\n      dup2\n      add\n        /* \"#utility.yul\":8410:8411   */\n      0x04\n        /* \"#utility.yul\":8346:8355   */\n      dup4\n        /* \"#utility.yul\":8389:8439   */\n      returndatacopy\n        /* \"#utility.yul\":8468:8472   */\n      dup2\n        /* \"#utility.yul\":8462:8473   */\n      mload\n        /* \"#utility.yul\":8492:8508   */\n      returndatasize\n        /* \"#utility.yul\":8527:8545   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8598:8600   */\n      dup2\n        /* \"#utility.yul\":8591:8595   */\n      0x24\n        /* \"#utility.yul\":8583:8589   */\n      dup5\n        /* \"#utility.yul\":8579:8596   */\n      add\n        /* \"#utility.yul\":8576:8601   */\n      gt\n        /* \"#utility.yul\":8571:8573   */\n      dup2\n        /* \"#utility.yul\":8563:8569   */\n      dup5\n        /* \"#utility.yul\":8560:8574   */\n      gt\n        /* \"#utility.yul\":8557:8602   */\n      or\n        /* \"#utility.yul\":8554:8612   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":8605:8610   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8229:8900   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":8554:8612   */\n    tag_505:\n        /* \"#utility.yul\":8642:8648   */\n      dup3\n        /* \"#utility.yul\":8636:8640   */\n      dup6\n        /* \"#utility.yul\":8632:8649   */\n      add\n        /* \"#utility.yul\":8621:8649   */\n      swap2\n      pop\n        /* \"#utility.yul\":8678:8681   */\n      dup2\n        /* \"#utility.yul\":8672:8682   */\n      mload\n        /* \"#utility.yul\":8705:8707   */\n      dup2\n        /* \"#utility.yul\":8697:8703   */\n      dup2\n        /* \"#utility.yul\":8694:8708   */\n      gt\n        /* \"#utility.yul\":8691:8718   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":8711:8716   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8229:8900   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":8691:8718   */\n    tag_506:\n        /* \"#utility.yul\":8795:8797   */\n      dup5\n        /* \"#utility.yul\":8776:8792   */\n      returndatasize\n        /* \"#utility.yul\":8770:8774   */\n      dup8\n        /* \"#utility.yul\":8766:8793   */\n      add\n        /* \"#utility.yul\":8762:8798   */\n      add\n        /* \"#utility.yul\":8755:8759   */\n      0x20\n        /* \"#utility.yul\":8746:8752   */\n      dup3\n        /* \"#utility.yul\":8741:8744   */\n      dup6\n        /* \"#utility.yul\":8737:8753   */\n      add\n        /* \"#utility.yul\":8733:8760   */\n      add\n        /* \"#utility.yul\":8730:8799   */\n      gt\n        /* \"#utility.yul\":8727:8809   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":8802:8807   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8229:8900   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":8727:8809   */\n    tag_507:\n        /* \"#utility.yul\":8818:8875   */\n      tag_508\n        /* \"#utility.yul\":8869:8873   */\n      0x20\n        /* \"#utility.yul\":8860:8866   */\n      dup3\n        /* \"#utility.yul\":8852:8858   */\n      dup7\n        /* \"#utility.yul\":8848:8867   */\n      add\n        /* \"#utility.yul\":8844:8874   */\n      add\n        /* \"#utility.yul\":8838:8842   */\n      dup8\n        /* \"#utility.yul\":8818:8875   */\n      tag_435\n      jump\t// in\n    tag_508:\n      pop\n        /* \"#utility.yul\":8891:8894   */\n      swap1\n      swap6\n        /* \"#utility.yul\":8229:8900   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9437:9601   */\n    tag_436:\n        /* \"#utility.yul\":9513:9526   */\n      dup1\n      mload\n        /* \"#utility.yul\":9562:9575   */\n      dup1\n      iszero\n        /* \"#utility.yul\":9555:9576   */\n      iszero\n        /* \"#utility.yul\":9545:9577   */\n      dup2\n      eq\n        /* \"#utility.yul\":9535:9595   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":9591:9592   */\n      0x00\n        /* \"#utility.yul\":9588:9589   */\n      dup1\n        /* \"#utility.yul\":9581:9593   */\n      revert\n        /* \"#utility.yul\":9606:9808   */\n    tag_290:\n        /* \"#utility.yul\":9673:9679   */\n      0x00\n        /* \"#utility.yul\":9726:9728   */\n      0x20\n        /* \"#utility.yul\":9714:9723   */\n      dup3\n        /* \"#utility.yul\":9705:9712   */\n      dup5\n        /* \"#utility.yul\":9701:9724   */\n      sub\n        /* \"#utility.yul\":9697:9729   */\n      slt\n        /* \"#utility.yul\":9694:9746   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":9742:9743   */\n      0x00\n        /* \"#utility.yul\":9739:9740   */\n      dup1\n        /* \"#utility.yul\":9732:9744   */\n      revert\n        /* \"#utility.yul\":9694:9746   */\n    tag_514:\n        /* \"#utility.yul\":9765:9802   */\n      tag_450\n        /* \"#utility.yul\":9792:9801   */\n      dup3\n        /* \"#utility.yul\":9765:9802   */\n      tag_436\n      jump\t// in\n        /* \"#utility.yul\":11264:11464   */\n    tag_330:\n        /* \"#utility.yul\":11330:11339   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":11303:11307   */\n      0x00\n        /* \"#utility.yul\":11358:11367   */\n      dup4\n      slt\n        /* \"#utility.yul\":11386:11396   */\n      dup1\n      iszero\n        /* \"#utility.yul\":11398:11410   */\n      dup4\n      dup4\n      sgt\n        /* \"#utility.yul\":11382:11411   */\n      and\n        /* \"#utility.yul\":11421:11433   */\n      dup4\n      dup4\n      slt\n        /* \"#utility.yul\":11413:11434   */\n      dup3\n      and\n        /* \"#utility.yul\":11379:11435   */\n      or\n        /* \"#utility.yul\":11376:11458   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":11438:11456   */\n      tag_522\n      tag_432\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":11376:11458   */\n      pop\n        /* \"#utility.yul\":11264:11464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11469:11717   */\n    tag_437:\n        /* \"#utility.yul\":11536:11538   */\n      0x40\n        /* \"#utility.yul\":11530:11539   */\n      mload\n        /* \"#utility.yul\":11578:11582   */\n      0xc0\n        /* \"#utility.yul\":11566:11583   */\n      dup2\n      add\n        /* \"#utility.yul\":11613:11631   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11598:11632   */\n      dup2\n      gt\n        /* \"#utility.yul\":11634:11656   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":11595:11657   */\n      or\n        /* \"#utility.yul\":11592:11680   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":11660:11678   */\n      tag_525\n      tag_344\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11696:11698   */\n      0x40\n        /* \"#utility.yul\":11689:11711   */\n      mstore\n        /* \"#utility.yul\":11469:11717   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11722:11972   */\n    tag_438:\n        /* \"#utility.yul\":11807:11808   */\n      0x00\n        /* \"#utility.yul\":11817:11930   */\n    tag_527:\n        /* \"#utility.yul\":11831:11837   */\n      dup4\n        /* \"#utility.yul\":11828:11829   */\n      dup2\n        /* \"#utility.yul\":11825:11838   */\n      lt\n        /* \"#utility.yul\":11817:11930   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":11907:11918   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11901:11919   */\n      mload\n        /* \"#utility.yul\":11888:11899   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":11881:11920   */\n      mstore\n        /* \"#utility.yul\":11853:11855   */\n      0x20\n        /* \"#utility.yul\":11846:11856   */\n      add\n        /* \"#utility.yul\":11817:11930   */\n      jump(tag_527)\n    tag_529:\n      pop\n      pop\n        /* \"#utility.yul\":11964:11965   */\n      0x00\n        /* \"#utility.yul\":11946:11962   */\n      swap2\n      add\n        /* \"#utility.yul\":11939:11966   */\n      mstore\n        /* \"#utility.yul\":11722:11972   */\n      jump\t// out\n        /* \"#utility.yul\":11977:12513   */\n    tag_439:\n        /* \"#utility.yul\":12031:12036   */\n      0x00\n        /* \"#utility.yul\":12084:12087   */\n      dup3\n        /* \"#utility.yul\":12077:12081   */\n      0x1f\n        /* \"#utility.yul\":12069:12075   */\n      dup4\n        /* \"#utility.yul\":12065:12082   */\n      add\n        /* \"#utility.yul\":12061:12088   */\n      slt\n        /* \"#utility.yul\":12051:12106   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":12102:12103   */\n      0x00\n        /* \"#utility.yul\":12099:12100   */\n      dup1\n        /* \"#utility.yul\":12092:12104   */\n      revert\n        /* \"#utility.yul\":12051:12106   */\n    tag_531:\n        /* \"#utility.yul\":12131:12137   */\n      dup2\n        /* \"#utility.yul\":12125:12138   */\n      mload\n        /* \"#utility.yul\":12157:12175   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12153:12155   */\n      dup2\n        /* \"#utility.yul\":12150:12176   */\n      gt\n        /* \"#utility.yul\":12147:12199   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":12179:12197   */\n      tag_533\n      tag_344\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12228:12230   */\n      0x40\n        /* \"#utility.yul\":12222:12231   */\n      mload\n        /* \"#utility.yul\":12240:12307   */\n      tag_534\n        /* \"#utility.yul\":12295:12297   */\n      0x1f\n        /* \"#utility.yul\":12276:12289   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":12272:12299   */\n      and\n        /* \"#utility.yul\":12301:12305   */\n      0x20\n        /* \"#utility.yul\":12268:12306   */\n      add\n        /* \"#utility.yul\":12222:12231   */\n      dup3\n        /* \"#utility.yul\":12240:12307   */\n      tag_435\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12331:12333   */\n      dup2\n        /* \"#utility.yul\":12323:12329   */\n      dup2\n        /* \"#utility.yul\":12316:12334   */\n      mstore\n        /* \"#utility.yul\":12377:12380   */\n      dup5\n        /* \"#utility.yul\":12370:12374   */\n      0x20\n        /* \"#utility.yul\":12365:12367   */\n      dup4\n        /* \"#utility.yul\":12357:12363   */\n      dup7\n        /* \"#utility.yul\":12353:12368   */\n      add\n        /* \"#utility.yul\":12349:12375   */\n      add\n        /* \"#utility.yul\":12346:12381   */\n      gt\n        /* \"#utility.yul\":12343:12398   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":12394:12395   */\n      0x00\n        /* \"#utility.yul\":12391:12392   */\n      dup1\n        /* \"#utility.yul\":12384:12396   */\n      revert\n        /* \"#utility.yul\":12343:12398   */\n    tag_535:\n        /* \"#utility.yul\":12407:12483   */\n      tag_536\n        /* \"#utility.yul\":12480:12482   */\n      dup3\n        /* \"#utility.yul\":12473:12477   */\n      0x20\n        /* \"#utility.yul\":12465:12471   */\n      dup4\n        /* \"#utility.yul\":12461:12478   */\n      add\n        /* \"#utility.yul\":12454:12458   */\n      0x20\n        /* \"#utility.yul\":12446:12452   */\n      dup8\n        /* \"#utility.yul\":12442:12459   */\n      add\n        /* \"#utility.yul\":12407:12483   */\n      tag_438\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12501:12507   */\n      swap5\n        /* \"#utility.yul\":11977:12513   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12518:12672   */\n    tag_440:\n        /* \"#utility.yul\":12604:12617   */\n      dup1\n      mload\n        /* \"#utility.yul\":12646:12647   */\n      0x06\n        /* \"#utility.yul\":12636:12648   */\n      dup2\n      lt\n        /* \"#utility.yul\":12626:12666   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":12662:12663   */\n      0x00\n        /* \"#utility.yul\":12659:12660   */\n      dup1\n        /* \"#utility.yul\":12652:12664   */\n      revert\n        /* \"#utility.yul\":12677:12828   */\n    tag_441:\n        /* \"#utility.yul\":12756:12769   */\n      dup1\n      mload\n        /* \"#utility.yul\":12778:12822   */\n      tag_447\n        /* \"#utility.yul\":12756:12769   */\n      dup2\n        /* \"#utility.yul\":12778:12822   */\n      tag_431\n      jump\t// in\n        /* \"#utility.yul\":12833:13927   */\n    tag_442:\n        /* \"#utility.yul\":12908:12913   */\n      0x00\n        /* \"#utility.yul\":12961:12964   */\n      dup3\n        /* \"#utility.yul\":12954:12958   */\n      0x1f\n        /* \"#utility.yul\":12946:12952   */\n      dup4\n        /* \"#utility.yul\":12942:12959   */\n      add\n        /* \"#utility.yul\":12938:12965   */\n      slt\n        /* \"#utility.yul\":12928:12983   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":12979:12980   */\n      0x00\n        /* \"#utility.yul\":12976:12977   */\n      dup1\n        /* \"#utility.yul\":12969:12981   */\n      revert\n        /* \"#utility.yul\":12928:12983   */\n    tag_542:\n        /* \"#utility.yul\":13008:13014   */\n      dup2\n        /* \"#utility.yul\":13002:13015   */\n      mload\n        /* \"#utility.yul\":13034:13038   */\n      0x20\n        /* \"#utility.yul\":13057:13075   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13053:13055   */\n      dup3\n        /* \"#utility.yul\":13050:13076   */\n      gt\n        /* \"#utility.yul\":13047:13099   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":13079:13097   */\n      tag_544\n      tag_344\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13118:13120   */\n      0x40\n        /* \"#utility.yul\":13149:13151   */\n      dup1\n        /* \"#utility.yul\":13143:13152   */\n      mload\n        /* \"#utility.yul\":13161:13209   */\n      tag_545\n        /* \"#utility.yul\":13205:13207   */\n      dup4\n        /* \"#utility.yul\":13200:13202   */\n      dup6\n        /* \"#utility.yul\":13197:13198   */\n      0x05\n        /* \"#utility.yul\":13193:13203   */\n      shl\n        /* \"#utility.yul\":13189:13208   */\n      add\n        /* \"#utility.yul\":13181:13187   */\n      dup3\n        /* \"#utility.yul\":13161:13209   */\n      tag_435\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13244:13262   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":13336:13337   */\n      0x06\n        /* \"#utility.yul\":13332:13342   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":13320:13343   */\n      dup6\n      add\n        /* \"#utility.yul\":13316:13348   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":13278:13293   */\n      dup3\n      dup2\n      add\n        /* \"#utility.yul\":13360:13375   */\n      dup8\n      dup6\n      gt\n        /* \"#utility.yul\":13357:13392   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":13388:13389   */\n      0x00\n        /* \"#utility.yul\":13385:13386   */\n      dup1\n        /* \"#utility.yul\":13378:13390   */\n      revert\n        /* \"#utility.yul\":13357:13392   */\n    tag_546:\n        /* \"#utility.yul\":13424:13426   */\n      dup4\n        /* \"#utility.yul\":13416:13422   */\n      dup8\n        /* \"#utility.yul\":13412:13427   */\n      add\n        /* \"#utility.yul\":13436:13897   */\n    tag_547:\n        /* \"#utility.yul\":13452:13458   */\n      dup6\n        /* \"#utility.yul\":13447:13450   */\n      dup2\n        /* \"#utility.yul\":13444:13459   */\n      lt\n        /* \"#utility.yul\":13436:13897   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":13528:13530   */\n      dup4\n        /* \"#utility.yul\":13522:13525   */\n      dup2\n        /* \"#utility.yul\":13517:13520   */\n      dup11\n        /* \"#utility.yul\":13513:13526   */\n      sub\n        /* \"#utility.yul\":13509:13531   */\n      slt\n        /* \"#utility.yul\":13506:13548   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":13544:13545   */\n      0x00\n        /* \"#utility.yul\":13541:13542   */\n      dup1\n        /* \"#utility.yul\":13534:13546   */\n      revert\n        /* \"#utility.yul\":13506:13548   */\n    tag_550:\n        /* \"#utility.yul\":13583:13585   */\n      dup4\n        /* \"#utility.yul\":13577:13586   */\n      mload\n        /* \"#utility.yul\":13599:13633   */\n      tag_551\n        /* \"#utility.yul\":13624:13632   */\n      dup2\n        /* \"#utility.yul\":13599:13633   */\n      tag_433\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13665:13668   */\n      dup2\n        /* \"#utility.yul\":13659:13669   */\n      mload\n        /* \"#utility.yul\":13682:13726   */\n      tag_552\n        /* \"#utility.yul\":13720:13725   */\n      dup2\n        /* \"#utility.yul\":13682:13726   */\n      tag_431\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13739:13762   */\n      dup2\n      mstore\n        /* \"#utility.yul\":13807:13819   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":13801:13820   */\n      mload\n        /* \"#utility.yul\":13782:13799   */\n      dup7\n      dup3\n      add\n        /* \"#utility.yul\":13775:13821   */\n      mstore\n        /* \"#utility.yul\":13834:13855   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13875:13887   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":13469:13481   */\n      dup4\n      add\n        /* \"#utility.yul\":13436:13897   */\n      jump(tag_547)\n    tag_549:\n      pop\n        /* \"#utility.yul\":13915:13921   */\n      swap1\n      swap8\n        /* \"#utility.yul\":12833:13927   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13932:16018   */\n    tag_341:\n        /* \"#utility.yul\":14028:14034   */\n      0x00\n        /* \"#utility.yul\":14081:14083   */\n      0x20\n        /* \"#utility.yul\":14069:14078   */\n      dup3\n        /* \"#utility.yul\":14060:14067   */\n      dup5\n        /* \"#utility.yul\":14056:14079   */\n      sub\n        /* \"#utility.yul\":14052:14084   */\n      slt\n        /* \"#utility.yul\":14049:14101   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":14097:14098   */\n      0x00\n        /* \"#utility.yul\":14094:14095   */\n      dup1\n        /* \"#utility.yul\":14087:14099   */\n      revert\n        /* \"#utility.yul\":14049:14101   */\n    tag_554:\n        /* \"#utility.yul\":14130:14139   */\n      dup2\n        /* \"#utility.yul\":14124:14140   */\n      mload\n        /* \"#utility.yul\":14159:14177   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14200:14202   */\n      dup1\n        /* \"#utility.yul\":14192:14198   */\n      dup3\n        /* \"#utility.yul\":14189:14203   */\n      gt\n        /* \"#utility.yul\":14186:14220   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":14216:14217   */\n      0x00\n        /* \"#utility.yul\":14213:14214   */\n      dup1\n        /* \"#utility.yul\":14206:14218   */\n      revert\n        /* \"#utility.yul\":14186:14220   */\n    tag_555:\n        /* \"#utility.yul\":14239:14261   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":14295:14299   */\n      0xa0\n        /* \"#utility.yul\":14277:14293   */\n      dup3\n      dup7\n      sub\n        /* \"#utility.yul\":14273:14300   */\n      slt\n        /* \"#utility.yul\":14270:14317   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":14313:14314   */\n      0x00\n        /* \"#utility.yul\":14310:14311   */\n      dup1\n        /* \"#utility.yul\":14303:14315   */\n      revert\n        /* \"#utility.yul\":14270:14317   */\n    tag_556:\n        /* \"#utility.yul\":14346:14348   */\n      0x40\n        /* \"#utility.yul\":14340:14349   */\n      mload\n        /* \"#utility.yul\":14358:14390   */\n      tag_557\n        /* \"#utility.yul\":14383:14389   */\n      dup2\n        /* \"#utility.yul\":14358:14390   */\n      tag_434\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":14420:14422   */\n      dup3\n        /* \"#utility.yul\":14414:14423   */\n      mload\n        /* \"#utility.yul\":14406:14412   */\n      dup2\n        /* \"#utility.yul\":14399:14424   */\n      mstore\n        /* \"#utility.yul\":14463:14465   */\n      0x20\n        /* \"#utility.yul\":14459:14461   */\n      dup4\n        /* \"#utility.yul\":14455:14466   */\n      add\n        /* \"#utility.yul\":14449:14467   */\n      mload\n        /* \"#utility.yul\":14492:14494   */\n      dup3\n        /* \"#utility.yul\":14482:14490   */\n      dup2\n        /* \"#utility.yul\":14479:14495   */\n      gt\n        /* \"#utility.yul\":14476:14512   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":14508:14509   */\n      0x00\n        /* \"#utility.yul\":14505:14506   */\n      dup1\n        /* \"#utility.yul\":14498:14510   */\n      revert\n        /* \"#utility.yul\":14476:14512   */\n    tag_558:\n        /* \"#utility.yul\":14531:14548   */\n      dup4\n      add\n        /* \"#utility.yul\":14582:14586   */\n      0xc0\n        /* \"#utility.yul\":14564:14580   */\n      dup2\n      dup9\n      sub\n        /* \"#utility.yul\":14560:14587   */\n      slt\n        /* \"#utility.yul\":14557:14604   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":14600:14601   */\n      0x00\n        /* \"#utility.yul\":14597:14598   */\n      dup1\n        /* \"#utility.yul\":14590:14602   */\n      revert\n        /* \"#utility.yul\":14557:14604   */\n    tag_559:\n        /* \"#utility.yul\":14626:14643   */\n      tag_560\n      tag_437\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14674:14676   */\n      dup2\n        /* \"#utility.yul\":14668:14677   */\n      mload\n        /* \"#utility.yul\":14702:14704   */\n      dup5\n        /* \"#utility.yul\":14692:14700   */\n      dup2\n        /* \"#utility.yul\":14689:14705   */\n      gt\n        /* \"#utility.yul\":14686:14722   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":14718:14719   */\n      0x00\n        /* \"#utility.yul\":14715:14716   */\n      dup1\n        /* \"#utility.yul\":14708:14720   */\n      revert\n        /* \"#utility.yul\":14686:14722   */\n    tag_561:\n        /* \"#utility.yul\":14745:14801   */\n      tag_562\n        /* \"#utility.yul\":14793:14800   */\n      dup10\n        /* \"#utility.yul\":14782:14790   */\n      dup3\n        /* \"#utility.yul\":14778:14780   */\n      dup6\n        /* \"#utility.yul\":14774:14791   */\n      add\n        /* \"#utility.yul\":14745:14801   */\n      tag_439\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":14738:14743   */\n      dup3\n        /* \"#utility.yul\":14731:14802   */\n      mstore\n      pop\n        /* \"#utility.yul\":14841:14843   */\n      0x20\n        /* \"#utility.yul\":14837:14839   */\n      dup3\n        /* \"#utility.yul\":14833:14844   */\n      add\n        /* \"#utility.yul\":14827:14845   */\n      mload\n        /* \"#utility.yul\":14870:14872   */\n      dup5\n        /* \"#utility.yul\":14860:14868   */\n      dup2\n        /* \"#utility.yul\":14857:14873   */\n      gt\n        /* \"#utility.yul\":14854:14890   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":14886:14887   */\n      0x00\n        /* \"#utility.yul\":14883:14884   */\n      dup1\n        /* \"#utility.yul\":14876:14888   */\n      revert\n        /* \"#utility.yul\":14854:14890   */\n    tag_563:\n        /* \"#utility.yul\":14922:14978   */\n      tag_564\n        /* \"#utility.yul\":14970:14977   */\n      dup10\n        /* \"#utility.yul\":14959:14967   */\n      dup3\n        /* \"#utility.yul\":14955:14957   */\n      dup6\n        /* \"#utility.yul\":14951:14968   */\n      add\n        /* \"#utility.yul\":14922:14978   */\n      tag_439\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14917:14919   */\n      0x20\n        /* \"#utility.yul\":14910:14915   */\n      dup4\n        /* \"#utility.yul\":14906:14920   */\n      add\n        /* \"#utility.yul\":14899:14979   */\n      mstore\n      pop\n        /* \"#utility.yul\":15011:15060   */\n      tag_565\n        /* \"#utility.yul\":15056:15058   */\n      0x40\n        /* \"#utility.yul\":15052:15054   */\n      dup4\n        /* \"#utility.yul\":15048:15059   */\n      add\n        /* \"#utility.yul\":15011:15060   */\n      tag_440\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15006:15008   */\n      0x40\n        /* \"#utility.yul\":14999:15004   */\n      dup3\n        /* \"#utility.yul\":14995:15009   */\n      add\n        /* \"#utility.yul\":14988:15061   */\n      mstore\n        /* \"#utility.yul\":15100:15102   */\n      0x60\n        /* \"#utility.yul\":15096:15098   */\n      dup3\n        /* \"#utility.yul\":15092:15103   */\n      add\n        /* \"#utility.yul\":15086:15104   */\n      mload\n        /* \"#utility.yul\":15129:15131   */\n      dup5\n        /* \"#utility.yul\":15119:15127   */\n      dup2\n        /* \"#utility.yul\":15116:15132   */\n      gt\n        /* \"#utility.yul\":15113:15149   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":15145:15146   */\n      0x00\n        /* \"#utility.yul\":15142:15143   */\n      dup1\n        /* \"#utility.yul\":15135:15147   */\n      revert\n        /* \"#utility.yul\":15113:15149   */\n    tag_566:\n        /* \"#utility.yul\":15181:15237   */\n      tag_567\n        /* \"#utility.yul\":15229:15236   */\n      dup10\n        /* \"#utility.yul\":15218:15226   */\n      dup3\n        /* \"#utility.yul\":15214:15216   */\n      dup6\n        /* \"#utility.yul\":15210:15227   */\n      add\n        /* \"#utility.yul\":15181:15237   */\n      tag_439\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15176:15178   */\n      0x60\n        /* \"#utility.yul\":15169:15174   */\n      dup4\n        /* \"#utility.yul\":15165:15179   */\n      add\n        /* \"#utility.yul\":15158:15238   */\n      mstore\n      pop\n        /* \"#utility.yul\":15277:15280   */\n      0x80\n        /* \"#utility.yul\":15273:15275   */\n      dup3\n        /* \"#utility.yul\":15269:15281   */\n      add\n        /* \"#utility.yul\":15263:15282   */\n      mload\n        /* \"#utility.yul\":15307:15309   */\n      dup5\n        /* \"#utility.yul\":15297:15305   */\n      dup2\n        /* \"#utility.yul\":15294:15310   */\n      gt\n        /* \"#utility.yul\":15291:15327   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":15323:15324   */\n      0x00\n        /* \"#utility.yul\":15320:15321   */\n      dup1\n        /* \"#utility.yul\":15313:15325   */\n      revert\n        /* \"#utility.yul\":15291:15327   */\n    tag_568:\n        /* \"#utility.yul\":15360:15416   */\n      tag_569\n        /* \"#utility.yul\":15408:15415   */\n      dup10\n        /* \"#utility.yul\":15397:15405   */\n      dup3\n        /* \"#utility.yul\":15393:15395   */\n      dup6\n        /* \"#utility.yul\":15389:15406   */\n      add\n        /* \"#utility.yul\":15360:15416   */\n      tag_439\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":15354:15357   */\n      0x80\n        /* \"#utility.yul\":15347:15352   */\n      dup4\n        /* \"#utility.yul\":15343:15358   */\n      add\n        /* \"#utility.yul\":15336:15417   */\n      mstore\n      pop\n        /* \"#utility.yul\":15456:15460   */\n      0xa0\n        /* \"#utility.yul\":15452:15454   */\n      dup3\n        /* \"#utility.yul\":15448:15461   */\n      add\n        /* \"#utility.yul\":15442:15462   */\n      mload\n        /* \"#utility.yul\":15487:15489   */\n      dup5\n        /* \"#utility.yul\":15477:15485   */\n      dup2\n        /* \"#utility.yul\":15474:15490   */\n      gt\n        /* \"#utility.yul\":15471:15507   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":15503:15504   */\n      0x00\n        /* \"#utility.yul\":15500:15501   */\n      dup1\n        /* \"#utility.yul\":15493:15505   */\n      revert\n        /* \"#utility.yul\":15471:15507   */\n    tag_570:\n        /* \"#utility.yul\":15541:15597   */\n      tag_571\n        /* \"#utility.yul\":15589:15596   */\n      dup10\n        /* \"#utility.yul\":15578:15586   */\n      dup3\n        /* \"#utility.yul\":15574:15576   */\n      dup6\n        /* \"#utility.yul\":15570:15587   */\n      add\n        /* \"#utility.yul\":15541:15597   */\n      tag_439\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15534:15538   */\n      0xa0\n        /* \"#utility.yul\":15523:15539   */\n      dup4\n      add\n        /* \"#utility.yul\":15516:15598   */\n      mstore\n      pop\n        /* \"#utility.yul\":15626:15628   */\n      0x20\n        /* \"#utility.yul\":15614:15629   */\n      dup4\n      add\n        /* \"#utility.yul\":15607:15637   */\n      mstore\n      pop\n        /* \"#utility.yul\":15676:15678   */\n      0x40\n        /* \"#utility.yul\":15668:15679   */\n      dup4\n      add\n        /* \"#utility.yul\":15662:15680   */\n      mload\n        /* \"#utility.yul\":15692:15708   */\n      dup3\n      dup2\n      gt\n        /* \"#utility.yul\":15689:15725   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":15721:15722   */\n      0x00\n        /* \"#utility.yul\":15718:15719   */\n      dup1\n        /* \"#utility.yul\":15711:15723   */\n      revert\n        /* \"#utility.yul\":15689:15725   */\n    tag_572:\n        /* \"#utility.yul\":15758:15835   */\n      tag_573\n        /* \"#utility.yul\":15827:15834   */\n      dup8\n        /* \"#utility.yul\":15816:15824   */\n      dup3\n        /* \"#utility.yul\":15812:15814   */\n      dup7\n        /* \"#utility.yul\":15808:15825   */\n      add\n        /* \"#utility.yul\":15758:15835   */\n      tag_442\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":15753:15755   */\n      0x40\n        /* \"#utility.yul\":15745:15751   */\n      dup4\n        /* \"#utility.yul\":15741:15756   */\n      add\n        /* \"#utility.yul\":15734:15836   */\n      mstore\n      pop\n        /* \"#utility.yul\":15869:15911   */\n      tag_574\n        /* \"#utility.yul\":15907:15909   */\n      0x60\n        /* \"#utility.yul\":15903:15905   */\n      dup5\n        /* \"#utility.yul\":15899:15910   */\n      add\n        /* \"#utility.yul\":15869:15911   */\n      tag_441\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":15864:15866   */\n      0x60\n        /* \"#utility.yul\":15856:15862   */\n      dup3\n        /* \"#utility.yul\":15852:15867   */\n      add\n        /* \"#utility.yul\":15845:15912   */\n      mstore\n        /* \"#utility.yul\":15946:15986   */\n      tag_575\n        /* \"#utility.yul\":15981:15984   */\n      0x80\n        /* \"#utility.yul\":15977:15979   */\n      dup5\n        /* \"#utility.yul\":15973:15985   */\n      add\n        /* \"#utility.yul\":15946:15986   */\n      tag_436\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":15940:15943   */\n      0x80\n        /* \"#utility.yul\":15928:15944   */\n      dup3\n      add\n        /* \"#utility.yul\":15921:15987   */\n      mstore\n        /* \"#utility.yul\":15932:15938   */\n      swap6\n        /* \"#utility.yul\":13932:16018   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16023:16150   */\n    tag_360:\n        /* \"#utility.yul\":16084:16094   */\n      0x4e487b71\n        /* \"#utility.yul\":16079:16082   */\n      0xe0\n        /* \"#utility.yul\":16075:16095   */\n      shl\n        /* \"#utility.yul\":16072:16073   */\n      0x00\n        /* \"#utility.yul\":16065:16096   */\n      mstore\n        /* \"#utility.yul\":16115:16119   */\n      0x32\n        /* \"#utility.yul\":16112:16113   */\n      0x04\n        /* \"#utility.yul\":16105:16120   */\n      mstore\n        /* \"#utility.yul\":16139:16143   */\n      0x24\n        /* \"#utility.yul\":16136:16137   */\n      0x00\n        /* \"#utility.yul\":16129:16144   */\n      revert\n        /* \"#utility.yul\":16155:17405   */\n    tag_369:\n        /* \"#utility.yul\":16451:16453   */\n      0x60\n        /* \"#utility.yul\":16463:16484   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16533:16546   */\n      dup5\n      mload\n        /* \"#utility.yul\":16436:16454   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16555:16577   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":16403:16407   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16631:16635   */\n      0x20\n      swap1\n        /* \"#utility.yul\":16608:16611   */\n      0x80\n        /* \"#utility.yul\":16593:16612   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":16658:16673   */\n      dup3\n      dup9\n      add\n        /* \"#utility.yul\":16403:16407   */\n      dup5\n        /* \"#utility.yul\":16701:16896   */\n    tag_578:\n        /* \"#utility.yul\":16715:16721   */\n      dup3\n        /* \"#utility.yul\":16712:16713   */\n      dup2\n        /* \"#utility.yul\":16709:16722   */\n      lt\n        /* \"#utility.yul\":16701:16896   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":16780:16793   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16776:16815   */\n      and\n        /* \"#utility.yul\":16764:16816   */\n      dup5\n      mstore\n        /* \"#utility.yul\":16836:16848   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":16871:16886   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":16812:16813   */\n      0x01\n        /* \"#utility.yul\":16730:16739   */\n      add\n        /* \"#utility.yul\":16701:16896   */\n      jump(tag_578)\n    tag_580:\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16932:16951   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":16912:16930   */\n      dup3\n      dup6\n      add\n        /* \"#utility.yul\":16905:16952   */\n      mstore\n        /* \"#utility.yul\":17002:17015   */\n      dup6\n      mload\n        /* \"#utility.yul\":17024:17045   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17100:17115   */\n      dup7\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":17063:17075   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":17135:17136   */\n      0x00\n        /* \"#utility.yul\":17145:17334   */\n    tag_581:\n        /* \"#utility.yul\":17161:17169   */\n      dup2\n        /* \"#utility.yul\":17156:17159   */\n      dup2\n        /* \"#utility.yul\":17153:17170   */\n      lt\n        /* \"#utility.yul\":17145:17334   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":17230:17245   */\n      dup4\n      mload\n        /* \"#utility.yul\":17216:17246   */\n      dup4\n      mstore\n        /* \"#utility.yul\":17307:17324   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":17268:17282   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":17189:17190   */\n      0x01\n        /* \"#utility.yul\":17180:17191   */\n      add\n        /* \"#utility.yul\":17145:17334   */\n      jump(tag_581)\n    tag_583:\n        /* \"#utility.yul\":17149:17152   */\n      pop\n      pop\n        /* \"#utility.yul\":17351:17356   */\n      dup1\n        /* \"#utility.yul\":17343:17356   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17392:17398   */\n      dup3\n        /* \"#utility.yul\":17387:17389   */\n      0x40\n        /* \"#utility.yul\":17376:17385   */\n      dup4\n        /* \"#utility.yul\":17372:17390   */\n      add\n        /* \"#utility.yul\":17365:17399   */\n      mstore\n        /* \"#utility.yul\":16155:17405   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17697:17984   */\n    tag_402:\n        /* \"#utility.yul\":17826:17829   */\n      0x00\n        /* \"#utility.yul\":17864:17870   */\n      dup3\n        /* \"#utility.yul\":17858:17871   */\n      mload\n        /* \"#utility.yul\":17880:17946   */\n      tag_586\n        /* \"#utility.yul\":17939:17945   */\n      dup2\n        /* \"#utility.yul\":17934:17937   */\n      dup5\n        /* \"#utility.yul\":17927:17931   */\n      0x20\n        /* \"#utility.yul\":17919:17925   */\n      dup8\n        /* \"#utility.yul\":17915:17932   */\n      add\n        /* \"#utility.yul\":17880:17946   */\n      tag_438\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":17962:17978   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":17697:17984   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n    data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43 9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00\n\n    auxdata: 0xa2646970667358221220ebfa0740fd3fedcf63c0bf74daa353485f4f7ecb6ca40b0fdeaa7c60d0dca1b764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50611d588061001d5f395ff3fe60806040526004361061013c575f3560e01c80637d9f6db5116100b3578063ce9c7c0d1161006d578063ce9c7c0d14610393578063db2e1eed146103b2578063ec91f2a4146103c7578063f25efffc146103dc578063f2fde38b146103f0578063fe95233b1461040f575f80fd5b80637d9f6db51461029a5780638456cb591461030d5780638da5cb5b14610321578063a4d0a17e14610335578063a910d31814610349578063b296024d14610368575f80fd5b80633f4ba83a116101045780633f4ba83a146101f35780633fc8cef3146102075780635c975abb14610226578063659dd2b4146102545780637120334b14610267578063715018a614610286575f80fd5b80630284464a146101405780630802be0a1461017b5780630fb5a6b41461019e57806336ebdb38146101b35780633d64baf1146101d4575b5f80fd5b34801561014b575f80fd5b505f5461015e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610186575f80fd5b5061019060065481565b604051908152602001610172565b3480156101a9575f80fd5b5061019060085481565b3480156101be575f80fd5b506101d26101cd366004611629565b610424565b005b3480156101df575f80fd5b5060015461015e906001600160a01b031681565b3480156101fe575f80fd5b506101d2610475565b348015610212575f80fd5b5060025461015e906001600160a01b031681565b348015610231575f80fd5b505f80516020611ce38339815191525460ff166040519015158152602001610172565b6101d2610262366004611649565b6104ac565b348015610272575f80fd5b506101d2610281366004611649565b6107a4565b348015610291575f80fd5b506101d26107e1565b3480156102a5575f80fd5b50600954600a54600b54600c54600d546102d594939291906001600160a01b03811690600160a01b900460ff1686565b6040805196875260208701959095529385019290925260608401526001600160a01b03166080830152151560a082015260c001610172565b348015610318575f80fd5b506101d26107f2565b34801561032c575f80fd5b5061015e610802565b348015610340575f80fd5b506101d2610830565b348015610354575f80fd5b506101d2610363366004611674565b61085e565b348015610373575f80fd5b506005546103819060ff1681565b60405160ff9091168152602001610172565b34801561039e575f80fd5b506101d26103ad366004611649565b610a3b565b3480156103bd575f80fd5b5061019060045481565b3480156103d2575f80fd5b5061019060035481565b3480156103e7575f80fd5b506101d2610a78565b3480156103fb575f80fd5b506101d261040a36600461170d565b610a98565b34801561041a575f80fd5b5061019060075481565b61042c610ad2565b6005805460ff191660ff83169081179091556040519081527fec5ccd96cc77b6219e9d44143df916af68fc169339ea7de5008ff15eae13450d906020015b60405180910390a150565b61047d610ad2565b610485610b04565b600b54158061049d5750600d54600160a01b900460ff165b156104aa576104aa610b5d565b565b6104b4610cac565b6040805160c081018252600954808252600a546020830152600b5492820192909252600c546060820152600d546001600160a01b0381166080830152600160a01b900460ff16151560a08201529082146105555760405162461bcd60e51b815260206004820152601760248201527f56657262206e6f7420757020666f722061756374696f6e00000000000000000060448201526064015b60405180910390fd5b8060600151421061059a5760405162461bcd60e51b815260206004820152600f60248201526e105d58dd1a5bdb88195e1c1a5c9959608a1b604482015260640161054c565b6004543410156105ec5760405162461bcd60e51b815260206004820152601f60248201527f4d7573742073656e64206174206c656173742072657365727665507269636500604482015260640161054c565b60055460208201516064916106069160ff9091169061173c565b6106109190611753565b816020015161061f9190611772565b341015610696576040805162461bcd60e51b81526020600482015260248101919091527f4d7573742073656e64206d6f7265207468616e206c617374206269642062792060448201527f6d696e426964496e6372656d656e7450657263656e7461676520616d6f756e74606482015260840161054c565b60808101516001600160a01b038116156106b8576106b8818360200151610ce3565b34600a55600d80546001600160a01b0319163317905560035460608301515f91906106e4904290611785565b1090508015610705576003546106fa9042611772565b60608401819052600c555b8251604080513381523460208201528315158183015290517f1159164c56f277e6fc99c11731bd380e0347deb969b75523398734c252706ea39181900360600190a2801561078857825160608401516040519081527f6e912a3a9105bdd2af817ba5adc14e6c127c1035b5b648faa29ca0d58ab8ff4e9060200160405180910390a25b5050506107a160015f80516020611d0383398151915255565b50565b6107ac610ad2565b60038190556040518181527f1b55d9f7002bda4490f467e326f22a4a847629c0f2d1ed421607d318d25b410d9060200161046a565b6107e9610ad2565b6104aa5f610de3565b6107fa610ad2565b6104aa610e53565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b610838610e9b565b610840610cac565b610848610eca565b6104aa60015f80516020611d0383398151915255565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156108a35750825b90505f8267ffffffffffffffff1660011480156108bf5750303b155b9050811580156108cd575080155b156108eb5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561091557845460ff60401b1916600160401b1785555b61091d61146a565b61092561147a565b61092e8c61148a565b610936610e53565b8e5f806101000a8154816001600160a01b0302191690836001600160a01b031602179055508d60015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055508c60025f6101000a8154816001600160a01b0302191690836001600160a01b031602179055508a600381905550896004819055508860055f6101000a81548160ff021916908360ff1602179055508760088190555086600681905550856007819055508315610a2a57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050505050505050565b610a43610ad2565b60048190556040518181527f6ab2e127d7fdf53b8f304e59d3aab5bfe97979f52a85479691a6fab27a28a6b29060200161046a565b610a80610cac565b610a8861149b565b610a90610eca565b610848610b5d565b610aa0610ad2565b6001600160a01b038116610ac957604051631e4fbdf760e01b81525f600482015260240161054c565b6107a181610de3565b33610adb610802565b6001600160a01b0316146104aa5760405163118cdaa760e01b815233600482015260240161054c565b610b0c610e9b565b5f80516020611ce3833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200161046a565b5f8054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b81526004016020604051808303815f875af1925050508015610bca575060408051601f3d908101601f19168201909252610bc791810190611798565b60015b610c0757610bd66117af565b806308c379a003610bfd5750610bea61184f565b80610bf55750610bff565b6107a1610e53565b505b3d5f803e3d5ffd5b60085442905f90610c189083611772565b6040805160c0810182528581525f6020808301829052828401879052606083018590526080830182905260a09092018190526009879055600a55600b859055600c839055600d80546001600160a81b0319169055815185815290810183905291925084917fd6eddd1118d71820909c1197aa966dbc15ed6f508554252169cc3d5ccac756ca910160405180910390a2505050565b5f80516020611d03833981519152805460011901610cdd57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b610ced82826114cb565b610dcc5760025f9054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b158015610d3e575f80fd5b505af1158015610d50573d5f803e3d5ffd5b505060025460405163a9059cbb60e01b81526001600160a01b03878116600483015260248201879052909116935063a9059cbb925060440190506020604051808303815f875af1158015610da6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dca91906118e7565b505b5050565b60015f80516020611d0383398151915255565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b610e5b61149b565b5f80516020611ce3833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610b45565b5f80516020611ce38339815191525460ff166104aa57604051638dfc202b60e01b815260040160405180910390fd5b6040805160c0810182526009548152600a546020820152600b54918101829052600c546060820152600d546001600160a01b0381166080830152600160a01b900460ff16151560a0820152905f03610f5b5760405162461bcd60e51b815260206004820152601460248201527320bab1ba34b7b7103430b9b713ba103132b3bab760611b604482015260640161054c565b8060a0015115610fad5760405162461bcd60e51b815260206004820181905260248201527f41756374696f6e2068617320616c7265616479206265656e20736574746c6564604482015260640161054c565b80606001514210156110015760405162461bcd60e51b815260206004820152601860248201527f41756374696f6e206861736e277420636f6d706c657465640000000000000000604482015260640161054c565b600d805460ff60a01b1916600160a01b17905560808101516001600160a01b031661108b575f548151604051630852cd8d60e31b81526001600160a01b03909216916342966c68916110599160040190815260200190565b5f604051808303815f87803b158015611070575f80fd5b505af1158015611082573d5f803e3d5ffd5b505050506110f9565b5f54608082015182516040516323b872dd60e01b81523060048201526001600160a01b03928316602482015260448101919091529116906323b872dd906064015f604051808303815f87803b1580156110e2575f80fd5b505af11580156110f4573d5f803e3d5ffd5b505050505b60208101511561141a575f61112c611124836020015160065461271061111f9190611900565b611547565b612710611578565b90505f81836020015161113f9190611785565b90505f61115161112483600754611547565b90505f61115e8284611785565b5f805487516040516324d19ab160e11b8152600481019190915292935090916001600160a01b03909116906349a33562906024015f60405180830381865afa1580156111ac573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111d39190810190611aa6565b604001515190505f8167ffffffffffffffff8111156111f4576111f46117c8565b60405190808252806020026020018201604052801561121d578160200160208202803683370190505b5090505f8267ffffffffffffffff81111561123a5761123a6117c8565b604051908082528060200260200182016040528015611263578160200160208202803683370190505b509050611277611271610802565b88610ce3565b5f5b83811015611399575f80548a516040516324d19ab160e11b81526001600160a01b03909216916349a33562916112b59160040190815260200190565b5f60405180830381865afa1580156112cf573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526112f69190810190611aa6565b60400151828151811061130b5761130b611c28565b60200260200101519050805f015184838151811061132b5761132b611c28565b60200260200101906001600160a01b031690816001600160a01b031681525050806020015183838151811061136257611362611c28565b6020026020010181815250505f611380611124898460200151611547565b905061138f825f015182610ce3565b5050600101611279565b5060015460405163dec86df160e01b81526001600160a01b039091169063dec86df19086906113d090869086908490600401611c3c565b60206040518083038185885af11580156113ec573d5f803e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906114119190611798565b50505050505050505b80516080820151602080840151604080516001600160a01b039094168452918301527fc9f72b276a388619c6d185d146697036241880c36654b1a3ffdad07c24038d99910160405180910390a250565b61147261159b565b6104aa6115e4565b61148261159b565b6104aa611604565b61149261159b565b6107a18161160c565b5f80516020611ce38339815191525460ff16156104aa5760405163d93c066560e01b815260040160405180910390fd5b604080515f8082526020820190925281906001600160a01b038516906175309085906040516114fa9190611cc7565b5f60405180830381858888f193505050503d805f8114611535576040519150601f19603f3d011682016040523d82523d5f602084013e61153a565b606091505b5090925050505b92915050565b81810282158382058314175f198410600160ff1b84131716611567575f80fd5b670de0b6b3a7640000900592915050565b670de0b6b3a7640000828102908105831482151516611595575f80fd5b05919050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166104aa57604051631afcd79f60e31b815260040160405180910390fd5b6115ec61159b565b5f80516020611ce3833981519152805460ff19169055565b610dd061159b565b610aa061159b565b803560ff81168114611624575f80fd5b919050565b5f60208284031215611639575f80fd5b61164282611614565b9392505050565b5f60208284031215611659575f80fd5b5035919050565b6001600160a01b03811681146107a1575f80fd5b5f805f805f805f805f806101408b8d03121561168e575f80fd5b8a3561169981611660565b995060208b01356116a981611660565b985060408b01356116b981611660565b975060608b01356116c981611660565b965060808b0135955060a08b013594506116e560c08c01611614565b935060e08b013592506101008b013591506101208b013590509295989b9194979a5092959850565b5f6020828403121561171d575f80fd5b813561164281611660565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761154157611541611728565b5f8261176d57634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561154157611541611728565b8181038181111561154157611541611728565b5f602082840312156117a8575f80fd5b5051919050565b5f60033d11156117c55760045f803e505f5160e01c5b90565b634e487b7160e01b5f52604160045260245ffd5b6040810181811067ffffffffffffffff821117156117fc576117fc6117c8565b60405250565b60a0810181811067ffffffffffffffff821117156117fc576117fc6117c8565b601f8201601f1916810167ffffffffffffffff81118282101715611848576118486117c8565b6040525050565b5f60443d101561185c5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561188c57505050505090565b82850191508151818111156118a45750505050505090565b843d87010160208285010111156118be5750505050505090565b6118cd60208286010187611822565b509095945050505050565b80518015158114611624575f80fd5b5f602082840312156118f7575f80fd5b611642826118d8565b8181035f83128015838313168383128216171561191f5761191f611728565b5092915050565b60405160c0810167ffffffffffffffff81118282101715611949576119496117c8565b60405290565b5f5b83811015611969578181015183820152602001611951565b50505f910152565b5f82601f830112611980575f80fd5b815167ffffffffffffffff81111561199a5761199a6117c8565b6040516119b1601f8301601f191660200182611822565b8181528460208386010111156119c5575f80fd5b6119d682602083016020870161194f565b949350505050565b805160068110611624575f80fd5b805161162481611660565b5f82601f830112611a06575f80fd5b8151602067ffffffffffffffff821115611a2257611a226117c8565b60408051611a35838560051b0182611822565b83815260069390931b850182019282810187851115611a52575f80fd5b8387015b85811015611a995783818a031215611a6c575f80fd5b8351611a77816117dc565b8151611a8281611660565b815281860151868201528252908401908301611a56565b5090979650505050505050565b5f60208284031215611ab6575f80fd5b815167ffffffffffffffff80821115611acd575f80fd5b9083019060a08286031215611ae0575f80fd5b604051611aec81611802565b82518152602083015182811115611b01575f80fd5b830160c08188031215611b12575f80fd5b611b1a611926565b815184811115611b28575f80fd5b611b3489828501611971565b825250602082015184811115611b48575f80fd5b611b5489828501611971565b602083015250611b66604083016119de565b6040820152606082015184811115611b7c575f80fd5b611b8889828501611971565b606083015250608082015184811115611b9f575f80fd5b611bab89828501611971565b60808301525060a082015184811115611bc2575f80fd5b611bce89828501611971565b60a083015250602083015250604083015182811115611beb575f80fd5b611bf7878286016119f7565b604083015250611c09606084016119ec565b6060820152611c1a608084016118d8565b608082015295945050505050565b634e487b7160e01b5f52603260045260245ffd5b606080825284519082018190525f906020906080840190828801845b82811015611c7d5781516001600160a01b031684529284019290840190600101611c58565b505050838103828501528551808252868301918301905f5b81811015611cb157835183529284019291840191600101611c95565b5050809350505050826040830152949350505050565b5f8251611cd881846020870161194f565b919091019291505056fecd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220ebfa0740fd3fedcf63c0bf74daa353485f4f7ecb6ca40b0fdeaa7c60d0dca1b764736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D58 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D9F6DB5 GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xCE9C7C0D GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xCE9C7C0D EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xDB2E1EED EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xEC91F2A4 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xF25EFFFC EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xFE95233B EQ PUSH2 0x40F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D9F6DB5 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xA4D0A17E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xA910D318 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xB296024D EQ PUSH2 0x368 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x659DD2B4 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x7120334B EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x284464A EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x802BE0A EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x36EBDB38 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x3D64BAF1 EQ PUSH2 0x1D4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1629 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x475 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x7E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH2 0x2D5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x7F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x802 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x830 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x1674 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x381 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0xA78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x42C PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xEC5CCD96CC77B6219E9D44143DF916AF68FC169339EA7DE5008FF15EAE13450D SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x47D PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x485 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0xB SLOAD ISZERO DUP1 PUSH2 0x49D JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x4AA JUMPI PUSH2 0x4AA PUSH2 0xB5D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x9 SLOAD DUP1 DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xB SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 DUP3 EQ PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657262206E6F7420757020666F722061756374696F6E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD TIMESTAMP LT PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105D58DD1A5BDB88195E1C1A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54C JUMP JUMPDEST PUSH1 0x4 SLOAD CALLVALUE LT ISZERO PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E64206174206C656173742072657365727665507269636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x64 SWAP2 PUSH2 0x606 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x173C JUMP JUMPDEST PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x1772 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x696 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x4D7573742073656E64206D6F7265207468616E206C6173742062696420627920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D696E426964496E6372656D656E7450657263656E7461676520616D6F756E74 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54C JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x6B8 DUP2 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xCE3 JUMP JUMPDEST CALLVALUE PUSH1 0xA SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH0 SWAP2 SWAP1 PUSH2 0x6E4 SWAP1 TIMESTAMP SWAP1 PUSH2 0x1785 JUMP JUMPDEST LT SWAP1 POP DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x3 SLOAD PUSH2 0x6FA SWAP1 TIMESTAMP PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xC SSTORE JUMPDEST DUP3 MLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE DUP4 ISZERO ISZERO DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x1159164C56F277E6FC99C11731BD380E0347DEB969B75523398734C252706EA3 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 DUP1 ISZERO PUSH2 0x788 JUMPI DUP3 MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x6E912A3A9105BDD2AF817BA5ADC14E6C127C1035B5B648FAA29CA0D58AB8FF4E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP PUSH2 0x7A1 PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D03 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7AC PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x1B55D9F7002BDA4490F467E326F22A4A847629C0F2D1ED421607D318D25B410D SWAP1 PUSH1 0x20 ADD PUSH2 0x46A JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x4AA PUSH0 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x7FA PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x4AA PUSH2 0xE53 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x838 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x840 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x848 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x4AA PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D03 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x8A3 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x8BF JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x8CD JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x915 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x91D PUSH2 0x146A JUMP JUMPDEST PUSH2 0x925 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x92E DUP13 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x936 PUSH2 0xE53 JUMP JUMPDEST DUP15 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP14 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP13 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xA2A JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA43 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x6AB2E127D7FDF53B8F304E59D3AAB5BFE97979F52A85479691A6FAB27A28A6B2 SWAP1 PUSH1 0x20 ADD PUSH2 0x46A JUMP JUMPDEST PUSH2 0xA80 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0xA88 PUSH2 0x149B JUMP JUMPDEST PUSH2 0xA90 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x848 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xAA0 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54C JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0xDE3 JUMP JUMPDEST CALLER PUSH2 0xADB PUSH2 0x802 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54C JUMP JUMPDEST PUSH2 0xB0C PUSH2 0xE9B JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x46A JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1249C58B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBCA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBC7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1798 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC07 JUMPI PUSH2 0xBD6 PUSH2 0x17AF JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xBFD JUMPI POP PUSH2 0xBEA PUSH2 0x184F JUMP JUMPDEST DUP1 PUSH2 0xBF5 JUMPI POP PUSH2 0xBFF JUMP JUMPDEST PUSH2 0x7A1 PUSH2 0xE53 JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP SWAP1 PUSH0 SWAP1 PUSH2 0xC18 SWAP1 DUP4 PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 DUP8 SWAP1 SSTORE PUSH1 0xA SSTORE PUSH1 0xB DUP6 SWAP1 SSTORE PUSH1 0xC DUP4 SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP5 SWAP2 PUSH32 0xD6EDDD1118D71820909C1197AA966DBC15ED6F508554252169CC3D5CCAC756CA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D03 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0xCDD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xCED DUP3 DUP3 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0xDCC JUMPI PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD50 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP4 POP PUSH4 0xA9059CBB SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D03 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x149B JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0xB45 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0xA SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xB SLOAD SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 PUSH0 SUB PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x20BAB1BA34B7B7103430B9B713BA103132B3BAB7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54C JUMP JUMPDEST DUP1 PUSH1 0xA0 ADD MLOAD ISZERO PUSH2 0xFAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756374696F6E2068617320616C7265616479206265656E20736574746C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54C JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756374696F6E206861736E277420636F6D706C657465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54C JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x108B JUMPI PUSH0 SLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x42966C68 SWAP2 PUSH2 0x1059 SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1070 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1082 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x10F9 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x80 DUP3 ADD MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD ISZERO PUSH2 0x141A JUMPI PUSH0 PUSH2 0x112C PUSH2 0x1124 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x6 SLOAD PUSH2 0x2710 PUSH2 0x111F SWAP2 SWAP1 PUSH2 0x1900 JUMP JUMPDEST PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1578 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x113F SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1151 PUSH2 0x1124 DUP4 PUSH1 0x7 SLOAD PUSH2 0x1547 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x115E DUP3 DUP5 PUSH2 0x1785 JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP8 MLOAD PUSH1 0x40 MLOAD PUSH4 0x24D19AB1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x49A33562 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x11D3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 ADD MLOAD MLOAD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F4 JUMPI PUSH2 0x11F4 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x121D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x123A JUMPI PUSH2 0x123A PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1263 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0x1277 PUSH2 0x1271 PUSH2 0x802 JUMP JUMPDEST DUP9 PUSH2 0xCE3 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1399 JUMPI PUSH0 DUP1 SLOAD DUP11 MLOAD PUSH1 0x40 MLOAD PUSH4 0x24D19AB1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x49A33562 SWAP2 PUSH2 0x12B5 SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x12F6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x130B JUMPI PUSH2 0x130B PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x132B JUMPI PUSH2 0x132B PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP1 PUSH1 0x20 ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1362 JUMPI PUSH2 0x1362 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 PUSH2 0x1380 PUSH2 0x1124 DUP10 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1547 JUMP JUMPDEST SWAP1 POP PUSH2 0x138F DUP3 PUSH0 ADD MLOAD DUP3 PUSH2 0xCE3 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1279 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xDEC86DF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDEC86DF1 SWAP1 DUP7 SWAP1 PUSH2 0x13D0 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1411 SWAP2 SWAP1 PUSH2 0x1798 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST DUP1 MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 DUP4 ADD MSTORE PUSH32 0xC9F72B276A388619C6D185D146697036241880C36654B1A3FFDAD07C24038D99 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1472 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x4AA PUSH2 0x15E4 JUMP JUMPDEST PUSH2 0x1482 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x4AA PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x1492 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x160C JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH2 0x7530 SWAP1 DUP6 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x14FA SWAP2 SWAP1 PUSH2 0x1CC7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1535 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x153A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 MUL DUP3 ISZERO DUP4 DUP3 SDIV DUP4 EQ OR PUSH0 NOT DUP5 LT PUSH1 0x1 PUSH1 0xFF SHL DUP5 SGT OR AND PUSH2 0x1567 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 DUP2 MUL SWAP1 DUP2 SDIV DUP4 EQ DUP3 ISZERO ISZERO AND PUSH2 0x1595 JUMPI PUSH0 DUP1 REVERT JUMPDEST SDIV SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15EC PUSH2 0x159B JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDD0 PUSH2 0x159B JUMP JUMPDEST PUSH2 0xAA0 PUSH2 0x159B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1624 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1639 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1642 DUP3 PUSH2 0x1614 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1659 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x168E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD PUSH2 0x1699 DUP2 PUSH2 0x1660 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD PUSH2 0x16A9 DUP2 PUSH2 0x1660 JUMP JUMPDEST SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD PUSH2 0x16B9 DUP2 PUSH2 0x1660 JUMP JUMPDEST SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD PUSH2 0x16C9 DUP2 PUSH2 0x1660 JUMP JUMPDEST SWAP7 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH2 0x16E5 PUSH1 0xC0 DUP13 ADD PUSH2 0x1614 JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP12 ADD CALLDATALOAD SWAP3 POP PUSH2 0x100 DUP12 ADD CALLDATALOAD SWAP2 POP PUSH2 0x120 DUP12 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1642 DUP2 PUSH2 0x1660 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x1728 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x176D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x1728 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x1728 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x4 PUSH0 DUP1 RETURNDATACOPY POP PUSH0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FC PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MSTORE POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FC PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1848 JUMPI PUSH2 0x1848 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x185C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x188C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x18A4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x18BE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x18CD PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1822 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1624 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1642 DUP3 PUSH2 0x18D8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH0 DUP4 SLT DUP1 ISZERO DUP4 DUP4 SGT AND DUP4 DUP4 SLT DUP3 AND OR ISZERO PUSH2 0x191F JUMPI PUSH2 0x191F PUSH2 0x1728 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1949 JUMPI PUSH2 0x1949 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1969 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1951 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1980 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x199A JUMPI PUSH2 0x199A PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1822 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x19C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x19D6 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x194F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 DUP2 LT PUSH2 0x1624 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1624 DUP2 PUSH2 0x1660 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A06 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A22 JUMPI PUSH2 0x1A22 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1A35 DUP4 DUP6 PUSH1 0x5 SHL ADD DUP3 PUSH2 0x1822 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD DUP8 DUP6 GT ISZERO PUSH2 0x1A52 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A99 JUMPI DUP4 DUP2 DUP11 SUB SLT ISZERO PUSH2 0x1A6C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x1A77 DUP2 PUSH2 0x17DC JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1A82 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP2 MSTORE DUP2 DUP7 ADD MLOAD DUP7 DUP3 ADD MSTORE DUP3 MSTORE SWAP1 DUP5 ADD SWAP1 DUP4 ADD PUSH2 0x1A56 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1ACD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0xA0 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x1AE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AEC DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1B01 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0xC0 DUP2 DUP9 SUB SLT ISZERO PUSH2 0x1B12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B1A PUSH2 0x1926 JUMP JUMPDEST DUP2 MLOAD DUP5 DUP2 GT ISZERO PUSH2 0x1B28 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B34 DUP10 DUP3 DUP6 ADD PUSH2 0x1971 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP5 DUP2 GT ISZERO PUSH2 0x1B48 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B54 DUP10 DUP3 DUP6 ADD PUSH2 0x1971 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH2 0x1B66 PUSH1 0x40 DUP4 ADD PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP5 DUP2 GT ISZERO PUSH2 0x1B7C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B88 DUP10 DUP3 DUP6 ADD PUSH2 0x1971 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP5 DUP2 GT ISZERO PUSH2 0x1B9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BAB DUP10 DUP3 DUP6 ADD PUSH2 0x1971 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP5 DUP2 GT ISZERO PUSH2 0x1BC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BCE DUP10 DUP3 DUP6 ADD PUSH2 0x1971 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1BEB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BF7 DUP8 DUP3 DUP7 ADD PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH2 0x1C09 PUSH1 0x60 DUP5 ADD PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C1A PUSH1 0x80 DUP5 ADD PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C7D JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C58 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP7 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CB1 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C95 JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1CD8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x194F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID 0xCD 0x5E 0xD1 0x5C PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F033009B779B17422D0DF92223018B32B4D1FA46E071723D6817 0xE2 BASEFEE PUSH14 0x3BECC55F00A264697066735822 SLT KECCAK256 0xEB STATICCALL SMOD BLOCKHASH REVERT EXTCODEHASH 0xED 0xCF PUSH4 0xC0BF74DA LOG3 MSTORE8 BASEFEE PUSH0 0x4F PUSH31 0xCB6CA40B0FDEAA7C60D0DCA1B764736F6C6343000816003300000000000000 ",
							"sourceMap": "2166:9966:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_54": {
									"entryPoint": 5258,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 5644,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_538": {
									"entryPoint": 5226,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_556": {
									"entryPoint": 5604,
									"id": 556,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_702": {
									"entryPoint": 5242,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_720": {
									"entryPoint": 5636,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 5531,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 2770,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_createAuction_1519": {
									"entryPoint": 2909,
									"id": 1519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_512": {
									"entryPoint": null,
									"id": 512,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getReentrancyGuardStorage_690": {
									"entryPoint": null,
									"id": 690,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_476": {
									"entryPoint": null,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_772": {
									"entryPoint": 3536,
									"id": 772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_756": {
									"entryPoint": 3244,
									"id": 756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_637": {
									"entryPoint": 3667,
									"id": 637,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_600": {
									"entryPoint": 5275,
									"id": 600,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_613": {
									"entryPoint": 3739,
									"id": 613,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_safeTransferETHWithFallback_1806": {
									"entryPoint": 3299,
									"id": 1806,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeTransferETH_1832": {
									"entryPoint": 5323,
									"id": 1832,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_settleAuction_1774": {
									"entryPoint": 3786,
									"id": 1774,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 3555,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_661": {
									"entryPoint": 2820,
									"id": 661,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@auction_1130": {
									"entryPoint": null,
									"id": 1130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createBid_1378": {
									"entryPoint": 1196,
									"id": 1378,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@creatorRateBps_1123": {
									"entryPoint": null,
									"id": 1123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@duration_1127": {
									"entryPoint": null,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@entropyRateBps_1125": {
									"entryPoint": null,
									"id": 1125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1208": {
									"entryPoint": 2142,
									"id": 1208,
									"parameterSlots": 10,
									"returnSlots": 0
								},
								"@minBidIncrementPercentage_1121": {
									"entryPoint": null,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 2050,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1389": {
									"entryPoint": 2034,
									"id": 1389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_588": {
									"entryPoint": null,
									"id": 588,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 2017,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reservePrice_1119": {
									"entryPoint": null,
									"id": 1119,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMinBidIncrementPercentage_1466": {
									"entryPoint": 1060,
									"id": 1466,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setReservePrice_1448": {
									"entryPoint": 2619,
									"id": 1448,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTimeBuffer_1430": {
									"entryPoint": 1956,
									"id": 1430,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@settleAuction_1237": {
									"entryPoint": 2096,
									"id": 1237,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@settleCurrentAndCreateNewAuction_1224": {
									"entryPoint": 2680,
									"id": 1224,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@timeBuffer_1117": {
									"entryPoint": null,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenEmitter_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 2712,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1412": {
									"entryPoint": 1141,
									"id": 1412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verbs_1110": {
									"entryPoint": null,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@wadDiv_2392": {
									"entryPoint": 5496,
									"id": 2392,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@wadMul_2381": {
									"entryPoint": 5447,
									"id": 2381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@weth_1115": {
									"entryPoint": null,
									"id": 1115,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_struct_CreatorBps_dyn_fromMemory": {
									"entryPoint": 6647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 6360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_enum_MediaType_fromMemory": {
									"entryPoint": 6622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IVerbsToken_$2294t_contract$_ITokenEmitter_$2089t_addresst_addresst_uint256t_uint256t_uint8t_uint256t_uint256t_uint256": {
									"entryPoint": 5748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 10
								},
								"abi_decode_tuple_t_struct$_ArtPiece_$1940_memory_ptr_fromMemory": {
									"entryPoint": 6822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 5673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint8": {
									"entryPoint": 5652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITokenEmitter_$2089__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IVerbsToken_$2294__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59b32fee736cce03c77d145dd4099c3c4e1280b1dad0ad62e9e284b4fe62ad45__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f1114d8c4309959c51172c5707cbe6c55f2c078aa19616a59453fa69d73427a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f6e4cc8ee899178a4d47355e8312bf3a9810f0590ac98868c4bf7cd29669038__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b513ed4150a8292a1ae14f1a03ea954ba5eafbfd85827e99d503d442fdc652b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b9c19275b9276d9745a484d1a2df68f7756a1cb166850daf9e0b5df0b846571__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e27b8c83269c21fc917b88c4e1199f3cd97455682e8857f3f234160d3fa4df70__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee94e7592a7417cc94816663e1b9b9938c69730980c3cab7a8fbc54ac5aa729f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_payable_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_payable_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6479,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_2591": {
									"entryPoint": 6108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_2594": {
									"entryPoint": 6146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 6223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_contract_IVerbsToken": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17986:17",
										"nodeType": "YulBlock",
										"src": "0:17986:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:102:17",
													"nodeType": "YulBlock",
													"src": "135:102:17",
													"statements": [
														{
															"nativeSrc": "145:26:17",
															"nodeType": "YulAssignment",
															"src": "145:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "157:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "157:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "168:2:17",
																		"nodeType": "YulLiteral",
																		"src": "168:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "153:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "153:3:17"
																},
																"nativeSrc": "153:18:17",
																"nodeType": "YulFunctionCall",
																"src": "153:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "145:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "145:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "187:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "187:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "202:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "202:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "218:3:17",
																								"nodeType": "YulLiteral",
																								"src": "218:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "223:1:17",
																								"nodeType": "YulLiteral",
																								"src": "223:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "214:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "214:3:17"
																						},
																						"nativeSrc": "214:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "214:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "227:1:17",
																						"nodeType": "YulLiteral",
																						"src": "227:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "210:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "210:3:17"
																				},
																				"nativeSrc": "210:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "210:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "198:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:17"
																		},
																		"nativeSrc": "198:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "198:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "180:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "180:6:17"
																},
																"nativeSrc": "180:51:17",
																"nodeType": "YulFunctionCall",
																"src": "180:51:17"
															},
															"nativeSrc": "180:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "180:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IVerbsToken_$2294__to_t_address__fromStack_reversed",
												"nativeSrc": "14:223:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:17",
														"nodeType": "YulTypedName",
														"src": "104:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:17",
														"nodeType": "YulTypedName",
														"src": "115:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:17",
														"nodeType": "YulTypedName",
														"src": "126:4:17",
														"type": ""
													}
												],
												"src": "14:223:17"
											},
											{
												"body": {
													"nativeSrc": "343:76:17",
													"nodeType": "YulBlock",
													"src": "343:76:17",
													"statements": [
														{
															"nativeSrc": "353:26:17",
															"nodeType": "YulAssignment",
															"src": "353:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "365:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "365:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "376:2:17",
																		"nodeType": "YulLiteral",
																		"src": "376:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "361:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "361:3:17"
																},
																"nativeSrc": "361:18:17",
																"nodeType": "YulFunctionCall",
																"src": "361:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "353:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "353:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "395:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "406:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "406:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "388:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "388:6:17"
																},
																"nativeSrc": "388:25:17",
																"nodeType": "YulFunctionCall",
																"src": "388:25:17"
															},
															"nativeSrc": "388:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "388:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "242:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "312:9:17",
														"nodeType": "YulTypedName",
														"src": "312:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "323:6:17",
														"nodeType": "YulTypedName",
														"src": "323:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "334:4:17",
														"nodeType": "YulTypedName",
														"src": "334:4:17",
														"type": ""
													}
												],
												"src": "242:177:17"
											},
											{
												"body": {
													"nativeSrc": "471:109:17",
													"nodeType": "YulBlock",
													"src": "471:109:17",
													"statements": [
														{
															"nativeSrc": "481:29:17",
															"nodeType": "YulAssignment",
															"src": "481:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "503:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "503:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "490:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "490:12:17"
																},
																"nativeSrc": "490:20:17",
																"nodeType": "YulFunctionCall",
																"src": "490:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "481:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "481:5:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "558:16:17",
																"nodeType": "YulBlock",
																"src": "558:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "567:1:17",
																					"nodeType": "YulLiteral",
																					"src": "567:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "570:1:17",
																					"nodeType": "YulLiteral",
																					"src": "570:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "560:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "560:6:17"
																			},
																			"nativeSrc": "560:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "560:12:17"
																		},
																		"nativeSrc": "560:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "560:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "532:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "532:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "543:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "543:5:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "550:4:17",
																						"nodeType": "YulLiteral",
																						"src": "550:4:17",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "539:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "539:3:17"
																				},
																				"nativeSrc": "539:16:17",
																				"nodeType": "YulFunctionCall",
																				"src": "539:16:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "529:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "529:2:17"
																		},
																		"nativeSrc": "529:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "529:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "522:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "522:6:17"
																},
																"nativeSrc": "522:35:17",
																"nodeType": "YulFunctionCall",
																"src": "522:35:17"
															},
															"nativeSrc": "519:55:17",
															"nodeType": "YulIf",
															"src": "519:55:17"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nativeSrc": "424:156:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "450:6:17",
														"nodeType": "YulTypedName",
														"src": "450:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "461:5:17",
														"nodeType": "YulTypedName",
														"src": "461:5:17",
														"type": ""
													}
												],
												"src": "424:156:17"
											},
											{
												"body": {
													"nativeSrc": "653:114:17",
													"nodeType": "YulBlock",
													"src": "653:114:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "699:16:17",
																"nodeType": "YulBlock",
																"src": "699:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "708:1:17",
																					"nodeType": "YulLiteral",
																					"src": "708:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "711:1:17",
																					"nodeType": "YulLiteral",
																					"src": "711:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "701:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "701:6:17"
																			},
																			"nativeSrc": "701:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "701:12:17"
																		},
																		"nativeSrc": "701:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "701:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "674:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "674:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "683:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "683:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "670:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "670:3:17"
																		},
																		"nativeSrc": "670:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "670:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "695:2:17",
																		"nodeType": "YulLiteral",
																		"src": "695:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "666:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "666:3:17"
																},
																"nativeSrc": "666:32:17",
																"nodeType": "YulFunctionCall",
																"src": "666:32:17"
															},
															"nativeSrc": "663:52:17",
															"nodeType": "YulIf",
															"src": "663:52:17"
														},
														{
															"nativeSrc": "724:37:17",
															"nodeType": "YulAssignment",
															"src": "724:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "751:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "751:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nativeSrc": "734:16:17",
																	"nodeType": "YulIdentifier",
																	"src": "734:16:17"
																},
																"nativeSrc": "734:27:17",
																"nodeType": "YulFunctionCall",
																"src": "734:27:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "724:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "585:182:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "619:9:17",
														"nodeType": "YulTypedName",
														"src": "619:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "630:7:17",
														"nodeType": "YulTypedName",
														"src": "630:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "642:6:17",
														"nodeType": "YulTypedName",
														"src": "642:6:17",
														"type": ""
													}
												],
												"src": "585:182:17"
											},
											{
												"body": {
													"nativeSrc": "895:102:17",
													"nodeType": "YulBlock",
													"src": "895:102:17",
													"statements": [
														{
															"nativeSrc": "905:26:17",
															"nodeType": "YulAssignment",
															"src": "905:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "917:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "917:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "928:2:17",
																		"nodeType": "YulLiteral",
																		"src": "928:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "913:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "913:3:17"
																},
																"nativeSrc": "913:18:17",
																"nodeType": "YulFunctionCall",
																"src": "913:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "905:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "905:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "947:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "947:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "962:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "962:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "978:3:17",
																								"nodeType": "YulLiteral",
																								"src": "978:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "983:1:17",
																								"nodeType": "YulLiteral",
																								"src": "983:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "974:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "974:3:17"
																						},
																						"nativeSrc": "974:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "974:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "987:1:17",
																						"nodeType": "YulLiteral",
																						"src": "987:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "970:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:17"
																				},
																				"nativeSrc": "970:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "970:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "958:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "958:3:17"
																		},
																		"nativeSrc": "958:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "958:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "940:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:17"
																},
																"nativeSrc": "940:51:17",
																"nodeType": "YulFunctionCall",
																"src": "940:51:17"
															},
															"nativeSrc": "940:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "940:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITokenEmitter_$2089__to_t_address__fromStack_reversed",
												"nativeSrc": "772:225:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "864:9:17",
														"nodeType": "YulTypedName",
														"src": "864:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "875:6:17",
														"nodeType": "YulTypedName",
														"src": "875:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "886:4:17",
														"nodeType": "YulTypedName",
														"src": "886:4:17",
														"type": ""
													}
												],
												"src": "772:225:17"
											},
											{
												"body": {
													"nativeSrc": "1103:102:17",
													"nodeType": "YulBlock",
													"src": "1103:102:17",
													"statements": [
														{
															"nativeSrc": "1113:26:17",
															"nodeType": "YulAssignment",
															"src": "1113:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1125:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1125:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1136:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1136:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1121:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:17"
																},
																"nativeSrc": "1121:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1121:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1113:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1113:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1155:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1155:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1170:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1170:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1186:3:17",
																								"nodeType": "YulLiteral",
																								"src": "1186:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1191:1:17",
																								"nodeType": "YulLiteral",
																								"src": "1191:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1182:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1182:3:17"
																						},
																						"nativeSrc": "1182:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1182:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1195:1:17",
																						"nodeType": "YulLiteral",
																						"src": "1195:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1178:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1178:3:17"
																				},
																				"nativeSrc": "1178:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1178:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1166:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1166:3:17"
																		},
																		"nativeSrc": "1166:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1166:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1148:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1148:6:17"
																},
																"nativeSrc": "1148:51:17",
																"nodeType": "YulFunctionCall",
																"src": "1148:51:17"
															},
															"nativeSrc": "1148:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "1148:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1002:203:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1072:9:17",
														"nodeType": "YulTypedName",
														"src": "1072:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1083:6:17",
														"nodeType": "YulTypedName",
														"src": "1083:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1094:4:17",
														"nodeType": "YulTypedName",
														"src": "1094:4:17",
														"type": ""
													}
												],
												"src": "1002:203:17"
											},
											{
												"body": {
													"nativeSrc": "1305:92:17",
													"nodeType": "YulBlock",
													"src": "1305:92:17",
													"statements": [
														{
															"nativeSrc": "1315:26:17",
															"nodeType": "YulAssignment",
															"src": "1315:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1327:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1327:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1338:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1338:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1323:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1323:3:17"
																},
																"nativeSrc": "1323:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1323:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1315:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1315:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1357:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1382:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "1382:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1375:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "1375:6:17"
																				},
																				"nativeSrc": "1375:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1375:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1368:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1368:6:17"
																		},
																		"nativeSrc": "1368:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1368:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1350:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:17"
																},
																"nativeSrc": "1350:41:17",
																"nodeType": "YulFunctionCall",
																"src": "1350:41:17"
															},
															"nativeSrc": "1350:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "1350:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1210:187:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1274:9:17",
														"nodeType": "YulTypedName",
														"src": "1274:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1285:6:17",
														"nodeType": "YulTypedName",
														"src": "1285:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1296:4:17",
														"nodeType": "YulTypedName",
														"src": "1296:4:17",
														"type": ""
													}
												],
												"src": "1210:187:17"
											},
											{
												"body": {
													"nativeSrc": "1472:110:17",
													"nodeType": "YulBlock",
													"src": "1472:110:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1518:16:17",
																"nodeType": "YulBlock",
																"src": "1518:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1527:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1527:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1530:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1530:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1520:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1520:6:17"
																			},
																			"nativeSrc": "1520:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1520:12:17"
																		},
																		"nativeSrc": "1520:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1520:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1493:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1493:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1502:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1502:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1489:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1489:3:17"
																		},
																		"nativeSrc": "1489:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1489:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1485:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1485:3:17"
																},
																"nativeSrc": "1485:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1485:32:17"
															},
															"nativeSrc": "1482:52:17",
															"nodeType": "YulIf",
															"src": "1482:52:17"
														},
														{
															"nativeSrc": "1543:33:17",
															"nodeType": "YulAssignment",
															"src": "1543:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1566:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1566:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1553:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1553:12:17"
																},
																"nativeSrc": "1553:23:17",
																"nodeType": "YulFunctionCall",
																"src": "1553:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1543:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1543:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1402:180:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1438:9:17",
														"nodeType": "YulTypedName",
														"src": "1438:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1449:7:17",
														"nodeType": "YulTypedName",
														"src": "1449:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1461:6:17",
														"nodeType": "YulTypedName",
														"src": "1461:6:17",
														"type": ""
													}
												],
												"src": "1402:180:17"
											},
											{
												"body": {
													"nativeSrc": "1838:336:17",
													"nodeType": "YulBlock",
													"src": "1838:336:17",
													"statements": [
														{
															"nativeSrc": "1848:27:17",
															"nodeType": "YulAssignment",
															"src": "1848:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1871:3:17",
																		"nodeType": "YulLiteral",
																		"src": "1871:3:17",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1856:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1856:3:17"
																},
																"nativeSrc": "1856:19:17",
																"nodeType": "YulFunctionCall",
																"src": "1856:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1848:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1848:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1891:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1891:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1902:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1902:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1884:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1884:6:17"
																},
																"nativeSrc": "1884:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1884:25:17"
															},
															"nativeSrc": "1884:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "1884:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1929:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1929:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1940:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1940:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1925:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1925:3:17"
																		},
																		"nativeSrc": "1925:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1925:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1945:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1945:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1918:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1918:6:17"
																},
																"nativeSrc": "1918:34:17",
																"nodeType": "YulFunctionCall",
																"src": "1918:34:17"
															},
															"nativeSrc": "1918:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "1918:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1972:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1972:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1983:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1983:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1968:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1968:3:17"
																		},
																		"nativeSrc": "1968:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1968:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "1988:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1988:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1961:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:17"
																},
																"nativeSrc": "1961:34:17",
																"nodeType": "YulFunctionCall",
																"src": "1961:34:17"
															},
															"nativeSrc": "1961:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "1961:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2015:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2015:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2011:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2011:3:17"
																		},
																		"nativeSrc": "2011:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:18:17"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2031:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2031:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2004:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:17"
																},
																"nativeSrc": "2004:34:17",
																"nodeType": "YulFunctionCall",
																"src": "2004:34:17"
															},
															"nativeSrc": "2004:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "2004:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2058:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2058:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2069:3:17",
																				"nodeType": "YulLiteral",
																				"src": "2069:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2054:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2054:3:17"
																		},
																		"nativeSrc": "2054:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2054:19:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "2079:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2079:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2095:3:17",
																								"nodeType": "YulLiteral",
																								"src": "2095:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2100:1:17",
																								"nodeType": "YulLiteral",
																								"src": "2100:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2091:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "2091:3:17"
																						},
																						"nativeSrc": "2091:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "2091:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2104:1:17",
																						"nodeType": "YulLiteral",
																						"src": "2104:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2087:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2087:3:17"
																				},
																				"nativeSrc": "2087:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2087:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2075:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2075:3:17"
																		},
																		"nativeSrc": "2075:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2075:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2047:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:17"
																},
																"nativeSrc": "2047:61:17",
																"nodeType": "YulFunctionCall",
																"src": "2047:61:17"
															},
															"nativeSrc": "2047:61:17",
															"nodeType": "YulExpressionStatement",
															"src": "2047:61:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2128:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2128:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2139:3:17",
																				"nodeType": "YulLiteral",
																				"src": "2139:3:17",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2124:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2124:3:17"
																		},
																		"nativeSrc": "2124:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2124:19:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nativeSrc": "2159:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "2159:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2152:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "2152:6:17"
																				},
																				"nativeSrc": "2152:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2152:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2145:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "2145:6:17"
																		},
																		"nativeSrc": "2145:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2145:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2117:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2117:6:17"
																},
																"nativeSrc": "2117:51:17",
																"nodeType": "YulFunctionCall",
																"src": "2117:51:17"
															},
															"nativeSrc": "2117:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "2117:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_payable_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_payable_t_bool__fromStack_reversed",
												"nativeSrc": "1587:587:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1767:9:17",
														"nodeType": "YulTypedName",
														"src": "1767:9:17",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1778:6:17",
														"nodeType": "YulTypedName",
														"src": "1778:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1786:6:17",
														"nodeType": "YulTypedName",
														"src": "1786:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1794:6:17",
														"nodeType": "YulTypedName",
														"src": "1794:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1802:6:17",
														"nodeType": "YulTypedName",
														"src": "1802:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1810:6:17",
														"nodeType": "YulTypedName",
														"src": "1810:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1818:6:17",
														"nodeType": "YulTypedName",
														"src": "1818:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1829:4:17",
														"nodeType": "YulTypedName",
														"src": "1829:4:17",
														"type": ""
													}
												],
												"src": "1587:587:17"
											},
											{
												"body": {
													"nativeSrc": "2237:86:17",
													"nodeType": "YulBlock",
													"src": "2237:86:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2301:16:17",
																"nodeType": "YulBlock",
																"src": "2301:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2310:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2310:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2313:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2313:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2303:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2303:6:17"
																			},
																			"nativeSrc": "2303:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2303:12:17"
																		},
																		"nativeSrc": "2303:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2303:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2260:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2260:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2271:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2271:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2286:3:17",
																										"nodeType": "YulLiteral",
																										"src": "2286:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2291:1:17",
																										"nodeType": "YulLiteral",
																										"src": "2291:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2282:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "2282:3:17"
																								},
																								"nativeSrc": "2282:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "2282:11:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2295:1:17",
																								"nodeType": "YulLiteral",
																								"src": "2295:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2278:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "2278:3:17"
																						},
																						"nativeSrc": "2278:19:17",
																						"nodeType": "YulFunctionCall",
																						"src": "2278:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2267:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:17"
																				},
																				"nativeSrc": "2267:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2267:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2257:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2257:2:17"
																		},
																		"nativeSrc": "2257:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2257:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2250:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2250:6:17"
																},
																"nativeSrc": "2250:50:17",
																"nodeType": "YulFunctionCall",
																"src": "2250:50:17"
															},
															"nativeSrc": "2247:70:17",
															"nodeType": "YulIf",
															"src": "2247:70:17"
														}
													]
												},
												"name": "validator_revert_contract_IVerbsToken",
												"nativeSrc": "2179:144:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2226:5:17",
														"nodeType": "YulTypedName",
														"src": "2226:5:17",
														"type": ""
													}
												],
												"src": "2179:144:17"
											},
											{
												"body": {
													"nativeSrc": "2591:918:17",
													"nodeType": "YulBlock",
													"src": "2591:918:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2638:16:17",
																"nodeType": "YulBlock",
																"src": "2638:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2647:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2647:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2650:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2640:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:17"
																			},
																			"nativeSrc": "2640:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2640:12:17"
																		},
																		"nativeSrc": "2640:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2640:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2612:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2612:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2621:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2621:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2608:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2608:3:17"
																		},
																		"nativeSrc": "2608:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2608:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2633:3:17",
																		"nodeType": "YulLiteral",
																		"src": "2633:3:17",
																		"type": "",
																		"value": "320"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2604:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:17"
																},
																"nativeSrc": "2604:33:17",
																"nodeType": "YulFunctionCall",
																"src": "2604:33:17"
															},
															"nativeSrc": "2601:53:17",
															"nodeType": "YulIf",
															"src": "2601:53:17"
														},
														{
															"nativeSrc": "2663:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2663:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2689:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2676:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2676:12:17"
																},
																"nativeSrc": "2676:23:17",
																"nodeType": "YulFunctionCall",
																"src": "2676:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2667:5:17",
																	"nodeType": "YulTypedName",
																	"src": "2667:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2746:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2746:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IVerbsToken",
																	"nativeSrc": "2708:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "2708:37:17"
																},
																"nativeSrc": "2708:44:17",
																"nodeType": "YulFunctionCall",
																"src": "2708:44:17"
															},
															"nativeSrc": "2708:44:17",
															"nodeType": "YulExpressionStatement",
															"src": "2708:44:17"
														},
														{
															"nativeSrc": "2761:15:17",
															"nodeType": "YulAssignment",
															"src": "2761:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "2771:5:17",
																"nodeType": "YulIdentifier",
																"src": "2771:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2761:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:17"
																}
															]
														},
														{
															"nativeSrc": "2785:47:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2785:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2817:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2817:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2828:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2828:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2813:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:17"
																		},
																		"nativeSrc": "2813:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2800:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2800:12:17"
																},
																"nativeSrc": "2800:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2800:32:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2789:7:17",
																	"nodeType": "YulTypedName",
																	"src": "2789:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2879:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "2879:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IVerbsToken",
																	"nativeSrc": "2841:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "2841:37:17"
																},
																"nativeSrc": "2841:46:17",
																"nodeType": "YulFunctionCall",
																"src": "2841:46:17"
															},
															"nativeSrc": "2841:46:17",
															"nodeType": "YulExpressionStatement",
															"src": "2841:46:17"
														},
														{
															"nativeSrc": "2896:17:17",
															"nodeType": "YulAssignment",
															"src": "2896:17:17",
															"value": {
																"name": "value_1",
																"nativeSrc": "2906:7:17",
																"nodeType": "YulIdentifier",
																"src": "2906:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2896:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2896:6:17"
																}
															]
														},
														{
															"nativeSrc": "2922:47:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2922:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2954:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2954:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2965:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2965:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2950:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2950:3:17"
																		},
																		"nativeSrc": "2950:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2950:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2937:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2937:12:17"
																},
																"nativeSrc": "2937:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2937:32:17"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2926:7:17",
																	"nodeType": "YulTypedName",
																	"src": "2926:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "3016:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "3016:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IVerbsToken",
																	"nativeSrc": "2978:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "2978:37:17"
																},
																"nativeSrc": "2978:46:17",
																"nodeType": "YulFunctionCall",
																"src": "2978:46:17"
															},
															"nativeSrc": "2978:46:17",
															"nodeType": "YulExpressionStatement",
															"src": "2978:46:17"
														},
														{
															"nativeSrc": "3033:17:17",
															"nodeType": "YulAssignment",
															"src": "3033:17:17",
															"value": {
																"name": "value_2",
																"nativeSrc": "3043:7:17",
																"nodeType": "YulIdentifier",
																"src": "3043:7:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3033:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:17"
																}
															]
														},
														{
															"nativeSrc": "3059:47:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3059:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3091:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3102:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3102:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3087:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:17"
																		},
																		"nativeSrc": "3087:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3087:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3074:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3074:12:17"
																},
																"nativeSrc": "3074:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3074:32:17"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3063:7:17",
																	"nodeType": "YulTypedName",
																	"src": "3063:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nativeSrc": "3153:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "3153:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IVerbsToken",
																	"nativeSrc": "3115:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "3115:37:17"
																},
																"nativeSrc": "3115:46:17",
																"nodeType": "YulFunctionCall",
																"src": "3115:46:17"
															},
															"nativeSrc": "3115:46:17",
															"nodeType": "YulExpressionStatement",
															"src": "3115:46:17"
														},
														{
															"nativeSrc": "3170:17:17",
															"nodeType": "YulAssignment",
															"src": "3170:17:17",
															"value": {
																"name": "value_3",
																"nativeSrc": "3180:7:17",
																"nodeType": "YulIdentifier",
																"src": "3180:7:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3170:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3170:6:17"
																}
															]
														},
														{
															"nativeSrc": "3196:43:17",
															"nodeType": "YulAssignment",
															"src": "3196:43:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3223:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3223:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3234:3:17",
																				"nodeType": "YulLiteral",
																				"src": "3234:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3219:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:17"
																		},
																		"nativeSrc": "3219:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:19:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3206:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3206:12:17"
																},
																"nativeSrc": "3206:33:17",
																"nodeType": "YulFunctionCall",
																"src": "3206:33:17"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3196:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3196:6:17"
																}
															]
														},
														{
															"nativeSrc": "3248:43:17",
															"nodeType": "YulAssignment",
															"src": "3248:43:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3275:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3275:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3286:3:17",
																				"nodeType": "YulLiteral",
																				"src": "3286:3:17",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3271:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3271:3:17"
																		},
																		"nativeSrc": "3271:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3271:19:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3258:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3258:12:17"
																},
																"nativeSrc": "3258:33:17",
																"nodeType": "YulFunctionCall",
																"src": "3258:33:17"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "3248:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:17"
																}
															]
														},
														{
															"nativeSrc": "3300:47:17",
															"nodeType": "YulAssignment",
															"src": "3300:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3331:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3331:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3342:3:17",
																				"nodeType": "YulLiteral",
																				"src": "3342:3:17",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3327:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3327:3:17"
																		},
																		"nativeSrc": "3327:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3327:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nativeSrc": "3310:16:17",
																	"nodeType": "YulIdentifier",
																	"src": "3310:16:17"
																},
																"nativeSrc": "3310:37:17",
																"nodeType": "YulFunctionCall",
																"src": "3310:37:17"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "3300:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:17"
																}
															]
														},
														{
															"nativeSrc": "3356:43:17",
															"nodeType": "YulAssignment",
															"src": "3356:43:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3383:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3383:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3394:3:17",
																				"nodeType": "YulLiteral",
																				"src": "3394:3:17",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3379:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3379:3:17"
																		},
																		"nativeSrc": "3379:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3379:19:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3366:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3366:12:17"
																},
																"nativeSrc": "3366:33:17",
																"nodeType": "YulFunctionCall",
																"src": "3366:33:17"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "3356:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3356:6:17"
																}
															]
														},
														{
															"nativeSrc": "3408:43:17",
															"nodeType": "YulAssignment",
															"src": "3408:43:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3446:3:17",
																				"nodeType": "YulLiteral",
																				"src": "3446:3:17",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3431:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:17"
																		},
																		"nativeSrc": "3431:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3431:19:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3418:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3418:12:17"
																},
																"nativeSrc": "3418:33:17",
																"nodeType": "YulFunctionCall",
																"src": "3418:33:17"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nativeSrc": "3408:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3408:6:17"
																}
															]
														},
														{
															"nativeSrc": "3460:43:17",
															"nodeType": "YulAssignment",
															"src": "3460:43:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3487:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3487:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3498:3:17",
																				"nodeType": "YulLiteral",
																				"src": "3498:3:17",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3483:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3483:3:17"
																		},
																		"nativeSrc": "3483:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3483:19:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3470:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3470:12:17"
																},
																"nativeSrc": "3470:33:17",
																"nodeType": "YulFunctionCall",
																"src": "3470:33:17"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nativeSrc": "3460:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IVerbsToken_$2294t_contract$_ITokenEmitter_$2089t_addresst_addresst_uint256t_uint256t_uint8t_uint256t_uint256t_uint256",
												"nativeSrc": "2328:1181:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2485:9:17",
														"nodeType": "YulTypedName",
														"src": "2485:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2496:7:17",
														"nodeType": "YulTypedName",
														"src": "2496:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2508:6:17",
														"nodeType": "YulTypedName",
														"src": "2508:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2516:6:17",
														"nodeType": "YulTypedName",
														"src": "2516:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2524:6:17",
														"nodeType": "YulTypedName",
														"src": "2524:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2532:6:17",
														"nodeType": "YulTypedName",
														"src": "2532:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2540:6:17",
														"nodeType": "YulTypedName",
														"src": "2540:6:17",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2548:6:17",
														"nodeType": "YulTypedName",
														"src": "2548:6:17",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2556:6:17",
														"nodeType": "YulTypedName",
														"src": "2556:6:17",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "2564:6:17",
														"nodeType": "YulTypedName",
														"src": "2564:6:17",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "2572:6:17",
														"nodeType": "YulTypedName",
														"src": "2572:6:17",
														"type": ""
													},
													{
														"name": "value9",
														"nativeSrc": "2580:6:17",
														"nodeType": "YulTypedName",
														"src": "2580:6:17",
														"type": ""
													}
												],
												"src": "2328:1181:17"
											},
											{
												"body": {
													"nativeSrc": "3611:87:17",
													"nodeType": "YulBlock",
													"src": "3611:87:17",
													"statements": [
														{
															"nativeSrc": "3621:26:17",
															"nodeType": "YulAssignment",
															"src": "3621:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3633:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3633:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3644:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3644:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3629:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:17"
																},
																"nativeSrc": "3629:18:17",
																"nodeType": "YulFunctionCall",
																"src": "3629:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3621:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3621:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3663:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3663:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3678:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3678:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3686:4:17",
																				"nodeType": "YulLiteral",
																				"src": "3686:4:17",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3674:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3674:3:17"
																		},
																		"nativeSrc": "3674:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3674:17:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3656:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:17"
																},
																"nativeSrc": "3656:36:17",
																"nodeType": "YulFunctionCall",
																"src": "3656:36:17"
															},
															"nativeSrc": "3656:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "3656:36:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3514:184:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3580:9:17",
														"nodeType": "YulTypedName",
														"src": "3580:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3591:6:17",
														"nodeType": "YulTypedName",
														"src": "3591:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3602:4:17",
														"nodeType": "YulTypedName",
														"src": "3602:4:17",
														"type": ""
													}
												],
												"src": "3514:184:17"
											},
											{
												"body": {
													"nativeSrc": "3773:190:17",
													"nodeType": "YulBlock",
													"src": "3773:190:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3819:16:17",
																"nodeType": "YulBlock",
																"src": "3819:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3828:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3828:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3831:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3831:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3821:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3821:6:17"
																			},
																			"nativeSrc": "3821:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:12:17"
																		},
																		"nativeSrc": "3821:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3794:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3794:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3803:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3803:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3790:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:17"
																		},
																		"nativeSrc": "3790:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3790:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3815:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3815:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3786:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3786:3:17"
																},
																"nativeSrc": "3786:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3786:32:17"
															},
															"nativeSrc": "3783:52:17",
															"nodeType": "YulIf",
															"src": "3783:52:17"
														},
														{
															"nativeSrc": "3844:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3844:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3870:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3870:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3857:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3857:12:17"
																},
																"nativeSrc": "3857:23:17",
																"nodeType": "YulFunctionCall",
																"src": "3857:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3848:5:17",
																	"nodeType": "YulTypedName",
																	"src": "3848:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3927:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3927:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IVerbsToken",
																	"nativeSrc": "3889:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "3889:37:17"
																},
																"nativeSrc": "3889:44:17",
																"nodeType": "YulFunctionCall",
																"src": "3889:44:17"
															},
															"nativeSrc": "3889:44:17",
															"nodeType": "YulExpressionStatement",
															"src": "3889:44:17"
														},
														{
															"nativeSrc": "3942:15:17",
															"nodeType": "YulAssignment",
															"src": "3942:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "3952:5:17",
																"nodeType": "YulIdentifier",
																"src": "3952:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3942:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3703:260:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3739:9:17",
														"nodeType": "YulTypedName",
														"src": "3739:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3750:7:17",
														"nodeType": "YulTypedName",
														"src": "3750:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3762:6:17",
														"nodeType": "YulTypedName",
														"src": "3762:6:17",
														"type": ""
													}
												],
												"src": "3703:260:17"
											},
											{
												"body": {
													"nativeSrc": "4067:87:17",
													"nodeType": "YulBlock",
													"src": "4067:87:17",
													"statements": [
														{
															"nativeSrc": "4077:26:17",
															"nodeType": "YulAssignment",
															"src": "4077:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4089:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4089:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4100:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4100:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4085:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4085:3:17"
																},
																"nativeSrc": "4085:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4085:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4077:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4077:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4119:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4119:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4134:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4134:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4142:4:17",
																				"nodeType": "YulLiteral",
																				"src": "4142:4:17",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4130:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:17"
																		},
																		"nativeSrc": "4130:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4130:17:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4112:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4112:6:17"
																},
																"nativeSrc": "4112:36:17",
																"nodeType": "YulFunctionCall",
																"src": "4112:36:17"
															},
															"nativeSrc": "4112:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "4112:36:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3968:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4036:9:17",
														"nodeType": "YulTypedName",
														"src": "4036:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4047:6:17",
														"nodeType": "YulTypedName",
														"src": "4047:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4058:4:17",
														"nodeType": "YulTypedName",
														"src": "4058:4:17",
														"type": ""
													}
												],
												"src": "3968:186:17"
											},
											{
												"body": {
													"nativeSrc": "4333:173:17",
													"nodeType": "YulBlock",
													"src": "4333:173:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4350:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4350:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4361:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4361:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4343:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:17"
																},
																"nativeSrc": "4343:21:17",
																"nodeType": "YulFunctionCall",
																"src": "4343:21:17"
															},
															"nativeSrc": "4343:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "4343:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4384:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4384:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4395:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4395:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4380:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4380:3:17"
																		},
																		"nativeSrc": "4380:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4380:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4400:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4400:2:17",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4373:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4373:6:17"
																},
																"nativeSrc": "4373:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4373:30:17"
															},
															"nativeSrc": "4373:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "4373:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4423:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4423:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4434:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4434:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4419:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4419:3:17"
																		},
																		"nativeSrc": "4419:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4419:18:17"
																	},
																	{
																		"hexValue": "56657262206e6f7420757020666f722061756374696f6e",
																		"kind": "string",
																		"nativeSrc": "4439:25:17",
																		"nodeType": "YulLiteral",
																		"src": "4439:25:17",
																		"type": "",
																		"value": "Verb not up for auction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4412:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4412:6:17"
																},
																"nativeSrc": "4412:53:17",
																"nodeType": "YulFunctionCall",
																"src": "4412:53:17"
															},
															"nativeSrc": "4412:53:17",
															"nodeType": "YulExpressionStatement",
															"src": "4412:53:17"
														},
														{
															"nativeSrc": "4474:26:17",
															"nodeType": "YulAssignment",
															"src": "4474:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4486:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4486:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4497:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4497:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4482:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4482:3:17"
																},
																"nativeSrc": "4482:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4482:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4474:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4474:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f6e4cc8ee899178a4d47355e8312bf3a9810f0590ac98868c4bf7cd29669038__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4159:347:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4310:9:17",
														"nodeType": "YulTypedName",
														"src": "4310:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4324:4:17",
														"nodeType": "YulTypedName",
														"src": "4324:4:17",
														"type": ""
													}
												],
												"src": "4159:347:17"
											},
											{
												"body": {
													"nativeSrc": "4685:165:17",
													"nodeType": "YulBlock",
													"src": "4685:165:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4702:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4702:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4713:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4713:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4695:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4695:6:17"
																},
																"nativeSrc": "4695:21:17",
																"nodeType": "YulFunctionCall",
																"src": "4695:21:17"
															},
															"nativeSrc": "4695:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "4695:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4736:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4736:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4747:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4747:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4732:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4732:3:17"
																		},
																		"nativeSrc": "4732:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4732:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4752:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4752:2:17",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4725:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4725:6:17"
																},
																"nativeSrc": "4725:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4725:30:17"
															},
															"nativeSrc": "4725:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "4725:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4775:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4775:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4786:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4786:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4771:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:17"
																		},
																		"nativeSrc": "4771:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:18:17"
																	},
																	{
																		"hexValue": "41756374696f6e2065787069726564",
																		"kind": "string",
																		"nativeSrc": "4791:17:17",
																		"nodeType": "YulLiteral",
																		"src": "4791:17:17",
																		"type": "",
																		"value": "Auction expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4764:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4764:6:17"
																},
																"nativeSrc": "4764:45:17",
																"nodeType": "YulFunctionCall",
																"src": "4764:45:17"
															},
															"nativeSrc": "4764:45:17",
															"nodeType": "YulExpressionStatement",
															"src": "4764:45:17"
														},
														{
															"nativeSrc": "4818:26:17",
															"nodeType": "YulAssignment",
															"src": "4818:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4830:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4830:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4841:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4841:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4826:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4826:3:17"
																},
																"nativeSrc": "4826:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4826:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4818:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4818:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee94e7592a7417cc94816663e1b9b9938c69730980c3cab7a8fbc54ac5aa729f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4511:339:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4662:9:17",
														"nodeType": "YulTypedName",
														"src": "4662:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4676:4:17",
														"nodeType": "YulTypedName",
														"src": "4676:4:17",
														"type": ""
													}
												],
												"src": "4511:339:17"
											},
											{
												"body": {
													"nativeSrc": "5029:181:17",
													"nodeType": "YulBlock",
													"src": "5029:181:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5046:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5046:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5057:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5057:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5039:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5039:6:17"
																},
																"nativeSrc": "5039:21:17",
																"nodeType": "YulFunctionCall",
																"src": "5039:21:17"
															},
															"nativeSrc": "5039:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "5039:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5080:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5080:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5091:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5091:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5076:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5076:3:17"
																		},
																		"nativeSrc": "5076:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5096:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5096:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5069:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5069:6:17"
																},
																"nativeSrc": "5069:30:17",
																"nodeType": "YulFunctionCall",
																"src": "5069:30:17"
															},
															"nativeSrc": "5069:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "5069:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5119:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5119:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5130:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5130:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5115:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5115:3:17"
																		},
																		"nativeSrc": "5115:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5115:18:17"
																	},
																	{
																		"hexValue": "4d7573742073656e64206174206c6561737420726573657276655072696365",
																		"kind": "string",
																		"nativeSrc": "5135:33:17",
																		"nodeType": "YulLiteral",
																		"src": "5135:33:17",
																		"type": "",
																		"value": "Must send at least reservePrice"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5108:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:17"
																},
																"nativeSrc": "5108:61:17",
																"nodeType": "YulFunctionCall",
																"src": "5108:61:17"
															},
															"nativeSrc": "5108:61:17",
															"nodeType": "YulExpressionStatement",
															"src": "5108:61:17"
														},
														{
															"nativeSrc": "5178:26:17",
															"nodeType": "YulAssignment",
															"src": "5178:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5190:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5190:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5201:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5201:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5186:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:17"
																},
																"nativeSrc": "5186:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5186:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5178:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5178:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f1114d8c4309959c51172c5707cbe6c55f2c078aa19616a59453fa69d73427a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4855:355:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5006:9:17",
														"nodeType": "YulTypedName",
														"src": "5006:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5020:4:17",
														"nodeType": "YulTypedName",
														"src": "5020:4:17",
														"type": ""
													}
												],
												"src": "4855:355:17"
											},
											{
												"body": {
													"nativeSrc": "5247:95:17",
													"nodeType": "YulBlock",
													"src": "5247:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5264:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5264:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5271:3:17",
																				"nodeType": "YulLiteral",
																				"src": "5271:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5276:10:17",
																				"nodeType": "YulLiteral",
																				"src": "5276:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5267:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5267:3:17"
																		},
																		"nativeSrc": "5267:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5267:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5257:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5257:6:17"
																},
																"nativeSrc": "5257:31:17",
																"nodeType": "YulFunctionCall",
																"src": "5257:31:17"
															},
															"nativeSrc": "5257:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "5257:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5304:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5304:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5307:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5307:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5297:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5297:6:17"
																},
																"nativeSrc": "5297:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5297:15:17"
															},
															"nativeSrc": "5297:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5297:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5328:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5328:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5331:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5331:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5321:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5321:6:17"
																},
																"nativeSrc": "5321:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5321:15:17"
															},
															"nativeSrc": "5321:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5321:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5215:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "5215:127:17"
											},
											{
												"body": {
													"nativeSrc": "5399:116:17",
													"nodeType": "YulBlock",
													"src": "5399:116:17",
													"statements": [
														{
															"nativeSrc": "5409:20:17",
															"nodeType": "YulAssignment",
															"src": "5409:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5424:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5424:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5427:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5427:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5420:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5420:3:17"
																},
																"nativeSrc": "5420:9:17",
																"nodeType": "YulFunctionCall",
																"src": "5420:9:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5409:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "5409:7:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5487:22:17",
																"nodeType": "YulBlock",
																"src": "5487:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5489:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "5489:16:17"
																			},
																			"nativeSrc": "5489:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5489:18:17"
																		},
																		"nativeSrc": "5489:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5489:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5458:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "5458:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5451:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "5451:6:17"
																				},
																				"nativeSrc": "5451:9:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5451:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5465:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "5465:1:17"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5472:7:17",
																								"nodeType": "YulIdentifier",
																								"src": "5472:7:17"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5481:1:17",
																								"nodeType": "YulIdentifier",
																								"src": "5481:1:17"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5468:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "5468:3:17"
																						},
																						"nativeSrc": "5468:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "5468:15:17"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5462:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "5462:2:17"
																				},
																				"nativeSrc": "5462:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5462:22:17"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5448:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "5448:2:17"
																		},
																		"nativeSrc": "5448:37:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5448:37:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5441:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5441:6:17"
																},
																"nativeSrc": "5441:45:17",
																"nodeType": "YulFunctionCall",
																"src": "5441:45:17"
															},
															"nativeSrc": "5438:71:17",
															"nodeType": "YulIf",
															"src": "5438:71:17"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5347:168:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5378:1:17",
														"nodeType": "YulTypedName",
														"src": "5378:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5381:1:17",
														"nodeType": "YulTypedName",
														"src": "5381:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5387:7:17",
														"nodeType": "YulTypedName",
														"src": "5387:7:17",
														"type": ""
													}
												],
												"src": "5347:168:17"
											},
											{
												"body": {
													"nativeSrc": "5566:171:17",
													"nodeType": "YulBlock",
													"src": "5566:171:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5597:111:17",
																"nodeType": "YulBlock",
																"src": "5597:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5618:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5618:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5625:3:17",
																							"nodeType": "YulLiteral",
																							"src": "5625:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5630:10:17",
																							"nodeType": "YulLiteral",
																							"src": "5630:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5621:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "5621:3:17"
																					},
																					"nativeSrc": "5621:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "5621:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5611:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5611:6:17"
																			},
																			"nativeSrc": "5611:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5611:31:17"
																		},
																		"nativeSrc": "5611:31:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5611:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5662:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5662:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5665:4:17",
																					"nodeType": "YulLiteral",
																					"src": "5665:4:17",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5655:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5655:6:17"
																			},
																			"nativeSrc": "5655:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5655:15:17"
																		},
																		"nativeSrc": "5655:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5655:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5690:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5690:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5693:4:17",
																					"nodeType": "YulLiteral",
																					"src": "5693:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5683:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5683:6:17"
																			},
																			"nativeSrc": "5683:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5683:15:17"
																		},
																		"nativeSrc": "5683:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5683:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5586:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5586:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5579:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:17"
																},
																"nativeSrc": "5579:9:17",
																"nodeType": "YulFunctionCall",
																"src": "5579:9:17"
															},
															"nativeSrc": "5576:132:17",
															"nodeType": "YulIf",
															"src": "5576:132:17"
														},
														{
															"nativeSrc": "5717:14:17",
															"nodeType": "YulAssignment",
															"src": "5717:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5726:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5726:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5729:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5729:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5722:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5722:3:17"
																},
																"nativeSrc": "5722:9:17",
																"nodeType": "YulFunctionCall",
																"src": "5722:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5717:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "5717:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5520:217:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5551:1:17",
														"nodeType": "YulTypedName",
														"src": "5551:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5554:1:17",
														"nodeType": "YulTypedName",
														"src": "5554:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5560:1:17",
														"nodeType": "YulTypedName",
														"src": "5560:1:17",
														"type": ""
													}
												],
												"src": "5520:217:17"
											},
											{
												"body": {
													"nativeSrc": "5790:77:17",
													"nodeType": "YulBlock",
													"src": "5790:77:17",
													"statements": [
														{
															"nativeSrc": "5800:16:17",
															"nodeType": "YulAssignment",
															"src": "5800:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5811:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5811:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5814:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5814:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5807:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5807:3:17"
																},
																"nativeSrc": "5807:9:17",
																"nodeType": "YulFunctionCall",
																"src": "5807:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5800:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5800:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5839:22:17",
																"nodeType": "YulBlock",
																"src": "5839:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5841:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "5841:16:17"
																			},
																			"nativeSrc": "5841:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5841:18:17"
																		},
																		"nativeSrc": "5841:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5841:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5831:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "5831:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5834:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5834:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5828:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "5828:2:17"
																},
																"nativeSrc": "5828:10:17",
																"nodeType": "YulFunctionCall",
																"src": "5828:10:17"
															},
															"nativeSrc": "5825:36:17",
															"nodeType": "YulIf",
															"src": "5825:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5742:125:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5773:1:17",
														"nodeType": "YulTypedName",
														"src": "5773:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5776:1:17",
														"nodeType": "YulTypedName",
														"src": "5776:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5782:3:17",
														"nodeType": "YulTypedName",
														"src": "5782:3:17",
														"type": ""
													}
												],
												"src": "5742:125:17"
											},
											{
												"body": {
													"nativeSrc": "6046:254:17",
													"nodeType": "YulBlock",
													"src": "6046:254:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6063:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6063:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6074:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6056:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6056:6:17"
																},
																"nativeSrc": "6056:21:17",
																"nodeType": "YulFunctionCall",
																"src": "6056:21:17"
															},
															"nativeSrc": "6056:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "6056:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6097:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6097:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6108:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6108:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6093:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6093:3:17"
																		},
																		"nativeSrc": "6093:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6093:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6113:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6113:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6086:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6086:6:17"
																},
																"nativeSrc": "6086:30:17",
																"nodeType": "YulFunctionCall",
																"src": "6086:30:17"
															},
															"nativeSrc": "6086:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "6086:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6136:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6136:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6147:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6147:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6132:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6132:3:17"
																		},
																		"nativeSrc": "6132:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6132:18:17"
																	},
																	{
																		"hexValue": "4d7573742073656e64206d6f7265207468616e206c6173742062696420627920",
																		"kind": "string",
																		"nativeSrc": "6152:34:17",
																		"nodeType": "YulLiteral",
																		"src": "6152:34:17",
																		"type": "",
																		"value": "Must send more than last bid by "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6125:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6125:6:17"
																},
																"nativeSrc": "6125:62:17",
																"nodeType": "YulFunctionCall",
																"src": "6125:62:17"
															},
															"nativeSrc": "6125:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "6125:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6207:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6207:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6218:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6218:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6203:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6203:3:17"
																		},
																		"nativeSrc": "6203:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6203:18:17"
																	},
																	{
																		"hexValue": "6d696e426964496e6372656d656e7450657263656e7461676520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "6223:34:17",
																		"nodeType": "YulLiteral",
																		"src": "6223:34:17",
																		"type": "",
																		"value": "minBidIncrementPercentage amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6196:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6196:6:17"
																},
																"nativeSrc": "6196:62:17",
																"nodeType": "YulFunctionCall",
																"src": "6196:62:17"
															},
															"nativeSrc": "6196:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "6196:62:17"
														},
														{
															"nativeSrc": "6267:27:17",
															"nodeType": "YulAssignment",
															"src": "6267:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6279:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6279:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6290:3:17",
																		"nodeType": "YulLiteral",
																		"src": "6290:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6275:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6275:3:17"
																},
																"nativeSrc": "6275:19:17",
																"nodeType": "YulFunctionCall",
																"src": "6275:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6267:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6267:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b513ed4150a8292a1ae14f1a03ea954ba5eafbfd85827e99d503d442fdc652b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5872:428:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6023:9:17",
														"nodeType": "YulTypedName",
														"src": "6023:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6037:4:17",
														"nodeType": "YulTypedName",
														"src": "6037:4:17",
														"type": ""
													}
												],
												"src": "5872:428:17"
											},
											{
												"body": {
													"nativeSrc": "6354:79:17",
													"nodeType": "YulBlock",
													"src": "6354:79:17",
													"statements": [
														{
															"nativeSrc": "6364:17:17",
															"nodeType": "YulAssignment",
															"src": "6364:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6376:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6376:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6379:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6379:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6372:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6372:3:17"
																},
																"nativeSrc": "6372:9:17",
																"nodeType": "YulFunctionCall",
																"src": "6372:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6364:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6364:4:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6405:22:17",
																"nodeType": "YulBlock",
																"src": "6405:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6407:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "6407:16:17"
																			},
																			"nativeSrc": "6407:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6407:18:17"
																		},
																		"nativeSrc": "6407:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6407:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6396:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "6396:4:17"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6402:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6402:1:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6393:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6393:2:17"
																},
																"nativeSrc": "6393:11:17",
																"nodeType": "YulFunctionCall",
																"src": "6393:11:17"
															},
															"nativeSrc": "6390:37:17",
															"nodeType": "YulIf",
															"src": "6390:37:17"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6305:128:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6336:1:17",
														"nodeType": "YulTypedName",
														"src": "6336:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6339:1:17",
														"nodeType": "YulTypedName",
														"src": "6339:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6345:4:17",
														"nodeType": "YulTypedName",
														"src": "6345:4:17",
														"type": ""
													}
												],
												"src": "6305:128:17"
											},
											{
												"body": {
													"nativeSrc": "6589:204:17",
													"nodeType": "YulBlock",
													"src": "6589:204:17",
													"statements": [
														{
															"nativeSrc": "6599:26:17",
															"nodeType": "YulAssignment",
															"src": "6599:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6611:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6611:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6622:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6622:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6607:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6607:3:17"
																},
																"nativeSrc": "6607:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6607:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6599:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6599:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6641:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6641:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6656:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6656:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6672:3:17",
																								"nodeType": "YulLiteral",
																								"src": "6672:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6677:1:17",
																								"nodeType": "YulLiteral",
																								"src": "6677:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6668:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "6668:3:17"
																						},
																						"nativeSrc": "6668:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "6668:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6681:1:17",
																						"nodeType": "YulLiteral",
																						"src": "6681:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6664:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "6664:3:17"
																				},
																				"nativeSrc": "6664:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6664:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6652:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6652:3:17"
																		},
																		"nativeSrc": "6652:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6652:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6634:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6634:6:17"
																},
																"nativeSrc": "6634:51:17",
																"nodeType": "YulFunctionCall",
																"src": "6634:51:17"
															},
															"nativeSrc": "6634:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "6634:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6705:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6705:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6716:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6716:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6701:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6701:3:17"
																		},
																		"nativeSrc": "6701:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6701:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6721:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6721:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6694:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6694:6:17"
																},
																"nativeSrc": "6694:34:17",
																"nodeType": "YulFunctionCall",
																"src": "6694:34:17"
															},
															"nativeSrc": "6694:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "6694:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6748:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6748:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6759:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6759:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6744:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6744:3:17"
																		},
																		"nativeSrc": "6744:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6744:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "6778:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "6778:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6771:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "6771:6:17"
																				},
																				"nativeSrc": "6771:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6771:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6764:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "6764:6:17"
																		},
																		"nativeSrc": "6764:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6764:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6737:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6737:6:17"
																},
																"nativeSrc": "6737:50:17",
																"nodeType": "YulFunctionCall",
																"src": "6737:50:17"
															},
															"nativeSrc": "6737:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "6737:50:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "6438:355:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6542:9:17",
														"nodeType": "YulTypedName",
														"src": "6542:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6553:6:17",
														"nodeType": "YulTypedName",
														"src": "6553:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6561:6:17",
														"nodeType": "YulTypedName",
														"src": "6561:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6569:6:17",
														"nodeType": "YulTypedName",
														"src": "6569:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6580:4:17",
														"nodeType": "YulTypedName",
														"src": "6580:4:17",
														"type": ""
													}
												],
												"src": "6438:355:17"
											},
											{
												"body": {
													"nativeSrc": "6906:101:17",
													"nodeType": "YulBlock",
													"src": "6906:101:17",
													"statements": [
														{
															"nativeSrc": "6916:26:17",
															"nodeType": "YulAssignment",
															"src": "6916:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6928:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6928:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6939:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6924:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6924:3:17"
																},
																"nativeSrc": "6924:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6924:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6916:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6916:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6958:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6958:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6973:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6973:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6981:18:17",
																				"nodeType": "YulLiteral",
																				"src": "6981:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6969:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6969:3:17"
																		},
																		"nativeSrc": "6969:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6969:31:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6951:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6951:6:17"
																},
																"nativeSrc": "6951:50:17",
																"nodeType": "YulFunctionCall",
																"src": "6951:50:17"
															},
															"nativeSrc": "6951:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "6951:50:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "6798:209:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6875:9:17",
														"nodeType": "YulTypedName",
														"src": "6875:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6886:6:17",
														"nodeType": "YulTypedName",
														"src": "6886:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6897:4:17",
														"nodeType": "YulTypedName",
														"src": "6897:4:17",
														"type": ""
													}
												],
												"src": "6798:209:17"
											},
											{
												"body": {
													"nativeSrc": "7093:103:17",
													"nodeType": "YulBlock",
													"src": "7093:103:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7139:16:17",
																"nodeType": "YulBlock",
																"src": "7139:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7148:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7148:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7151:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7151:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7141:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7141:6:17"
																			},
																			"nativeSrc": "7141:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7141:12:17"
																		},
																		"nativeSrc": "7141:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7141:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7114:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7114:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7123:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7123:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7110:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7110:3:17"
																		},
																		"nativeSrc": "7110:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7110:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7135:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7135:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7106:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7106:3:17"
																},
																"nativeSrc": "7106:32:17",
																"nodeType": "YulFunctionCall",
																"src": "7106:32:17"
															},
															"nativeSrc": "7103:52:17",
															"nodeType": "YulIf",
															"src": "7103:52:17"
														},
														{
															"nativeSrc": "7164:26:17",
															"nodeType": "YulAssignment",
															"src": "7164:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7180:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7180:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7174:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "7174:5:17"
																},
																"nativeSrc": "7174:16:17",
																"nodeType": "YulFunctionCall",
																"src": "7174:16:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7164:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7164:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7012:184:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7059:9:17",
														"nodeType": "YulTypedName",
														"src": "7059:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7070:7:17",
														"nodeType": "YulTypedName",
														"src": "7070:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7082:6:17",
														"nodeType": "YulTypedName",
														"src": "7082:6:17",
														"type": ""
													}
												],
												"src": "7012:184:17"
											},
											{
												"body": {
													"nativeSrc": "7244:136:17",
													"nodeType": "YulBlock",
													"src": "7244:136:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7289:85:17",
																"nodeType": "YulBlock",
																"src": "7289:85:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7318:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7318:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7321:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7321:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7324:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7324:1:17",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "7303:14:17",
																				"nodeType": "YulIdentifier",
																				"src": "7303:14:17"
																			},
																			"nativeSrc": "7303:23:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7303:23:17"
																		},
																		"nativeSrc": "7303:23:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7303:23:17"
																	},
																	{
																		"nativeSrc": "7339:25:17",
																		"nodeType": "YulAssignment",
																		"src": "7339:25:17",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7350:3:17",
																					"nodeType": "YulLiteral",
																					"src": "7350:3:17",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7361:1:17",
																							"nodeType": "YulLiteral",
																							"src": "7361:1:17",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7355:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "7355:5:17"
																					},
																					"nativeSrc": "7355:8:17",
																					"nodeType": "YulFunctionCall",
																					"src": "7355:8:17"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "7346:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7346:3:17"
																			},
																			"nativeSrc": "7346:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7346:18:17"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nativeSrc": "7339:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7339:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "7260:14:17",
																			"nodeType": "YulIdentifier",
																			"src": "7260:14:17"
																		},
																		"nativeSrc": "7260:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7260:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7278:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7278:1:17",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7257:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7257:2:17"
																},
																"nativeSrc": "7257:23:17",
																"nodeType": "YulFunctionCall",
																"src": "7257:23:17"
															},
															"nativeSrc": "7254:120:17",
															"nodeType": "YulIf",
															"src": "7254:120:17"
														}
													]
												},
												"name": "return_data_selector",
												"nativeSrc": "7201:179:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nativeSrc": "7236:3:17",
														"nodeType": "YulTypedName",
														"src": "7236:3:17",
														"type": ""
													}
												],
												"src": "7201:179:17"
											},
											{
												"body": {
													"nativeSrc": "7417:95:17",
													"nodeType": "YulBlock",
													"src": "7417:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7434:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7434:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7441:3:17",
																				"nodeType": "YulLiteral",
																				"src": "7441:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7446:10:17",
																				"nodeType": "YulLiteral",
																				"src": "7446:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7437:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7437:3:17"
																		},
																		"nativeSrc": "7437:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7437:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7427:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7427:6:17"
																},
																"nativeSrc": "7427:31:17",
																"nodeType": "YulFunctionCall",
																"src": "7427:31:17"
															},
															"nativeSrc": "7427:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "7427:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7474:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7474:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7477:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7477:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7467:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7467:6:17"
																},
																"nativeSrc": "7467:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7467:15:17"
															},
															"nativeSrc": "7467:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "7467:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7498:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7498:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7501:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7501:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7491:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7491:6:17"
																},
																"nativeSrc": "7491:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7491:15:17"
															},
															"nativeSrc": "7491:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "7491:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7385:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "7385:127:17"
											},
											{
												"body": {
													"nativeSrc": "7563:177:17",
													"nodeType": "YulBlock",
													"src": "7563:177:17",
													"statements": [
														{
															"nativeSrc": "7573:33:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7573:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7595:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7595:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7603:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7603:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7591:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7591:3:17"
																},
																"nativeSrc": "7591:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7591:15:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7577:10:17",
																	"nodeType": "YulTypedName",
																	"src": "7577:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7681:22:17",
																"nodeType": "YulBlock",
																"src": "7681:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7683:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "7683:16:17"
																			},
																			"nativeSrc": "7683:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7683:18:17"
																		},
																		"nativeSrc": "7683:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7683:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7624:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "7624:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7636:18:17",
																				"nodeType": "YulLiteral",
																				"src": "7636:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7621:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "7621:2:17"
																		},
																		"nativeSrc": "7621:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7621:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7660:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "7660:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7672:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7672:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7657:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "7657:2:17"
																		},
																		"nativeSrc": "7657:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7657:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7618:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7618:2:17"
																},
																"nativeSrc": "7618:62:17",
																"nodeType": "YulFunctionCall",
																"src": "7618:62:17"
															},
															"nativeSrc": "7615:88:17",
															"nodeType": "YulIf",
															"src": "7615:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7719:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7719:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7723:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "7723:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7712:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:17"
																},
																"nativeSrc": "7712:22:17",
																"nodeType": "YulFunctionCall",
																"src": "7712:22:17"
															},
															"nativeSrc": "7712:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "7712:22:17"
														}
													]
												},
												"name": "finalize_allocation_2591",
												"nativeSrc": "7517:223:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7551:6:17",
														"nodeType": "YulTypedName",
														"src": "7551:6:17",
														"type": ""
													}
												],
												"src": "7517:223:17"
											},
											{
												"body": {
													"nativeSrc": "7791:179:17",
													"nodeType": "YulBlock",
													"src": "7791:179:17",
													"statements": [
														{
															"nativeSrc": "7801:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7801:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7823:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7823:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7831:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7831:4:17",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7819:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7819:3:17"
																},
																"nativeSrc": "7819:17:17",
																"nodeType": "YulFunctionCall",
																"src": "7819:17:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7805:10:17",
																	"nodeType": "YulTypedName",
																	"src": "7805:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7911:22:17",
																"nodeType": "YulBlock",
																"src": "7911:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7913:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "7913:16:17"
																			},
																			"nativeSrc": "7913:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7913:18:17"
																		},
																		"nativeSrc": "7913:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7913:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7854:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "7854:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7866:18:17",
																				"nodeType": "YulLiteral",
																				"src": "7866:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7851:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "7851:2:17"
																		},
																		"nativeSrc": "7851:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7851:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7890:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "7890:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7902:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7902:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7887:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "7887:2:17"
																		},
																		"nativeSrc": "7887:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7887:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7848:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7848:2:17"
																},
																"nativeSrc": "7848:62:17",
																"nodeType": "YulFunctionCall",
																"src": "7848:62:17"
															},
															"nativeSrc": "7845:88:17",
															"nodeType": "YulIf",
															"src": "7845:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7949:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7949:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7953:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "7953:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7942:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7942:6:17"
																},
																"nativeSrc": "7942:22:17",
																"nodeType": "YulFunctionCall",
																"src": "7942:22:17"
															},
															"nativeSrc": "7942:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "7942:22:17"
														}
													]
												},
												"name": "finalize_allocation_2594",
												"nativeSrc": "7745:225:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7779:6:17",
														"nodeType": "YulTypedName",
														"src": "7779:6:17",
														"type": ""
													}
												],
												"src": "7745:225:17"
											},
											{
												"body": {
													"nativeSrc": "8022:202:17",
													"nodeType": "YulBlock",
													"src": "8022:202:17",
													"statements": [
														{
															"nativeSrc": "8032:58:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8032:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8054:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8054:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "8070:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "8070:4:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8076:2:17",
																						"nodeType": "YulLiteral",
																						"src": "8076:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8066:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8066:3:17"
																				},
																				"nativeSrc": "8066:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8066:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8085:2:17",
																						"nodeType": "YulLiteral",
																						"src": "8085:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8081:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8081:3:17"
																				},
																				"nativeSrc": "8081:7:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8081:7:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8062:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8062:3:17"
																		},
																		"nativeSrc": "8062:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8062:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8050:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8050:3:17"
																},
																"nativeSrc": "8050:40:17",
																"nodeType": "YulFunctionCall",
																"src": "8050:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8036:10:17",
																	"nodeType": "YulTypedName",
																	"src": "8036:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8165:22:17",
																"nodeType": "YulBlock",
																"src": "8165:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8167:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "8167:16:17"
																			},
																			"nativeSrc": "8167:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8167:18:17"
																		},
																		"nativeSrc": "8167:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8167:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8108:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "8108:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8120:18:17",
																				"nodeType": "YulLiteral",
																				"src": "8120:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8105:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "8105:2:17"
																		},
																		"nativeSrc": "8105:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8105:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8144:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "8144:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8156:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8156:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8141:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "8141:2:17"
																		},
																		"nativeSrc": "8141:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8141:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8102:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8102:2:17"
																},
																"nativeSrc": "8102:62:17",
																"nodeType": "YulFunctionCall",
																"src": "8102:62:17"
															},
															"nativeSrc": "8099:88:17",
															"nodeType": "YulIf",
															"src": "8099:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8203:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8203:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8207:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "8207:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8196:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8196:6:17"
																},
																"nativeSrc": "8196:22:17",
																"nodeType": "YulFunctionCall",
																"src": "8196:22:17"
															},
															"nativeSrc": "8196:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "8196:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7975:249:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8004:6:17",
														"nodeType": "YulTypedName",
														"src": "8004:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8012:4:17",
														"nodeType": "YulTypedName",
														"src": "8012:4:17",
														"type": ""
													}
												],
												"src": "7975:249:17"
											},
											{
												"body": {
													"nativeSrc": "8276:624:17",
													"nodeType": "YulBlock",
													"src": "8276:624:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8316:9:17",
																"nodeType": "YulBlock",
																"src": "8316:9:17",
																"statements": [
																	{
																		"nativeSrc": "8318:5:17",
																		"nodeType": "YulLeave",
																		"src": "8318:5:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "8292:14:17",
																			"nodeType": "YulIdentifier",
																			"src": "8292:14:17"
																		},
																		"nativeSrc": "8292:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8292:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8310:4:17",
																		"nodeType": "YulLiteral",
																		"src": "8310:4:17",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8289:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8289:2:17"
																},
																"nativeSrc": "8289:26:17",
																"nodeType": "YulFunctionCall",
																"src": "8289:26:17"
															},
															"nativeSrc": "8286:39:17",
															"nodeType": "YulIf",
															"src": "8286:39:17"
														},
														{
															"nativeSrc": "8334:21:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8334:21:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8352:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8352:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8346:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "8346:5:17"
																},
																"nativeSrc": "8346:9:17",
																"nodeType": "YulFunctionCall",
																"src": "8346:9:17"
															},
															"variables": [
																{
																	"name": "data",
																	"nativeSrc": "8338:4:17",
																	"nodeType": "YulTypedName",
																	"src": "8338:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8364:16:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8364:16:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8378:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8378:1:17",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8374:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8374:3:17"
																},
																"nativeSrc": "8374:6:17",
																"nodeType": "YulFunctionCall",
																"src": "8374:6:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8368:2:17",
																	"nodeType": "YulTypedName",
																	"src": "8368:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8404:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "8404:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8410:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8410:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nativeSrc": "8417:14:17",
																					"nodeType": "YulIdentifier",
																					"src": "8417:14:17"
																				},
																				"nativeSrc": "8417:16:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8417:16:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8435:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "8435:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8413:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:17"
																		},
																		"nativeSrc": "8413:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8413:25:17"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "8389:14:17",
																	"nodeType": "YulIdentifier",
																	"src": "8389:14:17"
																},
																"nativeSrc": "8389:50:17",
																"nodeType": "YulFunctionCall",
																"src": "8389:50:17"
															},
															"nativeSrc": "8389:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "8389:50:17"
														},
														{
															"nativeSrc": "8448:25:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8448:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8468:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "8468:4:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8462:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "8462:5:17"
																},
																"nativeSrc": "8462:11:17",
																"nodeType": "YulFunctionCall",
																"src": "8462:11:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "8452:6:17",
																	"nodeType": "YulTypedName",
																	"src": "8452:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8482:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8482:26:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8492:14:17",
																	"nodeType": "YulIdentifier",
																	"src": "8492:14:17"
																},
																"nativeSrc": "8492:16:17",
																"nodeType": "YulFunctionCall",
																"src": "8492:16:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "8486:2:17",
																	"nodeType": "YulTypedName",
																	"src": "8486:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8517:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8517:28:17",
															"value": {
																"kind": "number",
																"nativeSrc": "8527:18:17",
																"nodeType": "YulLiteral",
																"src": "8527:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "8521:2:17",
																	"nodeType": "YulTypedName",
																	"src": "8521:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8603:9:17",
																"nodeType": "YulBlock",
																"src": "8603:9:17",
																"statements": [
																	{
																		"nativeSrc": "8605:5:17",
																		"nodeType": "YulLeave",
																		"src": "8605:5:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8563:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8563:6:17"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "8571:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "8571:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8560:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "8560:2:17"
																		},
																		"nativeSrc": "8560:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8560:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8583:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8583:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8591:4:17",
																						"nodeType": "YulLiteral",
																						"src": "8591:4:17",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8579:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8579:3:17"
																				},
																				"nativeSrc": "8579:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8579:17:17"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "8598:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "8598:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8576:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "8576:2:17"
																		},
																		"nativeSrc": "8576:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8576:25:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8557:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8557:2:17"
																},
																"nativeSrc": "8557:45:17",
																"nodeType": "YulFunctionCall",
																"src": "8557:45:17"
															},
															"nativeSrc": "8554:58:17",
															"nodeType": "YulIf",
															"src": "8554:58:17"
														},
														{
															"nativeSrc": "8621:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8621:28:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8636:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "8636:4:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "8642:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8642:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8632:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8632:3:17"
																},
																"nativeSrc": "8632:17:17",
																"nodeType": "YulFunctionCall",
																"src": "8632:17:17"
															},
															"variables": [
																{
																	"name": "msg",
																	"nativeSrc": "8625:3:17",
																	"nodeType": "YulTypedName",
																	"src": "8625:3:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8658:24:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8658:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nativeSrc": "8678:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8678:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8672:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "8672:5:17"
																},
																"nativeSrc": "8672:10:17",
																"nodeType": "YulFunctionCall",
																"src": "8672:10:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8662:6:17",
																	"nodeType": "YulTypedName",
																	"src": "8662:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8709:9:17",
																"nodeType": "YulBlock",
																"src": "8709:9:17",
																"statements": [
																	{
																		"nativeSrc": "8711:5:17",
																		"nodeType": "YulLeave",
																		"src": "8711:5:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8697:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8697:6:17"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "8705:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "8705:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8694:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8694:2:17"
																},
																"nativeSrc": "8694:14:17",
																"nodeType": "YulFunctionCall",
																"src": "8694:14:17"
															},
															"nativeSrc": "8691:27:17",
															"nodeType": "YulIf",
															"src": "8691:27:17"
														},
														{
															"body": {
																"nativeSrc": "8800:9:17",
																"nodeType": "YulBlock",
																"src": "8800:9:17",
																"statements": [
																	{
																		"nativeSrc": "8802:5:17",
																		"nodeType": "YulLeave",
																		"src": "8802:5:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nativeSrc": "8741:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "8741:3:17"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "8746:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8746:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8737:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8737:3:17"
																				},
																				"nativeSrc": "8737:16:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8737:16:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8755:4:17",
																				"nodeType": "YulLiteral",
																				"src": "8755:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8733:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8733:3:17"
																		},
																		"nativeSrc": "8733:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8733:27:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nativeSrc": "8770:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "8770:4:17"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "8776:14:17",
																							"nodeType": "YulIdentifier",
																							"src": "8776:14:17"
																						},
																						"nativeSrc": "8776:16:17",
																						"nodeType": "YulFunctionCall",
																						"src": "8776:16:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8766:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8766:3:17"
																				},
																				"nativeSrc": "8766:27:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8766:27:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8795:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "8795:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8762:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8762:3:17"
																		},
																		"nativeSrc": "8762:36:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8762:36:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8730:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8730:2:17"
																},
																"nativeSrc": "8730:69:17",
																"nodeType": "YulFunctionCall",
																"src": "8730:69:17"
															},
															"nativeSrc": "8727:82:17",
															"nodeType": "YulIf",
															"src": "8727:82:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8838:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "8838:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8852:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8852:6:17"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "8860:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8860:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8848:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8848:3:17"
																				},
																				"nativeSrc": "8848:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8848:19:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8869:4:17",
																				"nodeType": "YulLiteral",
																				"src": "8869:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8844:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8844:3:17"
																		},
																		"nativeSrc": "8844:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8844:30:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8818:19:17",
																	"nodeType": "YulIdentifier",
																	"src": "8818:19:17"
																},
																"nativeSrc": "8818:57:17",
																"nodeType": "YulFunctionCall",
																"src": "8818:57:17"
															},
															"nativeSrc": "8818:57:17",
															"nodeType": "YulExpressionStatement",
															"src": "8818:57:17"
														},
														{
															"nativeSrc": "8884:10:17",
															"nodeType": "YulAssignment",
															"src": "8884:10:17",
															"value": {
																"name": "msg",
																"nativeSrc": "8891:3:17",
																"nodeType": "YulIdentifier",
																"src": "8891:3:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8884:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8884:3:17"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nativeSrc": "8229:671:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8268:3:17",
														"nodeType": "YulTypedName",
														"src": "8268:3:17",
														"type": ""
													}
												],
												"src": "8229:671:17"
											},
											{
												"body": {
													"nativeSrc": "9034:119:17",
													"nodeType": "YulBlock",
													"src": "9034:119:17",
													"statements": [
														{
															"nativeSrc": "9044:26:17",
															"nodeType": "YulAssignment",
															"src": "9044:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9056:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9056:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9067:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9067:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9052:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9052:3:17"
																},
																"nativeSrc": "9052:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9052:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9044:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9044:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9086:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9086:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9097:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9097:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9079:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9079:6:17"
																},
																"nativeSrc": "9079:25:17",
																"nodeType": "YulFunctionCall",
																"src": "9079:25:17"
															},
															"nativeSrc": "9079:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "9079:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9124:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9124:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9135:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9135:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9120:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9120:3:17"
																		},
																		"nativeSrc": "9120:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9120:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9140:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9140:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9113:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9113:6:17"
																},
																"nativeSrc": "9113:34:17",
																"nodeType": "YulFunctionCall",
																"src": "9113:34:17"
															},
															"nativeSrc": "9113:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "9113:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8905:248:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8995:9:17",
														"nodeType": "YulTypedName",
														"src": "8995:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9006:6:17",
														"nodeType": "YulTypedName",
														"src": "9006:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9014:6:17",
														"nodeType": "YulTypedName",
														"src": "9014:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9025:4:17",
														"nodeType": "YulTypedName",
														"src": "9025:4:17",
														"type": ""
													}
												],
												"src": "8905:248:17"
											},
											{
												"body": {
													"nativeSrc": "9287:145:17",
													"nodeType": "YulBlock",
													"src": "9287:145:17",
													"statements": [
														{
															"nativeSrc": "9297:26:17",
															"nodeType": "YulAssignment",
															"src": "9297:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9309:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9309:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9320:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9320:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9305:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9305:3:17"
																},
																"nativeSrc": "9305:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9305:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9297:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9297:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9339:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9339:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9354:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9354:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9370:3:17",
																								"nodeType": "YulLiteral",
																								"src": "9370:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9375:1:17",
																								"nodeType": "YulLiteral",
																								"src": "9375:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9366:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "9366:3:17"
																						},
																						"nativeSrc": "9366:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "9366:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9379:1:17",
																						"nodeType": "YulLiteral",
																						"src": "9379:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9362:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9362:3:17"
																				},
																				"nativeSrc": "9362:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9362:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9350:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9350:3:17"
																		},
																		"nativeSrc": "9350:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9350:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9332:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9332:6:17"
																},
																"nativeSrc": "9332:51:17",
																"nodeType": "YulFunctionCall",
																"src": "9332:51:17"
															},
															"nativeSrc": "9332:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "9332:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9403:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9403:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9414:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9414:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9399:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9399:3:17"
																		},
																		"nativeSrc": "9399:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9399:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9419:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9419:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9392:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9392:6:17"
																},
																"nativeSrc": "9392:34:17",
																"nodeType": "YulFunctionCall",
																"src": "9392:34:17"
															},
															"nativeSrc": "9392:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "9392:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9158:274:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9248:9:17",
														"nodeType": "YulTypedName",
														"src": "9248:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9259:6:17",
														"nodeType": "YulTypedName",
														"src": "9259:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9267:6:17",
														"nodeType": "YulTypedName",
														"src": "9267:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9278:4:17",
														"nodeType": "YulTypedName",
														"src": "9278:4:17",
														"type": ""
													}
												],
												"src": "9158:274:17"
											},
											{
												"body": {
													"nativeSrc": "9494:107:17",
													"nodeType": "YulBlock",
													"src": "9494:107:17",
													"statements": [
														{
															"nativeSrc": "9504:22:17",
															"nodeType": "YulAssignment",
															"src": "9504:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9519:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9519:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9513:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "9513:5:17"
																},
																"nativeSrc": "9513:13:17",
																"nodeType": "YulFunctionCall",
																"src": "9513:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9504:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "9504:5:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9579:16:17",
																"nodeType": "YulBlock",
																"src": "9579:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9588:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9588:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9591:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9591:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9581:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9581:6:17"
																			},
																			"nativeSrc": "9581:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9581:12:17"
																		},
																		"nativeSrc": "9581:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9581:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9548:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "9548:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "9569:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "9569:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "9562:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "9562:6:17"
																						},
																						"nativeSrc": "9562:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "9562:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9555:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "9555:6:17"
																				},
																				"nativeSrc": "9555:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9555:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9545:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "9545:2:17"
																		},
																		"nativeSrc": "9545:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9545:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9538:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9538:6:17"
																},
																"nativeSrc": "9538:40:17",
																"nodeType": "YulFunctionCall",
																"src": "9538:40:17"
															},
															"nativeSrc": "9535:60:17",
															"nodeType": "YulIf",
															"src": "9535:60:17"
														}
													]
												},
												"name": "abi_decode_bool_fromMemory",
												"nativeSrc": "9437:164:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9473:6:17",
														"nodeType": "YulTypedName",
														"src": "9473:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9484:5:17",
														"nodeType": "YulTypedName",
														"src": "9484:5:17",
														"type": ""
													}
												],
												"src": "9437:164:17"
											},
											{
												"body": {
													"nativeSrc": "9684:124:17",
													"nodeType": "YulBlock",
													"src": "9684:124:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9730:16:17",
																"nodeType": "YulBlock",
																"src": "9730:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9739:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9739:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9742:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9742:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9732:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9732:6:17"
																			},
																			"nativeSrc": "9732:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9732:12:17"
																		},
																		"nativeSrc": "9732:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9732:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9705:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9705:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9714:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9714:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9701:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9701:3:17"
																		},
																		"nativeSrc": "9701:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9701:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9726:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9726:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9697:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9697:3:17"
																},
																"nativeSrc": "9697:32:17",
																"nodeType": "YulFunctionCall",
																"src": "9697:32:17"
															},
															"nativeSrc": "9694:52:17",
															"nodeType": "YulIf",
															"src": "9694:52:17"
														},
														{
															"nativeSrc": "9755:47:17",
															"nodeType": "YulAssignment",
															"src": "9755:47:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9792:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9792:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nativeSrc": "9765:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "9765:26:17"
																},
																"nativeSrc": "9765:37:17",
																"nodeType": "YulFunctionCall",
																"src": "9765:37:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9755:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9755:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9606:202:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9650:9:17",
														"nodeType": "YulTypedName",
														"src": "9650:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9661:7:17",
														"nodeType": "YulTypedName",
														"src": "9661:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9673:6:17",
														"nodeType": "YulTypedName",
														"src": "9673:6:17",
														"type": ""
													}
												],
												"src": "9606:202:17"
											},
											{
												"body": {
													"nativeSrc": "9987:170:17",
													"nodeType": "YulBlock",
													"src": "9987:170:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10004:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10004:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10015:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10015:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9997:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9997:6:17"
																},
																"nativeSrc": "9997:21:17",
																"nodeType": "YulFunctionCall",
																"src": "9997:21:17"
															},
															"nativeSrc": "9997:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "9997:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10038:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10038:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10049:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10049:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10034:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10034:3:17"
																		},
																		"nativeSrc": "10034:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10034:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10054:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10054:2:17",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10027:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10027:6:17"
																},
																"nativeSrc": "10027:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10027:30:17"
															},
															"nativeSrc": "10027:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "10027:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10077:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10077:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10088:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10088:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10073:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10073:3:17"
																		},
																		"nativeSrc": "10073:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10073:18:17"
																	},
																	{
																		"hexValue": "41756374696f6e206861736e277420626567756e",
																		"kind": "string",
																		"nativeSrc": "10093:22:17",
																		"nodeType": "YulLiteral",
																		"src": "10093:22:17",
																		"type": "",
																		"value": "Auction hasn't begun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10066:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10066:6:17"
																},
																"nativeSrc": "10066:50:17",
																"nodeType": "YulFunctionCall",
																"src": "10066:50:17"
															},
															"nativeSrc": "10066:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "10066:50:17"
														},
														{
															"nativeSrc": "10125:26:17",
															"nodeType": "YulAssignment",
															"src": "10125:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10137:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10137:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10148:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10148:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10133:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10133:3:17"
																},
																"nativeSrc": "10133:18:17",
																"nodeType": "YulFunctionCall",
																"src": "10133:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10125:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10125:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59b32fee736cce03c77d145dd4099c3c4e1280b1dad0ad62e9e284b4fe62ad45__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9813:344:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9964:9:17",
														"nodeType": "YulTypedName",
														"src": "9964:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9978:4:17",
														"nodeType": "YulTypedName",
														"src": "9978:4:17",
														"type": ""
													}
												],
												"src": "9813:344:17"
											},
											{
												"body": {
													"nativeSrc": "10336:182:17",
													"nodeType": "YulBlock",
													"src": "10336:182:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10353:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10353:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10364:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10364:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10346:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10346:6:17"
																},
																"nativeSrc": "10346:21:17",
																"nodeType": "YulFunctionCall",
																"src": "10346:21:17"
															},
															"nativeSrc": "10346:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "10346:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10387:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10387:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10398:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10398:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10383:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10383:3:17"
																		},
																		"nativeSrc": "10383:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10383:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10403:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10403:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10376:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10376:6:17"
																},
																"nativeSrc": "10376:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10376:30:17"
															},
															"nativeSrc": "10376:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "10376:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10426:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10426:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10437:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10437:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10422:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10422:3:17"
																		},
																		"nativeSrc": "10422:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10422:18:17"
																	},
																	{
																		"hexValue": "41756374696f6e2068617320616c7265616479206265656e20736574746c6564",
																		"kind": "string",
																		"nativeSrc": "10442:34:17",
																		"nodeType": "YulLiteral",
																		"src": "10442:34:17",
																		"type": "",
																		"value": "Auction has already been settled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10415:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10415:6:17"
																},
																"nativeSrc": "10415:62:17",
																"nodeType": "YulFunctionCall",
																"src": "10415:62:17"
															},
															"nativeSrc": "10415:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "10415:62:17"
														},
														{
															"nativeSrc": "10486:26:17",
															"nodeType": "YulAssignment",
															"src": "10486:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10498:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10498:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10509:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10509:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10494:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10494:3:17"
																},
																"nativeSrc": "10494:18:17",
																"nodeType": "YulFunctionCall",
																"src": "10494:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10486:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10486:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b9c19275b9276d9745a484d1a2df68f7756a1cb166850daf9e0b5df0b846571__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10162:356:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10313:9:17",
														"nodeType": "YulTypedName",
														"src": "10313:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10327:4:17",
														"nodeType": "YulTypedName",
														"src": "10327:4:17",
														"type": ""
													}
												],
												"src": "10162:356:17"
											},
											{
												"body": {
													"nativeSrc": "10697:174:17",
													"nodeType": "YulBlock",
													"src": "10697:174:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10714:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10714:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10725:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10725:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10707:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10707:6:17"
																},
																"nativeSrc": "10707:21:17",
																"nodeType": "YulFunctionCall",
																"src": "10707:21:17"
															},
															"nativeSrc": "10707:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "10707:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10748:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10748:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10759:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10759:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10744:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10744:3:17"
																		},
																		"nativeSrc": "10744:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10744:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10764:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10764:2:17",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10737:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10737:6:17"
																},
																"nativeSrc": "10737:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10737:30:17"
															},
															"nativeSrc": "10737:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "10737:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10787:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10787:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10798:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10798:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10783:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10783:3:17"
																		},
																		"nativeSrc": "10783:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10783:18:17"
																	},
																	{
																		"hexValue": "41756374696f6e206861736e277420636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "10803:26:17",
																		"nodeType": "YulLiteral",
																		"src": "10803:26:17",
																		"type": "",
																		"value": "Auction hasn't completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10776:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10776:6:17"
																},
																"nativeSrc": "10776:54:17",
																"nodeType": "YulFunctionCall",
																"src": "10776:54:17"
															},
															"nativeSrc": "10776:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "10776:54:17"
														},
														{
															"nativeSrc": "10839:26:17",
															"nodeType": "YulAssignment",
															"src": "10839:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10851:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10851:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10862:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10862:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10847:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10847:3:17"
																},
																"nativeSrc": "10847:18:17",
																"nodeType": "YulFunctionCall",
																"src": "10847:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10839:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10839:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e27b8c83269c21fc917b88c4e1199f3cd97455682e8857f3f234160d3fa4df70__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10523:348:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10674:9:17",
														"nodeType": "YulTypedName",
														"src": "10674:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10688:4:17",
														"nodeType": "YulTypedName",
														"src": "10688:4:17",
														"type": ""
													}
												],
												"src": "10523:348:17"
											},
											{
												"body": {
													"nativeSrc": "11041:218:17",
													"nodeType": "YulBlock",
													"src": "11041:218:17",
													"statements": [
														{
															"nativeSrc": "11051:26:17",
															"nodeType": "YulAssignment",
															"src": "11051:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11063:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11063:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11074:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11074:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11059:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11059:3:17"
																},
																"nativeSrc": "11059:18:17",
																"nodeType": "YulFunctionCall",
																"src": "11059:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11051:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11051:4:17"
																}
															]
														},
														{
															"nativeSrc": "11086:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11086:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11104:3:17",
																				"nodeType": "YulLiteral",
																				"src": "11104:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11109:1:17",
																				"nodeType": "YulLiteral",
																				"src": "11109:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11100:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11100:3:17"
																		},
																		"nativeSrc": "11100:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11100:11:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11113:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11113:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11096:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11096:3:17"
																},
																"nativeSrc": "11096:19:17",
																"nodeType": "YulFunctionCall",
																"src": "11096:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11090:2:17",
																	"nodeType": "YulTypedName",
																	"src": "11090:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11131:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11131:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11146:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11146:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11154:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "11154:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11142:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11142:3:17"
																		},
																		"nativeSrc": "11142:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11142:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11124:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11124:6:17"
																},
																"nativeSrc": "11124:34:17",
																"nodeType": "YulFunctionCall",
																"src": "11124:34:17"
															},
															"nativeSrc": "11124:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "11124:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11178:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11178:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11189:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11189:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11174:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11174:3:17"
																		},
																		"nativeSrc": "11174:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11174:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11198:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11198:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11206:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "11206:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11194:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11194:3:17"
																		},
																		"nativeSrc": "11194:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11194:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11167:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11167:6:17"
																},
																"nativeSrc": "11167:43:17",
																"nodeType": "YulFunctionCall",
																"src": "11167:43:17"
															},
															"nativeSrc": "11167:43:17",
															"nodeType": "YulExpressionStatement",
															"src": "11167:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11230:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11230:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11241:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11241:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11226:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11226:3:17"
																		},
																		"nativeSrc": "11226:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11226:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11246:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11246:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11219:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11219:6:17"
																},
																"nativeSrc": "11219:34:17",
																"nodeType": "YulFunctionCall",
																"src": "11219:34:17"
															},
															"nativeSrc": "11219:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "11219:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10876:383:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10994:9:17",
														"nodeType": "YulTypedName",
														"src": "10994:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11005:6:17",
														"nodeType": "YulTypedName",
														"src": "11005:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11013:6:17",
														"nodeType": "YulTypedName",
														"src": "11013:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11021:6:17",
														"nodeType": "YulTypedName",
														"src": "11021:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11032:4:17",
														"nodeType": "YulTypedName",
														"src": "11032:4:17",
														"type": ""
													}
												],
												"src": "10876:383:17"
											},
											{
												"body": {
													"nativeSrc": "11312:152:17",
													"nodeType": "YulBlock",
													"src": "11312:152:17",
													"statements": [
														{
															"nativeSrc": "11322:17:17",
															"nodeType": "YulAssignment",
															"src": "11322:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11334:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "11334:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11337:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "11337:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11330:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11330:3:17"
																},
																"nativeSrc": "11330:9:17",
																"nodeType": "YulFunctionCall",
																"src": "11330:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11322:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11322:4:17"
																}
															]
														},
														{
															"nativeSrc": "11348:19:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11348:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11362:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "11362:1:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11365:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11365:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11358:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11358:3:17"
																},
																"nativeSrc": "11358:9:17",
																"nodeType": "YulFunctionCall",
																"src": "11358:9:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11352:2:17",
																	"nodeType": "YulTypedName",
																	"src": "11352:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11436:22:17",
																"nodeType": "YulBlock",
																"src": "11436:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11438:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "11438:16:17"
																			},
																			"nativeSrc": "11438:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11438:18:17"
																		},
																		"nativeSrc": "11438:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11438:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "11393:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "11393:2:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11386:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "11386:6:17"
																				},
																				"nativeSrc": "11386:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11386:10:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nativeSrc": "11402:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "11402:4:17"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "11408:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "11408:1:17"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nativeSrc": "11398:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11398:3:17"
																				},
																				"nativeSrc": "11398:12:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11398:12:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11382:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11382:3:17"
																		},
																		"nativeSrc": "11382:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11382:29:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "11417:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "11417:2:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nativeSrc": "11425:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "11425:4:17"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "11431:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "11431:1:17"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "11421:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11421:3:17"
																				},
																				"nativeSrc": "11421:12:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11421:12:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11413:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11413:3:17"
																		},
																		"nativeSrc": "11413:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11413:21:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11379:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11379:2:17"
																},
																"nativeSrc": "11379:56:17",
																"nodeType": "YulFunctionCall",
																"src": "11379:56:17"
															},
															"nativeSrc": "11376:82:17",
															"nodeType": "YulIf",
															"src": "11376:82:17"
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nativeSrc": "11264:200:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11294:1:17",
														"nodeType": "YulTypedName",
														"src": "11294:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11297:1:17",
														"nodeType": "YulTypedName",
														"src": "11297:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11303:4:17",
														"nodeType": "YulTypedName",
														"src": "11303:4:17",
														"type": ""
													}
												],
												"src": "11264:200:17"
											},
											{
												"body": {
													"nativeSrc": "11510:207:17",
													"nodeType": "YulBlock",
													"src": "11510:207:17",
													"statements": [
														{
															"nativeSrc": "11520:19:17",
															"nodeType": "YulAssignment",
															"src": "11520:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11536:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11536:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11530:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "11530:5:17"
																},
																"nativeSrc": "11530:9:17",
																"nodeType": "YulFunctionCall",
																"src": "11530:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "11520:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11520:6:17"
																}
															]
														},
														{
															"nativeSrc": "11548:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11548:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "11570:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11570:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11578:4:17",
																		"nodeType": "YulLiteral",
																		"src": "11578:4:17",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11566:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11566:3:17"
																},
																"nativeSrc": "11566:17:17",
																"nodeType": "YulFunctionCall",
																"src": "11566:17:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "11552:10:17",
																	"nodeType": "YulTypedName",
																	"src": "11552:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11658:22:17",
																"nodeType": "YulBlock",
																"src": "11658:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11660:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "11660:16:17"
																			},
																			"nativeSrc": "11660:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11660:18:17"
																		},
																		"nativeSrc": "11660:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11660:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "11601:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "11601:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11613:18:17",
																				"nodeType": "YulLiteral",
																				"src": "11613:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11598:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "11598:2:17"
																		},
																		"nativeSrc": "11598:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11598:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "11637:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "11637:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "11649:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11649:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11634:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "11634:2:17"
																		},
																		"nativeSrc": "11634:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11634:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11595:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11595:2:17"
																},
																"nativeSrc": "11595:62:17",
																"nodeType": "YulFunctionCall",
																"src": "11595:62:17"
															},
															"nativeSrc": "11592:88:17",
															"nodeType": "YulIf",
															"src": "11592:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11696:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11696:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "11700:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "11700:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11689:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11689:6:17"
																},
																"nativeSrc": "11689:22:17",
																"nodeType": "YulFunctionCall",
																"src": "11689:22:17"
															},
															"nativeSrc": "11689:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "11689:22:17"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "11469:248:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "11499:6:17",
														"nodeType": "YulTypedName",
														"src": "11499:6:17",
														"type": ""
													}
												],
												"src": "11469:248:17"
											},
											{
												"body": {
													"nativeSrc": "11788:184:17",
													"nodeType": "YulBlock",
													"src": "11788:184:17",
													"statements": [
														{
															"nativeSrc": "11798:10:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11798:10:17",
															"value": {
																"kind": "number",
																"nativeSrc": "11807:1:17",
																"nodeType": "YulLiteral",
																"src": "11807:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "11802:1:17",
																	"nodeType": "YulTypedName",
																	"src": "11802:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11867:63:17",
																"nodeType": "YulBlock",
																"src": "11867:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "11892:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "11892:3:17"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "11897:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "11897:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11888:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "11888:3:17"
																					},
																					"nativeSrc": "11888:11:17",
																					"nodeType": "YulFunctionCall",
																					"src": "11888:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "11911:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "11911:3:17"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "11916:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "11916:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11907:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "11907:3:17"
																							},
																							"nativeSrc": "11907:11:17",
																							"nodeType": "YulFunctionCall",
																							"src": "11907:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "11901:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "11901:5:17"
																					},
																					"nativeSrc": "11901:18:17",
																					"nodeType": "YulFunctionCall",
																					"src": "11901:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11881:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11881:6:17"
																			},
																			"nativeSrc": "11881:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11881:39:17"
																		},
																		"nativeSrc": "11881:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11881:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "11828:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "11828:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11831:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11831:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11825:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11825:2:17"
																},
																"nativeSrc": "11825:13:17",
																"nodeType": "YulFunctionCall",
																"src": "11825:13:17"
															},
															"nativeSrc": "11817:113:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11839:19:17",
																"nodeType": "YulBlock",
																"src": "11839:19:17",
																"statements": [
																	{
																		"nativeSrc": "11841:15:17",
																		"nodeType": "YulAssignment",
																		"src": "11841:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "11850:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "11850:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11853:2:17",
																					"nodeType": "YulLiteral",
																					"src": "11853:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11846:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11846:3:17"
																			},
																			"nativeSrc": "11846:10:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11846:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "11841:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "11841:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11821:3:17",
																"nodeType": "YulBlock",
																"src": "11821:3:17",
																"statements": []
															},
															"src": "11817:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "11950:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11950:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11955:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11955:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11946:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11946:3:17"
																		},
																		"nativeSrc": "11946:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11946:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11964:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11964:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11939:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11939:6:17"
																},
																"nativeSrc": "11939:27:17",
																"nodeType": "YulFunctionCall",
																"src": "11939:27:17"
															},
															"nativeSrc": "11939:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "11939:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "11722:250:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11766:3:17",
														"nodeType": "YulTypedName",
														"src": "11766:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "11771:3:17",
														"nodeType": "YulTypedName",
														"src": "11771:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11776:6:17",
														"nodeType": "YulTypedName",
														"src": "11776:6:17",
														"type": ""
													}
												],
												"src": "11722:250:17"
											},
											{
												"body": {
													"nativeSrc": "12041:472:17",
													"nodeType": "YulBlock",
													"src": "12041:472:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "12090:16:17",
																"nodeType": "YulBlock",
																"src": "12090:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12099:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12099:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12102:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12102:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12092:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12092:6:17"
																			},
																			"nativeSrc": "12092:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12092:12:17"
																		},
																		"nativeSrc": "12092:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12092:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12069:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12069:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12077:4:17",
																						"nodeType": "YulLiteral",
																						"src": "12077:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12065:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12065:3:17"
																				},
																				"nativeSrc": "12065:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12065:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12084:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "12084:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12061:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12061:3:17"
																		},
																		"nativeSrc": "12061:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12061:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12054:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12054:6:17"
																},
																"nativeSrc": "12054:35:17",
																"nodeType": "YulFunctionCall",
																"src": "12054:35:17"
															},
															"nativeSrc": "12051:55:17",
															"nodeType": "YulIf",
															"src": "12051:55:17"
														},
														{
															"nativeSrc": "12115:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "12115:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12131:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12131:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12125:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12125:5:17"
																},
																"nativeSrc": "12125:13:17",
																"nodeType": "YulFunctionCall",
																"src": "12125:13:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12119:2:17",
																	"nodeType": "YulTypedName",
																	"src": "12119:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12177:22:17",
																"nodeType": "YulBlock",
																"src": "12177:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12179:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "12179:16:17"
																			},
																			"nativeSrc": "12179:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12179:18:17"
																		},
																		"nativeSrc": "12179:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12179:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "12153:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "12153:2:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12157:18:17",
																		"nodeType": "YulLiteral",
																		"src": "12157:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12150:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "12150:2:17"
																},
																"nativeSrc": "12150:26:17",
																"nodeType": "YulFunctionCall",
																"src": "12150:26:17"
															},
															"nativeSrc": "12147:52:17",
															"nodeType": "YulIf",
															"src": "12147:52:17"
														},
														{
															"nativeSrc": "12208:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "12208:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12228:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12228:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12222:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12222:5:17"
																},
																"nativeSrc": "12222:9:17",
																"nodeType": "YulFunctionCall",
																"src": "12222:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "12212:6:17",
																	"nodeType": "YulTypedName",
																	"src": "12212:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "12260:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12260:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nativeSrc": "12280:2:17",
																								"nodeType": "YulIdentifier",
																								"src": "12280:2:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12284:4:17",
																								"nodeType": "YulLiteral",
																								"src": "12284:4:17",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "12276:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "12276:3:17"
																						},
																						"nativeSrc": "12276:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "12276:13:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12295:2:17",
																								"nodeType": "YulLiteral",
																								"src": "12295:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "12291:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "12291:3:17"
																						},
																						"nativeSrc": "12291:7:17",
																						"nodeType": "YulFunctionCall",
																						"src": "12291:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "12272:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12272:3:17"
																				},
																				"nativeSrc": "12272:27:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12272:27:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12301:4:17",
																				"nodeType": "YulLiteral",
																				"src": "12301:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12268:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12268:3:17"
																		},
																		"nativeSrc": "12268:38:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12268:38:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "12240:19:17",
																	"nodeType": "YulIdentifier",
																	"src": "12240:19:17"
																},
																"nativeSrc": "12240:67:17",
																"nodeType": "YulFunctionCall",
																"src": "12240:67:17"
															},
															"nativeSrc": "12240:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "12240:67:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "12323:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12323:6:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "12331:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "12331:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12316:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12316:6:17"
																},
																"nativeSrc": "12316:18:17",
																"nodeType": "YulFunctionCall",
																"src": "12316:18:17"
															},
															"nativeSrc": "12316:18:17",
															"nodeType": "YulExpressionStatement",
															"src": "12316:18:17"
														},
														{
															"body": {
																"nativeSrc": "12382:16:17",
																"nodeType": "YulBlock",
																"src": "12382:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12391:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12391:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12394:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12394:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12384:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12384:6:17"
																			},
																			"nativeSrc": "12384:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12384:12:17"
																		},
																		"nativeSrc": "12384:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12384:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12357:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12357:6:17"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "12365:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "12365:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12353:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12353:3:17"
																				},
																				"nativeSrc": "12353:15:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12353:15:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12370:4:17",
																				"nodeType": "YulLiteral",
																				"src": "12370:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12349:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12349:3:17"
																		},
																		"nativeSrc": "12349:26:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12349:26:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12377:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12377:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12346:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "12346:2:17"
																},
																"nativeSrc": "12346:35:17",
																"nodeType": "YulFunctionCall",
																"src": "12346:35:17"
															},
															"nativeSrc": "12343:55:17",
															"nodeType": "YulIf",
															"src": "12343:55:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12446:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12446:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12454:4:17",
																				"nodeType": "YulLiteral",
																				"src": "12454:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12442:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12442:3:17"
																		},
																		"nativeSrc": "12442:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12442:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12465:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12465:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12473:4:17",
																				"nodeType": "YulLiteral",
																				"src": "12473:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12461:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12461:3:17"
																		},
																		"nativeSrc": "12461:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12461:17:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "12480:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "12480:2:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12407:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "12407:34:17"
																},
																"nativeSrc": "12407:76:17",
																"nodeType": "YulFunctionCall",
																"src": "12407:76:17"
															},
															"nativeSrc": "12407:76:17",
															"nodeType": "YulExpressionStatement",
															"src": "12407:76:17"
														},
														{
															"nativeSrc": "12492:15:17",
															"nodeType": "YulAssignment",
															"src": "12492:15:17",
															"value": {
																"name": "memPtr",
																"nativeSrc": "12501:6:17",
																"nodeType": "YulIdentifier",
																"src": "12501:6:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12492:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12492:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "11977:536:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12015:6:17",
														"nodeType": "YulTypedName",
														"src": "12015:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12023:3:17",
														"nodeType": "YulTypedName",
														"src": "12023:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12031:5:17",
														"nodeType": "YulTypedName",
														"src": "12031:5:17",
														"type": ""
													}
												],
												"src": "11977:536:17"
											},
											{
												"body": {
													"nativeSrc": "12585:87:17",
													"nodeType": "YulBlock",
													"src": "12585:87:17",
													"statements": [
														{
															"nativeSrc": "12595:22:17",
															"nodeType": "YulAssignment",
															"src": "12595:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12610:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12610:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12604:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12604:5:17"
																},
																"nativeSrc": "12604:13:17",
																"nodeType": "YulFunctionCall",
																"src": "12604:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12595:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12595:5:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12650:16:17",
																"nodeType": "YulBlock",
																"src": "12650:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12659:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12659:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12662:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12662:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12652:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12652:6:17"
																			},
																			"nativeSrc": "12652:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12652:12:17"
																		},
																		"nativeSrc": "12652:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12652:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12639:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "12639:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12646:1:17",
																				"nodeType": "YulLiteral",
																				"src": "12646:1:17",
																				"type": "",
																				"value": "6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12636:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "12636:2:17"
																		},
																		"nativeSrc": "12636:12:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12636:12:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12629:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12629:6:17"
																},
																"nativeSrc": "12629:20:17",
																"nodeType": "YulFunctionCall",
																"src": "12629:20:17"
															},
															"nativeSrc": "12626:40:17",
															"nodeType": "YulIf",
															"src": "12626:40:17"
														}
													]
												},
												"name": "abi_decode_enum_MediaType_fromMemory",
												"nativeSrc": "12518:154:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12564:6:17",
														"nodeType": "YulTypedName",
														"src": "12564:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12575:5:17",
														"nodeType": "YulTypedName",
														"src": "12575:5:17",
														"type": ""
													}
												],
												"src": "12518:154:17"
											},
											{
												"body": {
													"nativeSrc": "12737:91:17",
													"nodeType": "YulBlock",
													"src": "12737:91:17",
													"statements": [
														{
															"nativeSrc": "12747:22:17",
															"nodeType": "YulAssignment",
															"src": "12747:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12762:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12762:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12756:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12756:5:17"
																},
																"nativeSrc": "12756:13:17",
																"nodeType": "YulFunctionCall",
																"src": "12756:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12747:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12747:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12816:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "12816:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IVerbsToken",
																	"nativeSrc": "12778:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "12778:37:17"
																},
																"nativeSrc": "12778:44:17",
																"nodeType": "YulFunctionCall",
																"src": "12778:44:17"
															},
															"nativeSrc": "12778:44:17",
															"nodeType": "YulExpressionStatement",
															"src": "12778:44:17"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "12677:151:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12716:6:17",
														"nodeType": "YulTypedName",
														"src": "12716:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12727:5:17",
														"nodeType": "YulTypedName",
														"src": "12727:5:17",
														"type": ""
													}
												],
												"src": "12677:151:17"
											},
											{
												"body": {
													"nativeSrc": "12918:1009:17",
													"nodeType": "YulBlock",
													"src": "12918:1009:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "12967:16:17",
																"nodeType": "YulBlock",
																"src": "12967:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12976:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12976:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12979:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12979:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12969:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12969:6:17"
																			},
																			"nativeSrc": "12969:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12969:12:17"
																		},
																		"nativeSrc": "12969:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12969:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12946:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12946:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12954:4:17",
																						"nodeType": "YulLiteral",
																						"src": "12954:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12942:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12942:3:17"
																				},
																				"nativeSrc": "12942:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12942:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12961:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "12961:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12938:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12938:3:17"
																		},
																		"nativeSrc": "12938:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12938:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12931:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12931:6:17"
																},
																"nativeSrc": "12931:35:17",
																"nodeType": "YulFunctionCall",
																"src": "12931:35:17"
															},
															"nativeSrc": "12928:55:17",
															"nodeType": "YulIf",
															"src": "12928:55:17"
														},
														{
															"nativeSrc": "12992:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "12992:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13008:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13008:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13002:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "13002:5:17"
																},
																"nativeSrc": "13002:13:17",
																"nodeType": "YulFunctionCall",
																"src": "13002:13:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12996:2:17",
																	"nodeType": "YulTypedName",
																	"src": "12996:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13024:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13024:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "13034:4:17",
																"nodeType": "YulLiteral",
																"src": "13034:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "13028:2:17",
																	"nodeType": "YulTypedName",
																	"src": "13028:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13077:22:17",
																"nodeType": "YulBlock",
																"src": "13077:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "13079:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "13079:16:17"
																			},
																			"nativeSrc": "13079:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13079:18:17"
																		},
																		"nativeSrc": "13079:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13079:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "13053:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "13053:2:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13057:18:17",
																		"nodeType": "YulLiteral",
																		"src": "13057:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13050:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "13050:2:17"
																},
																"nativeSrc": "13050:26:17",
																"nodeType": "YulFunctionCall",
																"src": "13050:26:17"
															},
															"nativeSrc": "13047:52:17",
															"nodeType": "YulIf",
															"src": "13047:52:17"
														},
														{
															"nativeSrc": "13108:12:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13108:12:17",
															"value": {
																"kind": "number",
																"nativeSrc": "13118:2:17",
																"nodeType": "YulLiteral",
																"src": "13118:2:17",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "13112:2:17",
																	"nodeType": "YulTypedName",
																	"src": "13112:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13129:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13129:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13149:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13149:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13143:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "13143:5:17"
																},
																"nativeSrc": "13143:9:17",
																"nodeType": "YulFunctionCall",
																"src": "13143:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "13133:6:17",
																	"nodeType": "YulTypedName",
																	"src": "13133:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "13181:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13181:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13197:1:17",
																						"nodeType": "YulLiteral",
																						"src": "13197:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "13200:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "13200:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "13193:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13193:3:17"
																				},
																				"nativeSrc": "13193:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13193:10:17"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "13205:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "13205:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13189:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13189:3:17"
																		},
																		"nativeSrc": "13189:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13189:19:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "13161:19:17",
																	"nodeType": "YulIdentifier",
																	"src": "13161:19:17"
																},
																"nativeSrc": "13161:48:17",
																"nodeType": "YulFunctionCall",
																"src": "13161:48:17"
															},
															"nativeSrc": "13161:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "13161:48:17"
														},
														{
															"nativeSrc": "13218:17:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13218:17:17",
															"value": {
																"name": "memPtr",
																"nativeSrc": "13229:6:17",
																"nodeType": "YulIdentifier",
																"src": "13229:6:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "13222:3:17",
																	"nodeType": "YulTypedName",
																	"src": "13222:3:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "13251:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13251:6:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "13259:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "13259:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13244:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13244:6:17"
																},
																"nativeSrc": "13244:18:17",
																"nodeType": "YulFunctionCall",
																"src": "13244:18:17"
															},
															"nativeSrc": "13244:18:17",
															"nodeType": "YulExpressionStatement",
															"src": "13244:18:17"
														},
														{
															"nativeSrc": "13271:22:17",
															"nodeType": "YulAssignment",
															"src": "13271:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "13282:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13282:6:17"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "13290:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "13290:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13278:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13278:3:17"
																},
																"nativeSrc": "13278:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13278:15:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "13271:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13271:3:17"
																}
															]
														},
														{
															"nativeSrc": "13302:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13302:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13324:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13324:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13336:1:17",
																						"nodeType": "YulLiteral",
																						"src": "13336:1:17",
																						"type": "",
																						"value": "6"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "13339:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "13339:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "13332:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13332:3:17"
																				},
																				"nativeSrc": "13332:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13332:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13320:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13320:3:17"
																		},
																		"nativeSrc": "13320:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13320:23:17"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "13345:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "13345:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13316:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13316:3:17"
																},
																"nativeSrc": "13316:32:17",
																"nodeType": "YulFunctionCall",
																"src": "13316:32:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "13306:6:17",
																	"nodeType": "YulTypedName",
																	"src": "13306:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13376:16:17",
																"nodeType": "YulBlock",
																"src": "13376:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13385:1:17",
																					"nodeType": "YulLiteral",
																					"src": "13385:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13388:1:17",
																					"nodeType": "YulLiteral",
																					"src": "13388:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13378:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13378:6:17"
																			},
																			"nativeSrc": "13378:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13378:12:17"
																		},
																		"nativeSrc": "13378:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13378:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "13363:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13363:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13371:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13371:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13360:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "13360:2:17"
																},
																"nativeSrc": "13360:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13360:15:17"
															},
															"nativeSrc": "13357:35:17",
															"nodeType": "YulIf",
															"src": "13357:35:17"
														},
														{
															"nativeSrc": "13401:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13401:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13416:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13416:6:17"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "13424:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "13424:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13412:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13412:3:17"
																},
																"nativeSrc": "13412:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13412:15:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "13405:3:17",
																	"nodeType": "YulTypedName",
																	"src": "13405:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13492:405:17",
																"nodeType": "YulBlock",
																"src": "13492:405:17",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "13532:16:17",
																			"nodeType": "YulBlock",
																			"src": "13532:16:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13541:1:17",
																								"nodeType": "YulLiteral",
																								"src": "13541:1:17",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13544:1:17",
																								"nodeType": "YulLiteral",
																								"src": "13544:1:17",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "13534:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "13534:6:17"
																						},
																						"nativeSrc": "13534:12:17",
																						"nodeType": "YulFunctionCall",
																						"src": "13534:12:17"
																					},
																					"nativeSrc": "13534:12:17",
																					"nodeType": "YulExpressionStatement",
																					"src": "13534:12:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "end",
																							"nativeSrc": "13517:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "13517:3:17"
																						},
																						{
																							"name": "src",
																							"nativeSrc": "13522:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "13522:3:17"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "13513:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "13513:3:17"
																					},
																					"nativeSrc": "13513:13:17",
																					"nodeType": "YulFunctionCall",
																					"src": "13513:13:17"
																				},
																				{
																					"name": "_3",
																					"nativeSrc": "13528:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "13528:2:17"
																				}
																			],
																			"functionName": {
																				"name": "slt",
																				"nativeSrc": "13509:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "13509:3:17"
																			},
																			"nativeSrc": "13509:22:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13509:22:17"
																		},
																		"nativeSrc": "13506:42:17",
																		"nodeType": "YulIf",
																		"src": "13506:42:17"
																	},
																	{
																		"nativeSrc": "13561:25:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13561:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "_3",
																					"nativeSrc": "13583:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "13583:2:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "13577:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "13577:5:17"
																			},
																			"nativeSrc": "13577:9:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13577:9:17"
																		},
																		"variables": [
																			{
																				"name": "memPtr_1",
																				"nativeSrc": "13565:8:17",
																				"nodeType": "YulTypedName",
																				"src": "13565:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "memPtr_1",
																					"nativeSrc": "13624:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "13624:8:17"
																				}
																			],
																			"functionName": {
																				"name": "finalize_allocation_2591",
																				"nativeSrc": "13599:24:17",
																				"nodeType": "YulIdentifier",
																				"src": "13599:24:17"
																			},
																			"nativeSrc": "13599:34:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13599:34:17"
																		},
																		"nativeSrc": "13599:34:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13599:34:17"
																	},
																	{
																		"nativeSrc": "13646:23:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13646:23:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "13665:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13665:3:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "13659:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "13659:5:17"
																			},
																			"nativeSrc": "13659:10:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13659:10:17"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "13650:5:17",
																				"nodeType": "YulTypedName",
																				"src": "13650:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "13720:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "13720:5:17"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_contract_IVerbsToken",
																				"nativeSrc": "13682:37:17",
																				"nodeType": "YulIdentifier",
																				"src": "13682:37:17"
																			},
																			"nativeSrc": "13682:44:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13682:44:17"
																		},
																		"nativeSrc": "13682:44:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13682:44:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "memPtr_1",
																					"nativeSrc": "13746:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "13746:8:17"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "13756:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "13756:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13739:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13739:6:17"
																			},
																			"nativeSrc": "13739:23:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13739:23:17"
																		},
																		"nativeSrc": "13739:23:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13739:23:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "memPtr_1",
																							"nativeSrc": "13786:8:17",
																							"nodeType": "YulIdentifier",
																							"src": "13786:8:17"
																						},
																						{
																							"name": "_2",
																							"nativeSrc": "13796:2:17",
																							"nodeType": "YulIdentifier",
																							"src": "13796:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13782:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "13782:3:17"
																					},
																					"nativeSrc": "13782:17:17",
																					"nodeType": "YulFunctionCall",
																					"src": "13782:17:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "13811:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "13811:3:17"
																								},
																								{
																									"name": "_2",
																									"nativeSrc": "13816:2:17",
																									"nodeType": "YulIdentifier",
																									"src": "13816:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13807:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "13807:3:17"
																							},
																							"nativeSrc": "13807:12:17",
																							"nodeType": "YulFunctionCall",
																							"src": "13807:12:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "13801:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "13801:5:17"
																					},
																					"nativeSrc": "13801:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "13801:19:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13775:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13775:6:17"
																			},
																			"nativeSrc": "13775:46:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13775:46:17"
																		},
																		"nativeSrc": "13775:46:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13775:46:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "13841:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13841:3:17"
																				},
																				{
																					"name": "memPtr_1",
																					"nativeSrc": "13846:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "13846:8:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13834:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13834:6:17"
																			},
																			"nativeSrc": "13834:21:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13834:21:17"
																		},
																		"nativeSrc": "13834:21:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13834:21:17"
																	},
																	{
																		"nativeSrc": "13868:19:17",
																		"nodeType": "YulAssignment",
																		"src": "13868:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "13879:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13879:3:17"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "13884:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "13884:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13875:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "13875:3:17"
																			},
																			"nativeSrc": "13875:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13875:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "13868:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "13868:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13447:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13447:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "13452:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13452:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13444:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "13444:2:17"
																},
																"nativeSrc": "13444:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13444:15:17"
															},
															"nativeSrc": "13436:461:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13460:23:17",
																"nodeType": "YulBlock",
																"src": "13460:23:17",
																"statements": [
																	{
																		"nativeSrc": "13462:19:17",
																		"nodeType": "YulAssignment",
																		"src": "13462:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "13473:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13473:3:17"
																				},
																				{
																					"name": "_3",
																					"nativeSrc": "13478:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "13478:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13469:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "13469:3:17"
																			},
																			"nativeSrc": "13469:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13469:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "13462:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "13462:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13440:3:17",
																"nodeType": "YulBlock",
																"src": "13440:3:17",
																"statements": []
															},
															"src": "13436:461:17"
														},
														{
															"nativeSrc": "13906:15:17",
															"nodeType": "YulAssignment",
															"src": "13906:15:17",
															"value": {
																"name": "memPtr",
																"nativeSrc": "13915:6:17",
																"nodeType": "YulIdentifier",
																"src": "13915:6:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "13906:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "13906:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_struct_CreatorBps_dyn_fromMemory",
												"nativeSrc": "12833:1094:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12892:6:17",
														"nodeType": "YulTypedName",
														"src": "12892:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12900:3:17",
														"nodeType": "YulTypedName",
														"src": "12900:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12908:5:17",
														"nodeType": "YulTypedName",
														"src": "12908:5:17",
														"type": ""
													}
												],
												"src": "12833:1094:17"
											},
											{
												"body": {
													"nativeSrc": "14039:1979:17",
													"nodeType": "YulBlock",
													"src": "14039:1979:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "14085:16:17",
																"nodeType": "YulBlock",
																"src": "14085:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14094:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14094:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14097:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14097:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14087:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14087:6:17"
																			},
																			"nativeSrc": "14087:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14087:12:17"
																		},
																		"nativeSrc": "14087:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14087:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14060:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "14060:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14069:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14069:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14056:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14056:3:17"
																		},
																		"nativeSrc": "14056:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14056:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14081:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14081:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14052:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14052:3:17"
																},
																"nativeSrc": "14052:32:17",
																"nodeType": "YulFunctionCall",
																"src": "14052:32:17"
															},
															"nativeSrc": "14049:52:17",
															"nodeType": "YulIf",
															"src": "14049:52:17"
														},
														{
															"nativeSrc": "14110:30:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14110:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14130:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "14130:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14124:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "14124:5:17"
																},
																"nativeSrc": "14124:16:17",
																"nodeType": "YulFunctionCall",
																"src": "14124:16:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "14114:6:17",
																	"nodeType": "YulTypedName",
																	"src": "14114:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14149:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14149:28:17",
															"value": {
																"kind": "number",
																"nativeSrc": "14159:18:17",
																"nodeType": "YulLiteral",
																"src": "14159:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "14153:2:17",
																	"nodeType": "YulTypedName",
																	"src": "14153:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14204:16:17",
																"nodeType": "YulBlock",
																"src": "14204:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14213:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14213:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14216:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14216:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14206:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14206:6:17"
																			},
																			"nativeSrc": "14206:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14206:12:17"
																		},
																		"nativeSrc": "14206:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14206:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14192:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14192:6:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "14200:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "14200:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14189:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "14189:2:17"
																},
																"nativeSrc": "14189:14:17",
																"nodeType": "YulFunctionCall",
																"src": "14189:14:17"
															},
															"nativeSrc": "14186:34:17",
															"nodeType": "YulIf",
															"src": "14186:34:17"
														},
														{
															"nativeSrc": "14229:32:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14229:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14243:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "14243:9:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "14254:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14254:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14239:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14239:3:17"
																},
																"nativeSrc": "14239:22:17",
																"nodeType": "YulFunctionCall",
																"src": "14239:22:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "14233:2:17",
																	"nodeType": "YulTypedName",
																	"src": "14233:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14301:16:17",
																"nodeType": "YulBlock",
																"src": "14301:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14310:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14310:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14313:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14313:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14303:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14303:6:17"
																			},
																			"nativeSrc": "14303:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14303:12:17"
																		},
																		"nativeSrc": "14303:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14303:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14281:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "14281:7:17"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "14290:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "14290:2:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14277:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14277:3:17"
																		},
																		"nativeSrc": "14277:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14277:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14295:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14295:4:17",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14273:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14273:3:17"
																},
																"nativeSrc": "14273:27:17",
																"nodeType": "YulFunctionCall",
																"src": "14273:27:17"
															},
															"nativeSrc": "14270:47:17",
															"nodeType": "YulIf",
															"src": "14270:47:17"
														},
														{
															"nativeSrc": "14326:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14326:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14346:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14346:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14340:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "14340:5:17"
																},
																"nativeSrc": "14340:9:17",
																"nodeType": "YulFunctionCall",
																"src": "14340:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "14330:6:17",
																	"nodeType": "YulTypedName",
																	"src": "14330:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "14383:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14383:6:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation_2594",
																	"nativeSrc": "14358:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "14358:24:17"
																},
																"nativeSrc": "14358:32:17",
																"nodeType": "YulFunctionCall",
																"src": "14358:32:17"
															},
															"nativeSrc": "14358:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "14358:32:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "14406:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14406:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "14420:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "14420:2:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "14414:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "14414:5:17"
																		},
																		"nativeSrc": "14414:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14414:9:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14399:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14399:6:17"
																},
																"nativeSrc": "14399:25:17",
																"nodeType": "YulFunctionCall",
																"src": "14399:25:17"
															},
															"nativeSrc": "14399:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "14399:25:17"
														},
														{
															"nativeSrc": "14433:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14433:34:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "14459:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "14459:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14463:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14463:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14455:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14455:3:17"
																		},
																		"nativeSrc": "14455:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14455:11:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14449:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "14449:5:17"
																},
																"nativeSrc": "14449:18:17",
																"nodeType": "YulFunctionCall",
																"src": "14449:18:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "14437:8:17",
																	"nodeType": "YulTypedName",
																	"src": "14437:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14496:16:17",
																"nodeType": "YulBlock",
																"src": "14496:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14505:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14505:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14508:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14508:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14498:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14498:6:17"
																			},
																			"nativeSrc": "14498:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14498:12:17"
																		},
																		"nativeSrc": "14498:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14498:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "14482:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "14482:8:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "14492:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "14492:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14479:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "14479:2:17"
																},
																"nativeSrc": "14479:16:17",
																"nodeType": "YulFunctionCall",
																"src": "14479:16:17"
															},
															"nativeSrc": "14476:36:17",
															"nodeType": "YulIf",
															"src": "14476:36:17"
														},
														{
															"nativeSrc": "14521:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14521:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "14535:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "14535:2:17"
																	},
																	{
																		"name": "offset_1",
																		"nativeSrc": "14539:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "14539:8:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14531:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14531:3:17"
																},
																"nativeSrc": "14531:17:17",
																"nodeType": "YulFunctionCall",
																"src": "14531:17:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "14525:2:17",
																	"nodeType": "YulTypedName",
																	"src": "14525:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14588:16:17",
																"nodeType": "YulBlock",
																"src": "14588:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14597:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14597:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14600:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14600:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14590:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14590:6:17"
																			},
																			"nativeSrc": "14590:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14590:12:17"
																		},
																		"nativeSrc": "14590:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14590:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14568:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "14568:7:17"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "14577:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "14577:2:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14564:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14564:3:17"
																		},
																		"nativeSrc": "14564:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14564:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14582:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14582:4:17",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14560:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14560:3:17"
																},
																"nativeSrc": "14560:27:17",
																"nodeType": "YulFunctionCall",
																"src": "14560:27:17"
															},
															"nativeSrc": "14557:47:17",
															"nodeType": "YulIf",
															"src": "14557:47:17"
														},
														{
															"nativeSrc": "14613:30:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14613:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "14626:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "14626:15:17"
																},
																"nativeSrc": "14626:17:17",
																"nodeType": "YulFunctionCall",
																"src": "14626:17:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "14617:5:17",
																	"nodeType": "YulTypedName",
																	"src": "14617:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14652:25:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14652:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "14674:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "14674:2:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14668:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "14668:5:17"
																},
																"nativeSrc": "14668:9:17",
																"nodeType": "YulFunctionCall",
																"src": "14668:9:17"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "14656:8:17",
																	"nodeType": "YulTypedName",
																	"src": "14656:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14706:16:17",
																"nodeType": "YulBlock",
																"src": "14706:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14715:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14715:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14718:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14718:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14708:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14708:6:17"
																			},
																			"nativeSrc": "14708:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14708:12:17"
																		},
																		"nativeSrc": "14708:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14708:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "14692:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "14692:8:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "14702:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "14702:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14689:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "14689:2:17"
																},
																"nativeSrc": "14689:16:17",
																"nodeType": "YulFunctionCall",
																"src": "14689:16:17"
															},
															"nativeSrc": "14686:36:17",
															"nodeType": "YulIf",
															"src": "14686:36:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14738:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "14738:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "14778:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "14778:2:17"
																					},
																					{
																						"name": "offset_2",
																						"nativeSrc": "14782:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "14782:8:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14774:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "14774:3:17"
																				},
																				"nativeSrc": "14774:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14774:17:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14793:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "14793:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string_fromMemory",
																			"nativeSrc": "14745:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "14745:28:17"
																		},
																		"nativeSrc": "14745:56:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14745:56:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14731:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14731:6:17"
																},
																"nativeSrc": "14731:71:17",
																"nodeType": "YulFunctionCall",
																"src": "14731:71:17"
															},
															"nativeSrc": "14731:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "14731:71:17"
														},
														{
															"nativeSrc": "14811:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14811:34:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "14837:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "14837:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14841:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14841:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14833:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14833:3:17"
																		},
																		"nativeSrc": "14833:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14833:11:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14827:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "14827:5:17"
																},
																"nativeSrc": "14827:18:17",
																"nodeType": "YulFunctionCall",
																"src": "14827:18:17"
															},
															"variables": [
																{
																	"name": "offset_3",
																	"nativeSrc": "14815:8:17",
																	"nodeType": "YulTypedName",
																	"src": "14815:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14874:16:17",
																"nodeType": "YulBlock",
																"src": "14874:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14883:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14883:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14886:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14886:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14876:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14876:6:17"
																			},
																			"nativeSrc": "14876:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14876:12:17"
																		},
																		"nativeSrc": "14876:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14876:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_3",
																		"nativeSrc": "14860:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "14860:8:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "14870:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "14870:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14857:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "14857:2:17"
																},
																"nativeSrc": "14857:16:17",
																"nodeType": "YulFunctionCall",
																"src": "14857:16:17"
															},
															"nativeSrc": "14854:36:17",
															"nodeType": "YulIf",
															"src": "14854:36:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14910:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "14910:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14917:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14917:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14906:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14906:3:17"
																		},
																		"nativeSrc": "14906:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14906:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "14955:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "14955:2:17"
																					},
																					{
																						"name": "offset_3",
																						"nativeSrc": "14959:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "14959:8:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14951:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "14951:3:17"
																				},
																				"nativeSrc": "14951:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14951:17:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14970:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "14970:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string_fromMemory",
																			"nativeSrc": "14922:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "14922:28:17"
																		},
																		"nativeSrc": "14922:56:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14922:56:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14899:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14899:6:17"
																},
																"nativeSrc": "14899:80:17",
																"nodeType": "YulFunctionCall",
																"src": "14899:80:17"
															},
															"nativeSrc": "14899:80:17",
															"nodeType": "YulExpressionStatement",
															"src": "14899:80:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14999:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "14999:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15006:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15006:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14995:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14995:3:17"
																		},
																		"nativeSrc": "14995:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14995:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "15052:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "15052:2:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15056:2:17",
																						"nodeType": "YulLiteral",
																						"src": "15056:2:17",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15048:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15048:3:17"
																				},
																				"nativeSrc": "15048:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15048:11:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_enum_MediaType_fromMemory",
																			"nativeSrc": "15011:36:17",
																			"nodeType": "YulIdentifier",
																			"src": "15011:36:17"
																		},
																		"nativeSrc": "15011:49:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15011:49:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14988:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14988:6:17"
																},
																"nativeSrc": "14988:73:17",
																"nodeType": "YulFunctionCall",
																"src": "14988:73:17"
															},
															"nativeSrc": "14988:73:17",
															"nodeType": "YulExpressionStatement",
															"src": "14988:73:17"
														},
														{
															"nativeSrc": "15070:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "15070:34:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "15096:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "15096:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15100:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15100:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15092:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15092:3:17"
																		},
																		"nativeSrc": "15092:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15092:11:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15086:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "15086:5:17"
																},
																"nativeSrc": "15086:18:17",
																"nodeType": "YulFunctionCall",
																"src": "15086:18:17"
															},
															"variables": [
																{
																	"name": "offset_4",
																	"nativeSrc": "15074:8:17",
																	"nodeType": "YulTypedName",
																	"src": "15074:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15133:16:17",
																"nodeType": "YulBlock",
																"src": "15133:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15142:1:17",
																					"nodeType": "YulLiteral",
																					"src": "15142:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15145:1:17",
																					"nodeType": "YulLiteral",
																					"src": "15145:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15135:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15135:6:17"
																			},
																			"nativeSrc": "15135:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15135:12:17"
																		},
																		"nativeSrc": "15135:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "15135:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_4",
																		"nativeSrc": "15119:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "15119:8:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "15129:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "15129:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15116:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "15116:2:17"
																},
																"nativeSrc": "15116:16:17",
																"nodeType": "YulFunctionCall",
																"src": "15116:16:17"
															},
															"nativeSrc": "15113:36:17",
															"nodeType": "YulIf",
															"src": "15113:36:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15169:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "15169:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15176:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15176:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15165:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15165:3:17"
																		},
																		"nativeSrc": "15165:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15165:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "15214:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "15214:2:17"
																					},
																					{
																						"name": "offset_4",
																						"nativeSrc": "15218:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "15218:8:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15210:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15210:3:17"
																				},
																				"nativeSrc": "15210:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15210:17:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15229:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "15229:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string_fromMemory",
																			"nativeSrc": "15181:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "15181:28:17"
																		},
																		"nativeSrc": "15181:56:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15181:56:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15158:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15158:6:17"
																},
																"nativeSrc": "15158:80:17",
																"nodeType": "YulFunctionCall",
																"src": "15158:80:17"
															},
															"nativeSrc": "15158:80:17",
															"nodeType": "YulExpressionStatement",
															"src": "15158:80:17"
														},
														{
															"nativeSrc": "15247:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "15247:35:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "15273:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "15273:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15277:3:17",
																				"nodeType": "YulLiteral",
																				"src": "15277:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15269:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15269:3:17"
																		},
																		"nativeSrc": "15269:12:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15269:12:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15263:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "15263:5:17"
																},
																"nativeSrc": "15263:19:17",
																"nodeType": "YulFunctionCall",
																"src": "15263:19:17"
															},
															"variables": [
																{
																	"name": "offset_5",
																	"nativeSrc": "15251:8:17",
																	"nodeType": "YulTypedName",
																	"src": "15251:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15311:16:17",
																"nodeType": "YulBlock",
																"src": "15311:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15320:1:17",
																					"nodeType": "YulLiteral",
																					"src": "15320:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15323:1:17",
																					"nodeType": "YulLiteral",
																					"src": "15323:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15313:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15313:6:17"
																			},
																			"nativeSrc": "15313:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15313:12:17"
																		},
																		"nativeSrc": "15313:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "15313:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_5",
																		"nativeSrc": "15297:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "15297:8:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "15307:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "15307:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15294:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "15294:2:17"
																},
																"nativeSrc": "15294:16:17",
																"nodeType": "YulFunctionCall",
																"src": "15294:16:17"
															},
															"nativeSrc": "15291:36:17",
															"nodeType": "YulIf",
															"src": "15291:36:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15347:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "15347:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15354:3:17",
																				"nodeType": "YulLiteral",
																				"src": "15354:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15343:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15343:3:17"
																		},
																		"nativeSrc": "15343:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15343:15:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "15393:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "15393:2:17"
																					},
																					{
																						"name": "offset_5",
																						"nativeSrc": "15397:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "15397:8:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15389:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15389:3:17"
																				},
																				"nativeSrc": "15389:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15389:17:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15408:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "15408:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string_fromMemory",
																			"nativeSrc": "15360:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "15360:28:17"
																		},
																		"nativeSrc": "15360:56:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15360:56:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15336:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15336:6:17"
																},
																"nativeSrc": "15336:81:17",
																"nodeType": "YulFunctionCall",
																"src": "15336:81:17"
															},
															"nativeSrc": "15336:81:17",
															"nodeType": "YulExpressionStatement",
															"src": "15336:81:17"
														},
														{
															"nativeSrc": "15426:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "15426:36:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "15452:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "15452:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15456:4:17",
																				"nodeType": "YulLiteral",
																				"src": "15456:4:17",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15448:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15448:3:17"
																		},
																		"nativeSrc": "15448:13:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15448:13:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15442:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "15442:5:17"
																},
																"nativeSrc": "15442:20:17",
																"nodeType": "YulFunctionCall",
																"src": "15442:20:17"
															},
															"variables": [
																{
																	"name": "offset_6",
																	"nativeSrc": "15430:8:17",
																	"nodeType": "YulTypedName",
																	"src": "15430:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15491:16:17",
																"nodeType": "YulBlock",
																"src": "15491:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15500:1:17",
																					"nodeType": "YulLiteral",
																					"src": "15500:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15503:1:17",
																					"nodeType": "YulLiteral",
																					"src": "15503:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15493:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15493:6:17"
																			},
																			"nativeSrc": "15493:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15493:12:17"
																		},
																		"nativeSrc": "15493:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "15493:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_6",
																		"nativeSrc": "15477:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "15477:8:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "15487:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "15487:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15474:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "15474:2:17"
																},
																"nativeSrc": "15474:16:17",
																"nodeType": "YulFunctionCall",
																"src": "15474:16:17"
															},
															"nativeSrc": "15471:36:17",
															"nodeType": "YulIf",
															"src": "15471:36:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15527:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "15527:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15534:4:17",
																				"nodeType": "YulLiteral",
																				"src": "15534:4:17",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15523:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15523:3:17"
																		},
																		"nativeSrc": "15523:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15523:16:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "15574:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "15574:2:17"
																					},
																					{
																						"name": "offset_6",
																						"nativeSrc": "15578:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "15578:8:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15570:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15570:3:17"
																				},
																				"nativeSrc": "15570:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15570:17:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15589:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "15589:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string_fromMemory",
																			"nativeSrc": "15541:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "15541:28:17"
																		},
																		"nativeSrc": "15541:56:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15541:56:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15516:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15516:6:17"
																},
																"nativeSrc": "15516:82:17",
																"nodeType": "YulFunctionCall",
																"src": "15516:82:17"
															},
															"nativeSrc": "15516:82:17",
															"nodeType": "YulExpressionStatement",
															"src": "15516:82:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15618:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15618:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15626:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15626:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15614:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15614:3:17"
																		},
																		"nativeSrc": "15614:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15614:15:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15631:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "15631:5:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15607:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15607:6:17"
																},
																"nativeSrc": "15607:30:17",
																"nodeType": "YulFunctionCall",
																"src": "15607:30:17"
															},
															"nativeSrc": "15607:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "15607:30:17"
														},
														{
															"nativeSrc": "15646:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "15646:34:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "15672:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "15672:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15676:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15676:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15668:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15668:3:17"
																		},
																		"nativeSrc": "15668:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15668:11:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15662:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "15662:5:17"
																},
																"nativeSrc": "15662:18:17",
																"nodeType": "YulFunctionCall",
																"src": "15662:18:17"
															},
															"variables": [
																{
																	"name": "offset_7",
																	"nativeSrc": "15650:8:17",
																	"nodeType": "YulTypedName",
																	"src": "15650:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15709:16:17",
																"nodeType": "YulBlock",
																"src": "15709:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15718:1:17",
																					"nodeType": "YulLiteral",
																					"src": "15718:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15721:1:17",
																					"nodeType": "YulLiteral",
																					"src": "15721:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15711:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15711:6:17"
																			},
																			"nativeSrc": "15711:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15711:12:17"
																		},
																		"nativeSrc": "15711:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "15711:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_7",
																		"nativeSrc": "15695:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "15695:8:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "15705:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "15705:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15692:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "15692:2:17"
																},
																"nativeSrc": "15692:16:17",
																"nodeType": "YulFunctionCall",
																"src": "15692:16:17"
															},
															"nativeSrc": "15689:36:17",
															"nodeType": "YulIf",
															"src": "15689:36:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15745:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15745:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15753:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15753:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15741:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15741:3:17"
																		},
																		"nativeSrc": "15741:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15741:15:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "15812:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "15812:2:17"
																					},
																					{
																						"name": "offset_7",
																						"nativeSrc": "15816:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "15816:8:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15808:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15808:3:17"
																				},
																				"nativeSrc": "15808:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15808:17:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15827:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "15827:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_array_struct_CreatorBps_dyn_fromMemory",
																			"nativeSrc": "15758:49:17",
																			"nodeType": "YulIdentifier",
																			"src": "15758:49:17"
																		},
																		"nativeSrc": "15758:77:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:77:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15734:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15734:6:17"
																},
																"nativeSrc": "15734:102:17",
																"nodeType": "YulFunctionCall",
																"src": "15734:102:17"
															},
															"nativeSrc": "15734:102:17",
															"nodeType": "YulExpressionStatement",
															"src": "15734:102:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15856:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15856:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15864:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15864:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15852:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15852:3:17"
																		},
																		"nativeSrc": "15852:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15852:15:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "15903:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "15903:2:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15907:2:17",
																						"nodeType": "YulLiteral",
																						"src": "15907:2:17",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15899:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15899:3:17"
																				},
																				"nativeSrc": "15899:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15899:11:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nativeSrc": "15869:29:17",
																			"nodeType": "YulIdentifier",
																			"src": "15869:29:17"
																		},
																		"nativeSrc": "15869:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15869:42:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15845:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15845:6:17"
																},
																"nativeSrc": "15845:67:17",
																"nodeType": "YulFunctionCall",
																"src": "15845:67:17"
															},
															"nativeSrc": "15845:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "15845:67:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15932:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15932:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15940:3:17",
																				"nodeType": "YulLiteral",
																				"src": "15940:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15928:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15928:3:17"
																		},
																		"nativeSrc": "15928:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15928:16:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "15977:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "15977:2:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15981:3:17",
																						"nodeType": "YulLiteral",
																						"src": "15981:3:17",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15973:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15973:3:17"
																				},
																				"nativeSrc": "15973:12:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15973:12:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bool_fromMemory",
																			"nativeSrc": "15946:26:17",
																			"nodeType": "YulIdentifier",
																			"src": "15946:26:17"
																		},
																		"nativeSrc": "15946:40:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15946:40:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15921:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15921:6:17"
																},
																"nativeSrc": "15921:66:17",
																"nodeType": "YulFunctionCall",
																"src": "15921:66:17"
															},
															"nativeSrc": "15921:66:17",
															"nodeType": "YulExpressionStatement",
															"src": "15921:66:17"
														},
														{
															"nativeSrc": "15996:16:17",
															"nodeType": "YulAssignment",
															"src": "15996:16:17",
															"value": {
																"name": "memPtr",
																"nativeSrc": "16006:6:17",
																"nodeType": "YulIdentifier",
																"src": "16006:6:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "15996:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15996:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_ArtPiece_$1940_memory_ptr_fromMemory",
												"nativeSrc": "13932:2086:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14005:9:17",
														"nodeType": "YulTypedName",
														"src": "14005:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14016:7:17",
														"nodeType": "YulTypedName",
														"src": "14016:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14028:6:17",
														"nodeType": "YulTypedName",
														"src": "14028:6:17",
														"type": ""
													}
												],
												"src": "13932:2086:17"
											},
											{
												"body": {
													"nativeSrc": "16055:95:17",
													"nodeType": "YulBlock",
													"src": "16055:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16072:1:17",
																		"nodeType": "YulLiteral",
																		"src": "16072:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16079:3:17",
																				"nodeType": "YulLiteral",
																				"src": "16079:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16084:10:17",
																				"nodeType": "YulLiteral",
																				"src": "16084:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "16075:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16075:3:17"
																		},
																		"nativeSrc": "16075:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16075:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16065:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16065:6:17"
																},
																"nativeSrc": "16065:31:17",
																"nodeType": "YulFunctionCall",
																"src": "16065:31:17"
															},
															"nativeSrc": "16065:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "16065:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16112:1:17",
																		"nodeType": "YulLiteral",
																		"src": "16112:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16115:4:17",
																		"nodeType": "YulLiteral",
																		"src": "16115:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16105:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16105:6:17"
																},
																"nativeSrc": "16105:15:17",
																"nodeType": "YulFunctionCall",
																"src": "16105:15:17"
															},
															"nativeSrc": "16105:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "16105:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16136:1:17",
																		"nodeType": "YulLiteral",
																		"src": "16136:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16139:4:17",
																		"nodeType": "YulLiteral",
																		"src": "16139:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16129:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16129:6:17"
																},
																"nativeSrc": "16129:15:17",
																"nodeType": "YulFunctionCall",
																"src": "16129:15:17"
															},
															"nativeSrc": "16129:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "16129:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "16023:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "16023:127:17"
											},
											{
												"body": {
													"nativeSrc": "16412:993:17",
													"nodeType": "YulBlock",
													"src": "16412:993:17",
													"statements": [
														{
															"nativeSrc": "16422:32:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16422:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16440:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "16440:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16451:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16451:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16436:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16436:3:17"
																},
																"nativeSrc": "16436:18:17",
																"nodeType": "YulFunctionCall",
																"src": "16436:18:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "16426:6:17",
																	"nodeType": "YulTypedName",
																	"src": "16426:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16470:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "16470:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16481:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16481:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16463:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16463:6:17"
																},
																"nativeSrc": "16463:21:17",
																"nodeType": "YulFunctionCall",
																"src": "16463:21:17"
															},
															"nativeSrc": "16463:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "16463:21:17"
														},
														{
															"nativeSrc": "16493:17:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16493:17:17",
															"value": {
																"name": "tail_1",
																"nativeSrc": "16504:6:17",
																"nodeType": "YulIdentifier",
																"src": "16504:6:17"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "16497:3:17",
																	"nodeType": "YulTypedName",
																	"src": "16497:3:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16519:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16519:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16539:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16539:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16533:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "16533:5:17"
																},
																"nativeSrc": "16533:13:17",
																"nodeType": "YulFunctionCall",
																"src": "16533:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16523:6:17",
																	"nodeType": "YulTypedName",
																	"src": "16523:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "16562:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16562:6:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16570:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16570:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16555:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16555:6:17"
																},
																"nativeSrc": "16555:22:17",
																"nodeType": "YulFunctionCall",
																"src": "16555:22:17"
															},
															"nativeSrc": "16555:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "16555:22:17"
														},
														{
															"nativeSrc": "16586:26:17",
															"nodeType": "YulAssignment",
															"src": "16586:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16597:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "16597:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16608:3:17",
																		"nodeType": "YulLiteral",
																		"src": "16608:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16593:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16593:3:17"
																},
																"nativeSrc": "16593:19:17",
																"nodeType": "YulFunctionCall",
																"src": "16593:19:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16586:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16586:3:17"
																}
															]
														},
														{
															"nativeSrc": "16621:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16621:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "16631:4:17",
																"nodeType": "YulLiteral",
																"src": "16631:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "16625:2:17",
																	"nodeType": "YulTypedName",
																	"src": "16625:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16644:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16644:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16662:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16662:6:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "16670:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "16670:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16658:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16658:3:17"
																},
																"nativeSrc": "16658:15:17",
																"nodeType": "YulFunctionCall",
																"src": "16658:15:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "16648:6:17",
																	"nodeType": "YulTypedName",
																	"src": "16648:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16682:10:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16682:10:17",
															"value": {
																"kind": "number",
																"nativeSrc": "16691:1:17",
																"nodeType": "YulLiteral",
																"src": "16691:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "16686:1:17",
																	"nodeType": "YulTypedName",
																	"src": "16686:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16750:146:17",
																"nodeType": "YulBlock",
																"src": "16750:146:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "16771:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "16771:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "16786:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "16786:6:17"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "16780:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "16780:5:17"
																							},
																							"nativeSrc": "16780:13:17",
																							"nodeType": "YulFunctionCall",
																							"src": "16780:13:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "16803:3:17",
																											"nodeType": "YulLiteral",
																											"src": "16803:3:17",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "16808:1:17",
																											"nodeType": "YulLiteral",
																											"src": "16808:1:17",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "16799:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "16799:3:17"
																									},
																									"nativeSrc": "16799:11:17",
																									"nodeType": "YulFunctionCall",
																									"src": "16799:11:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "16812:1:17",
																									"nodeType": "YulLiteral",
																									"src": "16812:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "16795:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "16795:3:17"
																							},
																							"nativeSrc": "16795:19:17",
																							"nodeType": "YulFunctionCall",
																							"src": "16795:19:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "16776:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "16776:3:17"
																					},
																					"nativeSrc": "16776:39:17",
																					"nodeType": "YulFunctionCall",
																					"src": "16776:39:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16764:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "16764:6:17"
																			},
																			"nativeSrc": "16764:52:17",
																			"nodeType": "YulFunctionCall",
																			"src": "16764:52:17"
																		},
																		"nativeSrc": "16764:52:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "16764:52:17"
																	},
																	{
																		"nativeSrc": "16829:19:17",
																		"nodeType": "YulAssignment",
																		"src": "16829:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "16840:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "16840:3:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "16845:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "16845:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16836:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "16836:3:17"
																			},
																			"nativeSrc": "16836:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "16836:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "16829:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "16829:3:17"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16861:25:17",
																		"nodeType": "YulAssignment",
																		"src": "16861:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "16875:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "16875:6:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "16883:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "16883:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16871:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "16871:3:17"
																			},
																			"nativeSrc": "16871:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "16871:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "16861:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "16861:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "16712:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "16712:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16715:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16715:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16709:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "16709:2:17"
																},
																"nativeSrc": "16709:13:17",
																"nodeType": "YulFunctionCall",
																"src": "16709:13:17"
															},
															"nativeSrc": "16701:195:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16723:18:17",
																"nodeType": "YulBlock",
																"src": "16723:18:17",
																"statements": [
																	{
																		"nativeSrc": "16725:14:17",
																		"nodeType": "YulAssignment",
																		"src": "16725:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "16734:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "16734:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16737:1:17",
																					"nodeType": "YulLiteral",
																					"src": "16737:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16730:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "16730:3:17"
																			},
																			"nativeSrc": "16730:9:17",
																			"nodeType": "YulFunctionCall",
																			"src": "16730:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "16725:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "16725:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16705:3:17",
																"nodeType": "YulBlock",
																"src": "16705:3:17",
																"statements": []
															},
															"src": "16701:195:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16916:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16916:9:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "16927:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "16927:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16912:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16912:3:17"
																		},
																		"nativeSrc": "16912:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16912:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "16936:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "16936:3:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16941:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16941:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16932:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16932:3:17"
																		},
																		"nativeSrc": "16932:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16932:19:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16905:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16905:6:17"
																},
																"nativeSrc": "16905:47:17",
																"nodeType": "YulFunctionCall",
																"src": "16905:47:17"
															},
															"nativeSrc": "16905:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "16905:47:17"
														},
														{
															"nativeSrc": "16961:16:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16961:16:17",
															"value": {
																"name": "pos",
																"nativeSrc": "16974:3:17",
																"nodeType": "YulIdentifier",
																"src": "16974:3:17"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nativeSrc": "16965:5:17",
																	"nodeType": "YulTypedName",
																	"src": "16965:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16986:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16986:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17008:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17008:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17002:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "17002:5:17"
																},
																"nativeSrc": "17002:13:17",
																"nodeType": "YulFunctionCall",
																"src": "17002:13:17"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "16990:8:17",
																	"nodeType": "YulTypedName",
																	"src": "16990:8:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17031:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17031:3:17"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "17036:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "17036:8:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17024:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17024:6:17"
																},
																"nativeSrc": "17024:21:17",
																"nodeType": "YulFunctionCall",
																"src": "17024:21:17"
															},
															"nativeSrc": "17024:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "17024:21:17"
														},
														{
															"nativeSrc": "17054:21:17",
															"nodeType": "YulAssignment",
															"src": "17054:21:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17067:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17067:3:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "17072:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "17072:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17063:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17063:3:17"
																},
																"nativeSrc": "17063:12:17",
																"nodeType": "YulFunctionCall",
																"src": "17063:12:17"
															},
															"variableNames": [
																{
																	"name": "pos_1",
																	"nativeSrc": "17054:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "17054:5:17"
																}
															]
														},
														{
															"nativeSrc": "17084:31:17",
															"nodeType": "YulVariableDeclaration",
															"src": "17084:31:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17104:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17104:6:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "17112:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "17112:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17100:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17100:3:17"
																},
																"nativeSrc": "17100:15:17",
																"nodeType": "YulFunctionCall",
																"src": "17100:15:17"
															},
															"variables": [
																{
																	"name": "srcPtr_1",
																	"nativeSrc": "17088:8:17",
																	"nodeType": "YulTypedName",
																	"src": "17088:8:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17124:12:17",
															"nodeType": "YulVariableDeclaration",
															"src": "17124:12:17",
															"value": {
																"kind": "number",
																"nativeSrc": "17135:1:17",
																"nodeType": "YulLiteral",
																"src": "17135:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i_1",
																	"nativeSrc": "17128:3:17",
																	"nodeType": "YulTypedName",
																	"src": "17128:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17202:132:17",
																"nodeType": "YulBlock",
																"src": "17202:132:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos_1",
																					"nativeSrc": "17223:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "17223:5:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr_1",
																							"nativeSrc": "17236:8:17",
																							"nodeType": "YulIdentifier",
																							"src": "17236:8:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "17230:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "17230:5:17"
																					},
																					"nativeSrc": "17230:15:17",
																					"nodeType": "YulFunctionCall",
																					"src": "17230:15:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "17216:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17216:6:17"
																			},
																			"nativeSrc": "17216:30:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17216:30:17"
																		},
																		"nativeSrc": "17216:30:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "17216:30:17"
																	},
																	{
																		"nativeSrc": "17259:23:17",
																		"nodeType": "YulAssignment",
																		"src": "17259:23:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos_1",
																					"nativeSrc": "17272:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "17272:5:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "17279:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "17279:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17268:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "17268:3:17"
																			},
																			"nativeSrc": "17268:14:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17268:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos_1",
																				"nativeSrc": "17259:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "17259:5:17"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17295:29:17",
																		"nodeType": "YulAssignment",
																		"src": "17295:29:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr_1",
																					"nativeSrc": "17311:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "17311:8:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "17321:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "17321:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17307:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "17307:3:17"
																			},
																			"nativeSrc": "17307:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17307:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr_1",
																				"nativeSrc": "17295:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "17295:8:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i_1",
																		"nativeSrc": "17156:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17156:3:17"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "17161:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "17161:8:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17153:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "17153:2:17"
																},
																"nativeSrc": "17153:17:17",
																"nodeType": "YulFunctionCall",
																"src": "17153:17:17"
															},
															"nativeSrc": "17145:189:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17171:22:17",
																"nodeType": "YulBlock",
																"src": "17171:22:17",
																"statements": [
																	{
																		"nativeSrc": "17173:18:17",
																		"nodeType": "YulAssignment",
																		"src": "17173:18:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i_1",
																					"nativeSrc": "17184:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "17184:3:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17189:1:17",
																					"nodeType": "YulLiteral",
																					"src": "17189:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17180:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "17180:3:17"
																			},
																			"nativeSrc": "17180:11:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17180:11:17"
																		},
																		"variableNames": [
																			{
																				"name": "i_1",
																				"nativeSrc": "17173:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "17173:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17149:3:17",
																"nodeType": "YulBlock",
																"src": "17149:3:17",
																"statements": []
															},
															"src": "17145:189:17"
														},
														{
															"nativeSrc": "17343:13:17",
															"nodeType": "YulAssignment",
															"src": "17343:13:17",
															"value": {
																"name": "pos_1",
																"nativeSrc": "17351:5:17",
																"nodeType": "YulIdentifier",
																"src": "17351:5:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17343:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17343:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17376:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17376:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17387:2:17",
																				"nodeType": "YulLiteral",
																				"src": "17387:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17372:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17372:3:17"
																		},
																		"nativeSrc": "17372:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17372:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "17392:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17392:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17365:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17365:6:17"
																},
																"nativeSrc": "17365:34:17",
																"nodeType": "YulFunctionCall",
																"src": "17365:34:17"
															},
															"nativeSrc": "17365:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "17365:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "16155:1250:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16365:9:17",
														"nodeType": "YulTypedName",
														"src": "16365:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16376:6:17",
														"nodeType": "YulTypedName",
														"src": "16376:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16384:6:17",
														"nodeType": "YulTypedName",
														"src": "16384:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16392:6:17",
														"nodeType": "YulTypedName",
														"src": "16392:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16403:4:17",
														"nodeType": "YulTypedName",
														"src": "16403:4:17",
														"type": ""
													}
												],
												"src": "16155:1250:17"
											},
											{
												"body": {
													"nativeSrc": "17547:145:17",
													"nodeType": "YulBlock",
													"src": "17547:145:17",
													"statements": [
														{
															"nativeSrc": "17557:26:17",
															"nodeType": "YulAssignment",
															"src": "17557:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17569:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "17569:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17580:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17580:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17565:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17565:3:17"
																},
																"nativeSrc": "17565:18:17",
																"nodeType": "YulFunctionCall",
																"src": "17565:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17557:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17557:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17599:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "17599:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "17614:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17614:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "17630:3:17",
																								"nodeType": "YulLiteral",
																								"src": "17630:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "17635:1:17",
																								"nodeType": "YulLiteral",
																								"src": "17635:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "17626:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "17626:3:17"
																						},
																						"nativeSrc": "17626:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "17626:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17639:1:17",
																						"nodeType": "YulLiteral",
																						"src": "17639:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "17622:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "17622:3:17"
																				},
																				"nativeSrc": "17622:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "17622:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17610:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17610:3:17"
																		},
																		"nativeSrc": "17610:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17610:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17592:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17592:6:17"
																},
																"nativeSrc": "17592:51:17",
																"nodeType": "YulFunctionCall",
																"src": "17592:51:17"
															},
															"nativeSrc": "17592:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "17592:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17663:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17663:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17674:2:17",
																				"nodeType": "YulLiteral",
																				"src": "17674:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17659:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17659:3:17"
																		},
																		"nativeSrc": "17659:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17659:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "17679:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17679:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17652:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17652:6:17"
																},
																"nativeSrc": "17652:34:17",
																"nodeType": "YulFunctionCall",
																"src": "17652:34:17"
															},
															"nativeSrc": "17652:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "17652:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17410:282:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17508:9:17",
														"nodeType": "YulTypedName",
														"src": "17508:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17519:6:17",
														"nodeType": "YulTypedName",
														"src": "17519:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17527:6:17",
														"nodeType": "YulTypedName",
														"src": "17527:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17538:4:17",
														"nodeType": "YulTypedName",
														"src": "17538:4:17",
														"type": ""
													}
												],
												"src": "17410:282:17"
											},
											{
												"body": {
													"nativeSrc": "17834:150:17",
													"nodeType": "YulBlock",
													"src": "17834:150:17",
													"statements": [
														{
															"nativeSrc": "17844:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "17844:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17864:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17864:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17858:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "17858:5:17"
																},
																"nativeSrc": "17858:13:17",
																"nodeType": "YulFunctionCall",
																"src": "17858:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17848:6:17",
																	"nodeType": "YulTypedName",
																	"src": "17848:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "17919:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17919:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17927:4:17",
																				"nodeType": "YulLiteral",
																				"src": "17927:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17915:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17915:3:17"
																		},
																		"nativeSrc": "17915:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17915:17:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17934:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17934:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17939:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17939:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "17880:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "17880:34:17"
																},
																"nativeSrc": "17880:66:17",
																"nodeType": "YulFunctionCall",
																"src": "17880:66:17"
															},
															"nativeSrc": "17880:66:17",
															"nodeType": "YulExpressionStatement",
															"src": "17880:66:17"
														},
														{
															"nativeSrc": "17955:23:17",
															"nodeType": "YulAssignment",
															"src": "17955:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17966:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17966:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17971:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17971:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17962:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17962:3:17"
																},
																"nativeSrc": "17962:16:17",
																"nodeType": "YulFunctionCall",
																"src": "17962:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17955:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17955:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17697:287:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17810:3:17",
														"nodeType": "YulTypedName",
														"src": "17810:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17815:6:17",
														"nodeType": "YulTypedName",
														"src": "17815:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17826:3:17",
														"nodeType": "YulTypedName",
														"src": "17826:3:17",
														"type": ""
													}
												],
												"src": "17697:287:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IVerbsToken_$2294__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n    }\n    function abi_encode_tuple_t_contract$_ITokenEmitter_$2089__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_payable_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_payable_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function validator_revert_contract_IVerbsToken(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IVerbsToken_$2294t_contract$_ITokenEmitter_$2089t_addresst_addresst_uint256t_uint256t_uint8t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9\n    {\n        if slt(sub(dataEnd, headStart), 320) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IVerbsToken(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IVerbsToken(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_contract_IVerbsToken(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_contract_IVerbsToken(value_3)\n        value3 := value_3\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := abi_decode_uint8(add(headStart, 192))\n        value7 := calldataload(add(headStart, 224))\n        value8 := calldataload(add(headStart, 256))\n        value9 := calldataload(add(headStart, 288))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IVerbsToken(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_6f6e4cc8ee899178a4d47355e8312bf3a9810f0590ac98868c4bf7cd29669038__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Verb not up for auction\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee94e7592a7417cc94816663e1b9b9938c69730980c3cab7a8fbc54ac5aa729f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Auction expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5f1114d8c4309959c51172c5707cbe6c55f2c078aa19616a59453fa69d73427a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Must send at least reservePrice\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_8b513ed4150a8292a1ae14f1a03ea954ba5eafbfd85827e99d503d442fdc652b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"Must send more than last bid by \")\n        mstore(add(headStart, 96), \"minBidIncrementPercentage amount\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation_2591(memPtr)\n    {\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function finalize_allocation_2594(memPtr)\n    {\n        let newFreePtr := add(memPtr, 0xa0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_59b32fee736cce03c77d145dd4099c3c4e1280b1dad0ad62e9e284b4fe62ad45__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Auction hasn't begun\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b9c19275b9276d9745a484d1a2df68f7756a1cb166850daf9e0b5df0b846571__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Auction has already been settled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e27b8c83269c21fc917b88c4e1199f3cd97455682e8857f3f234160d3fa4df70__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Auction hasn't completed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_sub_t_int256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        let _1 := slt(y, 0)\n        if or(and(iszero(_1), sgt(diff, x)), and(_1, slt(diff, x))) { panic_error_0x11() }\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xc0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_enum_MediaType_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(lt(value, 6)) { revert(0, 0) }\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_contract_IVerbsToken(value)\n    }\n    function abi_decode_array_struct_CreatorBps_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := 64\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(shl(5, _1), _2))\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(6, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _3) }\n        {\n            if slt(sub(end, src), _3) { revert(0, 0) }\n            let memPtr_1 := mload(_3)\n            finalize_allocation_2591(memPtr_1)\n            let value := mload(src)\n            validator_revert_contract_IVerbsToken(value)\n            mstore(memPtr_1, value)\n            mstore(add(memPtr_1, _2), mload(add(src, _2)))\n            mstore(dst, memPtr_1)\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_struct$_ArtPiece_$1940_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0xa0) { revert(0, 0) }\n        let memPtr := mload(64)\n        finalize_allocation_2594(memPtr)\n        mstore(memPtr, mload(_2))\n        let offset_1 := mload(add(_2, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(_2, offset_1)\n        if slt(sub(dataEnd, _3), 0xc0) { revert(0, 0) }\n        let value := allocate_memory()\n        let offset_2 := mload(_3)\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(value, abi_decode_string_fromMemory(add(_3, offset_2), dataEnd))\n        let offset_3 := mload(add(_3, 32))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string_fromMemory(add(_3, offset_3), dataEnd))\n        mstore(add(value, 64), abi_decode_enum_MediaType_fromMemory(add(_3, 64)))\n        let offset_4 := mload(add(_3, 96))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_string_fromMemory(add(_3, offset_4), dataEnd))\n        let offset_5 := mload(add(_3, 128))\n        if gt(offset_5, _1) { revert(0, 0) }\n        mstore(add(value, 128), abi_decode_string_fromMemory(add(_3, offset_5), dataEnd))\n        let offset_6 := mload(add(_3, 0xa0))\n        if gt(offset_6, _1) { revert(0, 0) }\n        mstore(add(value, 0xa0), abi_decode_string_fromMemory(add(_3, offset_6), dataEnd))\n        mstore(add(memPtr, 32), value)\n        let offset_7 := mload(add(_2, 64))\n        if gt(offset_7, _1) { revert(0, 0) }\n        mstore(add(memPtr, 64), abi_decode_array_struct_CreatorBps_dyn_fromMemory(add(_2, offset_7), dataEnd))\n        mstore(add(memPtr, 96), abi_decode_address_fromMemory(add(_2, 96)))\n        mstore(add(memPtr, 128), abi_decode_bool_fromMemory(add(_2, 128)))\n        value0 := memPtr\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, 96)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value1)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _1)\n        let srcPtr_1 := add(value1, _1)\n        let i_1 := 0\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, mload(srcPtr_1))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        tail := pos_1\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061013c575f3560e01c80637d9f6db5116100b3578063ce9c7c0d1161006d578063ce9c7c0d14610393578063db2e1eed146103b2578063ec91f2a4146103c7578063f25efffc146103dc578063f2fde38b146103f0578063fe95233b1461040f575f80fd5b80637d9f6db51461029a5780638456cb591461030d5780638da5cb5b14610321578063a4d0a17e14610335578063a910d31814610349578063b296024d14610368575f80fd5b80633f4ba83a116101045780633f4ba83a146101f35780633fc8cef3146102075780635c975abb14610226578063659dd2b4146102545780637120334b14610267578063715018a614610286575f80fd5b80630284464a146101405780630802be0a1461017b5780630fb5a6b41461019e57806336ebdb38146101b35780633d64baf1146101d4575b5f80fd5b34801561014b575f80fd5b505f5461015e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610186575f80fd5b5061019060065481565b604051908152602001610172565b3480156101a9575f80fd5b5061019060085481565b3480156101be575f80fd5b506101d26101cd366004611629565b610424565b005b3480156101df575f80fd5b5060015461015e906001600160a01b031681565b3480156101fe575f80fd5b506101d2610475565b348015610212575f80fd5b5060025461015e906001600160a01b031681565b348015610231575f80fd5b505f80516020611ce38339815191525460ff166040519015158152602001610172565b6101d2610262366004611649565b6104ac565b348015610272575f80fd5b506101d2610281366004611649565b6107a4565b348015610291575f80fd5b506101d26107e1565b3480156102a5575f80fd5b50600954600a54600b54600c54600d546102d594939291906001600160a01b03811690600160a01b900460ff1686565b6040805196875260208701959095529385019290925260608401526001600160a01b03166080830152151560a082015260c001610172565b348015610318575f80fd5b506101d26107f2565b34801561032c575f80fd5b5061015e610802565b348015610340575f80fd5b506101d2610830565b348015610354575f80fd5b506101d2610363366004611674565b61085e565b348015610373575f80fd5b506005546103819060ff1681565b60405160ff9091168152602001610172565b34801561039e575f80fd5b506101d26103ad366004611649565b610a3b565b3480156103bd575f80fd5b5061019060045481565b3480156103d2575f80fd5b5061019060035481565b3480156103e7575f80fd5b506101d2610a78565b3480156103fb575f80fd5b506101d261040a36600461170d565b610a98565b34801561041a575f80fd5b5061019060075481565b61042c610ad2565b6005805460ff191660ff83169081179091556040519081527fec5ccd96cc77b6219e9d44143df916af68fc169339ea7de5008ff15eae13450d906020015b60405180910390a150565b61047d610ad2565b610485610b04565b600b54158061049d5750600d54600160a01b900460ff165b156104aa576104aa610b5d565b565b6104b4610cac565b6040805160c081018252600954808252600a546020830152600b5492820192909252600c546060820152600d546001600160a01b0381166080830152600160a01b900460ff16151560a08201529082146105555760405162461bcd60e51b815260206004820152601760248201527f56657262206e6f7420757020666f722061756374696f6e00000000000000000060448201526064015b60405180910390fd5b8060600151421061059a5760405162461bcd60e51b815260206004820152600f60248201526e105d58dd1a5bdb88195e1c1a5c9959608a1b604482015260640161054c565b6004543410156105ec5760405162461bcd60e51b815260206004820152601f60248201527f4d7573742073656e64206174206c656173742072657365727665507269636500604482015260640161054c565b60055460208201516064916106069160ff9091169061173c565b6106109190611753565b816020015161061f9190611772565b341015610696576040805162461bcd60e51b81526020600482015260248101919091527f4d7573742073656e64206d6f7265207468616e206c617374206269642062792060448201527f6d696e426964496e6372656d656e7450657263656e7461676520616d6f756e74606482015260840161054c565b60808101516001600160a01b038116156106b8576106b8818360200151610ce3565b34600a55600d80546001600160a01b0319163317905560035460608301515f91906106e4904290611785565b1090508015610705576003546106fa9042611772565b60608401819052600c555b8251604080513381523460208201528315158183015290517f1159164c56f277e6fc99c11731bd380e0347deb969b75523398734c252706ea39181900360600190a2801561078857825160608401516040519081527f6e912a3a9105bdd2af817ba5adc14e6c127c1035b5b648faa29ca0d58ab8ff4e9060200160405180910390a25b5050506107a160015f80516020611d0383398151915255565b50565b6107ac610ad2565b60038190556040518181527f1b55d9f7002bda4490f467e326f22a4a847629c0f2d1ed421607d318d25b410d9060200161046a565b6107e9610ad2565b6104aa5f610de3565b6107fa610ad2565b6104aa610e53565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b610838610e9b565b610840610cac565b610848610eca565b6104aa60015f80516020611d0383398151915255565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156108a35750825b90505f8267ffffffffffffffff1660011480156108bf5750303b155b9050811580156108cd575080155b156108eb5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561091557845460ff60401b1916600160401b1785555b61091d61146a565b61092561147a565b61092e8c61148a565b610936610e53565b8e5f806101000a8154816001600160a01b0302191690836001600160a01b031602179055508d60015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055508c60025f6101000a8154816001600160a01b0302191690836001600160a01b031602179055508a600381905550896004819055508860055f6101000a81548160ff021916908360ff1602179055508760088190555086600681905550856007819055508315610a2a57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050505050505050565b610a43610ad2565b60048190556040518181527f6ab2e127d7fdf53b8f304e59d3aab5bfe97979f52a85479691a6fab27a28a6b29060200161046a565b610a80610cac565b610a8861149b565b610a90610eca565b610848610b5d565b610aa0610ad2565b6001600160a01b038116610ac957604051631e4fbdf760e01b81525f600482015260240161054c565b6107a181610de3565b33610adb610802565b6001600160a01b0316146104aa5760405163118cdaa760e01b815233600482015260240161054c565b610b0c610e9b565b5f80516020611ce3833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200161046a565b5f8054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b81526004016020604051808303815f875af1925050508015610bca575060408051601f3d908101601f19168201909252610bc791810190611798565b60015b610c0757610bd66117af565b806308c379a003610bfd5750610bea61184f565b80610bf55750610bff565b6107a1610e53565b505b3d5f803e3d5ffd5b60085442905f90610c189083611772565b6040805160c0810182528581525f6020808301829052828401879052606083018590526080830182905260a09092018190526009879055600a55600b859055600c839055600d80546001600160a81b0319169055815185815290810183905291925084917fd6eddd1118d71820909c1197aa966dbc15ed6f508554252169cc3d5ccac756ca910160405180910390a2505050565b5f80516020611d03833981519152805460011901610cdd57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b610ced82826114cb565b610dcc5760025f9054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b158015610d3e575f80fd5b505af1158015610d50573d5f803e3d5ffd5b505060025460405163a9059cbb60e01b81526001600160a01b03878116600483015260248201879052909116935063a9059cbb925060440190506020604051808303815f875af1158015610da6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dca91906118e7565b505b5050565b60015f80516020611d0383398151915255565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b610e5b61149b565b5f80516020611ce3833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610b45565b5f80516020611ce38339815191525460ff166104aa57604051638dfc202b60e01b815260040160405180910390fd5b6040805160c0810182526009548152600a546020820152600b54918101829052600c546060820152600d546001600160a01b0381166080830152600160a01b900460ff16151560a0820152905f03610f5b5760405162461bcd60e51b815260206004820152601460248201527320bab1ba34b7b7103430b9b713ba103132b3bab760611b604482015260640161054c565b8060a0015115610fad5760405162461bcd60e51b815260206004820181905260248201527f41756374696f6e2068617320616c7265616479206265656e20736574746c6564604482015260640161054c565b80606001514210156110015760405162461bcd60e51b815260206004820152601860248201527f41756374696f6e206861736e277420636f6d706c657465640000000000000000604482015260640161054c565b600d805460ff60a01b1916600160a01b17905560808101516001600160a01b031661108b575f548151604051630852cd8d60e31b81526001600160a01b03909216916342966c68916110599160040190815260200190565b5f604051808303815f87803b158015611070575f80fd5b505af1158015611082573d5f803e3d5ffd5b505050506110f9565b5f54608082015182516040516323b872dd60e01b81523060048201526001600160a01b03928316602482015260448101919091529116906323b872dd906064015f604051808303815f87803b1580156110e2575f80fd5b505af11580156110f4573d5f803e3d5ffd5b505050505b60208101511561141a575f61112c611124836020015160065461271061111f9190611900565b611547565b612710611578565b90505f81836020015161113f9190611785565b90505f61115161112483600754611547565b90505f61115e8284611785565b5f805487516040516324d19ab160e11b8152600481019190915292935090916001600160a01b03909116906349a33562906024015f60405180830381865afa1580156111ac573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111d39190810190611aa6565b604001515190505f8167ffffffffffffffff8111156111f4576111f46117c8565b60405190808252806020026020018201604052801561121d578160200160208202803683370190505b5090505f8267ffffffffffffffff81111561123a5761123a6117c8565b604051908082528060200260200182016040528015611263578160200160208202803683370190505b509050611277611271610802565b88610ce3565b5f5b83811015611399575f80548a516040516324d19ab160e11b81526001600160a01b03909216916349a33562916112b59160040190815260200190565b5f60405180830381865afa1580156112cf573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526112f69190810190611aa6565b60400151828151811061130b5761130b611c28565b60200260200101519050805f015184838151811061132b5761132b611c28565b60200260200101906001600160a01b031690816001600160a01b031681525050806020015183838151811061136257611362611c28565b6020026020010181815250505f611380611124898460200151611547565b905061138f825f015182610ce3565b5050600101611279565b5060015460405163dec86df160e01b81526001600160a01b039091169063dec86df19086906113d090869086908490600401611c3c565b60206040518083038185885af11580156113ec573d5f803e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906114119190611798565b50505050505050505b80516080820151602080840151604080516001600160a01b039094168452918301527fc9f72b276a388619c6d185d146697036241880c36654b1a3ffdad07c24038d99910160405180910390a250565b61147261159b565b6104aa6115e4565b61148261159b565b6104aa611604565b61149261159b565b6107a18161160c565b5f80516020611ce38339815191525460ff16156104aa5760405163d93c066560e01b815260040160405180910390fd5b604080515f8082526020820190925281906001600160a01b038516906175309085906040516114fa9190611cc7565b5f60405180830381858888f193505050503d805f8114611535576040519150601f19603f3d011682016040523d82523d5f602084013e61153a565b606091505b5090925050505b92915050565b81810282158382058314175f198410600160ff1b84131716611567575f80fd5b670de0b6b3a7640000900592915050565b670de0b6b3a7640000828102908105831482151516611595575f80fd5b05919050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166104aa57604051631afcd79f60e31b815260040160405180910390fd5b6115ec61159b565b5f80516020611ce3833981519152805460ff19169055565b610dd061159b565b610aa061159b565b803560ff81168114611624575f80fd5b919050565b5f60208284031215611639575f80fd5b61164282611614565b9392505050565b5f60208284031215611659575f80fd5b5035919050565b6001600160a01b03811681146107a1575f80fd5b5f805f805f805f805f806101408b8d03121561168e575f80fd5b8a3561169981611660565b995060208b01356116a981611660565b985060408b01356116b981611660565b975060608b01356116c981611660565b965060808b0135955060a08b013594506116e560c08c01611614565b935060e08b013592506101008b013591506101208b013590509295989b9194979a5092959850565b5f6020828403121561171d575f80fd5b813561164281611660565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761154157611541611728565b5f8261176d57634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561154157611541611728565b8181038181111561154157611541611728565b5f602082840312156117a8575f80fd5b5051919050565b5f60033d11156117c55760045f803e505f5160e01c5b90565b634e487b7160e01b5f52604160045260245ffd5b6040810181811067ffffffffffffffff821117156117fc576117fc6117c8565b60405250565b60a0810181811067ffffffffffffffff821117156117fc576117fc6117c8565b601f8201601f1916810167ffffffffffffffff81118282101715611848576118486117c8565b6040525050565b5f60443d101561185c5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561188c57505050505090565b82850191508151818111156118a45750505050505090565b843d87010160208285010111156118be5750505050505090565b6118cd60208286010187611822565b509095945050505050565b80518015158114611624575f80fd5b5f602082840312156118f7575f80fd5b611642826118d8565b8181035f83128015838313168383128216171561191f5761191f611728565b5092915050565b60405160c0810167ffffffffffffffff81118282101715611949576119496117c8565b60405290565b5f5b83811015611969578181015183820152602001611951565b50505f910152565b5f82601f830112611980575f80fd5b815167ffffffffffffffff81111561199a5761199a6117c8565b6040516119b1601f8301601f191660200182611822565b8181528460208386010111156119c5575f80fd5b6119d682602083016020870161194f565b949350505050565b805160068110611624575f80fd5b805161162481611660565b5f82601f830112611a06575f80fd5b8151602067ffffffffffffffff821115611a2257611a226117c8565b60408051611a35838560051b0182611822565b83815260069390931b850182019282810187851115611a52575f80fd5b8387015b85811015611a995783818a031215611a6c575f80fd5b8351611a77816117dc565b8151611a8281611660565b815281860151868201528252908401908301611a56565b5090979650505050505050565b5f60208284031215611ab6575f80fd5b815167ffffffffffffffff80821115611acd575f80fd5b9083019060a08286031215611ae0575f80fd5b604051611aec81611802565b82518152602083015182811115611b01575f80fd5b830160c08188031215611b12575f80fd5b611b1a611926565b815184811115611b28575f80fd5b611b3489828501611971565b825250602082015184811115611b48575f80fd5b611b5489828501611971565b602083015250611b66604083016119de565b6040820152606082015184811115611b7c575f80fd5b611b8889828501611971565b606083015250608082015184811115611b9f575f80fd5b611bab89828501611971565b60808301525060a082015184811115611bc2575f80fd5b611bce89828501611971565b60a083015250602083015250604083015182811115611beb575f80fd5b611bf7878286016119f7565b604083015250611c09606084016119ec565b6060820152611c1a608084016118d8565b608082015295945050505050565b634e487b7160e01b5f52603260045260245ffd5b606080825284519082018190525f906020906080840190828801845b82811015611c7d5781516001600160a01b031684529284019290840190600101611c58565b505050838103828501528551808252868301918301905f5b81811015611cb157835183529284019291840191600101611c95565b5050809350505050826040830152949350505050565b5f8251611cd881846020870161194f565b919091019291505056fecd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220ebfa0740fd3fedcf63c0bf74daa353485f4f7ecb6ca40b0fdeaa7c60d0dca1b764736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D9F6DB5 GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xCE9C7C0D GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xCE9C7C0D EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xDB2E1EED EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xEC91F2A4 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xF25EFFFC EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xFE95233B EQ PUSH2 0x40F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D9F6DB5 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xA4D0A17E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xA910D318 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xB296024D EQ PUSH2 0x368 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x659DD2B4 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x7120334B EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x284464A EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x802BE0A EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x36EBDB38 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x3D64BAF1 EQ PUSH2 0x1D4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1629 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x475 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x7E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH2 0x2D5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x7F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x802 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x830 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x1674 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x381 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0xA78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x42C PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xEC5CCD96CC77B6219E9D44143DF916AF68FC169339EA7DE5008FF15EAE13450D SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x47D PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x485 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0xB SLOAD ISZERO DUP1 PUSH2 0x49D JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x4AA JUMPI PUSH2 0x4AA PUSH2 0xB5D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x9 SLOAD DUP1 DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xB SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 DUP3 EQ PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657262206E6F7420757020666F722061756374696F6E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD TIMESTAMP LT PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105D58DD1A5BDB88195E1C1A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54C JUMP JUMPDEST PUSH1 0x4 SLOAD CALLVALUE LT ISZERO PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E64206174206C656173742072657365727665507269636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x64 SWAP2 PUSH2 0x606 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x173C JUMP JUMPDEST PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x1772 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x696 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x4D7573742073656E64206D6F7265207468616E206C6173742062696420627920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D696E426964496E6372656D656E7450657263656E7461676520616D6F756E74 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54C JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x6B8 DUP2 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xCE3 JUMP JUMPDEST CALLVALUE PUSH1 0xA SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH0 SWAP2 SWAP1 PUSH2 0x6E4 SWAP1 TIMESTAMP SWAP1 PUSH2 0x1785 JUMP JUMPDEST LT SWAP1 POP DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x3 SLOAD PUSH2 0x6FA SWAP1 TIMESTAMP PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xC SSTORE JUMPDEST DUP3 MLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE DUP4 ISZERO ISZERO DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x1159164C56F277E6FC99C11731BD380E0347DEB969B75523398734C252706EA3 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 DUP1 ISZERO PUSH2 0x788 JUMPI DUP3 MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x6E912A3A9105BDD2AF817BA5ADC14E6C127C1035B5B648FAA29CA0D58AB8FF4E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP PUSH2 0x7A1 PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D03 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7AC PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x1B55D9F7002BDA4490F467E326F22A4A847629C0F2D1ED421607D318D25B410D SWAP1 PUSH1 0x20 ADD PUSH2 0x46A JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x4AA PUSH0 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x7FA PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x4AA PUSH2 0xE53 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x838 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x840 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x848 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x4AA PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D03 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x8A3 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x8BF JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x8CD JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x915 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x91D PUSH2 0x146A JUMP JUMPDEST PUSH2 0x925 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x92E DUP13 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x936 PUSH2 0xE53 JUMP JUMPDEST DUP15 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP14 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP13 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xA2A JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA43 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x6AB2E127D7FDF53B8F304E59D3AAB5BFE97979F52A85479691A6FAB27A28A6B2 SWAP1 PUSH1 0x20 ADD PUSH2 0x46A JUMP JUMPDEST PUSH2 0xA80 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0xA88 PUSH2 0x149B JUMP JUMPDEST PUSH2 0xA90 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x848 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xAA0 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54C JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0xDE3 JUMP JUMPDEST CALLER PUSH2 0xADB PUSH2 0x802 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54C JUMP JUMPDEST PUSH2 0xB0C PUSH2 0xE9B JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x46A JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1249C58B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBCA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBC7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1798 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC07 JUMPI PUSH2 0xBD6 PUSH2 0x17AF JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xBFD JUMPI POP PUSH2 0xBEA PUSH2 0x184F JUMP JUMPDEST DUP1 PUSH2 0xBF5 JUMPI POP PUSH2 0xBFF JUMP JUMPDEST PUSH2 0x7A1 PUSH2 0xE53 JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP SWAP1 PUSH0 SWAP1 PUSH2 0xC18 SWAP1 DUP4 PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 DUP8 SWAP1 SSTORE PUSH1 0xA SSTORE PUSH1 0xB DUP6 SWAP1 SSTORE PUSH1 0xC DUP4 SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP5 SWAP2 PUSH32 0xD6EDDD1118D71820909C1197AA966DBC15ED6F508554252169CC3D5CCAC756CA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D03 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0xCDD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xCED DUP3 DUP3 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0xDCC JUMPI PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD50 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP4 POP PUSH4 0xA9059CBB SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D03 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x149B JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0xB45 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0xA SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xB SLOAD SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 PUSH0 SUB PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x20BAB1BA34B7B7103430B9B713BA103132B3BAB7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54C JUMP JUMPDEST DUP1 PUSH1 0xA0 ADD MLOAD ISZERO PUSH2 0xFAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756374696F6E2068617320616C7265616479206265656E20736574746C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54C JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756374696F6E206861736E277420636F6D706C657465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54C JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x108B JUMPI PUSH0 SLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x42966C68 SWAP2 PUSH2 0x1059 SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1070 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1082 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x10F9 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x80 DUP3 ADD MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD ISZERO PUSH2 0x141A JUMPI PUSH0 PUSH2 0x112C PUSH2 0x1124 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x6 SLOAD PUSH2 0x2710 PUSH2 0x111F SWAP2 SWAP1 PUSH2 0x1900 JUMP JUMPDEST PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1578 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x113F SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1151 PUSH2 0x1124 DUP4 PUSH1 0x7 SLOAD PUSH2 0x1547 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x115E DUP3 DUP5 PUSH2 0x1785 JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP8 MLOAD PUSH1 0x40 MLOAD PUSH4 0x24D19AB1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x49A33562 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x11D3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 ADD MLOAD MLOAD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F4 JUMPI PUSH2 0x11F4 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x121D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x123A JUMPI PUSH2 0x123A PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1263 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0x1277 PUSH2 0x1271 PUSH2 0x802 JUMP JUMPDEST DUP9 PUSH2 0xCE3 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1399 JUMPI PUSH0 DUP1 SLOAD DUP11 MLOAD PUSH1 0x40 MLOAD PUSH4 0x24D19AB1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x49A33562 SWAP2 PUSH2 0x12B5 SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x12F6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x130B JUMPI PUSH2 0x130B PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x132B JUMPI PUSH2 0x132B PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP1 PUSH1 0x20 ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1362 JUMPI PUSH2 0x1362 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 PUSH2 0x1380 PUSH2 0x1124 DUP10 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1547 JUMP JUMPDEST SWAP1 POP PUSH2 0x138F DUP3 PUSH0 ADD MLOAD DUP3 PUSH2 0xCE3 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1279 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xDEC86DF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDEC86DF1 SWAP1 DUP7 SWAP1 PUSH2 0x13D0 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1411 SWAP2 SWAP1 PUSH2 0x1798 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST DUP1 MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 DUP4 ADD MSTORE PUSH32 0xC9F72B276A388619C6D185D146697036241880C36654B1A3FFDAD07C24038D99 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1472 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x4AA PUSH2 0x15E4 JUMP JUMPDEST PUSH2 0x1482 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x4AA PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x1492 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x160C JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH2 0x7530 SWAP1 DUP6 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x14FA SWAP2 SWAP1 PUSH2 0x1CC7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1535 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x153A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 MUL DUP3 ISZERO DUP4 DUP3 SDIV DUP4 EQ OR PUSH0 NOT DUP5 LT PUSH1 0x1 PUSH1 0xFF SHL DUP5 SGT OR AND PUSH2 0x1567 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 DUP2 MUL SWAP1 DUP2 SDIV DUP4 EQ DUP3 ISZERO ISZERO AND PUSH2 0x1595 JUMPI PUSH0 DUP1 REVERT JUMPDEST SDIV SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15EC PUSH2 0x159B JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDD0 PUSH2 0x159B JUMP JUMPDEST PUSH2 0xAA0 PUSH2 0x159B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1624 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1639 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1642 DUP3 PUSH2 0x1614 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1659 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x168E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD PUSH2 0x1699 DUP2 PUSH2 0x1660 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD PUSH2 0x16A9 DUP2 PUSH2 0x1660 JUMP JUMPDEST SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD PUSH2 0x16B9 DUP2 PUSH2 0x1660 JUMP JUMPDEST SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD PUSH2 0x16C9 DUP2 PUSH2 0x1660 JUMP JUMPDEST SWAP7 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH2 0x16E5 PUSH1 0xC0 DUP13 ADD PUSH2 0x1614 JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP12 ADD CALLDATALOAD SWAP3 POP PUSH2 0x100 DUP12 ADD CALLDATALOAD SWAP2 POP PUSH2 0x120 DUP12 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1642 DUP2 PUSH2 0x1660 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x1728 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x176D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x1728 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x1728 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x4 PUSH0 DUP1 RETURNDATACOPY POP PUSH0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FC PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MSTORE POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FC PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1848 JUMPI PUSH2 0x1848 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x185C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x188C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x18A4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x18BE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x18CD PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1822 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1624 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1642 DUP3 PUSH2 0x18D8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH0 DUP4 SLT DUP1 ISZERO DUP4 DUP4 SGT AND DUP4 DUP4 SLT DUP3 AND OR ISZERO PUSH2 0x191F JUMPI PUSH2 0x191F PUSH2 0x1728 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1949 JUMPI PUSH2 0x1949 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1969 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1951 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1980 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x199A JUMPI PUSH2 0x199A PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1822 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x19C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x19D6 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x194F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 DUP2 LT PUSH2 0x1624 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1624 DUP2 PUSH2 0x1660 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A06 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A22 JUMPI PUSH2 0x1A22 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1A35 DUP4 DUP6 PUSH1 0x5 SHL ADD DUP3 PUSH2 0x1822 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD DUP8 DUP6 GT ISZERO PUSH2 0x1A52 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A99 JUMPI DUP4 DUP2 DUP11 SUB SLT ISZERO PUSH2 0x1A6C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x1A77 DUP2 PUSH2 0x17DC JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1A82 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP2 MSTORE DUP2 DUP7 ADD MLOAD DUP7 DUP3 ADD MSTORE DUP3 MSTORE SWAP1 DUP5 ADD SWAP1 DUP4 ADD PUSH2 0x1A56 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1ACD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0xA0 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x1AE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AEC DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1B01 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0xC0 DUP2 DUP9 SUB SLT ISZERO PUSH2 0x1B12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B1A PUSH2 0x1926 JUMP JUMPDEST DUP2 MLOAD DUP5 DUP2 GT ISZERO PUSH2 0x1B28 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B34 DUP10 DUP3 DUP6 ADD PUSH2 0x1971 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP5 DUP2 GT ISZERO PUSH2 0x1B48 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B54 DUP10 DUP3 DUP6 ADD PUSH2 0x1971 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH2 0x1B66 PUSH1 0x40 DUP4 ADD PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP5 DUP2 GT ISZERO PUSH2 0x1B7C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B88 DUP10 DUP3 DUP6 ADD PUSH2 0x1971 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP5 DUP2 GT ISZERO PUSH2 0x1B9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BAB DUP10 DUP3 DUP6 ADD PUSH2 0x1971 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP5 DUP2 GT ISZERO PUSH2 0x1BC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BCE DUP10 DUP3 DUP6 ADD PUSH2 0x1971 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1BEB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BF7 DUP8 DUP3 DUP7 ADD PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH2 0x1C09 PUSH1 0x60 DUP5 ADD PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C1A PUSH1 0x80 DUP5 ADD PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C7D JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C58 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP7 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CB1 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C95 JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1CD8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x194F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID 0xCD 0x5E 0xD1 0x5C PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F033009B779B17422D0DF92223018B32B4D1FA46E071723D6817 0xE2 BASEFEE PUSH14 0x3BECC55F00A264697066735822 SLT KECCAK256 0xEB STATICCALL SMOD BLOCKHASH REVERT EXTCODEHASH 0xED 0xCF PUSH4 0xC0BF74DA LOG3 MSTORE8 BASEFEE PUSH0 0x4F PUSH31 0xCB6CA40B0FDEAA7C60D0DCA1B764736F6C6343000816003300000000000000 ",
							"sourceMap": "2166:9966:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2329:24;;;;;;;;;;-1:-1:-1;2329:24:9;;;;-1:-1:-1;;;;;2329:24:9;;;;;;-1:-1:-1;;;;;198:32:17;;;180:51;;168:2;153:18;2329:24:9;;;;;;;;2925:29;;;;;;;;;;;;;;;;;;;388:25:17;;;376:2;361:18;2925:29:9;242:177:17;3143:23:9;;;;;;;;;;;;;;;;7600:254;;;;;;;;;;-1:-1:-1;7600:254:9;;;;;:::i;:::-;;:::i;:::-;;2394:33;;;;;;;;;;-1:-1:-1;2394:33:9;;;;-1:-1:-1;;;;;2394:33:9;;;6743:172;;;;;;;;;;;;;:::i;2474:19::-;;;;;;;;;;-1:-1:-1;2474:19:9;;;;-1:-1:-1;;;;;2474:19:9;;;2692:145:3;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2821:9:3;;;2692:145;;1375:14:17;;1368:22;1350:41;;1338:2;1323:18;2692:145:3;1210:187:17;4886:1311:9;;;;;;:::i;:::-;;:::i;7021:166::-;;;;;;;;;;-1:-1:-1;7021:166:9;;;;;:::i;:::-;;:::i;3155:101:0:-;;;;;;;;;;;;;:::i;3199:41:9:-;;;;;;;;;;-1:-1:-1;3199:41:9;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3199:41:9;;;-1:-1:-1;;;3199:41:9;;;;;;;;;;1884:25:17;;;1940:2;1925:18;;1918:34;;;;1968:18;;;1961:34;;;;2026:2;2011:18;;2004:34;-1:-1:-1;;;;;2075:32:17;2069:3;2054:19;;2047:61;2152:14;2145:22;2095:3;2124:19;;2117:51;1871:3;1856:19;3199:41:9;1587:587:17;6456:70:9;;;;;;;;;;;;;:::i;2441:144:0:-;;;;;;;;;;;;;:::i;4648:100:9:-;;;;;;;;;;;;;:::i;3440:812::-;;;;;;;;;;-1:-1:-1;3440:812:9;;;;;:::i;:::-;;:::i;2783:38::-;;;;;;;;;;-1:-1:-1;2783:38:9;;;;;;;;;;;3686:4:17;3674:17;;;3656:36;;3644:2;3629:18;2783:38:9;3514:184:17;7295:178:9;;;;;;;;;;-1:-1:-1;7295:178:9;;;;;:::i;:::-;;:::i;2660:27::-;;;;;;;;;;;;;;;;2580:25;;;;;;;;;;;;;;;;4361:148;;;;;;;;;;;;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;3067:29:9:-;;;;;;;;;;;;;;;;7600:254;2334:13:0;:11;:13::i;:::-;7710:25:9::1;:54:::0;;-1:-1:-1;;7710:54:9::1;;::::0;::::1;::::0;;::::1;::::0;;;7780:67:::1;::::0;3656:36:17;;;7780:67:9::1;::::0;3644:2:17;3629:18;7780:67:9::1;;;;;;;;7600:254:::0;:::o;6743:172::-;2334:13:0;:11;:13::i;:::-;6800:10:9::1;:8;:10::i;:::-;6825:17:::0;;:22;;:41:::1;;-1:-1:-1::0;6851:15:9;;-1:-1:-1;;;6851:15:9;::::1;;;6825:41;6821:88;;;6882:16;:14;:16::i;:::-;6743:172::o:0;4886:1311::-;3251:21:4;:19;:21::i;:::-;4970:52:9::1;::::0;;::::1;::::0;::::1;::::0;;5015:7:::1;4970:52:::0;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4970:52:9;::::1;::::0;;;;-1:-1:-1;;;4970:52:9;::::1;;;;;::::0;;;;;5041:25;::::1;5033:61;;;::::0;-1:-1:-1;;;5033:61:9;;4361:2:17;5033:61:9::1;::::0;::::1;4343:21:17::0;4400:2;4380:18;;;4373:30;4439:25;4419:18;;;4412:53;4482:18;;5033:61:9::1;;;;;;;;;5130:8;:16;;;5112:15;:34;5104:62;;;::::0;-1:-1:-1;;;5104:62:9;;4713:2:17;5104:62:9::1;::::0;::::1;4695:21:17::0;4752:2;4732:18;;;4725:30;-1:-1:-1;;;4771:18:17;;;4764:45;4826:18;;5104:62:9::1;4511:339:17::0;5104:62:9::1;5197:12;;5184:9;:25;;5176:69;;;::::0;-1:-1:-1;;;5176:69:9;;5057:2:17;5176:69:9::1;::::0;::::1;5039:21:17::0;5096:2;5076:18;;;5069:30;5135:33;5115:18;;;5108:61;5186:18;;5176:69:9::1;4855:355:17::0;5176:69:9::1;5314:25;::::0;5296:15:::1;::::0;::::1;::::0;5343:3:::1;::::0;5296:43:::1;::::0;5314:25:::1;::::0;;::::1;::::0;5296:43:::1;:::i;:::-;5295:51;;;;:::i;:::-;5276:8;:15;;;:71;;;;:::i;:::-;5263:9;:84;;5255:161;;;::::0;;-1:-1:-1;;;5255:161:9;;6074:2:17;5255:161:9::1;::::0;::::1;6056:21:17::0;6093:18;;;6086:30;;;;6152:34;6132:18;;;6125:62;6223:34;6203:18;;;6196:62;6275:19;;5255:161:9::1;5872:428:17::0;5255:161:9::1;5456:15;::::0;::::1;::::0;-1:-1:-1;;;;;5535:24:9;::::1;::::0;5531:112:::1;;5575:57;5604:10;5616:8;:15;;;5575:28;:57::i;:::-;5670:9;5653:14:::0;:26;5689:14;:36;;-1:-1:-1;;;;;;5689:36:9::1;5714:10;5689:36;::::0;;5887:10:::1;::::0;5850:16:::1;::::0;::::1;::::0;5689:14:::1;::::0;5887:10;5850:34:::1;::::0;5869:15:::1;::::0;5850:34:::1;:::i;:::-;:47;5834:63;;5911:8;5907:104;;;5990:10;::::0;5972:28:::1;::::0;:15:::1;:28;:::i;:::-;5953:16;::::0;::::1;:47:::0;;;5935:15;:65;5907:104:::1;6037:15:::0;;6026:60:::1;::::0;;6054:10:::1;6634:51:17::0;;6066:9:9::1;6716:2:17::0;6701:18;;6694:34;6771:14;;6764:22;6744:18;;;6737:50;6026:60:9;;::::1;::::0;;;;6622:2:17;6026:60:9;;::::1;6101:8;6097:94;;;6146:15:::0;;6163:16:::1;::::0;::::1;::::0;6130:50:::1;::::0;388:25:17;;;6130:50:9::1;::::0;376:2:17;361:18;6130:50:9::1;;;;;;;6097:94;4960:1237;;;3293:20:4::0;1805:1;-1:-1:-1;;;;;;;;;;;3969:23:4;3716:283;3293:20;4886:1311:9;:::o;7021:166::-;2334:13:0;:11;:13::i;:::-;7103:10:9::1;:24:::0;;;7143:37:::1;::::0;388:25:17;;;7143:37:9::1;::::0;376:2:17;361:18;7143:37:9::1;242:177:17::0;3155:101:0;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;6456:70:9:-:0;2334:13:0;:11;:13::i;:::-;6511:8:9::1;:6;:8::i;2441:144:0:-:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144::o;4648:100:9:-;2563:16:3;:14;:16::i;:::-;3251:21:4::1;:19;:21::i;:::-;4725:16:9::2;:14;:16::i;:::-;3293:20:4::1;1805:1:::0;-1:-1:-1;;;;;;;;;;;3969:23:4;3716:283;3440:812:9;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;3806:17:9::1;:15;:17::i;:::-;3833:24;:22;:24::i;:::-;3867;3882:8;3867:14;:24::i;:::-;3902:8;:6;:8::i;:::-;3929:6;3921:5;::::0;:14:::1;;;;;-1:-1:-1::0;;;;;3921:14:9::1;;;;;-1:-1:-1::0;;;;;3921:14:9::1;;;;;;3960:13;3945:12;;:28;;;;;-1:-1:-1::0;;;;;3945:28:9::1;;;;;-1:-1:-1::0;;;;;3945:28:9::1;;;;;;3990:5;3983:4;;:12;;;;;-1:-1:-1::0;;;;;3983:12:9::1;;;;;-1:-1:-1::0;;;;;3983:12:9::1;;;;;;4018:11;4005:10;:24;;;;4054:13;4039:12;:28;;;;4105:26;4077:25;;:54;;;;;;;;;;;;;;;;;;4152:9;4141:8;:20;;;;4188:15;4171:14;:32;;;;4230:15;4213:14;:32;;;;5070:14:1::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;6951:50:17;;5142:14:1;;6939:2:17;6924:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;3440:812:9;;;;;;;;;;:::o;7295:178::-;2334:13:0;:11;:13::i;:::-;7381:12:9::1;:28:::0;;;7425:41:::1;::::0;388:25:17;;;7425:41:9::1;::::0;376:2:17;361:18;7425:41:9::1;242:177:17::0;4361:148:9;3251:21:4;:19;:21::i;:::-;2316:19:3::1;:17;:19::i;:::-;4460:16:9::2;:14;:16::i;:::-;4486;:14;:16::i;3405:215:0:-:0;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;180:51:17::0;153:18;;3534:31:0::1;14:223:17::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;2658:162::-:0;966:10:2;2717:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:2;2763:40:0;;;180:51:17;153:18;;2763:40:0;14:223:17;3674:178:3;2563:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3791:17:3;;-1:-1:-1;;3791:17:3::1;::::0;;3823:22:::1;966:10:2::0;3832:12:3::1;3823:22;::::0;-1:-1:-1;;;;;198:32:17;;;180:51;;168:2;153:18;3823:22:3::1;14:223:17::0;8167:467:9;8216:5;;;;;;;;-1:-1:-1;;;;;8216:5:9;-1:-1:-1;;;;;8216:10:9;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8216:12:9;;;;;;;;-1:-1:-1;;8216:12:9;;;;;;;;;;;;:::i;:::-;;;8212:416;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;8609:8;:6;:8::i;8212:416::-;;;;;;;;;;;8347:8;;8288:15;;8268:17;;8335:20;;8288:15;8335:20;:::i;:::-;8380:114;;;;;;;;;;;-1:-1:-1;8380:114:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8370:7;:124;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8370:124:9;;;8514:42;;9079:25:17;;;9120:18;;;9113:34;;;8380:114:9;;-1:-1:-1;8380:114:9;;8514:42;;9052:18:17;8514:42:9;;;;;;;8254:313;;8229:338;8167:467::o;3326:384:4:-;-1:-1:-1;;;;;;;;;;;3526:9:4;;-1:-1:-1;;3526:20:4;3522:88;;3569:30;;-1:-1:-1;;;3569:30:4;;;;;;;;;;;3522:88;1847:1;3684:19;;3326:384::o;11560:236:9:-;11650:28;11667:2;11671:6;11650:16;:28::i;:::-;11645:145;;11700:4;;;;;;;;;-1:-1:-1;;;;;11700:4:9;-1:-1:-1;;;;;11694:19:9;;11722:6;11694:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11753:4:9;;11746:33;;-1:-1:-1;;;11746:33:9;;-1:-1:-1;;;;;9350:32:17;;;11746:33:9;;;9332:51:17;9399:18;;;9392:34;;;11753:4:9;;;;-1:-1:-1;11746:21:9;;-1:-1:-1;9305:18:17;;;-1:-1:-1;11746:33:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11645:145;11560:236;;:::o;3716:283:4:-;1805:1;-1:-1:-1;;;;;;;;;;;3969:23:4;3716:283::o;3774:248:0:-;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;3366:176:3:-;2316:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3484:16:3;;-1:-1:-1;;3484:16:3::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:2::0;3522:12:3::1;887:96:2::0;3105:126:3;-1:-1:-1;;;;;;;;;;;2821:9:3;;;3163:62;;3199:15;;-1:-1:-1;;;3199:15:3;;;;;;;;;;;8792:2652:9;8837:52;;;;;;;;8882:7;8837:52;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8837:52:9;;;;;;-1:-1:-1;;;8837:52:9;;;;;;;;;;;-1:-1:-1;8908:23:9;8900:56;;;;-1:-1:-1;;;8900:56:9;;10015:2:17;8900:56:9;;;9997:21:17;10054:2;10034:18;;;10027:30;-1:-1:-1;;;10073:18:17;;;10066:50;10133:18;;8900:56:9;9813:344:17;8900:56:9;8975:8;:16;;;8974:17;8966:62;;;;-1:-1:-1;;;8966:62:9;;10364:2:17;8966:62:9;;;10346:21:17;;;10383:18;;;10376:30;10442:34;10422:18;;;10415:62;10494:18;;8966:62:9;10162:356:17;8966:62:9;9065:8;:16;;;9046:15;:35;;9038:72;;;;-1:-1:-1;;;9038:72:9;;10725:2:17;9038:72:9;;;10707:21:17;10764:2;10744:18;;;10737:30;10803:26;10783:18;;;10776:54;10847:18;;9038:72:9;10523:348:17;9038:72:9;9121:15;:22;;-1:-1:-1;;;;9121:22:9;-1:-1:-1;;;9121:22:9;;;9158:15;;;;-1:-1:-1;;;;;9158:29:9;9154:185;;9203:5;;9214:15;;9203:27;;-1:-1:-1;;;9203:27:9;;-1:-1:-1;;;;;9203:5:9;;;;:10;;:27;;;;388:25:17;;;376:2;361:18;;242:177;9203:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9154:185;;;9261:5;;9295:15;;;;9312;;9261:67;;-1:-1:-1;;;9261:67:9;;9288:4;9261:67;;;11124:34:17;-1:-1:-1;;;;;11194:15:17;;;11174:18;;;11167:43;11226:18;;;11219:34;;;;9261:5:9;;;:18;;11059::17;;9261:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9154:185;9353:15;;;;:19;9349:2008;;9439:25;9475:78;9482:63;9496:8;:15;;;9529:14;;9514:5;:30;;;;:::i;:::-;9482:6;:63::i;:::-;9547:5;9475:6;:78::i;:::-;9439:115;;9622:22;9665:17;9647:8;:15;;;:35;;;;:::i;:::-;9622:60;;9754:28;9793:69;9800:54;9814:14;9838;;9800:6;:54::i;9793:69::-;9754:109;-1:-1:-1;9932:32:9;9967:37;9754:109;9967:14;:37;:::i;:::-;10019:19;10041:5;;10063:15;;10041:38;;-1:-1:-1;;;10041:38:9;;;;;388:25:17;;;;9932:72:9;;-1:-1:-1;10019:19:9;;-1:-1:-1;;;;;10041:5:9;;;;:21;;361:18:17;;10041:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10041:38:9;;;;;;;;;;;;:::i;:::-;:47;;;:54;10019:76;;10163:31;10211:11;10197:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10197:26:9;;10163:60;;10237:28;10282:11;10268:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10268:26:9;;10237:57;;10367:56;10396:7;:5;:7::i;:::-;10405:17;10367:28;:56::i;:::-;10559:9;10554:604;10578:11;10574:1;:15;10554:604;;;10614:39;10656:5;;10678:15;;10656:38;;-1:-1:-1;;;10656:38:9;;-1:-1:-1;;;;;10656:5:9;;;;:21;;:38;;;;388:25:17;;;376:2;361:18;;242:177;10656:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10656:38:9;;;;;;;;;;;;:::i;:::-;:47;;;10704:1;10656:50;;;;;;;;:::i;:::-;;;;;;;10614:92;;10744:7;:15;;;10724:14;10739:1;10724:17;;;;;;;;:::i;:::-;;;;;;:35;-1:-1:-1;;;;;10724:35:9;;;-1:-1:-1;;;;;10724:35:9;;;;;10794:7;:11;;;10777;10789:1;10777:14;;;;;;;;:::i;:::-;;;;;;:28;;;;;10905:19;10935:72;10942:57;10956:20;10986:7;:11;;;10942:6;:57::i;10935:72::-;10905:103;;11085:58;11114:7;:15;;;11131:11;11085:28;:58::i;:::-;-1:-1:-1;;10591:3:9;;10554:604;;;-1:-1:-1;11235:12:9;;:111;;-1:-1:-1;;;11235:111:9;;-1:-1:-1;;;;;11235:12:9;;;;:21;;11265:24;;11235:111;;11292:14;;11308:11;;11265:24;;11235:111;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9374:1983;;;;;;;9349:2008;11387:15;;11404;;;;11421;;;;;11372:65;;;-1:-1:-1;;;;;9350:32:17;;;9332:51;;9399:18;;;9392:34;11372:65:9;;9305:18:17;11372:65:9;;;;;;;8827:2617;8792:2652::o;1836:97:3:-;6931:20:1;:18;:20::i;:::-;1899:27:3::1;:25;:27::i;2540:111:4:-:0;6931:20:1;:18;:20::i;:::-;2610:34:4::1;:32;:34::i;1847:127:0:-:0;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2905:128:3:-:0;-1:-1:-1;;;;;;;;;;;2821:9:3;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:3;;;;;;;;;;;11943:187:9;12086:12;;;12014:4;12086:12;;;;;;;;;12014:4;;-1:-1:-1;;;;;12049:7:9;;;12077:6;;12065:5;;12049:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12030:69:9;;-1:-1:-1;;;11943:187:9;;;;;:::o;2209:927:16:-;2375:9;;;2880;;2894:10;;;2891:17;;2877:32;-1:-1:-1;;2914:13:16;;-1:-1:-1;;;2929:74:16;;2911:93;2873:132;2863:180;;3031:1;3028;3021:12;2863:180;3108:19;3100:28;;;2209:927;-1:-1:-1;;2209:927:16:o;3138:441::-;3314:19;3307:27;;;;3449:28;;3446:35;;3434:9;;3427:17;3423:59;3413:107;;3508:1;3505;3498:12;3413:107;3561:10;;3138:441;-1:-1:-1;3138:441:16:o;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1939:156:3;6931:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2071:17:3;;-1:-1:-1;;2071:17:3::1;::::0;;1939:156::o;2657:183:4:-;6931:20:1;:18;:20::i;1980:235:0:-;6931:20:1;:18;:20::i;424:156:17:-;490:20;;550:4;539:16;;529:27;;519:55;;570:1;567;560:12;519:55;424:156;;;:::o;585:182::-;642:6;695:2;683:9;674:7;670:23;666:32;663:52;;;711:1;708;701:12;663:52;734:27;751:9;734:27;:::i;:::-;724:37;585:182;-1:-1:-1;;;585:182:17:o;1402:180::-;1461:6;1514:2;1502:9;1493:7;1489:23;1485:32;1482:52;;;1530:1;1527;1520:12;1482:52;-1:-1:-1;1553:23:17;;1402:180;-1:-1:-1;1402:180:17:o;2179:144::-;-1:-1:-1;;;;;2267:31:17;;2257:42;;2247:70;;2313:1;2310;2303:12;2328:1181;2508:6;2516;2524;2532;2540;2548;2556;2564;2572;2580;2633:3;2621:9;2612:7;2608:23;2604:33;2601:53;;;2650:1;2647;2640:12;2601:53;2689:9;2676:23;2708:44;2746:5;2708:44;:::i;:::-;2771:5;-1:-1:-1;2828:2:17;2813:18;;2800:32;2841:46;2800:32;2841:46;:::i;:::-;2906:7;-1:-1:-1;2965:2:17;2950:18;;2937:32;2978:46;2937:32;2978:46;:::i;:::-;3043:7;-1:-1:-1;3102:2:17;3087:18;;3074:32;3115:46;3074:32;3115:46;:::i;:::-;3180:7;-1:-1:-1;3234:3:17;3219:19;;3206:33;;-1:-1:-1;3286:3:17;3271:19;;3258:33;;-1:-1:-1;3310:37:17;3342:3;3327:19;;3310:37;:::i;:::-;3300:47;;3394:3;3383:9;3379:19;3366:33;3356:43;;3446:3;3435:9;3431:19;3418:33;3408:43;;3498:3;3487:9;3483:19;3470:33;3460:43;;2328:1181;;;;;;;;;;;;;:::o;3703:260::-;3762:6;3815:2;3803:9;3794:7;3790:23;3786:32;3783:52;;;3831:1;3828;3821:12;3783:52;3870:9;3857:23;3889:44;3927:5;3889:44;:::i;5215:127::-;5276:10;5271:3;5267:20;5264:1;5257:31;5307:4;5304:1;5297:15;5331:4;5328:1;5321:15;5347:168;5420:9;;;5451;;5468:15;;;5462:22;;5448:37;5438:71;;5489:18;;:::i;5520:217::-;5560:1;5586;5576:132;;5630:10;5625:3;5621:20;5618:1;5611:31;5665:4;5662:1;5655:15;5693:4;5690:1;5683:15;5576:132;-1:-1:-1;5722:9:17;;5520:217::o;5742:125::-;5807:9;;;5828:10;;;5825:36;;;5841:18;;:::i;6305:128::-;6372:9;;;6393:11;;;6390:37;;;6407:18;;:::i;7012:184::-;7082:6;7135:2;7123:9;7114:7;7110:23;7106:32;7103:52;;;7151:1;7148;7141:12;7103:52;-1:-1:-1;7174:16:17;;7012:184;-1:-1:-1;7012:184:17:o;7201:179::-;7236:3;7278:1;7260:16;7257:23;7254:120;;;7324:1;7321;7318;7303:23;-1:-1:-1;7361:1:17;7355:8;7350:3;7346:18;7254:120;7201:179;:::o;7385:127::-;7446:10;7441:3;7437:20;7434:1;7427:31;7477:4;7474:1;7467:15;7501:4;7498:1;7491:15;7517:223;7603:2;7595:6;7591:15;7672:6;7660:10;7657:22;7636:18;7624:10;7621:34;7618:62;7615:88;;;7683:18;;:::i;:::-;7719:2;7712:22;-1:-1:-1;7517:223:17:o;7745:225::-;7831:4;7823:6;7819:17;7902:6;7890:10;7887:22;7866:18;7854:10;7851:34;7848:62;7845:88;;;7913:18;;:::i;7975:249::-;8085:2;8066:13;;-1:-1:-1;;8062:27:17;8050:40;;8120:18;8105:34;;8141:22;;;8102:62;8099:88;;;8167:18;;:::i;:::-;8203:2;8196:22;-1:-1:-1;;7975:249:17:o;8229:671::-;8268:3;8310:4;8292:16;8289:26;8286:39;;;8229:671;:::o;8286:39::-;8352:2;8346:9;-1:-1:-1;;8417:16:17;8413:25;;8410:1;8346:9;8389:50;8468:4;8462:11;8492:16;8527:18;8598:2;8591:4;8583:6;8579:17;8576:25;8571:2;8563:6;8560:14;8557:45;8554:58;;;8605:5;;;;;8229:671;:::o;8554:58::-;8642:6;8636:4;8632:17;8621:28;;8678:3;8672:10;8705:2;8697:6;8694:14;8691:27;;;8711:5;;;;;;8229:671;:::o;8691:27::-;8795:2;8776:16;8770:4;8766:27;8762:36;8755:4;8746:6;8741:3;8737:16;8733:27;8730:69;8727:82;;;8802:5;;;;;;8229:671;:::o;8727:82::-;8818:57;8869:4;8860:6;8852;8848:19;8844:30;8838:4;8818:57;:::i;:::-;-1:-1:-1;8891:3:17;;8229:671;-1:-1:-1;;;;;8229:671:17:o;9437:164::-;9513:13;;9562;;9555:21;9545:32;;9535:60;;9591:1;9588;9581:12;9606:202;9673:6;9726:2;9714:9;9705:7;9701:23;9697:32;9694:52;;;9742:1;9739;9732:12;9694:52;9765:37;9792:9;9765:37;:::i;11264:200::-;11330:9;;;11303:4;11358:9;;11386:10;;11398:12;;;11382:29;11421:12;;;11413:21;;11379:56;11376:82;;;11438:18;;:::i;:::-;11376:82;11264:200;;;;:::o;11469:248::-;11536:2;11530:9;11578:4;11566:17;;11613:18;11598:34;;11634:22;;;11595:62;11592:88;;;11660:18;;:::i;:::-;11696:2;11689:22;11469:248;:::o;11722:250::-;11807:1;11817:113;11831:6;11828:1;11825:13;11817:113;;;11907:11;;;11901:18;11888:11;;;11881:39;11853:2;11846:10;11817:113;;;-1:-1:-1;;11964:1:17;11946:16;;11939:27;11722:250::o;11977:536::-;12031:5;12084:3;12077:4;12069:6;12065:17;12061:27;12051:55;;12102:1;12099;12092:12;12051:55;12131:6;12125:13;12157:18;12153:2;12150:26;12147:52;;;12179:18;;:::i;:::-;12228:2;12222:9;12240:67;12295:2;12276:13;;-1:-1:-1;;12272:27:17;12301:4;12268:38;12222:9;12240:67;:::i;:::-;12331:2;12323:6;12316:18;12377:3;12370:4;12365:2;12357:6;12353:15;12349:26;12346:35;12343:55;;;12394:1;12391;12384:12;12343:55;12407:76;12480:2;12473:4;12465:6;12461:17;12454:4;12446:6;12442:17;12407:76;:::i;:::-;12501:6;11977:536;-1:-1:-1;;;;11977:536:17:o;12518:154::-;12604:13;;12646:1;12636:12;;12626:40;;12662:1;12659;12652:12;12677:151;12756:13;;12778:44;12756:13;12778:44;:::i;12833:1094::-;12908:5;12961:3;12954:4;12946:6;12942:17;12938:27;12928:55;;12979:1;12976;12969:12;12928:55;13008:6;13002:13;13034:4;13057:18;13053:2;13050:26;13047:52;;;13079:18;;:::i;:::-;13118:2;13149;13143:9;13161:48;13205:2;13200;13197:1;13193:10;13189:19;13181:6;13161:48;:::i;:::-;13244:18;;;13336:1;13332:10;;;;13320:23;;13316:32;;;13278:15;;;13360;;;13357:35;;;13388:1;13385;13378:12;13357:35;13424:2;13416:6;13412:15;13436:461;13452:6;13447:3;13444:15;13436:461;;;13528:2;13522:3;13517;13513:13;13509:22;13506:42;;;13544:1;13541;13534:12;13506:42;13583:2;13577:9;13599:34;13624:8;13599:34;:::i;:::-;13665:3;13659:10;13682:44;13720:5;13682:44;:::i;:::-;13739:23;;13807:12;;;13801:19;13782:17;;;13775:46;13834:21;;13875:12;;;;13469;;13436:461;;;-1:-1:-1;13915:6:17;;12833:1094;-1:-1:-1;;;;;;;12833:1094:17:o;13932:2086::-;14028:6;14081:2;14069:9;14060:7;14056:23;14052:32;14049:52;;;14097:1;14094;14087:12;14049:52;14130:9;14124:16;14159:18;14200:2;14192:6;14189:14;14186:34;;;14216:1;14213;14206:12;14186:34;14239:22;;;;14295:4;14277:16;;;14273:27;14270:47;;;14313:1;14310;14303:12;14270:47;14346:2;14340:9;14358:32;14383:6;14358:32;:::i;:::-;14420:2;14414:9;14406:6;14399:25;14463:2;14459;14455:11;14449:18;14492:2;14482:8;14479:16;14476:36;;;14508:1;14505;14498:12;14476:36;14531:17;;14582:4;14564:16;;;14560:27;14557:47;;;14600:1;14597;14590:12;14557:47;14626:17;;:::i;:::-;14674:2;14668:9;14702:2;14692:8;14689:16;14686:36;;;14718:1;14715;14708:12;14686:36;14745:56;14793:7;14782:8;14778:2;14774:17;14745:56;:::i;:::-;14738:5;14731:71;;14841:2;14837;14833:11;14827:18;14870:2;14860:8;14857:16;14854:36;;;14886:1;14883;14876:12;14854:36;14922:56;14970:7;14959:8;14955:2;14951:17;14922:56;:::i;:::-;14917:2;14910:5;14906:14;14899:80;;15011:49;15056:2;15052;15048:11;15011:49;:::i;:::-;15006:2;14999:5;14995:14;14988:73;15100:2;15096;15092:11;15086:18;15129:2;15119:8;15116:16;15113:36;;;15145:1;15142;15135:12;15113:36;15181:56;15229:7;15218:8;15214:2;15210:17;15181:56;:::i;:::-;15176:2;15169:5;15165:14;15158:80;;15277:3;15273:2;15269:12;15263:19;15307:2;15297:8;15294:16;15291:36;;;15323:1;15320;15313:12;15291:36;15360:56;15408:7;15397:8;15393:2;15389:17;15360:56;:::i;:::-;15354:3;15347:5;15343:15;15336:81;;15456:4;15452:2;15448:13;15442:20;15487:2;15477:8;15474:16;15471:36;;;15503:1;15500;15493:12;15471:36;15541:56;15589:7;15578:8;15574:2;15570:17;15541:56;:::i;:::-;15534:4;15523:16;;15516:82;-1:-1:-1;15626:2:17;15614:15;;15607:30;-1:-1:-1;15676:2:17;15668:11;;15662:18;15692:16;;;15689:36;;;15721:1;15718;15711:12;15689:36;15758:77;15827:7;15816:8;15812:2;15808:17;15758:77;:::i;:::-;15753:2;15745:6;15741:15;15734:102;;15869:42;15907:2;15903;15899:11;15869:42;:::i;:::-;15864:2;15856:6;15852:15;15845:67;15946:40;15981:3;15977:2;15973:12;15946:40;:::i;:::-;15940:3;15928:16;;15921:66;15932:6;13932:2086;-1:-1:-1;;;;;13932:2086:17:o;16023:127::-;16084:10;16079:3;16075:20;16072:1;16065:31;16115:4;16112:1;16105:15;16139:4;16136:1;16129:15;16155:1250;16451:2;16463:21;;;16533:13;;16436:18;;;16555:22;;;16403:4;;16631;;16608:3;16593:19;;;16658:15;;;16403:4;16701:195;16715:6;16712:1;16709:13;16701:195;;;16780:13;;-1:-1:-1;;;;;16776:39:17;16764:52;;16836:12;;;;16871:15;;;;16812:1;16730:9;16701:195;;;-1:-1:-1;;;16932:19:17;;;16912:18;;;16905:47;17002:13;;17024:21;;;17100:15;;;;17063:12;;;17135:1;17145:189;17161:8;17156:3;17153:17;17145:189;;;17230:15;;17216:30;;17307:17;;;;17268:14;;;;17189:1;17180:11;17145:189;;;17149:3;;17351:5;17343:13;;;;;17392:6;17387:2;17376:9;17372:18;17365:34;16155:1250;;;;;;:::o;17697:287::-;17826:3;17864:6;17858:13;17880:66;17939:6;17934:3;17927:4;17919:6;17915:17;17880:66;:::i;:::-;17962:16;;;;;17697:287;-1:-1:-1;;17697:287:17:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1502400",
								"executionCost": "1566",
								"totalCost": "1503966"
							},
							"external": {
								"auction()": "10911",
								"createBid(uint256)": "infinite",
								"creatorRateBps()": "2340",
								"duration()": "2362",
								"entropyRateBps()": "2426",
								"initialize(address,address,address,address,uint256,uint256,uint8,uint256,uint256,uint256)": "infinite",
								"minBidIncrementPercentage()": "2445",
								"owner()": "2401",
								"pause()": "infinite",
								"paused()": "infinite",
								"renounceOwnership()": "infinite",
								"reservePrice()": "2338",
								"setMinBidIncrementPercentage(uint8)": "27886",
								"setReservePrice(uint256)": "25630",
								"setTimeBuffer(uint256)": "25719",
								"settleAuction()": "infinite",
								"settleCurrentAndCreateNewAuction()": "infinite",
								"timeBuffer()": "2360",
								"tokenEmitter()": "2437",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"verbs()": "2348",
								"weth()": "2370"
							},
							"internal": {
								"_createAuction()": "infinite",
								"_safeTransferETH(address,uint256)": "infinite",
								"_safeTransferETHWithFallback(address,uint256)": "infinite",
								"_settleAuction()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2166,
									"end": 12132,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2166,
									"end": 12132,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ebfa0740fd3fedcf63c0bf74daa353485f4f7ecb6ca40b0fdeaa7c60d0dca1b764736f6c63430008160033",
									".code": [
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "7D9F6DB5"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "CE9C7C0D"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "CE9C7C0D"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "DB2E1EED"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "EC91F2A4"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "F25EFFFC"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "FE95233B"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "7D9F6DB5"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "A4D0A17E"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "A910D318"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "B296024D"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "3F4BA83A"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "3F4BA83A"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "3FC8CEF3"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "659DD2B4"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "7120334B"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "284464A"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "802BE0A"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "FB5A6B4"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "36EBDB38"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "3D64BAF1"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 12132,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 198,
											"end": 230,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 198,
											"end": 230,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 198,
											"end": 230,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 180,
											"end": 231,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 180,
											"end": 231,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 168,
											"end": 170,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 153,
											"end": 171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 361,
											"end": 379,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 242,
											"end": 419,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 7600,
											"end": 7854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 7600,
											"end": 7854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6743,
											"end": 6915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1389,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1375,
											"end": 1389,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1390,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1391,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1350,
											"end": 1391,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1210,
											"end": 1397,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4886,
											"end": 6197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4886,
											"end": 6197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7021,
											"end": 7187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 7021,
											"end": 7187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 1909,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 1884,
											"end": 1909,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 1884,
											"end": 1909,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1940,
											"end": 1942,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1961,
											"end": 1995,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1961,
											"end": 1995,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1961,
											"end": 1995,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1961,
											"end": 1995,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2004,
											"end": 2038,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2069,
											"end": 2072,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 2054,
											"end": 2073,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2054,
											"end": 2073,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2047,
											"end": 2108,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2152,
											"end": 2166,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2095,
											"end": 2098,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 2124,
											"end": 2143,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2124,
											"end": 2143,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2117,
											"end": 2168,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1871,
											"end": 1874,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 1856,
											"end": 1875,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3199,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1587,
											"end": 2174,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 6456,
											"end": 6526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4648,
											"end": 4748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3440,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3440,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3674,
											"end": 3691,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3674,
											"end": 3691,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3674,
											"end": 3691,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3656,
											"end": 3692,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3656,
											"end": 3692,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3647,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3514,
											"end": 3698,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7295,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 7295,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2687,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4361,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3096,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7710,
											"end": 7764,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7764,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7710,
											"end": 7764,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7710,
											"end": 7764,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7764,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7764,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7764,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7764,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7780,
											"end": 7847,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3692,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3656,
											"end": 3692,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3656,
											"end": 3692,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "EC5CCD96CC77B6219E9D44143DF916AF68FC169339EA7DE5008FF15EAE13450D"
										},
										{
											"begin": 7780,
											"end": 7847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3647,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7847,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6743,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 6800,
											"end": 6808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 6800,
											"end": 6810,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6800,
											"end": 6810,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 6800,
											"end": 6810,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6842,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 6825,
											"end": 6842,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6847,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6847,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 6825,
											"end": 6866,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6851,
											"end": 6866,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 6851,
											"end": 6866,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6851,
											"end": 6866,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6851,
											"end": 6866,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6851,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6851,
											"end": 6866,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 6825,
											"end": 6866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6821,
											"end": 6909,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6821,
											"end": 6909,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6821,
											"end": 6909,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6882,
											"end": 6896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 6882,
											"end": 6898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6882,
											"end": 6898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3251,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3251,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5066,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5066,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5033,
											"end": 5094,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5033,
											"end": 5094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4363,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5033,
											"end": 5094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4343,
											"end": 4364,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4400,
											"end": 4402,
											"name": "PUSH",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4373,
											"end": 4403,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4439,
											"end": 4464,
											"name": "PUSH",
											"source": 17,
											"value": "56657262206E6F7420757020666F722061756374696F6E000000000000000000"
										},
										{
											"begin": 4419,
											"end": 4437,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 4419,
											"end": 4437,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4419,
											"end": 4437,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4412,
											"end": 4465,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4482,
											"end": 4500,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 4482,
											"end": 4500,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 5033,
											"end": 5094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5130,
											"end": 5138,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5130,
											"end": 5146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5130,
											"end": 5146,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5130,
											"end": 5146,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5127,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5146,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5104,
											"end": 5166,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5166,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5104,
											"end": 5166,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5166,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4715,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5104,
											"end": 5166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5104,
											"end": 5166,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4695,
											"end": 4716,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4752,
											"end": 4754,
											"name": "PUSH",
											"source": 17,
											"value": "F"
										},
										{
											"begin": 4732,
											"end": 4750,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4732,
											"end": 4750,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4732,
											"end": 4750,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4725,
											"end": 4755,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105D58DD1A5BDB88195E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4764,
											"end": 4809,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4826,
											"end": 4844,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 4826,
											"end": 4844,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5104,
											"end": 5166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4511,
											"end": 4850,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5104,
											"end": 5166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5104,
											"end": 5166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5197,
											"end": 5209,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5193,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5209,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5209,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5176,
											"end": 5245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 5176,
											"end": 5245,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5176,
											"end": 5245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5176,
											"end": 5245,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5176,
											"end": 5245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5176,
											"end": 5245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5176,
											"end": 5245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5176,
											"end": 5245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5176,
											"end": 5245,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5039,
											"end": 5060,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5096,
											"end": 5098,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5069,
											"end": 5099,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5135,
											"end": 5168,
											"name": "PUSH",
											"source": 17,
											"value": "4D7573742073656E64206174206C656173742072657365727665507269636500"
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5108,
											"end": 5169,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5176,
											"end": 5245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4855,
											"end": 5210,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5176,
											"end": 5245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 5176,
											"end": 5245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5296,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5296,
											"end": 5311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5296,
											"end": 5311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5296,
											"end": 5311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5343,
											"end": 5346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5343,
											"end": 5346,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5296,
											"end": 5339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 5296,
											"end": 5339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5296,
											"end": 5339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5296,
											"end": 5339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5296,
											"end": 5339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 5296,
											"end": 5339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5295,
											"end": 5346,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 5295,
											"end": 5346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5295,
											"end": 5346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5276,
											"end": 5291,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5291,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5276,
											"end": 5347,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5276,
											"end": 5347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5276,
											"end": 5347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5263,
											"end": 5272,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5263,
											"end": 5347,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5263,
											"end": 5347,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5255,
											"end": 5416,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5255,
											"end": 5416,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5416,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5255,
											"end": 5416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5416,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6074,
											"end": 6076,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5255,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5255,
											"end": 5416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5416,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6077,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6093,
											"end": 6111,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6093,
											"end": 6111,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6093,
											"end": 6111,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6086,
											"end": 6116,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6086,
											"end": 6116,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6086,
											"end": 6116,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6086,
											"end": 6116,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6152,
											"end": 6186,
											"name": "PUSH",
											"source": 17,
											"value": "4D7573742073656E64206D6F7265207468616E206C6173742062696420627920"
										},
										{
											"begin": 6132,
											"end": 6150,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 6132,
											"end": 6150,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6132,
											"end": 6150,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6125,
											"end": 6187,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6223,
											"end": 6257,
											"name": "PUSH",
											"source": 17,
											"value": "6D696E426964496E6372656D656E7450657263656E7461676520616D6F756E74"
										},
										{
											"begin": 6203,
											"end": 6221,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6203,
											"end": 6221,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6203,
											"end": 6221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6196,
											"end": 6258,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5255,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 5872,
											"end": 6300,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5255,
											"end": 5416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5255,
											"end": 5416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5456,
											"end": 5471,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5471,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5535,
											"end": 5559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5535,
											"end": 5559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5535,
											"end": 5559,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5531,
											"end": 5643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 5531,
											"end": 5643,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5575,
											"end": 5632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 5604,
											"end": 5614,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5616,
											"end": 5624,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5616,
											"end": 5631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5616,
											"end": 5631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5616,
											"end": 5631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5575,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 5575,
											"end": 5632,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5575,
											"end": 5632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 5575,
											"end": 5632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5679,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5667,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5653,
											"end": 5679,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5703,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5689,
											"end": 5725,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5725,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5689,
											"end": 5725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5724,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5725,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5725,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5887,
											"end": 5897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5850,
											"end": 5866,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5866,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5866,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5703,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 5850,
											"end": 5884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5869,
											"end": 5884,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 5869,
											"end": 5884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 5850,
											"end": 5884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 5850,
											"end": 5884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5897,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5834,
											"end": 5897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5834,
											"end": 5897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5911,
											"end": 5919,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5907,
											"end": 6011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5990,
											"end": 6000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5972,
											"end": 6000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5972,
											"end": 5987,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5972,
											"end": 6000,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 5969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5953,
											"end": 5969,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 5969,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5935,
											"end": 5950,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 5935,
											"end": 6000,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5907,
											"end": 6011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6086,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6064,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6685,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6634,
											"end": 6685,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6066,
											"end": 6075,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6716,
											"end": 6718,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6719,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6701,
											"end": 6719,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6694,
											"end": 6728,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6771,
											"end": 6785,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6771,
											"end": 6785,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6764,
											"end": 6786,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6737,
											"end": 6787,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6026,
											"end": 6086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1159164C56F277E6FC99C11731BD380E0347DEB969B75523398734C252706EA3"
										},
										{
											"begin": 6026,
											"end": 6086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6086,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6624,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6026,
											"end": 6086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6086,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6101,
											"end": 6109,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6191,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6097,
											"end": 6191,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6146,
											"end": 6161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6146,
											"end": 6161,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6163,
											"end": 6179,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6179,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6179,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6130,
											"end": 6180,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6130,
											"end": 6180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6E912A3A9105BDD2AF817BA5ADC14E6C127C1035B5B648FAA29CA0D58AB8FF4E"
										},
										{
											"begin": 6130,
											"end": 6180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 361,
											"end": 379,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6130,
											"end": 6180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6130,
											"end": 6180,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6180,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6180,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6180,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6097,
											"end": 6191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 6197,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 6197,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 6197,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3716,
											"end": 3999,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 6197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 6197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 7021,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7103,
											"end": 7127,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7127,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7143,
											"end": 7180,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7143,
											"end": 7180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1B55D9F7002BDA4490F467E326F22A4A847629C0F2D1ED421607D318D25B410D"
										},
										{
											"begin": 7143,
											"end": 7180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 361,
											"end": 379,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7143,
											"end": 7180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 242,
											"end": 419,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 6456,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6511,
											"end": 6517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6511,
											"end": 6519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4648,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3251,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3251,
											"end": 3272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3251,
											"end": 3272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3251,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4741,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 4725,
											"end": 4739,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4725,
											"end": 4741,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4725,
											"end": 4741,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 4725,
											"end": 4741,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3293,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3716,
											"end": 3999,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 3806,
											"end": 3821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3806,
											"end": 3823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 3806,
											"end": 3823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3833,
											"end": 3855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 3833,
											"end": 3857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3833,
											"end": 3857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3867,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3882,
											"end": 3890,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 3867,
											"end": 3881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 3867,
											"end": 3891,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3867,
											"end": 3891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3867,
											"end": 3891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3902,
											"end": 3908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3902,
											"end": 3910,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3910,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3902,
											"end": 3910,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3935,
											"modifierDepth": 1,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3926,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3960,
											"end": 3973,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3945,
											"end": 3957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 3995,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3983,
											"end": 3987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4029,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4005,
											"end": 4029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4029,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4029,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4054,
											"end": 4067,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4039,
											"end": 4067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4067,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4077,
											"end": 4102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4161,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4141,
											"end": 4161,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4161,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4161,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4171,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4171,
											"end": 4203,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4171,
											"end": 4203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4171,
											"end": 4203,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4171,
											"end": 4203,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4245,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4213,
											"end": 4245,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4245,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4245,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6951,
											"end": 7001,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6951,
											"end": 7001,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6939,
											"end": 6941,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 4252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 7295,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7381,
											"end": 7393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7381,
											"end": 7409,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7409,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7425,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7466,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7425,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6AB2E127D7FDF53B8F304E59D3AAB5BFE97979F52A85479691A6FAB27A28A6B2"
										},
										{
											"begin": 7425,
											"end": 7466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 361,
											"end": 379,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7425,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 242,
											"end": 419,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4361,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3251,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3251,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2316,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4476,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4460,
											"end": 4474,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4460,
											"end": 4476,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4476,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4460,
											"end": 4476,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4502,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 4486,
											"end": 4500,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4486,
											"end": 4502,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 231,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 153,
											"end": 171,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 153,
											"end": 171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14,
											"end": 237,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 231,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 153,
											"end": 171,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 153,
											"end": 171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14,
											"end": 237,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 198,
											"end": 230,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 198,
											"end": 230,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 198,
											"end": 230,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 180,
											"end": 231,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 180,
											"end": 231,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 168,
											"end": 170,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 153,
											"end": 171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 14,
											"end": 237,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8167,
											"end": 8634,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 8167,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8216,
											"end": 8226,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8226,
											"name": "PUSH",
											"source": 9,
											"value": "1249C58B"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 8216,
											"end": 8228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 8216,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8212,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A0"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 8212,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8609,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 8609,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8609,
											"end": 8617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 8212,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8347,
											"end": 8355,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 8347,
											"end": 8355,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 8335,
											"end": 8355,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 8335,
											"end": 8355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8355,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 8335,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8377,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8494,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9104,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9079,
											"end": 9104,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9079,
											"end": 9104,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9120,
											"end": 9138,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9120,
											"end": 9138,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9120,
											"end": 9138,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9113,
											"end": 9147,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9113,
											"end": 9147,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9113,
											"end": 9147,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8494,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "PUSH",
											"source": 9,
											"value": "D6EDDD1118D71820909C1197AA966DBC15ED6F508554252169CC3D5CCAC756CA"
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8556,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8229,
											"end": 8567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8167,
											"end": 8634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3326,
											"end": 3710,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3326,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3526,
											"end": 3535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3535,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3526,
											"end": 3546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 3522,
											"end": 3610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3599,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3610,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 3522,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3684,
											"end": 3703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3703,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11560,
											"end": 11796,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 11560,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11650,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 11667,
											"end": 11669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11671,
											"end": 11677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11650,
											"end": 11666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 11650,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11650,
											"end": 11678,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 11650,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 11645,
											"end": 11790,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11694,
											"end": 11713,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "D0E30DB0"
										},
										{
											"begin": 11722,
											"end": 11728,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11694,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11753,
											"end": 11757,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11753,
											"end": 11757,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9332,
											"end": 9383,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9392,
											"end": 9426,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9392,
											"end": 9426,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9392,
											"end": 9426,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11753,
											"end": 11757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11753,
											"end": 11757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11753,
											"end": 11757,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11753,
											"end": 11757,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11746,
											"end": 11767,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 11746,
											"end": 11767,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 11746,
											"end": 11779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11790,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 11645,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11560,
											"end": 11796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11560,
											"end": 11796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11560,
											"end": 11796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3999,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3716,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3716,
											"end": 3999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 11444,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 8792,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8882,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 8931,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10017,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9997,
											"end": 10018,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10054,
											"end": 10056,
											"name": "PUSH",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 10034,
											"end": 10052,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10034,
											"end": 10052,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10034,
											"end": 10052,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10027,
											"end": 10057,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20BAB1BA34B7B7103430B9B713BA103132B3BAB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10091,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10073,
											"end": 10091,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10073,
											"end": 10091,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10066,
											"end": 10116,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 9813,
											"end": 10157,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 8900,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8975,
											"end": 8983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8975,
											"end": 8991,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8975,
											"end": 8991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8975,
											"end": 8991,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 8991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10364,
											"end": 10366,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10346,
											"end": 10367,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10346,
											"end": 10367,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10346,
											"end": 10367,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10376,
											"end": 10406,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10442,
											"end": 10476,
											"name": "PUSH",
											"source": 17,
											"value": "41756374696F6E2068617320616C7265616479206265656E20736574746C6564"
										},
										{
											"begin": 10422,
											"end": 10440,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10422,
											"end": 10440,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10422,
											"end": 10440,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10415,
											"end": 10477,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 10162,
											"end": 10518,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8966,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9073,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9081,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9065,
											"end": 9081,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9081,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9061,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9081,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9081,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10725,
											"end": 10727,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10707,
											"end": 10728,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10764,
											"end": 10766,
											"name": "PUSH",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10737,
											"end": 10767,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10803,
											"end": 10829,
											"name": "PUSH",
											"source": 17,
											"value": "41756374696F6E206861736E277420636F6D706C657465640000000000000000"
										},
										{
											"begin": 10783,
											"end": 10801,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10783,
											"end": 10801,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10783,
											"end": 10801,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 10830,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10847,
											"end": 10865,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10847,
											"end": 10865,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 10523,
											"end": 10871,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9136,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 9121,
											"end": 9143,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9143,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9121,
											"end": 9143,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9121,
											"end": 9143,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9143,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9158,
											"end": 9173,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9158,
											"end": 9173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9158,
											"end": 9173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9158,
											"end": 9173,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9158,
											"end": 9187,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 9154,
											"end": 9339,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "852CD8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9213,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 9203,
											"end": 9213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 361,
											"end": 379,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 361,
											"end": 379,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 242,
											"end": 419,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 9154,
											"end": 9339,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9339,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 9154,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9266,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9295,
											"end": 9310,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9295,
											"end": 9310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9295,
											"end": 9310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9295,
											"end": 9310,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9312,
											"end": 9327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9312,
											"end": 9327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9288,
											"end": 9292,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11124,
											"end": 11158,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11194,
											"end": 11209,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11194,
											"end": 11209,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11194,
											"end": 11209,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11167,
											"end": 11210,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11219,
											"end": 11253,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11219,
											"end": 11253,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11219,
											"end": 11253,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11219,
											"end": 11253,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9261,
											"end": 9266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9266,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11077,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 11059,
											"end": 11077,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9339,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 9154,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9368,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9353,
											"end": 9368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9372,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9349,
											"end": 11357,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9439,
											"end": 9464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9475,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9482,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 9496,
											"end": 9504,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9496,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9496,
											"end": 9511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9496,
											"end": 9511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9529,
											"end": 9543,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9529,
											"end": 9543,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9519,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 9514,
											"end": 9544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9482,
											"end": 9488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 9482,
											"end": 9545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9482,
											"end": 9545,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 9482,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9547,
											"end": 9552,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 9475,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 9475,
											"end": 9553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9475,
											"end": 9553,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9475,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9439,
											"end": 9554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9439,
											"end": 9554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9665,
											"end": 9682,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9647,
											"end": 9655,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9647,
											"end": 9662,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9647,
											"end": 9662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9647,
											"end": 9662,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9647,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9647,
											"end": 9682,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9647,
											"end": 9682,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9647,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 9647,
											"end": 9682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9647,
											"end": 9682,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9647,
											"end": 9682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9622,
											"end": 9682,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9622,
											"end": 9682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9754,
											"end": 9782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 9800,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 9814,
											"end": 9828,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9838,
											"end": 9852,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 9838,
											"end": 9852,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 9800,
											"end": 9854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9793,
											"end": 9862,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 9793,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9754,
											"end": 9863,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9932,
											"end": 9964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9967,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 9754,
											"end": 9863,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 9981,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 9967,
											"end": 10004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 10004,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 9967,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10019,
											"end": 10038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10046,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24D19AB1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9932,
											"end": 10004,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9932,
											"end": 10004,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10019,
											"end": 10038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10019,
											"end": 10038,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10041,
											"end": 10046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10046,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10062,
											"name": "PUSH",
											"source": 9,
											"value": "49A33562"
										},
										{
											"begin": 10041,
											"end": 10062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 361,
											"end": 379,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 361,
											"end": 379,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 10041,
											"end": 10079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 10041,
											"end": 10079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10088,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10088,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10088,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10095,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10019,
											"end": 10095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10019,
											"end": 10095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10163,
											"end": 10194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10222,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 10197,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10163,
											"end": 10223,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10163,
											"end": 10223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10237,
											"end": 10265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10282,
											"end": 10293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 10268,
											"end": 10294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10237,
											"end": 10294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10237,
											"end": 10294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10367,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 10396,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 10396,
											"end": 10403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10396,
											"end": 10403,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 10396,
											"end": 10403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10405,
											"end": 10422,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10367,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 10367,
											"end": 10423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10367,
											"end": 10423,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 10367,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10554,
											"end": 11158,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 10554,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10578,
											"end": 10589,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10574,
											"end": 10575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10574,
											"end": 10589,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10554,
											"end": 11158,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10554,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 10554,
											"end": 11158,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10614,
											"end": 10653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10678,
											"end": 10693,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10678,
											"end": 10693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24D19AB1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "PUSH",
											"source": 9,
											"value": "49A33562"
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 388,
											"end": 413,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 361,
											"end": 379,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 361,
											"end": 379,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 242,
											"end": 419,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 10656,
											"end": 10694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 10656,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10703,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10656,
											"end": 10703,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10703,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10704,
											"end": 10705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10656,
											"end": 10706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 10706,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10614,
											"end": 10706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10614,
											"end": 10706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10744,
											"end": 10751,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10744,
											"end": 10759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10744,
											"end": 10759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10744,
											"end": 10759,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10738,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10739,
											"end": 10740,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10724,
											"end": 10741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10724,
											"end": 10759,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10724,
											"end": 10759,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10794,
											"end": 10801,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10794,
											"end": 10805,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10794,
											"end": 10805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10794,
											"end": 10805,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10788,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10789,
											"end": 10790,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10777,
											"end": 10791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10805,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10905,
											"end": 10924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10935,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10942,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 10956,
											"end": 10976,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 10993,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 10997,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10986,
											"end": 10997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 10997,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10942,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 10942,
											"end": 10999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10935,
											"end": 11007,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10935,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10905,
											"end": 11008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10905,
											"end": 11008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11085,
											"end": 11143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 11114,
											"end": 11121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11114,
											"end": 11129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11114,
											"end": 11129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11114,
											"end": 11129,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11131,
											"end": 11142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11085,
											"end": 11113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 11085,
											"end": 11143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11085,
											"end": 11143,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 11085,
											"end": 11143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10591,
											"end": 10594,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10591,
											"end": 10594,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10554,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 10554,
											"end": 11158,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10554,
											"end": 11158,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 10554,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DEC86DF1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11256,
											"name": "PUSH",
											"source": 9,
											"value": "DEC86DF1"
										},
										{
											"begin": 11235,
											"end": 11256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11265,
											"end": 11289,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11265,
											"end": 11289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11292,
											"end": 11306,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11292,
											"end": 11306,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11319,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11265,
											"end": 11289,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11265,
											"end": 11289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 11235,
											"end": 11346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 11235,
											"end": 11346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 11357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 11357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 11357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 11357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 11357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 11357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 11357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 11357,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9349,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11402,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11402,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11404,
											"end": 11419,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11404,
											"end": 11419,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11404,
											"end": 11419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11404,
											"end": 11419,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11421,
											"end": 11436,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11421,
											"end": 11436,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11421,
											"end": 11436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11421,
											"end": 11436,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9332,
											"end": 9383,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9332,
											"end": 9383,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9392,
											"end": 9426,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "PUSH",
											"source": 9,
											"value": "C9F72B276A388619C6D185D146697036241880C36654B1A3FFDAD07C24038D99"
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11437,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8827,
											"end": 11444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 11444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1899,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 1899,
											"end": 1926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2540,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2540,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2610,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 2610,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11943,
											"end": 12130,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 11943,
											"end": 12130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12014,
											"end": 12018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12014,
											"end": 12018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12014,
											"end": 12018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12049,
											"end": 12056,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12056,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12077,
											"end": 12083,
											"name": "PUSH",
											"source": 9,
											"value": "7530"
										},
										{
											"begin": 12077,
											"end": 12083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12065,
											"end": 12070,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12065,
											"end": 12070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 12049,
											"end": 12099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 12049,
											"end": 12099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12030,
											"end": 12099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12099,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11943,
											"end": 12130,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11943,
											"end": 12130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 12130,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 12130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 12130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 12130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 12130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 3136,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 2209,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2894,
											"end": 2904,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2894,
											"end": 2904,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2894,
											"end": 2904,
											"name": "SDIV",
											"source": 16
										},
										{
											"begin": 2891,
											"end": 2908,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2891,
											"end": 2908,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2877,
											"end": 2909,
											"name": "OR",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2914,
											"end": 2927,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2914,
											"end": 2927,
											"name": "LT",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2929,
											"end": 3003,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2929,
											"end": 3003,
											"name": "SGT",
											"source": 16
										},
										{
											"begin": 2911,
											"end": 3004,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 2873,
											"end": 3005,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2863,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 2863,
											"end": 3043,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3029,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2863,
											"end": 3043,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 2863,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3108,
											"end": 3127,
											"name": "PUSH",
											"source": 16,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3100,
											"end": 3128,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3100,
											"end": 3128,
											"name": "SDIV",
											"source": 16
										},
										{
											"begin": 3100,
											"end": 3128,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 3136,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2209,
											"end": 3136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3138,
											"end": 3579,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 3138,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3314,
											"end": 3333,
											"name": "PUSH",
											"source": 16,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3307,
											"end": 3334,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3307,
											"end": 3334,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3307,
											"end": 3334,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3307,
											"end": 3334,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3449,
											"end": 3477,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3449,
											"end": 3477,
											"name": "SDIV",
											"source": 16
										},
										{
											"begin": 3446,
											"end": 3481,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3446,
											"end": 3481,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3427,
											"end": 3444,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3423,
											"end": 3482,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3413,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 3413,
											"end": 3520,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3508,
											"end": 3509,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3506,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3498,
											"end": 3510,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3413,
											"end": 3520,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 3413,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3561,
											"end": 3571,
											"name": "SDIV",
											"source": 16
										},
										{
											"begin": 3561,
											"end": 3571,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3138,
											"end": 3579,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3138,
											"end": 3579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2840,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 2657,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 424,
											"end": 580,
											"name": "tag",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 424,
											"end": 580,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 490,
											"end": 510,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 490,
											"end": 510,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 555,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 539,
											"end": 555,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 529,
											"end": 556,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 529,
											"end": 556,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 519,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 570,
											"end": 571,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 560,
											"end": 572,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 519,
											"end": 574,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 424,
											"end": 580,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 424,
											"end": 580,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 424,
											"end": 580,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 424,
											"end": 580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 585,
											"end": 767,
											"name": "tag",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 585,
											"end": 767,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 642,
											"end": 648,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 697,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 683,
											"end": 692,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 674,
											"end": 681,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 670,
											"end": 693,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 666,
											"end": 698,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 663,
											"end": 715,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 663,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 663,
											"end": 715,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 711,
											"end": 712,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 709,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 701,
											"end": 713,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 663,
											"end": 715,
											"name": "tag",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 663,
											"end": 715,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 734,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 751,
											"end": 760,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 734,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 734,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 734,
											"end": 761,
											"name": "tag",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 734,
											"end": 761,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 724,
											"end": 761,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 585,
											"end": 767,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 585,
											"end": 767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1402,
											"end": 1582,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 1402,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1461,
											"end": 1467,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1502,
											"end": 1511,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1489,
											"end": 1512,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1485,
											"end": 1517,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1482,
											"end": 1534,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1482,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 1482,
											"end": 1534,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1528,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1482,
											"end": 1534,
											"name": "tag",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 1482,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1576,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1553,
											"end": 1576,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1402,
											"end": 1582,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1402,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "tag",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2298,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2267,
											"end": 2298,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2257,
											"end": 2299,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2257,
											"end": 2299,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2247,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2247,
											"end": 2317,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2311,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2303,
											"end": 2315,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "tag",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2546,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2556,
											"end": 2562,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2570,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2578,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2586,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "PUSH",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 2621,
											"end": 2630,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "DUP14",
											"source": 17
										},
										{
											"begin": 2608,
											"end": 2631,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2604,
											"end": 2637,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 2676,
											"end": 2699,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2708,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 2746,
											"end": 2751,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2708,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 2708,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2708,
											"end": 2752,
											"name": "tag",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 2708,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 2776,
											"name": "SWAP10",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2828,
											"end": 2830,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2813,
											"end": 2831,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 2813,
											"end": 2831,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2800,
											"end": 2832,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2841,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 2800,
											"end": 2832,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2841,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 2841,
											"end": 2887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2841,
											"end": 2887,
											"name": "tag",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 2841,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2906,
											"end": 2913,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2937,
											"end": 2969,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2978,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 2937,
											"end": 2969,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2978,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 2978,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2978,
											"end": 3024,
											"name": "tag",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 2978,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3043,
											"end": 3050,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 3115,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "tag",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3234,
											"end": 3237,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 3219,
											"end": 3238,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3219,
											"end": 3238,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 3271,
											"end": 3290,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3271,
											"end": 3290,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3258,
											"end": 3291,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3258,
											"end": 3291,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3310,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 3342,
											"end": 3345,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 3327,
											"end": 3346,
											"name": "DUP13",
											"source": 17
										},
										{
											"begin": 3327,
											"end": 3346,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3310,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 3310,
											"end": 3347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3310,
											"end": 3347,
											"name": "tag",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 3310,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3300,
											"end": 3347,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3300,
											"end": 3347,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3379,
											"end": 3398,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3366,
											"end": 3399,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3356,
											"end": 3399,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3356,
											"end": 3399,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3446,
											"end": 3449,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3431,
											"end": 3450,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3418,
											"end": 3451,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3501,
											"name": "PUSH",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 3487,
											"end": 3496,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3483,
											"end": 3502,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3470,
											"end": 3503,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3460,
											"end": 3503,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3460,
											"end": 3503,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP12",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP11",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2328,
											"end": 3509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "tag",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3762,
											"end": 3768,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3817,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3803,
											"end": 3812,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3794,
											"end": 3801,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3790,
											"end": 3813,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3786,
											"end": 3818,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3783,
											"end": 3835,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3783,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 3783,
											"end": 3835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 3832,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3783,
											"end": 3835,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 3783,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3857,
											"end": 3880,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3889,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 3927,
											"end": 3932,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3889,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 3889,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5215,
											"end": 5342,
											"name": "tag",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 5215,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5276,
											"end": 5286,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 5271,
											"end": 5274,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5267,
											"end": 5287,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5264,
											"end": 5265,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5307,
											"end": 5311,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5297,
											"end": 5312,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5331,
											"end": 5335,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5328,
											"end": 5329,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5515,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 5347,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5468,
											"end": 5483,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5468,
											"end": 5483,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5468,
											"end": 5483,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 5462,
											"end": 5484,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5462,
											"end": 5484,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 5448,
											"end": 5485,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 5438,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 5438,
											"end": 5509,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 5489,
											"end": 5507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5520,
											"end": 5737,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 5520,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5560,
											"end": 5561,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5587,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5576,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 5576,
											"end": 5708,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5630,
											"end": 5640,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 5625,
											"end": 5628,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5621,
											"end": 5641,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5618,
											"end": 5619,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5642,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5665,
											"end": 5669,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 5662,
											"end": 5663,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5655,
											"end": 5670,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5693,
											"end": 5697,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5690,
											"end": 5691,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5576,
											"end": 5708,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 5576,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5520,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5742,
											"end": 5867,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 5742,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5807,
											"end": 5816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5807,
											"end": 5816,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5807,
											"end": 5816,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5838,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5838,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5838,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5825,
											"end": 5861,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5825,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 5825,
											"end": 5861,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5841,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 5841,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 5841,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6305,
											"end": 6433,
											"name": "tag",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 6305,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6372,
											"end": 6381,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6372,
											"end": 6381,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6372,
											"end": 6381,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6393,
											"end": 6404,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6393,
											"end": 6404,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6393,
											"end": 6404,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6390,
											"end": 6427,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6390,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 6390,
											"end": 6427,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6407,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 6407,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 6407,
											"end": 6425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7012,
											"end": 7196,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 7012,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7137,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7123,
											"end": 7132,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7114,
											"end": 7121,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7110,
											"end": 7133,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7106,
											"end": 7138,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7103,
											"end": 7155,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7103,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 7103,
											"end": 7155,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7151,
											"end": 7152,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7141,
											"end": 7153,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7103,
											"end": 7155,
											"name": "tag",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 7103,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7012,
											"end": 7196,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7012,
											"end": 7196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7201,
											"end": 7380,
											"name": "tag",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 7201,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7236,
											"end": 7239,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 7260,
											"end": 7276,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7257,
											"end": 7280,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7254,
											"end": 7374,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7254,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 7254,
											"end": 7374,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7324,
											"end": 7325,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7321,
											"end": 7322,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7319,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7303,
											"end": 7326,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7361,
											"end": 7362,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7355,
											"end": 7363,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7350,
											"end": 7353,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 7346,
											"end": 7364,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 7254,
											"end": 7374,
											"name": "tag",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 7254,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7201,
											"end": 7380,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7201,
											"end": 7380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7385,
											"end": 7512,
											"name": "tag",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 7385,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7446,
											"end": 7456,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 7441,
											"end": 7444,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 7434,
											"end": 7435,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7427,
											"end": 7458,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7467,
											"end": 7482,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7501,
											"end": 7505,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7491,
											"end": 7506,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7517,
											"end": 7740,
											"name": "tag",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 7517,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7603,
											"end": 7605,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7595,
											"end": 7601,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7591,
											"end": 7606,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7672,
											"end": 7678,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7660,
											"end": 7670,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7657,
											"end": 7679,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7624,
											"end": 7634,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7621,
											"end": 7655,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7618,
											"end": 7680,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 7615,
											"end": 7703,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7615,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 7615,
											"end": 7703,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7683,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 7683,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 7683,
											"end": 7701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7683,
											"end": 7701,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 7683,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7719,
											"end": 7721,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7712,
											"end": 7734,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7517,
											"end": 7740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7745,
											"end": 7970,
											"name": "tag",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 7745,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7831,
											"end": 7835,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 7823,
											"end": 7829,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7819,
											"end": 7836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7902,
											"end": 7908,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7890,
											"end": 7900,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7887,
											"end": 7909,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 7866,
											"end": 7884,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7854,
											"end": 7864,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7851,
											"end": 7885,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7848,
											"end": 7910,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 7845,
											"end": 7933,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7845,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 7845,
											"end": 7933,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 7913,
											"end": 7931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7975,
											"end": 8224,
											"name": "tag",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 7975,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8085,
											"end": 8087,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 8066,
											"end": 8079,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8066,
											"end": 8079,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8062,
											"end": 8089,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8050,
											"end": 8090,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8050,
											"end": 8090,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8141,
											"end": 8163,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8141,
											"end": 8163,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8141,
											"end": 8163,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 8102,
											"end": 8164,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 8099,
											"end": 8187,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8099,
											"end": 8187,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 8099,
											"end": 8187,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 8167,
											"end": 8185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8203,
											"end": 8205,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8196,
											"end": 8218,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7975,
											"end": 8224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8900,
											"name": "tag",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 8229,
											"end": 8900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8268,
											"end": 8271,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8314,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8292,
											"end": 8308,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 8289,
											"end": 8315,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 8286,
											"end": 8325,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8286,
											"end": 8325,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 8286,
											"end": 8325,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8900,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8286,
											"end": 8325,
											"name": "tag",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 8286,
											"end": 8325,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8352,
											"end": 8354,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8346,
											"end": 8355,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8417,
											"end": 8433,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 8413,
											"end": 8438,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8413,
											"end": 8438,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8346,
											"end": 8355,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 8468,
											"end": 8472,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8462,
											"end": 8473,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8492,
											"end": 8508,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 8527,
											"end": 8545,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8598,
											"end": 8600,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8591,
											"end": 8595,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8583,
											"end": 8589,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8579,
											"end": 8596,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8576,
											"end": 8601,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8571,
											"end": 8573,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8560,
											"end": 8574,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8557,
											"end": 8602,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 8554,
											"end": 8612,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8554,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 8554,
											"end": 8612,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8900,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8554,
											"end": 8612,
											"name": "tag",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 8554,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8642,
											"end": 8648,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8636,
											"end": 8640,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8632,
											"end": 8649,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8621,
											"end": 8649,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8621,
											"end": 8649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8678,
											"end": 8681,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8672,
											"end": 8682,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8705,
											"end": 8707,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8697,
											"end": 8703,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8694,
											"end": 8708,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8691,
											"end": 8718,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8691,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 8691,
											"end": 8718,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8711,
											"end": 8716,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8711,
											"end": 8716,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8711,
											"end": 8716,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8711,
											"end": 8716,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8711,
											"end": 8716,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8711,
											"end": 8716,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8900,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8691,
											"end": 8718,
											"name": "tag",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 8691,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8795,
											"end": 8797,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8776,
											"end": 8792,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 8770,
											"end": 8774,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8766,
											"end": 8793,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8762,
											"end": 8798,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8755,
											"end": 8759,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8746,
											"end": 8752,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8741,
											"end": 8744,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8737,
											"end": 8753,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8730,
											"end": 8799,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8727,
											"end": 8809,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8727,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 8727,
											"end": 8809,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8802,
											"end": 8807,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8802,
											"end": 8807,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8802,
											"end": 8807,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8802,
											"end": 8807,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8802,
											"end": 8807,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8802,
											"end": 8807,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8900,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8727,
											"end": 8809,
											"name": "tag",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 8727,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8818,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 8869,
											"end": 8873,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8860,
											"end": 8866,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8852,
											"end": 8858,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8848,
											"end": 8867,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8844,
											"end": 8874,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8818,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 8818,
											"end": 8875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8818,
											"end": 8875,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 8818,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8894,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8891,
											"end": 8894,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8900,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8229,
											"end": 8900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9437,
											"end": 9601,
											"name": "tag",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 9437,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9513,
											"end": 9526,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9513,
											"end": 9526,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9562,
											"end": 9575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9562,
											"end": 9575,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9555,
											"end": 9576,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9545,
											"end": 9577,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9545,
											"end": 9577,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 9535,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 9535,
											"end": 9595,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9591,
											"end": 9592,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9588,
											"end": 9589,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9581,
											"end": 9593,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9606,
											"end": 9808,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 9606,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9673,
											"end": 9679,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9728,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9714,
											"end": 9723,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9705,
											"end": 9712,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9701,
											"end": 9724,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9697,
											"end": 9729,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9694,
											"end": 9746,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9694,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 9694,
											"end": 9746,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9742,
											"end": 9743,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9739,
											"end": 9740,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9732,
											"end": 9744,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9694,
											"end": 9746,
											"name": "tag",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 9694,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9765,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 9792,
											"end": 9801,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9765,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 9765,
											"end": 9802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11264,
											"end": 11464,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 11264,
											"end": 11464,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11330,
											"end": 11339,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11330,
											"end": 11339,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11330,
											"end": 11339,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11303,
											"end": 11307,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11358,
											"end": 11367,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11358,
											"end": 11367,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11386,
											"end": 11396,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11386,
											"end": 11396,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11398,
											"end": 11410,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11398,
											"end": 11410,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11398,
											"end": 11410,
											"name": "SGT",
											"source": 17
										},
										{
											"begin": 11382,
											"end": 11411,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11413,
											"end": 11434,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11413,
											"end": 11434,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11379,
											"end": 11435,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 11376,
											"end": 11458,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11376,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 11376,
											"end": 11458,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 11438,
											"end": 11456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "tag",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11376,
											"end": 11458,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11264,
											"end": 11464,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11264,
											"end": 11464,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11264,
											"end": 11464,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11264,
											"end": 11464,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11264,
											"end": 11464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11469,
											"end": 11717,
											"name": "tag",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 11469,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11536,
											"end": 11538,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 11530,
											"end": 11539,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11578,
											"end": 11582,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 11566,
											"end": 11583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11566,
											"end": 11583,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11613,
											"end": 11631,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11598,
											"end": 11632,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11598,
											"end": 11632,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11634,
											"end": 11656,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11634,
											"end": 11656,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11634,
											"end": 11656,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 11595,
											"end": 11657,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 11592,
											"end": 11680,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11592,
											"end": 11680,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 11592,
											"end": 11680,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 11660,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "tag",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11696,
											"end": 11698,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 11689,
											"end": 11711,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11469,
											"end": 11717,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11469,
											"end": 11717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11722,
											"end": 11972,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 11722,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11807,
											"end": 11808,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11817,
											"end": 11930,
											"name": "tag",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 11817,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11831,
											"end": 11837,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11828,
											"end": 11829,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11825,
											"end": 11838,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 11817,
											"end": 11930,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11817,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 11817,
											"end": 11930,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11907,
											"end": 11918,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11907,
											"end": 11918,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11907,
											"end": 11918,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 11919,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11888,
											"end": 11899,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11888,
											"end": 11899,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11888,
											"end": 11899,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11881,
											"end": 11920,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11846,
											"end": 11856,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11817,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 11817,
											"end": 11930,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11817,
											"end": 11930,
											"name": "tag",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 11817,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11964,
											"end": 11965,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11946,
											"end": 11962,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11946,
											"end": 11962,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11939,
											"end": 11966,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11722,
											"end": 11972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11977,
											"end": 12513,
											"name": "tag",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 11977,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12031,
											"end": 12036,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12084,
											"end": 12087,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12077,
											"end": 12081,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 12069,
											"end": 12075,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12065,
											"end": 12082,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12061,
											"end": 12088,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 12051,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 12051,
											"end": 12106,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12102,
											"end": 12103,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12099,
											"end": 12100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12092,
											"end": 12104,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12051,
											"end": 12106,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 12051,
											"end": 12106,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12131,
											"end": 12137,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12125,
											"end": 12138,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12157,
											"end": 12175,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12153,
											"end": 12155,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12150,
											"end": 12176,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12147,
											"end": 12199,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12147,
											"end": 12199,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 12147,
											"end": 12199,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12179,
											"end": 12197,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 12179,
											"end": 12197,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 12179,
											"end": 12197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12179,
											"end": 12197,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 12179,
											"end": 12197,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12228,
											"end": 12230,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12222,
											"end": 12231,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12240,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 12295,
											"end": 12297,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 12276,
											"end": 12289,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12276,
											"end": 12289,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12272,
											"end": 12299,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12301,
											"end": 12305,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12268,
											"end": 12306,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12222,
											"end": 12231,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12240,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 12240,
											"end": 12307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12240,
											"end": 12307,
											"name": "tag",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 12240,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12331,
											"end": 12333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12323,
											"end": 12329,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12316,
											"end": 12334,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12377,
											"end": 12380,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12370,
											"end": 12374,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12365,
											"end": 12367,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12357,
											"end": 12363,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12353,
											"end": 12368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12349,
											"end": 12375,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12346,
											"end": 12381,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12343,
											"end": 12398,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12343,
											"end": 12398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 12343,
											"end": 12398,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12394,
											"end": 12395,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12391,
											"end": 12392,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12384,
											"end": 12396,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12343,
											"end": 12398,
											"name": "tag",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 12343,
											"end": 12398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12407,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 12480,
											"end": 12482,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12473,
											"end": 12477,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12465,
											"end": 12471,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12461,
											"end": 12478,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12454,
											"end": 12458,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12446,
											"end": 12452,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12442,
											"end": 12459,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12407,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 12407,
											"end": 12483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12407,
											"end": 12483,
											"name": "tag",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 12407,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12501,
											"end": 12507,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 11977,
											"end": 12513,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11977,
											"end": 12513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12518,
											"end": 12672,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 12518,
											"end": 12672,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12604,
											"end": 12617,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12604,
											"end": 12617,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12646,
											"end": 12647,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 12636,
											"end": 12648,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12636,
											"end": 12648,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 12626,
											"end": 12666,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 12626,
											"end": 12666,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12662,
											"end": 12663,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12659,
											"end": 12660,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12652,
											"end": 12664,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12677,
											"end": 12828,
											"name": "tag",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 12677,
											"end": 12828,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12756,
											"end": 12769,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12756,
											"end": 12769,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12778,
											"end": 12822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 12756,
											"end": 12769,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12778,
											"end": 12822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 12778,
											"end": 12822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12833,
											"end": 13927,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 12833,
											"end": 13927,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12908,
											"end": 12913,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12961,
											"end": 12964,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12954,
											"end": 12958,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 12946,
											"end": 12952,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12938,
											"end": 12965,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 12928,
											"end": 12983,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 12928,
											"end": 12983,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12979,
											"end": 12980,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12976,
											"end": 12977,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12969,
											"end": 12981,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12928,
											"end": 12983,
											"name": "tag",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 12928,
											"end": 12983,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13008,
											"end": 13014,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13002,
											"end": 13015,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13034,
											"end": 13038,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13053,
											"end": 13055,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13050,
											"end": 13076,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13047,
											"end": 13099,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13047,
											"end": 13099,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 13047,
											"end": 13099,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 13079,
											"end": 13097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "tag",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13118,
											"end": 13120,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 13149,
											"end": 13151,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13143,
											"end": 13152,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13161,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 13205,
											"end": 13207,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13200,
											"end": 13202,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13197,
											"end": 13198,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 13193,
											"end": 13203,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 13189,
											"end": 13208,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13181,
											"end": 13187,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13161,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 13161,
											"end": 13209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13161,
											"end": 13209,
											"name": "tag",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 13161,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13244,
											"end": 13262,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13244,
											"end": 13262,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13244,
											"end": 13262,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13336,
											"end": 13337,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 13332,
											"end": 13342,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13332,
											"end": 13342,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13332,
											"end": 13342,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13332,
											"end": 13342,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 13320,
											"end": 13343,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13320,
											"end": 13343,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13316,
											"end": 13348,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13316,
											"end": 13348,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13316,
											"end": 13348,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13278,
											"end": 13293,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13278,
											"end": 13293,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13278,
											"end": 13293,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13360,
											"end": 13375,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 13360,
											"end": 13375,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13360,
											"end": 13375,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13357,
											"end": 13392,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13357,
											"end": 13392,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 13357,
											"end": 13392,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13388,
											"end": 13389,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13385,
											"end": 13386,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13378,
											"end": 13390,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13357,
											"end": 13392,
											"name": "tag",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 13357,
											"end": 13392,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13424,
											"end": 13426,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13416,
											"end": 13422,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 13412,
											"end": 13427,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13436,
											"end": 13897,
											"name": "tag",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 13436,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13452,
											"end": 13458,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13447,
											"end": 13450,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13444,
											"end": 13459,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 13436,
											"end": 13897,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13436,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 13436,
											"end": 13897,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13528,
											"end": 13530,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13522,
											"end": 13525,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 13513,
											"end": 13526,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13509,
											"end": 13531,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 13506,
											"end": 13548,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13506,
											"end": 13548,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 13506,
											"end": 13548,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13544,
											"end": 13545,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13541,
											"end": 13542,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13534,
											"end": 13546,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13506,
											"end": 13548,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 13506,
											"end": 13548,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13583,
											"end": 13585,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13577,
											"end": 13586,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13599,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 13624,
											"end": 13632,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13599,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 13599,
											"end": 13633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13599,
											"end": 13633,
											"name": "tag",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 13599,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13665,
											"end": 13668,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13659,
											"end": 13669,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13682,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 13720,
											"end": 13725,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13682,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 13682,
											"end": 13726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13682,
											"end": 13726,
											"name": "tag",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 13682,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13739,
											"end": 13762,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13739,
											"end": 13762,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13807,
											"end": 13819,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13807,
											"end": 13819,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13807,
											"end": 13819,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13801,
											"end": 13820,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13782,
											"end": 13799,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13782,
											"end": 13799,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13782,
											"end": 13799,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13775,
											"end": 13821,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13834,
											"end": 13855,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13834,
											"end": 13855,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13875,
											"end": 13887,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13875,
											"end": 13887,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13875,
											"end": 13887,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13875,
											"end": 13887,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13469,
											"end": 13481,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13469,
											"end": 13481,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13436,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 13436,
											"end": 13897,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13436,
											"end": 13897,
											"name": "tag",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 13436,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13915,
											"end": 13921,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13915,
											"end": 13921,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 12833,
											"end": 13927,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12833,
											"end": 13927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13932,
											"end": 16018,
											"name": "tag",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 13932,
											"end": 16018,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14028,
											"end": 14034,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14081,
											"end": 14083,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14069,
											"end": 14078,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14060,
											"end": 14067,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14056,
											"end": 14079,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14052,
											"end": 14084,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 14049,
											"end": 14101,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14049,
											"end": 14101,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 14049,
											"end": 14101,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14097,
											"end": 14098,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14094,
											"end": 14095,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14087,
											"end": 14099,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14049,
											"end": 14101,
											"name": "tag",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 14049,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14130,
											"end": 14139,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14124,
											"end": 14140,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 14159,
											"end": 14177,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14200,
											"end": 14202,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14192,
											"end": 14198,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14189,
											"end": 14203,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 14186,
											"end": 14220,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14186,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 14186,
											"end": 14220,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14216,
											"end": 14217,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14213,
											"end": 14214,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14206,
											"end": 14218,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14186,
											"end": 14220,
											"name": "tag",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 14186,
											"end": 14220,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14261,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14261,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14261,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14261,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14295,
											"end": 14299,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 14277,
											"end": 14293,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14277,
											"end": 14293,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14277,
											"end": 14293,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14273,
											"end": 14300,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 14270,
											"end": 14317,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14270,
											"end": 14317,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 14270,
											"end": 14317,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14313,
											"end": 14314,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14310,
											"end": 14311,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14303,
											"end": 14315,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14270,
											"end": 14317,
											"name": "tag",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 14270,
											"end": 14317,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14346,
											"end": 14348,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14340,
											"end": 14349,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 14358,
											"end": 14390,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 14383,
											"end": 14389,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14358,
											"end": 14390,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 14358,
											"end": 14390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14358,
											"end": 14390,
											"name": "tag",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 14358,
											"end": 14390,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14420,
											"end": 14422,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14414,
											"end": 14423,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 14406,
											"end": 14412,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14399,
											"end": 14424,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14463,
											"end": 14465,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14459,
											"end": 14461,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14455,
											"end": 14466,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14449,
											"end": 14467,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 14492,
											"end": 14494,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14482,
											"end": 14490,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14479,
											"end": 14495,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 14476,
											"end": 14512,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14476,
											"end": 14512,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 14476,
											"end": 14512,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14508,
											"end": 14509,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14505,
											"end": 14506,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14498,
											"end": 14510,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14476,
											"end": 14512,
											"name": "tag",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 14476,
											"end": 14512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14531,
											"end": 14548,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14531,
											"end": 14548,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14582,
											"end": 14586,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 14564,
											"end": 14580,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14564,
											"end": 14580,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 14564,
											"end": 14580,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14560,
											"end": 14587,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 14557,
											"end": 14604,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14557,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 14557,
											"end": 14604,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14600,
											"end": 14601,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14597,
											"end": 14598,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14590,
											"end": 14602,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14557,
											"end": 14604,
											"name": "tag",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 14557,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14626,
											"end": 14643,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 14626,
											"end": 14643,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 14626,
											"end": 14643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14626,
											"end": 14643,
											"name": "tag",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 14626,
											"end": 14643,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14674,
											"end": 14676,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14668,
											"end": 14677,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 14702,
											"end": 14704,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14692,
											"end": 14700,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14689,
											"end": 14705,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 14686,
											"end": 14722,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14686,
											"end": 14722,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 14686,
											"end": 14722,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14718,
											"end": 14719,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14715,
											"end": 14716,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14708,
											"end": 14720,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14686,
											"end": 14722,
											"name": "tag",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 14686,
											"end": 14722,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14745,
											"end": 14801,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 14793,
											"end": 14800,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 14782,
											"end": 14790,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14778,
											"end": 14780,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14774,
											"end": 14791,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14745,
											"end": 14801,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 14745,
											"end": 14801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14745,
											"end": 14801,
											"name": "tag",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 14745,
											"end": 14801,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14738,
											"end": 14743,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14731,
											"end": 14802,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14731,
											"end": 14802,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14841,
											"end": 14843,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14839,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14833,
											"end": 14844,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14827,
											"end": 14845,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 14870,
											"end": 14872,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14860,
											"end": 14868,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14857,
											"end": 14873,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 14854,
											"end": 14890,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14854,
											"end": 14890,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 14854,
											"end": 14890,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14886,
											"end": 14887,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14876,
											"end": 14888,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14854,
											"end": 14890,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 14854,
											"end": 14890,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14922,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 14970,
											"end": 14977,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 14959,
											"end": 14967,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14955,
											"end": 14957,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14951,
											"end": 14968,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14922,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 14922,
											"end": 14978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14922,
											"end": 14978,
											"name": "tag",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 14922,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14917,
											"end": 14919,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14910,
											"end": 14915,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14906,
											"end": 14920,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14899,
											"end": 14979,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14899,
											"end": 14979,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15011,
											"end": 15060,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 15056,
											"end": 15058,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 15052,
											"end": 15054,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15048,
											"end": 15059,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15011,
											"end": 15060,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 15011,
											"end": 15060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15011,
											"end": 15060,
											"name": "tag",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 15011,
											"end": 15060,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15006,
											"end": 15008,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14999,
											"end": 15004,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14995,
											"end": 15009,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14988,
											"end": 15061,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15100,
											"end": 15102,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 15096,
											"end": 15098,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15092,
											"end": 15103,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 15129,
											"end": 15131,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15119,
											"end": 15127,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15116,
											"end": 15132,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 15113,
											"end": 15149,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15113,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 15113,
											"end": 15149,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15145,
											"end": 15146,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15142,
											"end": 15143,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15135,
											"end": 15147,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 15113,
											"end": 15149,
											"name": "tag",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 15113,
											"end": 15149,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15181,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 15229,
											"end": 15236,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 15218,
											"end": 15226,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15214,
											"end": 15216,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15210,
											"end": 15227,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15181,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 15181,
											"end": 15237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15181,
											"end": 15237,
											"name": "tag",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 15181,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15176,
											"end": 15178,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 15169,
											"end": 15174,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15165,
											"end": 15179,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15158,
											"end": 15238,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15158,
											"end": 15238,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15277,
											"end": 15280,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 15273,
											"end": 15275,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15269,
											"end": 15281,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15263,
											"end": 15282,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 15307,
											"end": 15309,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15297,
											"end": 15305,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15294,
											"end": 15310,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 15291,
											"end": 15327,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15291,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 15291,
											"end": 15327,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15323,
											"end": 15324,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15320,
											"end": 15321,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15313,
											"end": 15325,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 15291,
											"end": 15327,
											"name": "tag",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 15291,
											"end": 15327,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15360,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 15408,
											"end": 15415,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 15397,
											"end": 15405,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15393,
											"end": 15395,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15389,
											"end": 15406,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15360,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 15360,
											"end": 15416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15360,
											"end": 15416,
											"name": "tag",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 15360,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15354,
											"end": 15357,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 15347,
											"end": 15352,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15343,
											"end": 15358,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15336,
											"end": 15417,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15336,
											"end": 15417,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15456,
											"end": 15460,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 15452,
											"end": 15454,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15448,
											"end": 15461,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15442,
											"end": 15462,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 15487,
											"end": 15489,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15477,
											"end": 15485,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15474,
											"end": 15490,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 15471,
											"end": 15507,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15471,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 15471,
											"end": 15507,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15503,
											"end": 15504,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15500,
											"end": 15501,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15493,
											"end": 15505,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 15471,
											"end": 15507,
											"name": "tag",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 15471,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15541,
											"end": 15597,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 15589,
											"end": 15596,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 15578,
											"end": 15586,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15574,
											"end": 15576,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15570,
											"end": 15587,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15541,
											"end": 15597,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 15541,
											"end": 15597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15541,
											"end": 15597,
											"name": "tag",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 15541,
											"end": 15597,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15534,
											"end": 15538,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 15523,
											"end": 15539,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15523,
											"end": 15539,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15516,
											"end": 15598,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15626,
											"end": 15628,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15614,
											"end": 15629,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15614,
											"end": 15629,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15607,
											"end": 15637,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15676,
											"end": 15678,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 15668,
											"end": 15679,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15668,
											"end": 15679,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15680,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 15692,
											"end": 15708,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15692,
											"end": 15708,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15692,
											"end": 15708,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 15689,
											"end": 15725,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15689,
											"end": 15725,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 15689,
											"end": 15725,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15721,
											"end": 15722,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15711,
											"end": 15723,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 15689,
											"end": 15725,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 15689,
											"end": 15725,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15758,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 15827,
											"end": 15834,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 15816,
											"end": 15824,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15812,
											"end": 15814,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 15808,
											"end": 15825,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15758,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 15758,
											"end": 15835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15758,
											"end": 15835,
											"name": "tag",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 15758,
											"end": 15835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15753,
											"end": 15755,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 15745,
											"end": 15751,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15741,
											"end": 15756,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15734,
											"end": 15836,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15734,
											"end": 15836,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15869,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 15907,
											"end": 15909,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 15903,
											"end": 15905,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15899,
											"end": 15910,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15869,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 15869,
											"end": 15911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15869,
											"end": 15911,
											"name": "tag",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 15869,
											"end": 15911,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15864,
											"end": 15866,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 15856,
											"end": 15862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15852,
											"end": 15867,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15946,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 15981,
											"end": 15984,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 15977,
											"end": 15979,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15973,
											"end": 15985,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15946,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 15946,
											"end": 15986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15946,
											"end": 15986,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 15946,
											"end": 15986,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15940,
											"end": 15943,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 15928,
											"end": 15944,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15928,
											"end": 15944,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15921,
											"end": 15987,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15932,
											"end": 15938,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 13932,
											"end": 16018,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13932,
											"end": 16018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16023,
											"end": 16150,
											"name": "tag",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 16023,
											"end": 16150,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16084,
											"end": 16094,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 16079,
											"end": 16082,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 16075,
											"end": 16095,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 16072,
											"end": 16073,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16065,
											"end": 16096,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16115,
											"end": 16119,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 16112,
											"end": 16113,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 16105,
											"end": 16120,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16139,
											"end": 16143,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 16136,
											"end": 16137,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16129,
											"end": 16144,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 16155,
											"end": 17405,
											"name": "tag",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 16155,
											"end": 17405,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16451,
											"end": 16453,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 16463,
											"end": 16484,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 16463,
											"end": 16484,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16463,
											"end": 16484,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16533,
											"end": 16546,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16533,
											"end": 16546,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 16436,
											"end": 16454,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16436,
											"end": 16454,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16436,
											"end": 16454,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16555,
											"end": 16577,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16555,
											"end": 16577,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16555,
											"end": 16577,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16403,
											"end": 16407,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16403,
											"end": 16407,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16631,
											"end": 16635,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16631,
											"end": 16635,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16608,
											"end": 16611,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 16593,
											"end": 16612,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16593,
											"end": 16612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16593,
											"end": 16612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16658,
											"end": 16673,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16658,
											"end": 16673,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 16658,
											"end": 16673,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16403,
											"end": 16407,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16701,
											"end": 16896,
											"name": "tag",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 16701,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16715,
											"end": 16721,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16712,
											"end": 16713,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16709,
											"end": 16722,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 16701,
											"end": 16896,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 16701,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 16701,
											"end": 16896,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16780,
											"end": 16793,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16780,
											"end": 16793,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16776,
											"end": 16815,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 16764,
											"end": 16816,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16764,
											"end": 16816,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16836,
											"end": 16848,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16836,
											"end": 16848,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16836,
											"end": 16848,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16836,
											"end": 16848,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16871,
											"end": 16886,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16871,
											"end": 16886,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16871,
											"end": 16886,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16871,
											"end": 16886,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16812,
											"end": 16813,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 16730,
											"end": 16739,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16701,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 16701,
											"end": 16896,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16701,
											"end": 16896,
											"name": "tag",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 16701,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16932,
											"end": 16951,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16932,
											"end": 16951,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16932,
											"end": 16951,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16912,
											"end": 16930,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16912,
											"end": 16930,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16912,
											"end": 16930,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16905,
											"end": 16952,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17002,
											"end": 17015,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 17002,
											"end": 17015,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 17024,
											"end": 17045,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 17024,
											"end": 17045,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17024,
											"end": 17045,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17100,
											"end": 17115,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 17100,
											"end": 17115,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17100,
											"end": 17115,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17100,
											"end": 17115,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17063,
											"end": 17075,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17063,
											"end": 17075,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17063,
											"end": 17075,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17135,
											"end": 17136,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17145,
											"end": 17334,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 17145,
											"end": 17334,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17161,
											"end": 17169,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17156,
											"end": 17159,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17153,
											"end": 17170,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 17145,
											"end": 17334,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 17145,
											"end": 17334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 17145,
											"end": 17334,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17230,
											"end": 17245,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17230,
											"end": 17245,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 17216,
											"end": 17246,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17216,
											"end": 17246,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17307,
											"end": 17324,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17307,
											"end": 17324,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17307,
											"end": 17324,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17307,
											"end": 17324,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17268,
											"end": 17282,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17268,
											"end": 17282,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17268,
											"end": 17282,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17268,
											"end": 17282,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17189,
											"end": 17190,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 17180,
											"end": 17191,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17145,
											"end": 17334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 17145,
											"end": 17334,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17145,
											"end": 17334,
											"name": "tag",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 17145,
											"end": 17334,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17149,
											"end": 17152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17149,
											"end": 17152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17351,
											"end": 17356,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 17343,
											"end": 17356,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 17343,
											"end": 17356,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17343,
											"end": 17356,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17343,
											"end": 17356,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17343,
											"end": 17356,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17392,
											"end": 17398,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17387,
											"end": 17389,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 17376,
											"end": 17385,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17372,
											"end": 17390,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17365,
											"end": 17399,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16155,
											"end": 17405,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 16155,
											"end": 17405,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 16155,
											"end": 17405,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16155,
											"end": 17405,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16155,
											"end": 17405,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16155,
											"end": 17405,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16155,
											"end": 17405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17697,
											"end": 17984,
											"name": "tag",
											"source": 17,
											"value": "402"
										},
										{
											"begin": 17697,
											"end": 17984,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17826,
											"end": 17829,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17864,
											"end": 17870,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17858,
											"end": 17871,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 17880,
											"end": 17946,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 17939,
											"end": 17945,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17934,
											"end": 17937,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17927,
											"end": 17931,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17919,
											"end": 17925,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 17915,
											"end": 17932,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17880,
											"end": 17946,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 17880,
											"end": 17946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17880,
											"end": 17946,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 17880,
											"end": 17946,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17962,
											"end": 17978,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17962,
											"end": 17978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17962,
											"end": 17978,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17962,
											"end": 17978,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17962,
											"end": 17978,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17697,
											"end": 17984,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17697,
											"end": 17984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									],
									".data": {
										"C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F": "cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300",
										"C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43": "9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"packages/revolution-contracts/IERC20.sol",
								"packages/revolution-contracts/VerbsAuctionHouse.sol",
								"packages/revolution-contracts/interfaces/ICultureIndex.sol",
								"packages/revolution-contracts/interfaces/ITokenEmitter.sol",
								"packages/revolution-contracts/interfaces/IVerbsAuctionHouse.sol",
								"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol",
								"packages/revolution-contracts/interfaces/IVerbsToken.sol",
								"packages/revolution-contracts/interfaces/IWETH.sol",
								"packages/revolution-contracts/libs/SignedWadMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"auction()": "7d9f6db5",
							"createBid(uint256)": "659dd2b4",
							"creatorRateBps()": "0802be0a",
							"duration()": "0fb5a6b4",
							"entropyRateBps()": "fe95233b",
							"initialize(address,address,address,address,uint256,uint256,uint8,uint256,uint256,uint256)": "a910d318",
							"minBidIncrementPercentage()": "b296024d",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"reservePrice()": "db2e1eed",
							"setMinBidIncrementPercentage(uint8)": "36ebdb38",
							"setReservePrice(uint256)": "ce9c7c0d",
							"setTimeBuffer(uint256)": "7120334b",
							"settleAuction()": "a4d0a17e",
							"settleCurrentAndCreateNewAuction()": "f25efffc",
							"timeBuffer()": "ec91f2a4",
							"tokenEmitter()": "3d64baf1",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"verbs()": "0284464a",
							"weth()": "3fc8cef3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"extended\",\"type\":\"bool\"}],\"name\":\"AuctionBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBidIncrementPercentage\",\"type\":\"uint256\"}],\"name\":\"AuctionMinBidIncrementPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reservePrice\",\"type\":\"uint256\"}],\"name\":\"AuctionReservePriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AuctionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeBuffer\",\"type\":\"uint256\"}],\"name\":\"AuctionTimeBufferUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"auction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"}],\"name\":\"createBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorRateBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entropyRateBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVerbsToken\",\"name\":\"_verbs\",\"type\":\"address\"},{\"internalType\":\"contract ITokenEmitter\",\"name\":\"_tokenEmitter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_founder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timeBuffer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reservePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_minBidIncrementPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_creatorRateBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_entropyRateBps\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBidIncrementPercentage\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reservePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_minBidIncrementPercentage\",\"type\":\"uint8\"}],\"name\":\"setMinBidIncrementPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reservePrice\",\"type\":\"uint256\"}],\"name\":\"setReservePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeBuffer\",\"type\":\"uint256\"}],\"name\":\"setTimeBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleCurrentAndCreateNewAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenEmitter\",\"outputs\":[{\"internalType\":\"contract ITokenEmitter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verbs\",\"outputs\":[{\"internalType\":\"contract IVerbsToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"createBid(uint256)\":{\"details\":\"This contract only accepts payment in ETH.\"},\"initialize(address,address,address,address,uint256,uint256,uint8,uint256,uint256,uint256)\":{\"details\":\"This function can only be called once.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"This function can only be called by the owner when the contract is unpaused. While no new auctions can be started when paused, anyone can settle an ongoing auction.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMinBidIncrementPercentage(uint8)\":{\"details\":\"Only callable by the owner.\"},\"setReservePrice(uint256)\":{\"details\":\"Only callable by the owner.\"},\"setTimeBuffer(uint256)\":{\"details\":\"Only callable by the owner.\"},\"settleAuction()\":{\"details\":\"This function can only be called when the contract is paused.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"This function can only be called by the owner when the contract is paused. If required, this function will start a new auction.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createBid(uint256)\":{\"notice\":\"Create a bid for a Verb, with a given amount.\"},\"initialize(address,address,address,address,uint256,uint256,uint8,uint256,uint256,uint256)\":{\"notice\":\"Initialize the auction house and base contracts, populate configuration values, and pause the contract.\"},\"pause()\":{\"notice\":\"Pause the Verbs auction house.\"},\"setMinBidIncrementPercentage(uint8)\":{\"notice\":\"Set the auction minimum bid increment percentage.\"},\"setReservePrice(uint256)\":{\"notice\":\"Set the auction reserve price.\"},\"setTimeBuffer(uint256)\":{\"notice\":\"Set the auction time buffer.\"},\"settleAuction()\":{\"notice\":\"Settle the current auction.\"},\"settleCurrentAndCreateNewAuction()\":{\"notice\":\"Settle the current auction, mint a new Verb, and put it up for auction.\"},\"unpause()\":{\"notice\":\"Unpause the Verbs auction house.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/VerbsAuctionHouse.sol\":\"VerbsAuctionHouse\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]},\"packages/revolution-contracts/VerbsAuctionHouse.sol\":{\"keccak256\":\"0xa00ade5a652fa6a2da363f9e158975ef663351aaf14d4289a068333c4f840f41\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://50a91374c6b6c7e59b2564a3cb8998bc1fe3e6419e65fac3ae1c80ec01b1563c\",\"dweb:/ipfs/QmWvPRpf2KDikcgBYotyWahNyZQtwC3v6G41DdAay7GZyw\"]},\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":{\"keccak256\":\"0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0\",\"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs\"]},\"packages/revolution-contracts/interfaces/ITokenEmitter.sol\":{\"keccak256\":\"0xf16b24c2bcfcba477c73a2681dd6c1bf9413047fb1f9bf85864cb1da8ad4d337\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ff86bfbad89077abd632f341a78fc516a5c8cc6b9ec476bfb28f913cf35ecd87\",\"dweb:/ipfs/QmNWB2T134uhZjpiawvFdLoZ5L7EPsEp19zMfhXsw3ciDT\"]},\"packages/revolution-contracts/interfaces/IVerbsAuctionHouse.sol\":{\"keccak256\":\"0x5e3b53bb05f49ae2b4b4d00f0c47245b48b2eaa98ae8f95babf2ba368b30e8cd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://aaa5ba1e71787486efd00309e5dbce2aa1ae62a80d31b416a5ef6a5e7e9d4619\",\"dweb:/ipfs/QmdLN18Nt4iKyCN4S4vya29hQx6Yc729XP234S8spKu6hq\"]},\"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol\":{\"keccak256\":\"0xc26ef29b32d9afe3074b02e522d42a39ccadc9653069011ea5436717c4e32211\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8b013f8790795e8e42320ba278792606efaa67ecf94814dc768b8984f02f0b6f\",\"dweb:/ipfs/QmZU5CWYPsfaU3bsFrX8B13ri8AYVYxBtJtV5z9WrYCCLS\"]},\"packages/revolution-contracts/interfaces/IVerbsToken.sol\":{\"keccak256\":\"0xc3930bad0cf5511dc2478e5ff36861f285571f2b87863872fa543a98ac4e01b7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://26ffc6118a9ea2edcfca105065c276ce09479a695bb32b14a8089f638d43f944\",\"dweb:/ipfs/QmZNywKNmRmcmNS8WYRJEmveGn9MofvQTwcMTqpimSSAXy\"]},\"packages/revolution-contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xd3a4374b5e2010b4e6630fbefe650964fbc5bec1cf48f4cbb7f5aad133234ce1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3c0238794412998ce245177c8bb65994b5f1441c8eb8ca5ccebb1ce653bd5802\",\"dweb:/ipfs/QmYDRwpSV2v9oKk9fn5mM7tmb3qWxHQXeVBM7s21tyZbmv\"]},\"packages/revolution-contracts/libs/SignedWadMath.sol\":{\"keccak256\":\"0x7f270ba236a78b5ac77581019a0a30eb94ac49be1448da199a6e9644c5072846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7f7b8a7025ff831e1d534a2ff18e8ca7fc902b3672d23daa703b161d23a3c20\",\"dweb:/ipfs/QmUTPTonce6Ri2VtGBu8y2pHkXproRgdc7fKudLdER3TYx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1110,
								"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
								"label": "verbs",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IVerbsToken)2294"
							},
							{
								"astId": 1113,
								"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
								"label": "tokenEmitter",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ITokenEmitter)2089"
							},
							{
								"astId": 1115,
								"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
								"label": "weth",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1117,
								"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
								"label": "timeBuffer",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1119,
								"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
								"label": "reservePrice",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1121,
								"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
								"label": "minBidIncrementPercentage",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1123,
								"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
								"label": "creatorRateBps",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1125,
								"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
								"label": "entropyRateBps",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1127,
								"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
								"label": "duration",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1130,
								"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
								"label": "auction",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(Auction)2104_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ITokenEmitter)2089": {
								"encoding": "inplace",
								"label": "contract ITokenEmitter",
								"numberOfBytes": "20"
							},
							"t_contract(IVerbsToken)2294": {
								"encoding": "inplace",
								"label": "contract IVerbsToken",
								"numberOfBytes": "20"
							},
							"t_struct(Auction)2104_storage": {
								"encoding": "inplace",
								"label": "struct IVerbsAuctionHouse.Auction",
								"members": [
									{
										"astId": 2093,
										"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
										"label": "verbId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2095,
										"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2097,
										"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
										"label": "startTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2099,
										"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
										"label": "endTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2101,
										"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
										"label": "bidder",
										"offset": 0,
										"slot": "4",
										"type": "t_address_payable"
									},
									{
										"astId": 2103,
										"contract": "packages/revolution-contracts/VerbsAuctionHouse.sol:VerbsAuctionHouse",
										"label": "settled",
										"offset": 20,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createBid(uint256)": {
								"notice": "Create a bid for a Verb, with a given amount."
							},
							"initialize(address,address,address,address,uint256,uint256,uint8,uint256,uint256,uint256)": {
								"notice": "Initialize the auction house and base contracts, populate configuration values, and pause the contract."
							},
							"pause()": {
								"notice": "Pause the Verbs auction house."
							},
							"setMinBidIncrementPercentage(uint8)": {
								"notice": "Set the auction minimum bid increment percentage."
							},
							"setReservePrice(uint256)": {
								"notice": "Set the auction reserve price."
							},
							"setTimeBuffer(uint256)": {
								"notice": "Set the auction time buffer."
							},
							"settleAuction()": {
								"notice": "Settle the current auction."
							},
							"settleCurrentAndCreateNewAuction()": {
								"notice": "Settle the current auction, mint a new Verb, and put it up for auction."
							},
							"unpause()": {
								"notice": "Unpause the Verbs auction house."
							}
						},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/interfaces/ICultureIndex.sol": {
				"ICultureIndex": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "image",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "animationUrl",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "text",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "mediaType",
									"type": "uint8"
								}
							],
							"name": "PieceCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bps",
									"type": "uint256"
								}
							],
							"name": "PieceCreatorAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "remover",
									"type": "address"
								}
							],
							"name": "PieceDropped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bps",
									"type": "uint256"
								}
							],
							"name": "PieceDroppedCreator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalWeight",
									"type": "uint256"
								}
							],
							"name": "VoteCast",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "metadata",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "bps",
											"type": "uint256"
										}
									],
									"internalType": "struct ICultureIndex.CreatorBps[]",
									"name": "creatorArray",
									"type": "tuple[]"
								}
							],
							"name": "createPiece",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dropTopVotedPiece",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "pieceId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "name",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "description",
													"type": "string"
												},
												{
													"internalType": "enum ICultureIndex.MediaType",
													"name": "mediaType",
													"type": "uint8"
												},
												{
													"internalType": "string",
													"name": "image",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "text",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "animationUrl",
													"type": "string"
												}
											],
											"internalType": "struct ICultureIndex.ArtPieceMetadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "creator",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "bps",
													"type": "uint256"
												}
											],
											"internalType": "struct ICultureIndex.CreatorBps[]",
											"name": "creators",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "dropper",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isDropped",
											"type": "bool"
										}
									],
									"internalType": "struct ICultureIndex.ArtPiece",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								}
							],
							"name": "getPieceById",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "pieceId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "name",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "description",
													"type": "string"
												},
												{
													"internalType": "enum ICultureIndex.MediaType",
													"name": "mediaType",
													"type": "uint8"
												},
												{
													"internalType": "string",
													"name": "image",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "text",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "animationUrl",
													"type": "string"
												}
											],
											"internalType": "struct ICultureIndex.ArtPieceMetadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "creator",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "bps",
													"type": "uint256"
												}
											],
											"internalType": "struct ICultureIndex.CreatorBps[]",
											"name": "creators",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "dropper",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isDropped",
											"type": "bool"
										}
									],
									"internalType": "struct ICultureIndex.ArtPiece",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTopVotedPiece",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "pieceId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "name",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "description",
													"type": "string"
												},
												{
													"internalType": "enum ICultureIndex.MediaType",
													"name": "mediaType",
													"type": "uint8"
												},
												{
													"internalType": "string",
													"name": "image",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "text",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "animationUrl",
													"type": "string"
												}
											],
											"internalType": "struct ICultureIndex.ArtPieceMetadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "creator",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "bps",
													"type": "uint256"
												}
											],
											"internalType": "struct ICultureIndex.CreatorBps[]",
											"name": "creators",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "dropper",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isDropped",
											"type": "bool"
										}
									],
									"internalType": "struct ICultureIndex.ArtPiece",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "getVote",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "voterAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "weight",
											"type": "uint256"
										}
									],
									"internalType": "struct ICultureIndex.Vote",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "hasVoted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pieceCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topVotedPieceId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								}
							],
							"name": "totalVoteWeights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This interface defines the methods for the CultureIndex contract for art piece management and voting.",
						"events": {
							"PieceCreated(uint256,address,string,string,string,string,string,uint8)": {
								"details": "Emitted when a new piece is created.",
								"params": {
									"animationUrl": "(Optional) URL for the animation associated with the art piece.",
									"description": "Description of the art piece.",
									"dropper": "Address that created the piece.",
									"image": "URL for the image associated with the art piece.",
									"mediaType": "Integer representation of the media type for the art piece.",
									"name": "Name of the art piece.",
									"pieceId": "Unique identifier for the newly created piece.",
									"text": "Text content for the art piece."
								}
							},
							"PieceDropped(uint256,address)": {
								"details": "Emitted when a top-voted piece is dropped or released.",
								"params": {
									"pieceId": "Unique identifier for the dropped piece.",
									"remover": "Address that initiated the drop."
								}
							},
							"PieceDroppedCreator(uint256,address,address,uint256)": {
								"details": "Emitted for each creator added to a piece when it is dropped.",
								"params": {
									"bps": "Basis points associated with the creator for revenue sharing.",
									"creatorAddress": "Address of the creator.",
									"dropper": "Address that created the piece.",
									"pieceId": "Unique identifier for the dropped piece."
								}
							},
							"VoteCast(uint256,address,uint256,uint256)": {
								"details": "Emitted when a vote is cast for a piece.",
								"params": {
									"pieceId": "Unique identifier for the piece being voted for.",
									"totalWeight": "Total weight of votes for the piece after the new vote.",
									"voter": "Address of the voter.",
									"weight": "Weight of the vote."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPiece((string,string,uint8,string,string,string),(address,uint256)[])": {
								"params": {
									"creatorArray": "An array of creators and their associated basis points.",
									"metadata": "The metadata associated with the art piece."
								},
								"returns": {
									"_0": "The ID of the newly created art piece."
								}
							},
							"dropTopVotedPiece()": {
								"details": "This function also updates internal state to reflect the piece's dropped status.",
								"returns": {
									"_0": "The ArtPiece struct of the top voted piece that was just dropped."
								}
							},
							"getPieceById(uint256)": {
								"params": {
									"pieceId": "The ID of the art piece."
								},
								"returns": {
									"_0": "The ArtPiece struct associated with the given ID."
								}
							},
							"getTopVotedPiece()": {
								"returns": {
									"_0": "The ArtPiece struct representing the piece with the most votes."
								}
							},
							"getVote(uint256,address)": {
								"params": {
									"pieceId": "The ID of the art piece.",
									"voter": "The address of the voter."
								},
								"returns": {
									"_0": "An Voter structs associated with the given art piece ID."
								}
							},
							"hasVoted(uint256,address)": {
								"params": {
									"pieceId": "The ID of the art piece.",
									"voter": "The address of the voter."
								},
								"returns": {
									"_0": "A boolean indicating if the voter has voted for the art piece."
								}
							},
							"pieceCount()": {
								"returns": {
									"_0": "The total count of art pieces."
								}
							},
							"topVotedPieceId()": {
								"returns": {
									"_0": "The ID of the art piece with the most votes."
								}
							},
							"totalVoteWeights(uint256)": {
								"params": {
									"pieceId": "The ID of the art piece."
								},
								"returns": {
									"_0": "The total vote weight for the art piece."
								}
							},
							"vote(uint256)": {
								"params": {
									"pieceId": "The ID of the art piece."
								}
							}
						},
						"title": "ICultureIndex",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPiece((string,string,uint8,string,string,string),(address,uint256)[])": "d75d43c9",
							"dropTopVotedPiece()": "bad22aff",
							"getPieceById(uint256)": "deb50c35",
							"getTopVotedPiece()": "f8a8be40",
							"getVote(uint256,address)": "bc3f931f",
							"hasVoted(uint256,address)": "43859632",
							"pieceCount()": "4a5c4dfe",
							"topVotedPieceId()": "b7b61494",
							"totalVoteWeights(uint256)": "04f50270",
							"vote(uint256)": "0121b93f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"mediaType\",\"type\":\"uint8\"}],\"name\":\"PieceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"PieceCreatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remover\",\"type\":\"address\"}],\"name\":\"PieceDropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"PieceDroppedCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.CreatorBps[]\",\"name\":\"creatorArray\",\"type\":\"tuple[]\"}],\"name\":\"createPiece\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dropTopVotedPiece\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.CreatorBps[]\",\"name\":\"creators\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDropped\",\"type\":\"bool\"}],\"internalType\":\"struct ICultureIndex.ArtPiece\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"}],\"name\":\"getPieceById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.CreatorBps[]\",\"name\":\"creators\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDropped\",\"type\":\"bool\"}],\"internalType\":\"struct ICultureIndex.ArtPiece\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTopVotedPiece\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.CreatorBps[]\",\"name\":\"creators\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDropped\",\"type\":\"bool\"}],\"internalType\":\"struct ICultureIndex.ArtPiece\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVote\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.Vote\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pieceCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topVotedPieceId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"}],\"name\":\"totalVoteWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the methods for the CultureIndex contract for art piece management and voting.\",\"events\":{\"PieceCreated(uint256,address,string,string,string,string,string,uint8)\":{\"details\":\"Emitted when a new piece is created.\",\"params\":{\"animationUrl\":\"(Optional) URL for the animation associated with the art piece.\",\"description\":\"Description of the art piece.\",\"dropper\":\"Address that created the piece.\",\"image\":\"URL for the image associated with the art piece.\",\"mediaType\":\"Integer representation of the media type for the art piece.\",\"name\":\"Name of the art piece.\",\"pieceId\":\"Unique identifier for the newly created piece.\",\"text\":\"Text content for the art piece.\"}},\"PieceDropped(uint256,address)\":{\"details\":\"Emitted when a top-voted piece is dropped or released.\",\"params\":{\"pieceId\":\"Unique identifier for the dropped piece.\",\"remover\":\"Address that initiated the drop.\"}},\"PieceDroppedCreator(uint256,address,address,uint256)\":{\"details\":\"Emitted for each creator added to a piece when it is dropped.\",\"params\":{\"bps\":\"Basis points associated with the creator for revenue sharing.\",\"creatorAddress\":\"Address of the creator.\",\"dropper\":\"Address that created the piece.\",\"pieceId\":\"Unique identifier for the dropped piece.\"}},\"VoteCast(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when a vote is cast for a piece.\",\"params\":{\"pieceId\":\"Unique identifier for the piece being voted for.\",\"totalWeight\":\"Total weight of votes for the piece after the new vote.\",\"voter\":\"Address of the voter.\",\"weight\":\"Weight of the vote.\"}}},\"kind\":\"dev\",\"methods\":{\"createPiece((string,string,uint8,string,string,string),(address,uint256)[])\":{\"params\":{\"creatorArray\":\"An array of creators and their associated basis points.\",\"metadata\":\"The metadata associated with the art piece.\"},\"returns\":{\"_0\":\"The ID of the newly created art piece.\"}},\"dropTopVotedPiece()\":{\"details\":\"This function also updates internal state to reflect the piece's dropped status.\",\"returns\":{\"_0\":\"The ArtPiece struct of the top voted piece that was just dropped.\"}},\"getPieceById(uint256)\":{\"params\":{\"pieceId\":\"The ID of the art piece.\"},\"returns\":{\"_0\":\"The ArtPiece struct associated with the given ID.\"}},\"getTopVotedPiece()\":{\"returns\":{\"_0\":\"The ArtPiece struct representing the piece with the most votes.\"}},\"getVote(uint256,address)\":{\"params\":{\"pieceId\":\"The ID of the art piece.\",\"voter\":\"The address of the voter.\"},\"returns\":{\"_0\":\"An Voter structs associated with the given art piece ID.\"}},\"hasVoted(uint256,address)\":{\"params\":{\"pieceId\":\"The ID of the art piece.\",\"voter\":\"The address of the voter.\"},\"returns\":{\"_0\":\"A boolean indicating if the voter has voted for the art piece.\"}},\"pieceCount()\":{\"returns\":{\"_0\":\"The total count of art pieces.\"}},\"topVotedPieceId()\":{\"returns\":{\"_0\":\"The ID of the art piece with the most votes.\"}},\"totalVoteWeights(uint256)\":{\"params\":{\"pieceId\":\"The ID of the art piece.\"},\"returns\":{\"_0\":\"The total vote weight for the art piece.\"}},\"vote(uint256)\":{\"params\":{\"pieceId\":\"The ID of the art piece.\"}}},\"title\":\"ICultureIndex\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createPiece((string,string,uint8,string,string,string),(address,uint256)[])\":{\"notice\":\"Allows a user to create a new art piece.\"},\"dropTopVotedPiece()\":{\"notice\":\"Officially release or \\\"drop\\\" the art piece with the most votes.\"},\"getPieceById(uint256)\":{\"notice\":\"Fetch an art piece by its ID.\"},\"getTopVotedPiece()\":{\"notice\":\"Retrieve the top-voted art piece based on the accumulated votes.\"},\"getVote(uint256,address)\":{\"notice\":\"Fetch the list of voters for a given art piece.\"},\"hasVoted(uint256,address)\":{\"notice\":\"Checks if a specific voter has already voted for a given art piece.\"},\"pieceCount()\":{\"notice\":\"Returns the total number of art pieces.\"},\"topVotedPieceId()\":{\"notice\":\"Fetch the ID of the top-voted art piece.\"},\"totalVoteWeights(uint256)\":{\"notice\":\"Returns the total voting weight for a specific art piece.\"},\"vote(uint256)\":{\"notice\":\"Allows a user to vote for a specific art piece.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":\"ICultureIndex\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]},\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":{\"keccak256\":\"0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0\",\"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createPiece((string,string,uint8,string,string,string),(address,uint256)[])": {
								"notice": "Allows a user to create a new art piece."
							},
							"dropTopVotedPiece()": {
								"notice": "Officially release or \"drop\" the art piece with the most votes."
							},
							"getPieceById(uint256)": {
								"notice": "Fetch an art piece by its ID."
							},
							"getTopVotedPiece()": {
								"notice": "Retrieve the top-voted art piece based on the accumulated votes."
							},
							"getVote(uint256,address)": {
								"notice": "Fetch the list of voters for a given art piece."
							},
							"hasVoted(uint256,address)": {
								"notice": "Checks if a specific voter has already voted for a given art piece."
							},
							"pieceCount()": {
								"notice": "Returns the total number of art pieces."
							},
							"topVotedPieceId()": {
								"notice": "Fetch the ID of the top-voted art piece."
							},
							"totalVoteWeights(uint256)": {
								"notice": "Returns the total voting weight for a specific art piece."
							},
							"vote(uint256)": {
								"notice": "Allows a user to vote for a specific art piece."
							}
						},
						"version": 1
					}
				},
				"ICultureIndexEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "image",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "animationUrl",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "text",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "mediaType",
									"type": "uint8"
								}
							],
							"name": "PieceCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bps",
									"type": "uint256"
								}
							],
							"name": "PieceCreatorAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "remover",
									"type": "address"
								}
							],
							"name": "PieceDropped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dropper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bps",
									"type": "uint256"
								}
							],
							"name": "PieceDroppedCreator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pieceId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalWeight",
									"type": "uint256"
								}
							],
							"name": "VoteCast",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This interface defines the events for the CultureIndex contract.",
						"events": {
							"PieceCreated(uint256,address,string,string,string,string,string,uint8)": {
								"details": "Emitted when a new piece is created.",
								"params": {
									"animationUrl": "(Optional) URL for the animation associated with the art piece.",
									"description": "Description of the art piece.",
									"dropper": "Address that created the piece.",
									"image": "URL for the image associated with the art piece.",
									"mediaType": "Integer representation of the media type for the art piece.",
									"name": "Name of the art piece.",
									"pieceId": "Unique identifier for the newly created piece.",
									"text": "Text content for the art piece."
								}
							},
							"PieceDropped(uint256,address)": {
								"details": "Emitted when a top-voted piece is dropped or released.",
								"params": {
									"pieceId": "Unique identifier for the dropped piece.",
									"remover": "Address that initiated the drop."
								}
							},
							"PieceDroppedCreator(uint256,address,address,uint256)": {
								"details": "Emitted for each creator added to a piece when it is dropped.",
								"params": {
									"bps": "Basis points associated with the creator for revenue sharing.",
									"creatorAddress": "Address of the creator.",
									"dropper": "Address that created the piece.",
									"pieceId": "Unique identifier for the dropped piece."
								}
							},
							"VoteCast(uint256,address,uint256,uint256)": {
								"details": "Emitted when a vote is cast for a piece.",
								"params": {
									"pieceId": "Unique identifier for the piece being voted for.",
									"totalWeight": "Total weight of votes for the piece after the new vote.",
									"voter": "Address of the voter.",
									"weight": "Weight of the vote."
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "ICultureIndexEvents",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"mediaType\",\"type\":\"uint8\"}],\"name\":\"PieceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"PieceCreatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remover\",\"type\":\"address\"}],\"name\":\"PieceDropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"PieceDroppedCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface defines the events for the CultureIndex contract.\",\"events\":{\"PieceCreated(uint256,address,string,string,string,string,string,uint8)\":{\"details\":\"Emitted when a new piece is created.\",\"params\":{\"animationUrl\":\"(Optional) URL for the animation associated with the art piece.\",\"description\":\"Description of the art piece.\",\"dropper\":\"Address that created the piece.\",\"image\":\"URL for the image associated with the art piece.\",\"mediaType\":\"Integer representation of the media type for the art piece.\",\"name\":\"Name of the art piece.\",\"pieceId\":\"Unique identifier for the newly created piece.\",\"text\":\"Text content for the art piece.\"}},\"PieceDropped(uint256,address)\":{\"details\":\"Emitted when a top-voted piece is dropped or released.\",\"params\":{\"pieceId\":\"Unique identifier for the dropped piece.\",\"remover\":\"Address that initiated the drop.\"}},\"PieceDroppedCreator(uint256,address,address,uint256)\":{\"details\":\"Emitted for each creator added to a piece when it is dropped.\",\"params\":{\"bps\":\"Basis points associated with the creator for revenue sharing.\",\"creatorAddress\":\"Address of the creator.\",\"dropper\":\"Address that created the piece.\",\"pieceId\":\"Unique identifier for the dropped piece.\"}},\"VoteCast(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when a vote is cast for a piece.\",\"params\":{\"pieceId\":\"Unique identifier for the piece being voted for.\",\"totalWeight\":\"Total weight of votes for the piece after the new vote.\",\"voter\":\"Address of the voter.\",\"weight\":\"Weight of the vote.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"ICultureIndexEvents\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":\"ICultureIndexEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]},\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":{\"keccak256\":\"0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0\",\"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/interfaces/ITokenEmitter.sol": {
				"ITokenEmitter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "UNSAFE_getOverestimateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "_getTokenAmountForSinglePurchase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_addresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_percentages",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "numChunks",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								}
							],
							"name": "getTokenAmountForMultiPurchase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentTotalSupply",
									"type": "uint256"
								}
							],
							"name": "getTokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UNSAFE_getOverestimateTokenAmount(uint256,uint256)": "ae9cdbe3",
							"_getTokenAmountForSinglePurchase(uint256,uint256)": "244ec3c8",
							"balanceOf(address)": "70a08231",
							"buyToken(address[],uint256[],uint256)": "dec86df1",
							"getTokenAmountForMultiPurchase(uint256)": "7ba7614f",
							"getTokenPrice(uint256)": "c457fb37",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"UNSAFE_getOverestimateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"_getTokenAmountForSinglePurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_percentages\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"numChunks\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForMultiPurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentTotalSupply\",\"type\":\"uint256\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/ITokenEmitter.sol\":\"ITokenEmitter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/interfaces/ITokenEmitter.sol\":{\"keccak256\":\"0xf16b24c2bcfcba477c73a2681dd6c1bf9413047fb1f9bf85864cb1da8ad4d337\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ff86bfbad89077abd632f341a78fc516a5c8cc6b9ec476bfb28f913cf35ecd87\",\"dweb:/ipfs/QmNWB2T134uhZjpiawvFdLoZ5L7EPsEp19zMfhXsw3ciDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/interfaces/IVerbsAuctionHouse.sol": {
				"IVerbsAuctionHouse": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "extended",
									"type": "bool"
								}
							],
							"name": "AuctionBid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "AuctionCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "AuctionExtended",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "minBidIncrementPercentage",
									"type": "uint256"
								}
							],
							"name": "AuctionMinBidIncrementPercentageUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reservePrice",
									"type": "uint256"
								}
							],
							"name": "AuctionReservePriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AuctionSettled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timeBuffer",
									"type": "uint256"
								}
							],
							"name": "AuctionTimeBufferUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "verbId",
									"type": "uint256"
								}
							],
							"name": "createBid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "minBidIncrementPercentage",
									"type": "uint8"
								}
							],
							"name": "setMinBidIncrementPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reservePrice",
									"type": "uint256"
								}
							],
							"name": "setReservePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "timeBuffer",
									"type": "uint256"
								}
							],
							"name": "setTimeBuffer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "settleAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "settleCurrentAndCreateNewAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createBid(uint256)": "659dd2b4",
							"pause()": "8456cb59",
							"setMinBidIncrementPercentage(uint8)": "36ebdb38",
							"setReservePrice(uint256)": "ce9c7c0d",
							"setTimeBuffer(uint256)": "7120334b",
							"settleAuction()": "a4d0a17e",
							"settleCurrentAndCreateNewAuction()": "f25efffc",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"extended\",\"type\":\"bool\"}],\"name\":\"AuctionBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBidIncrementPercentage\",\"type\":\"uint256\"}],\"name\":\"AuctionMinBidIncrementPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reservePrice\",\"type\":\"uint256\"}],\"name\":\"AuctionReservePriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AuctionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeBuffer\",\"type\":\"uint256\"}],\"name\":\"AuctionTimeBufferUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"verbId\",\"type\":\"uint256\"}],\"name\":\"createBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"minBidIncrementPercentage\",\"type\":\"uint8\"}],\"name\":\"setMinBidIncrementPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reservePrice\",\"type\":\"uint256\"}],\"name\":\"setReservePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeBuffer\",\"type\":\"uint256\"}],\"name\":\"setTimeBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleCurrentAndCreateNewAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/IVerbsAuctionHouse.sol\":\"IVerbsAuctionHouse\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/interfaces/IVerbsAuctionHouse.sol\":{\"keccak256\":\"0x5e3b53bb05f49ae2b4b4d00f0c47245b48b2eaa98ae8f95babf2ba368b30e8cd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://aaa5ba1e71787486efd00309e5dbce2aa1ae62a80d31b416a5ef6a5e7e9d4619\",\"dweb:/ipfs/QmdLN18Nt4iKyCN4S4vya29hQx6Yc729XP234S8spKu6hq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol": {
				"IVerbsDescriptorMinimal": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "dataURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "enum ICultureIndex.MediaType",
											"name": "mediaType",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "image",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "text",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "animationUrl",
											"type": "string"
										}
									],
									"internalType": "struct ICultureIndex.ArtPieceMetadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"dataURI(uint256,(string,string,uint8,string,string,string))": "0dd4f079",
							"tokenURI(uint256,(string,string,uint8,string,string,string))": "2c90464d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"dataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"tokenURI(uint256,(string,string,uint8,string,string,string))\":{\"notice\":\" USED BY TOKEN\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol\":\"IVerbsDescriptorMinimal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]},\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":{\"keccak256\":\"0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0\",\"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs\"]},\"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol\":{\"keccak256\":\"0xc26ef29b32d9afe3074b02e522d42a39ccadc9653069011ea5436717c4e32211\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8b013f8790795e8e42320ba278792606efaa67ecf94814dc768b8984f02f0b6f\",\"dweb:/ipfs/QmZU5CWYPsfaU3bsFrX8B13ri8AYVYxBtJtV5z9WrYCCLS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"tokenURI(uint256,(string,string,uint8,string,string,string))": {
								"notice": " USED BY TOKEN"
							}
						},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/interfaces/IVerbsToken.sol": {
				"IVerbsToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "CultureIndexLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract ICultureIndex",
									"name": "cultureIndex",
									"type": "address"
								}
							],
							"name": "CultureIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "DescriptorLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract IVerbsDescriptorMinimal",
									"name": "descriptor",
									"type": "address"
								}
							],
							"name": "DescriptorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "MinterLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "MinterUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "VerbBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "pieceId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "name",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "description",
													"type": "string"
												},
												{
													"internalType": "enum ICultureIndex.MediaType",
													"name": "mediaType",
													"type": "uint8"
												},
												{
													"internalType": "string",
													"name": "image",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "text",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "animationUrl",
													"type": "string"
												}
											],
											"internalType": "struct ICultureIndex.ArtPieceMetadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "creator",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "bps",
													"type": "uint256"
												}
											],
											"internalType": "struct ICultureIndex.CreatorBps[]",
											"name": "creators",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "dropper",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isDropped",
											"type": "bool"
										}
									],
									"indexed": false,
									"internalType": "struct ICultureIndex.ArtPiece",
									"name": "artPiece",
									"type": "tuple"
								}
							],
							"name": "VerbCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "dataURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getArtPieceById",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "pieceId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "name",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "description",
													"type": "string"
												},
												{
													"internalType": "enum ICultureIndex.MediaType",
													"name": "mediaType",
													"type": "uint8"
												},
												{
													"internalType": "string",
													"name": "image",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "text",
													"type": "string"
												},
												{
													"internalType": "string",
													"name": "animationUrl",
													"type": "string"
												}
											],
											"internalType": "struct ICultureIndex.ArtPieceMetadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "creator",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "bps",
													"type": "uint256"
												}
											],
											"internalType": "struct ICultureIndex.CreatorBps[]",
											"name": "creators",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "dropper",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isDropped",
											"type": "bool"
										}
									],
									"internalType": "struct ICultureIndex.ArtPiece",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockCultureIndex",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockDescriptor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IVerbsDescriptorMinimal",
									"name": "descriptor",
									"type": "address"
								}
							],
							"name": "setDescriptor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "setMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"dataURI(uint256)": "5ac1e3bb",
							"getApproved(uint256)": "081812fc",
							"getArtPieceById(uint256)": "49a33562",
							"isApprovedForAll(address,address)": "e985e9c5",
							"lockCultureIndex()": "e2d8f40c",
							"lockDescriptor()": "41b5d0de",
							"lockMinter()": "76daebe1",
							"mint()": "1249c58b",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setDescriptor(address)": "01b9a397",
							"setMinter(address)": "fca3b5aa",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CultureIndexLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ICultureIndex\",\"name\":\"cultureIndex\",\"type\":\"address\"}],\"name\":\"CultureIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DescriptorLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IVerbsDescriptorMinimal\",\"name\":\"descriptor\",\"type\":\"address\"}],\"name\":\"DescriptorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MinterLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"VerbBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.CreatorBps[]\",\"name\":\"creators\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDropped\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct ICultureIndex.ArtPiece\",\"name\":\"artPiece\",\"type\":\"tuple\"}],\"name\":\"VerbCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"dataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getArtPieceById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pieceId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum ICultureIndex.MediaType\",\"name\":\"mediaType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationUrl\",\"type\":\"string\"}],\"internalType\":\"struct ICultureIndex.ArtPieceMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"internalType\":\"struct ICultureIndex.CreatorBps[]\",\"name\":\"creators\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"dropper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDropped\",\"type\":\"bool\"}],\"internalType\":\"struct ICultureIndex.ArtPiece\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockCultureIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVerbsDescriptorMinimal\",\"name\":\"descriptor\",\"type\":\"address\"}],\"name\":\"setDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/IVerbsToken.sol\":\"IVerbsToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"packages/revolution-contracts/IERC20.sol\":{\"keccak256\":\"0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c\",\"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ\"]},\"packages/revolution-contracts/interfaces/ICultureIndex.sol\":{\"keccak256\":\"0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0\",\"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs\"]},\"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol\":{\"keccak256\":\"0xc26ef29b32d9afe3074b02e522d42a39ccadc9653069011ea5436717c4e32211\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8b013f8790795e8e42320ba278792606efaa67ecf94814dc768b8984f02f0b6f\",\"dweb:/ipfs/QmZU5CWYPsfaU3bsFrX8B13ri8AYVYxBtJtV5z9WrYCCLS\"]},\"packages/revolution-contracts/interfaces/IVerbsToken.sol\":{\"keccak256\":\"0xc3930bad0cf5511dc2478e5ff36861f285571f2b87863872fa543a98ac4e01b7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://26ffc6118a9ea2edcfca105065c276ce09479a695bb32b14a8089f638d43f944\",\"dweb:/ipfs/QmZNywKNmRmcmNS8WYRJEmveGn9MofvQTwcMTqpimSSAXy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/interfaces/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xd3a4374b5e2010b4e6630fbefe650964fbc5bec1cf48f4cbb7f5aad133234ce1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3c0238794412998ce245177c8bb65994b5f1441c8eb8ca5ccebb1ce653bd5802\",\"dweb:/ipfs/QmYDRwpSV2v9oKk9fn5mM7tmb3qWxHQXeVBM7s21tyZbmv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							486
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 487,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 486,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								486,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							486
						],
						"Initializable": [
							448
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 449,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 486,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 486,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 486,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 481,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 486,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "688:402:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:990:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							486
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 487,
							"src": "128:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 489,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 486,
										"src": "136:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 449,
							"src": "196:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 491,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 494,
										"name": "Initializable",
										"nameLocations": [
											"742:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "742:13:3"
									},
									"id": 495,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:3"
								},
								{
									"baseName": {
										"id": 496,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "757:18:3"
									},
									"id": 497,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 493,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662,
								486,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:3",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 501,
									"members": [
										{
											"constant": false,
											"id": 500,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 501,
											"src": "886:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 499,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:3",
									"nodeType": "StructDefinition",
									"scope": 662,
									"src": "853:52:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 504,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 662,
									"src": "1023:117:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 502,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 503,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1227:82:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:3",
													"nodeType": "YulBlock",
													"src": "1246:57:3",
													"statements": [
														{
															"nativeSrc": "1260:33:3",
															"nodeType": "YulAssignment",
															"src": "1260:33:3",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:3",
																"nodeType": "YulIdentifier",
																"src": "1270:23:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 508,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 504,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:3",
														"valueSize": 1
													}
												],
												"id": 510,
												"nodeType": "InlineAssembly",
												"src": "1237:66:3"
											}
										]
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1200:25:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 507,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 506,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 501,
														"src": "1200:15:3"
													},
													"referencedDeclaration": 501,
													"src": "1200:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:3"
									},
									"scope": 662,
									"src": "1147:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 517,
									"name": "Paused",
									"nameLocation": "1399:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1406:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:3"
									},
									"src": "1393:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 522,
									"name": "Unpaused",
									"nameLocation": "1510:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1519:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:3"
									},
									"src": "1504:32:3"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:3",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 525,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:3"
									},
									"src": "1623:22:3"
								},
								{
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:3",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 528,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:3"
									},
									"src": "1736:22:3"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "1889:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 534,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "1899:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "1899:27:3"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "1764:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 532,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 531,
												"name": "onlyInitializing",
												"nameLocations": [
													"1872:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1872:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1845:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:3"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:3"
									},
									"scope": 662,
									"src": "1836:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "2002:93:3",
										"statements": [
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2036:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "2012:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 544,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 543,
																"name": "PausableStorage",
																"nameLocations": [
																	"2012:15:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 501,
																"src": "2012:15:3"
															},
															"referencedDeclaration": 501,
															"src": "2012:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 546,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "2040:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$501_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:3"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 549,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2071:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2073:7:3",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "2071:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2071:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2071:17:3"
											}
										]
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 541,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 540,
												"name": "onlyInitializing",
												"nameLocations": [
													"1985:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1985:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1948:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:3"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:3"
									},
									"scope": 662,
									"src": "1939:156:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "2306:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 559,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "2316:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "2316:19:3"
											},
											{
												"id": 562,
												"nodeType": "PlaceholderStatement",
												"src": "2345:1:3"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "2101:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 564,
									"name": "whenNotPaused",
									"nameLocation": "2290:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:3"
									},
									"src": "2281:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "2553:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 567,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "2563:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "2563:16:3"
											},
											{
												"id": 570,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:3"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "2359:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 572,
									"name": "whenPaused",
									"nameLocation": "2540:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:3"
									},
									"src": "2531:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "2745:92:3",
										"statements": [
											{
												"assignments": [
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2779:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "2755:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 579,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 578,
																"name": "PausableStorage",
																"nameLocations": [
																	"2755:15:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 501,
																"src": "2755:15:3"
															},
															"referencedDeclaration": 501,
															"src": "2755:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 581,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "2783:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$501_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:49:3"
											},
											{
												"expression": {
													"expression": {
														"id": 584,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "2821:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:7:3",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 500,
													"src": "2821:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 577,
												"id": 586,
												"nodeType": "Return",
												"src": "2814:16:3"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "2603:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2701:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:3"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2739:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:3"
									},
									"scope": 662,
									"src": "2692:145:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "2956:77:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 592,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "2970:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:8:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "2966:61:3",
												"trueBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "2980:47:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 594,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "3001:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 596,
															"nodeType": "RevertStatement",
															"src": "2994:22:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "2843:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2914:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:3"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:3"
									},
									"scope": 662,
									"src": "2905:128:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "3153:78:3",
										"statements": [
											{
												"condition": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3167:9:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 604,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3168:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3168:8:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "3163:62:3",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "3178:47:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 607,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "3199:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "3192:22:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "3039:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "3114:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3128:2:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:3"
									},
									"scope": 662,
									"src": "3105:126:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "3415:127:3",
										"statements": [
											{
												"assignments": [
													621
												],
												"declarations": [
													{
														"constant": false,
														"id": 621,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3449:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "3425:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 620,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 619,
																"name": "PausableStorage",
																"nameLocations": [
																	"3425:15:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 501,
																"src": "3425:15:3"
															},
															"referencedDeclaration": 501,
															"src": "3425:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 622,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "3453:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$501_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3425:49:3"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 625,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3484:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3486:7:3",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "3484:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3484:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "3484:16:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 632,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3522:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 631,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "3515:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "EmitStatement",
												"src": "3510:25:3"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "3237:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 617,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 616,
												"name": "whenNotPaused",
												"nameLocations": [
													"3401:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 564,
												"src": "3401:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3401:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "3375:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:3"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:0:3"
									},
									"scope": 662,
									"src": "3366:176:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3722:130:3",
										"statements": [
											{
												"assignments": [
													645
												],
												"declarations": [
													{
														"constant": false,
														"id": 645,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3756:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3732:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 644,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 643,
																"name": "PausableStorage",
																"nameLocations": [
																	"3732:15:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 501,
																"src": "3732:15:3"
															},
															"referencedDeclaration": 501,
															"src": "3732:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 648,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 646,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "3760:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$501_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:49:3"
											},
											{
												"expression": {
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 649,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "3791:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$501_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3793:7:3",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "3791:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3803:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3791:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "3791:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 656,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3832:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 655,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "EmitStatement",
												"src": "3818:27:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "3548:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 640,
												"name": "whenPaused",
												"nameLocations": [
													"3711:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 572,
												"src": "3711:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "3683:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:3"
									},
									"scope": 662,
									"src": "3674:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 663,
							"src": "701:3153:3",
							"usedErrors": [
								211,
								214,
								525,
								528
							],
							"usedEvents": [
								219,
								517,
								522
							]
						}
					],
					"src": "102:3753:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						],
						"ReentrancyGuardUpgradeable": [
							791
						]
					},
					"id": 792,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 449,
							"src": "134:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 665,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "142:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "Initializable",
										"nameLocations": [
											"998:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "998:13:4"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "998:13:4"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "199:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 791,
							"linearizedBaseContracts": [
								791,
								448
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "968:26:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 672,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1791:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 791,
									"src": "1766:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 670,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1766:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 671,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1805:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 675,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1837:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 791,
									"src": "1812:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 673,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1812:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 674,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1847:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "1855:73:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"
									},
									"id": 679,
									"members": [
										{
											"constant": false,
											"id": 678,
											"mutability": "mutable",
											"name": "_status",
											"nameLocation": "1981:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "1973:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 677,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1973:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReentrancyGuardStorage",
									"nameLocation": "1940:22:4",
									"nodeType": "StructDefinition",
									"scope": 791,
									"src": "1933:62:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 682,
									"mutability": "constant",
									"name": "ReentrancyGuardStorageLocation",
									"nameLocation": "2145:30:4",
									"nodeType": "VariableDeclaration",
									"scope": 791,
									"src": "2120:124:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 680,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2120:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030",
										"id": 681,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2178:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1",
											"typeString": "int_const 7031...(69 digits omitted)...8416"
										},
										"value": "0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "2345:89:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2364:64:4",
													"nodeType": "YulBlock",
													"src": "2364:64:4",
													"statements": [
														{
															"nativeSrc": "2378:40:4",
															"nodeType": "YulAssignment",
															"src": "2378:40:4",
															"value": {
																"name": "ReentrancyGuardStorageLocation",
																"nativeSrc": "2388:30:4",
																"nodeType": "YulIdentifier",
																"src": "2388:30:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2378:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2378:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 686,
														"isOffset": false,
														"isSlot": true,
														"src": "2378:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "2388:30:4",
														"valueSize": 1
													}
												],
												"id": 688,
												"nodeType": "InlineAssembly",
												"src": "2355:73:4"
											}
										]
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getReentrancyGuardStorage",
									"nameLocation": "2260:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2286:2:4"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2342:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2311:32:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
													"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
												},
												"typeName": {
													"id": 685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 684,
														"name": "ReentrancyGuardStorage",
														"nameLocations": [
															"2311:22:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 679,
														"src": "2311:22:4"
													},
													"referencedDeclaration": 679,
													"src": "2311:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2310:34:4"
									},
									"scope": 791,
									"src": "2251:183:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "2440:52:4",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 693,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2503:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2531:2:4"
									},
									"src": "2497:37:4"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2600:51:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 698,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "2610:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2610:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "2610:34:4"
											}
										]
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "onlyInitializing",
												"nameLocations": [
													"2583:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2583:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2583:16:4"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "2549:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2571:2:4"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:4"
									},
									"scope": 791,
									"src": "2540:111:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2727:113:4",
										"statements": [
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2768:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "2737:32:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 708,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 707,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"2737:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 679,
																"src": "2737:22:4"
															},
															"referencedDeclaration": 679,
															"src": "2737:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 710,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "2772:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$679_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2772:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2737:63:4"
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 713,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "2810:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2812:7:4",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 678,
														"src": "2810:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 716,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2822:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2810:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2810:23:4"
											}
										]
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 705,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 704,
												"name": "onlyInitializing",
												"nameLocations": [
													"2710:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2710:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2710:16:4"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2666:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2698:2:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:0:4"
									},
									"scope": 791,
									"src": "2657:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "3241:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 723,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "3251:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3251:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "3251:21:4"
											},
											{
												"id": 726,
												"nodeType": "PlaceholderStatement",
												"src": "3282:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 727,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "3293:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3293:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "3293:20:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "2846:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 731,
									"name": "nonReentrant",
									"nameLocation": "3226:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3238:2:4"
									},
									"src": "3217:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "3365:345:4",
										"statements": [
											{
												"assignments": [
													736
												],
												"declarations": [
													{
														"constant": false,
														"id": 736,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3406:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 755,
														"src": "3375:32:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 735,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 734,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3375:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 679,
																"src": "3375:22:4"
															},
															"referencedDeclaration": 679,
															"src": "3375:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 737,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "3410:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$679_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3410:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3375:63:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 740,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "3526:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3528:7:4",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 678,
														"src": "3526:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 742,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "3539:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3526:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "3522:88:4",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "3548:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 744,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "3569:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3569:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "RevertStatement",
															"src": "3562:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 749,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "3684:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3686:7:4",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 678,
														"src": "3684:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 752,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "3696:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3684:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "3684:19:4"
											}
										]
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "3335:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3354:2:4"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3365:0:4"
									},
									"scope": 791,
									"src": "3326:384:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "3754:245:4",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3795:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "3764:32:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 760,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 759,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3764:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 679,
																"src": "3764:22:4"
															},
															"referencedDeclaration": 679,
															"src": "3764:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 762,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "3799:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$679_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3799:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3764:63:4"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 765,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "3969:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3971:7:4",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 678,
														"src": "3969:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 768,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "3981:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3969:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "3969:23:4"
											}
										]
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "3725:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3743:2:4"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3754:0:4"
									},
									"scope": 791,
									"src": "3716:283:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "4242:117:4",
										"statements": [
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4283:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "4252:32:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 779,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 778,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"4252:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 679,
																"src": "4252:22:4"
															},
															"referencedDeclaration": 679,
															"src": "4252:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 783,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 781,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "4287:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$679_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4252:63:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 784,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "4332:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$679_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4334:7:4",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 678,
														"src": "4332:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 786,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "4345:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4332:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 777,
												"id": 788,
												"nodeType": "Return",
												"src": "4325:27:4"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "4005:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "4187:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4210:2:4"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "4236:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4236:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:6:4"
									},
									"scope": 791,
									"src": "4178:181:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 792,
							"src": "950:3411:4",
							"usedErrors": [
								211,
								214,
								693
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "109:4253:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							869
						]
					},
					"id": 870,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 793,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 794,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 869,
							"linearizedBaseContracts": [
								869
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 803,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 812,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 869,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 869,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 869,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 869,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 853,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 869,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 869,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 870,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								803,
								812
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							998
						],
						"IERC721": [
							986
						]
					},
					"id": 987,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 871,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 873,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 987,
							"sourceUnit": 999,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 872,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 875,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "287:7:6"
									},
									"id": 876,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 874,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 986,
							"linearizedBaseContracts": [
								986,
								998
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 885,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 894,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 903,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 900,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 986,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 986,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 986,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 986,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 986,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 986,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 986,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 986,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 982,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 986,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 987,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								885,
								894,
								903
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 988,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 989,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "IERC165",
							"nameLocation": "431:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 997,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "817:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 991,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:7"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "860:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:7"
									},
									"scope": 998,
									"src": "790:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 999,
							"src": "421:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:7"
				},
				"id": 7
			},
			"packages/revolution-contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1001,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:8",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076
							],
							"name": "IERC20",
							"nameLocation": "213:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1010,
									"name": "Transfer",
									"nameLocation": "395:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "404:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "426:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "446:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:8"
									},
									"src": "389:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1019,
									"name": "Approval",
									"nameLocation": "626:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "635:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "658:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "683:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:8"
									},
									"src": "620:78:8"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:8",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:8"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "820:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:8"
									},
									"scope": 1076,
									"src": "774:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:8",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1033,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "930:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:8"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "970:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:8"
									},
									"scope": 1076,
									"src": "911:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:8",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1043,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1221:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1233:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:8"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1266:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:8"
									},
									"scope": 1076,
									"src": "1203:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1566:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1581:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:8"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1621:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:8"
									},
									"scope": 1076,
									"src": "1547:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:8",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2325:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2342:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:8"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2375:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1060,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:8"
									},
									"scope": 1076,
									"src": "2308:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:8",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "2711:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "2725:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "2737:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:8"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "2770:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:8"
									},
									"scope": 1076,
									"src": "2689:87:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "203:2575:8",
							"usedErrors": [],
							"usedEvents": [
								1010,
								1019
							]
						}
					],
					"src": "106:2673:8"
				},
				"id": 8
			},
			"packages/revolution-contracts/VerbsAuctionHouse.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/VerbsAuctionHouse.sol",
					"exportedSymbols": {
						"ICultureIndex": [
							2029
						],
						"IERC20": [
							869
						],
						"ITokenEmitter": [
							2089
						],
						"IVerbsAuctionHouse": [
							2181
						],
						"IVerbsToken": [
							2294
						],
						"IWETH": [
							2314
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							662
						],
						"ReentrancyGuardUpgradeable": [
							791
						],
						"VerbsAuctionHouse": [
							1833
						],
						"wadDiv": [
							2392
						],
						"wadMul": [
							2381
						]
					},
					"id": 1834,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "1369:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"id": 1080,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1834,
							"sourceUnit": 663,
							"src": "1395:104:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1079,
										"name": "PausableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "1404:19:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"id": 1082,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1834,
							"sourceUnit": 792,
							"src": "1500:118:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1081,
										"name": "ReentrancyGuardUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 791,
										"src": "1509:26:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1084,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1834,
							"sourceUnit": 195,
							"src": "1619:103:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1083,
										"name": "OwnableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 194,
										"src": "1628:18:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1086,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1834,
							"sourceUnit": 870,
							"src": "1723:72:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1085,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 869,
										"src": "1732:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/IVerbsAuctionHouse.sol",
							"file": "./interfaces/IVerbsAuctionHouse.sol",
							"id": 1088,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1834,
							"sourceUnit": 2182,
							"src": "1796:73:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1087,
										"name": "IVerbsAuctionHouse",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2181,
										"src": "1805:18:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/IVerbsToken.sol",
							"file": "./interfaces/IVerbsToken.sol",
							"id": 1090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1834,
							"sourceUnit": 2295,
							"src": "1870:59:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1089,
										"name": "IVerbsToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2294,
										"src": "1879:11:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/IWETH.sol",
							"file": "./interfaces/IWETH.sol",
							"id": 1092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1834,
							"sourceUnit": 2315,
							"src": "1930:47:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1091,
										"name": "IWETH",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2314,
										"src": "1939:5:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/ITokenEmitter.sol",
							"file": "./interfaces/ITokenEmitter.sol",
							"id": 1094,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1834,
							"sourceUnit": 2090,
							"src": "1978:63:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1093,
										"name": "ITokenEmitter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2089,
										"src": "1987:13:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/libs/SignedWadMath.sol",
							"file": "./libs/SignedWadMath.sol",
							"id": 1097,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1834,
							"sourceUnit": 2840,
							"src": "2042:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1095,
										"name": "wadMul",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2381,
										"src": "2051:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1096,
										"name": "wadDiv",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2392,
										"src": "2059:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/ICultureIndex.sol",
							"file": "./interfaces/ICultureIndex.sol",
							"id": 1099,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1834,
							"sourceUnit": 2030,
							"src": "2101:63:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1098,
										"name": "ICultureIndex",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2029,
										"src": "2110:13:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1100,
										"name": "IVerbsAuctionHouse",
										"nameLocations": [
											"2196:18:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2181,
										"src": "2196:18:9"
									},
									"id": 1101,
									"nodeType": "InheritanceSpecifier",
									"src": "2196:18:9"
								},
								{
									"baseName": {
										"id": 1102,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"2216:19:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "2216:19:9"
									},
									"id": 1103,
									"nodeType": "InheritanceSpecifier",
									"src": "2216:19:9"
								},
								{
									"baseName": {
										"id": 1104,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"2237:26:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 791,
										"src": "2237:26:9"
									},
									"id": 1105,
									"nodeType": "InheritanceSpecifier",
									"src": "2237:26:9"
								},
								{
									"baseName": {
										"id": 1106,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"2265:18:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "2265:18:9"
									},
									"id": 1107,
									"nodeType": "InheritanceSpecifier",
									"src": "2265:18:9"
								}
							],
							"canonicalName": "VerbsAuctionHouse",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1833,
							"linearizedBaseContracts": [
								1833,
								194,
								791,
								662,
								486,
								448,
								2181
							],
							"name": "VerbsAuctionHouse",
							"nameLocation": "2175:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0284464a",
									"id": 1110,
									"mutability": "mutable",
									"name": "verbs",
									"nameLocation": "2348:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1833,
									"src": "2329:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVerbsToken_$2294",
										"typeString": "contract IVerbsToken"
									},
									"typeName": {
										"id": 1109,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1108,
											"name": "IVerbsToken",
											"nameLocations": [
												"2329:11:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2294,
											"src": "2329:11:9"
										},
										"referencedDeclaration": 2294,
										"src": "2329:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVerbsToken_$2294",
											"typeString": "contract IVerbsToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3d64baf1",
									"id": 1113,
									"mutability": "mutable",
									"name": "tokenEmitter",
									"nameLocation": "2415:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1833,
									"src": "2394:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokenEmitter_$2089",
										"typeString": "contract ITokenEmitter"
									},
									"typeName": {
										"id": 1112,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1111,
											"name": "ITokenEmitter",
											"nameLocations": [
												"2394:13:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2089,
											"src": "2394:13:9"
										},
										"referencedDeclaration": 2089,
										"src": "2394:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenEmitter_$2089",
											"typeString": "contract ITokenEmitter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fc8cef3",
									"id": 1115,
									"mutability": "mutable",
									"name": "weth",
									"nameLocation": "2489:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 1833,
									"src": "2474:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1114,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2474:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec91f2a4",
									"id": 1117,
									"mutability": "mutable",
									"name": "timeBuffer",
									"nameLocation": "2595:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1833,
									"src": "2580:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2580:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "db2e1eed",
									"id": 1119,
									"mutability": "mutable",
									"name": "reservePrice",
									"nameLocation": "2675:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1833,
									"src": "2660:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1118,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2660:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b296024d",
									"id": 1121,
									"mutability": "mutable",
									"name": "minBidIncrementPercentage",
									"nameLocation": "2796:25:9",
									"nodeType": "VariableDeclaration",
									"scope": 1833,
									"src": "2783:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1120,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2783:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0802be0a",
									"id": 1123,
									"mutability": "mutable",
									"name": "creatorRateBps",
									"nameLocation": "2940:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1833,
									"src": "2925:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2925:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe95233b",
									"id": 1125,
									"mutability": "mutable",
									"name": "entropyRateBps",
									"nameLocation": "3082:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1833,
									"src": "3067:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1124,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3067:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fb5a6b4",
									"id": 1127,
									"mutability": "mutable",
									"name": "duration",
									"nameLocation": "3158:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1833,
									"src": "3143:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3143:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d9f6db5",
									"id": 1130,
									"mutability": "mutable",
									"name": "auction",
									"nameLocation": "3233:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1833,
									"src": "3199:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Auction_$2104_storage",
										"typeString": "struct IVerbsAuctionHouse.Auction"
									},
									"typeName": {
										"id": 1129,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1128,
											"name": "IVerbsAuctionHouse.Auction",
											"nameLocations": [
												"3199:18:9",
												"3218:7:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2104,
											"src": "3199:26:9"
										},
										"referencedDeclaration": 2104,
										"src": "3199:26:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Auction_$2104_storage_ptr",
											"typeString": "struct IVerbsAuctionHouse.Auction"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "3796:456:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1158,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3806:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3806:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "3806:17:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1161,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3833:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "3833:24:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "_founder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "3882:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1164,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3867:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3867:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "3867:24:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1168,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "3902:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3902:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "3902:8:9"
											},
											{
												"expression": {
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "verbs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "3921:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVerbsToken_$2294",
															"typeString": "contract IVerbsToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1172,
														"name": "_verbs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "3929:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVerbsToken_$2294",
															"typeString": "contract IVerbsToken"
														}
													},
													"src": "3921:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVerbsToken_$2294",
														"typeString": "contract IVerbsToken"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "3921:14:9"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "tokenEmitter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "3945:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenEmitter_$2089",
															"typeString": "contract ITokenEmitter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1176,
														"name": "_tokenEmitter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "3960:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenEmitter_$2089",
															"typeString": "contract ITokenEmitter"
														}
													},
													"src": "3945:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenEmitter_$2089",
														"typeString": "contract ITokenEmitter"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "3945:28:9"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1179,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "3983:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1180,
														"name": "_weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "3990:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3983:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "3983:12:9"
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "timeBuffer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "4005:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1184,
														"name": "_timeBuffer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "4018:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4005:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "4005:24:9"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "reservePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "4039:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1188,
														"name": "_reservePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "4054:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4039:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "4039:28:9"
											},
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1191,
														"name": "minBidIncrementPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "4077:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1192,
														"name": "_minBidIncrementPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "4105:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4077:54:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "4077:54:9"
											},
											{
												"expression": {
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1195,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "4141:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1196,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "4152:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4141:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "4141:20:9"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1199,
														"name": "creatorRateBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "4171:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1200,
														"name": "_creatorRateBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "4188:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4171:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "4171:32:9"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1203,
														"name": "entropyRateBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "4213:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1204,
														"name": "_entropyRateBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "4230:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4213:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "4213:32:9"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "3247:188:9",
										"text": " @notice Initialize the auction house and base contracts,\n populate configuration values, and pause the contract.\n @dev This function can only be called once."
									},
									"functionSelector": "a910d318",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1156,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1155,
												"name": "initializer",
												"nameLocations": [
													"3784:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "3784:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3784:11:9"
										}
									],
									"name": "initialize",
									"nameLocation": "3449:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "_verbs",
												"nameLocation": "3481:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3469:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVerbsToken_$2294",
													"typeString": "contract IVerbsToken"
												},
												"typeName": {
													"id": 1133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1132,
														"name": "IVerbsToken",
														"nameLocations": [
															"3469:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2294,
														"src": "3469:11:9"
													},
													"referencedDeclaration": 2294,
													"src": "3469:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVerbsToken_$2294",
														"typeString": "contract IVerbsToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_tokenEmitter",
												"nameLocation": "3511:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3497:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITokenEmitter_$2089",
													"typeString": "contract ITokenEmitter"
												},
												"typeName": {
													"id": 1136,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1135,
														"name": "ITokenEmitter",
														"nameLocations": [
															"3497:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2089,
														"src": "3497:13:9"
													},
													"referencedDeclaration": 2089,
													"src": "3497:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenEmitter_$2089",
														"typeString": "contract ITokenEmitter"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "3542:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3534:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "_founder",
												"nameLocation": "3565:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3557:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3557:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "_timeBuffer",
												"nameLocation": "3591:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3583:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3583:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "_reservePrice",
												"nameLocation": "3620:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3612:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "_minBidIncrementPercentage",
												"nameLocation": "3649:26:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3643:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1146,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3643:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "3693:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3685:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3685:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "_creatorRateBps",
												"nameLocation": "3720:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3712:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3712:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "_entropyRateBps",
												"nameLocation": "3753:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3745:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3459:315:9"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3796:0:9"
									},
									"scope": 1833,
									"src": "3440:812:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2154
									],
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "4450:59:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1217,
														"name": "_settleAuction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "4460:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4460:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "4460:16:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1220,
														"name": "_createAuction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "4486:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4486:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "4486:16:9"
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "4258:98:9",
										"text": " @notice Settle the current auction, mint a new Verb, and put it up for auction."
									},
									"functionSelector": "f25efffc",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1213,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1212,
												"name": "nonReentrant",
												"nameLocations": [
													"4423:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 731,
												"src": "4423:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4423:12:9"
										},
										{
											"id": 1215,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1214,
												"name": "whenNotPaused",
												"nameLocations": [
													"4436:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 564,
												"src": "4436:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4436:13:9"
										}
									],
									"name": "settleCurrentAndCreateNewAuction",
									"nameLocation": "4370:32:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1211,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4414:8:9"
									},
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4402:2:9"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4450:0:9"
									},
									"scope": 1833,
									"src": "4361:148:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2151
									],
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "4715:33:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1233,
														"name": "_settleAuction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "4725:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4725:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "4725:16:9"
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "4515:128:9",
										"text": " @notice Settle the current auction.\n @dev This function can only be called when the contract is paused."
									},
									"functionSelector": "a4d0a17e",
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1228,
												"name": "whenPaused",
												"nameLocations": [
													"4691:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 572,
												"src": "4691:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4691:10:9"
										},
										{
											"id": 1231,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1230,
												"name": "nonReentrant",
												"nameLocations": [
													"4702:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 731,
												"src": "4702:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4702:12:9"
										}
									],
									"name": "settleAuction",
									"nameLocation": "4657:13:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4682:8:9"
									},
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4670:2:9"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4715:0:9"
									},
									"scope": 1833,
									"src": "4648:100:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2159
									],
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "4960:1237:9",
										"statements": [
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "_auction",
														"nameLocation": "5004:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1377,
														"src": "4970:42:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
															"typeString": "struct IVerbsAuctionHouse.Auction"
														},
														"typeName": {
															"id": 1249,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1248,
																"name": "IVerbsAuctionHouse.Auction",
																"nameLocations": [
																	"4970:18:9",
																	"4989:7:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2104,
																"src": "4970:26:9"
															},
															"referencedDeclaration": 2104,
															"src": "4970:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$2104_storage_ptr",
																"typeString": "struct IVerbsAuctionHouse.Auction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1252,
												"initialValue": {
													"id": 1251,
													"name": "auction",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1130,
													"src": "5015:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Auction_$2104_storage",
														"typeString": "struct IVerbsAuctionHouse.Auction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4970:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1254,
																	"name": "_auction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "5041:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																		"typeString": "struct IVerbsAuctionHouse.Auction memory"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5050:6:9",
																"memberName": "verbId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2093,
																"src": "5041:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1256,
																"name": "verbId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "5060:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5041:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657262206e6f7420757020666f722061756374696f6e",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5068:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f6e4cc8ee899178a4d47355e8312bf3a9810f0590ac98868c4bf7cd29669038",
																"typeString": "literal_string \"Verb not up for auction\""
															},
															"value": "Verb not up for auction"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f6e4cc8ee899178a4d47355e8312bf3a9810f0590ac98868c4bf7cd29669038",
																"typeString": "literal_string \"Verb not up for auction\""
															}
														],
														"id": 1253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5033:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5033:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "5033:61:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1262,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5112:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5118:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5112:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1264,
																	"name": "_auction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "5130:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																		"typeString": "struct IVerbsAuctionHouse.Auction memory"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5139:7:9",
																"memberName": "endTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2099,
																"src": "5130:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5112:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e2065787069726564",
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5148:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee94e7592a7417cc94816663e1b9b9938c69730980c3cab7a8fbc54ac5aa729f",
																"typeString": "literal_string \"Auction expired\""
															},
															"value": "Auction expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee94e7592a7417cc94816663e1b9b9938c69730980c3cab7a8fbc54ac5aa729f",
																"typeString": "literal_string \"Auction expired\""
															}
														],
														"id": 1261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5104:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5104:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "5104:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1271,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5184:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5188:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5184:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1273,
																"name": "reservePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "5197:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5184:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e64206174206c6561737420726573657276655072696365",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5211:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f1114d8c4309959c51172c5707cbe6c55f2c078aa19616a59453fa69d73427a",
																"typeString": "literal_string \"Must send at least reservePrice\""
															},
															"value": "Must send at least reservePrice"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f1114d8c4309959c51172c5707cbe6c55f2c078aa19616a59453fa69d73427a",
																"typeString": "literal_string \"Must send at least reservePrice\""
															}
														],
														"id": 1270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5176:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5176:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "5176:69:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1279,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5263:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5267:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5263:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1281,
																		"name": "_auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1250,
																		"src": "5276:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																			"typeString": "struct IVerbsAuctionHouse.Auction memory"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5285:6:9",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2095,
																	"src": "5276:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1286,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1283,
																								"name": "_auction",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1250,
																								"src": "5296:8:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																									"typeString": "struct IVerbsAuctionHouse.Auction memory"
																								}
																							},
																							"id": 1284,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5305:6:9",
																							"memberName": "amount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2095,
																							"src": "5296:15:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1285,
																							"name": "minBidIncrementPercentage",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1121,
																							"src": "5314:25:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "5296:43:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1287,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5295:45:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1288,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5343:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "5295:51:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1290,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5294:53:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5276:71:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5263:84:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e64206d6f7265207468616e206c61737420626964206279206d696e426964496e6372656d656e7450657263656e7461676520616d6f756e74",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5349:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b513ed4150a8292a1ae14f1a03ea954ba5eafbfd85827e99d503d442fdc652b",
																"typeString": "literal_string \"Must send more than last bid by minBidIncrementPercentage amount\""
															},
															"value": "Must send more than last bid by minBidIncrementPercentage amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b513ed4150a8292a1ae14f1a03ea954ba5eafbfd85827e99d503d442fdc652b",
																"typeString": "literal_string \"Must send more than last bid by minBidIncrementPercentage amount\""
															}
														],
														"id": 1278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5255:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5255:161:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "5255:161:9"
											},
											{
												"assignments": [
													1297
												],
												"declarations": [
													{
														"constant": false,
														"id": 1297,
														"mutability": "mutable",
														"name": "lastBidder",
														"nameLocation": "5443:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1377,
														"src": "5427:26:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 1296,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5427:15:9",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"expression": {
														"id": 1298,
														"name": "_auction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "5456:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
															"typeString": "struct IVerbsAuctionHouse.Auction memory"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5465:6:9",
													"memberName": "bidder",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2101,
													"src": "5456:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5427:44:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1301,
														"name": "lastBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "5535:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5557:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5549:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1302,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5549:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5549:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5535:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1314,
												"nodeType": "IfStatement",
												"src": "5531:112:9",
												"trueBody": {
													"id": 1313,
													"nodeType": "Block",
													"src": "5561:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1308,
																		"name": "lastBidder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "5604:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 1309,
																			"name": "_auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1250,
																			"src": "5616:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																				"typeString": "struct IVerbsAuctionHouse.Auction memory"
																			}
																		},
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5625:6:9",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2095,
																		"src": "5616:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1307,
																	"name": "_safeTransferETHWithFallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1806,
																	"src": "5575:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5575:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1312,
															"nodeType": "ExpressionStatement",
															"src": "5575:57:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1315,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "5653:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$2104_storage",
																"typeString": "struct IVerbsAuctionHouse.Auction storage ref"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5661:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2095,
														"src": "5653:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1318,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5670:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5674:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5670:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5653:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "5653:26:9"
											},
											{
												"expression": {
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1322,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "5689:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$2104_storage",
																"typeString": "struct IVerbsAuctionHouse.Auction storage ref"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5697:6:9",
														"memberName": "bidder",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2101,
														"src": "5689:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1327,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5714:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5718:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5714:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5706:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1325,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5706:8:9",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5706:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5689:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "5689:36:9"
											},
											{
												"assignments": [
													1333
												],
												"declarations": [
													{
														"constant": false,
														"id": 1333,
														"mutability": "mutable",
														"name": "extended",
														"nameLocation": "5839:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1377,
														"src": "5834:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1332,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5834:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1334,
																"name": "_auction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "5850:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																	"typeString": "struct IVerbsAuctionHouse.Auction memory"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5859:7:9",
															"memberName": "endTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2099,
															"src": "5850:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 1336,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5869:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5875:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5869:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5850:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1339,
														"name": "timeBuffer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "5887:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5850:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5834:63:9"
											},
											{
												"condition": {
													"id": 1342,
													"name": "extended",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1333,
													"src": "5911:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "5907:104:9",
												"trueBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "5921:90:9",
													"statements": [
														{
															"expression": {
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1343,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "5935:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$2104_storage",
																			"typeString": "struct IVerbsAuctionHouse.Auction storage ref"
																		}
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5943:7:9",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2099,
																	"src": "5935:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 1346,
																			"name": "_auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1250,
																			"src": "5953:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																				"typeString": "struct IVerbsAuctionHouse.Auction memory"
																			}
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "5962:7:9",
																		"memberName": "endTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2099,
																		"src": "5953:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1348,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "5972:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5978:9:9",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "5972:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1350,
																			"name": "timeBuffer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "5990:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5972:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5953:47:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5935:65:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1354,
															"nodeType": "ExpressionStatement",
															"src": "5935:65:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1358,
																"name": "_auction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "6037:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																	"typeString": "struct IVerbsAuctionHouse.Auction memory"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6046:6:9",
															"memberName": "verbId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2093,
															"src": "6037:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1360,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6054:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6058:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6054:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6066:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6070:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6066:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1364,
															"name": "extended",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "6077:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1357,
														"name": "AuctionBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2122,
														"src": "6026:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,uint256,bool)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6026:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "EmitStatement",
												"src": "6021:65:9"
											},
											{
												"condition": {
													"id": 1367,
													"name": "extended",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1333,
													"src": "6101:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "IfStatement",
												"src": "6097:94:9",
												"trueBody": {
													"id": 1375,
													"nodeType": "Block",
													"src": "6111:80:9",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1369,
																			"name": "_auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1250,
																			"src": "6146:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																				"typeString": "struct IVerbsAuctionHouse.Auction memory"
																			}
																		},
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6155:6:9",
																		"memberName": "verbId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2093,
																		"src": "6146:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1371,
																			"name": "_auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1250,
																			"src": "6163:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																				"typeString": "struct IVerbsAuctionHouse.Auction memory"
																			}
																		},
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6172:7:9",
																		"memberName": "endTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2099,
																		"src": "6163:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1368,
																	"name": "AuctionExtended",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "6130:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6130:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1374,
															"nodeType": "EmitStatement",
															"src": "6125:55:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "4754:127:9",
										"text": " @notice Create a bid for a Verb, with a given amount.\n @dev This contract only accepts payment in ETH."
									},
									"functionSelector": "659dd2b4",
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1244,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1243,
												"name": "nonReentrant",
												"nameLocations": [
													"4947:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 731,
												"src": "4947:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4947:12:9"
										}
									],
									"name": "createBid",
									"nameLocation": "4895:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1242,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4938:8:9"
									},
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "verbId",
												"nameLocation": "4913:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "4905:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4905:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4904:16:9"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4960:0:9"
									},
									"scope": 1833,
									"src": "4886:1311:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2162
									],
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "6501:25:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1385,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "6511:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6511:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "6511:8:9"
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "6203:248:9",
										"text": " @notice Pause the Verbs auction house.\n @dev This function can only be called by the owner when the\n contract is unpaused. While no new auctions can be started when paused,\n anyone can settle an ongoing auction."
									},
									"functionSelector": "8456cb59",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1382,
												"name": "onlyOwner",
												"nameLocations": [
													"6491:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "6491:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6491:9:9"
										}
									],
									"name": "pause",
									"nameLocation": "6465:5:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1381,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6482:8:9"
									},
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6470:2:9"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6501:0:9"
									},
									"scope": 1833,
									"src": "6456:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2165
									],
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "6790:125:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1396,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6800:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6800:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "6800:10:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1399,
																"name": "auction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "6825:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Auction_$2104_storage",
																	"typeString": "struct IVerbsAuctionHouse.Auction storage ref"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6833:9:9",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2097,
															"src": "6825:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6846:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6825:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"expression": {
															"id": 1403,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "6851:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$2104_storage",
																"typeString": "struct IVerbsAuctionHouse.Auction storage ref"
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6859:7:9",
														"memberName": "settled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2103,
														"src": "6851:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6825:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1410,
												"nodeType": "IfStatement",
												"src": "6821:88:9",
												"trueBody": {
													"id": 1409,
													"nodeType": "Block",
													"src": "6868:41:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1406,
																	"name": "_createAuction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "6882:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6882:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1408,
															"nodeType": "ExpressionStatement",
															"src": "6882:16:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "6532:206:9",
										"text": " @notice Unpause the Verbs auction house.\n @dev This function can only be called by the owner when the\n contract is paused. If required, this function will start a new auction."
									},
									"functionSelector": "3f4ba83a",
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1394,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1393,
												"name": "onlyOwner",
												"nameLocations": [
													"6780:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "6780:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6780:9:9"
										}
									],
									"name": "unpause",
									"nameLocation": "6752:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6771:8:9"
									},
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6759:2:9"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6790:0:9"
									},
									"scope": 1833,
									"src": "6743:172:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2170
									],
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "7093:94:9",
										"statements": [
											{
												"expression": {
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1421,
														"name": "timeBuffer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "7103:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1422,
														"name": "_timeBuffer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "7116:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7103:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "7103:24:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1426,
															"name": "_timeBuffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "7168:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1425,
														"name": "AuctionTimeBufferUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2140,
														"src": "7143:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7143:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "EmitStatement",
												"src": "7138:42:9"
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "6921:95:9",
										"text": " @notice Set the auction time buffer.\n @dev Only callable by the owner."
									},
									"functionSelector": "7120334b",
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1419,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1418,
												"name": "onlyOwner",
												"nameLocations": [
													"7083:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7083:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7083:9:9"
										}
									],
									"name": "setTimeBuffer",
									"nameLocation": "7030:13:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1417,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7074:8:9"
									},
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "_timeBuffer",
												"nameLocation": "7052:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "7044:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7044:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7043:21:9"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7093:0:9"
									},
									"scope": 1833,
									"src": "7021:166:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2175
									],
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "7371:102:9",
										"statements": [
											{
												"expression": {
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1439,
														"name": "reservePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "7381:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1440,
														"name": "_reservePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "7396:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7381:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "7381:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1444,
															"name": "_reservePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "7452:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1443,
														"name": "AuctionReservePriceUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "7425:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "EmitStatement",
												"src": "7420:46:9"
											}
										]
									},
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "7193:97:9",
										"text": " @notice Set the auction reserve price.\n @dev Only callable by the owner."
									},
									"functionSelector": "ce9c7c0d",
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1437,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1436,
												"name": "onlyOwner",
												"nameLocations": [
													"7361:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7361:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7361:9:9"
										}
									],
									"name": "setReservePrice",
									"nameLocation": "7304:15:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1435,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7352:8:9"
									},
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "_reservePrice",
												"nameLocation": "7328:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7320:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7320:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7319:23:9"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7371:0:9"
									},
									"scope": 1833,
									"src": "7295:178:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2180
									],
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "7700:154:9",
										"statements": [
											{
												"expression": {
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1457,
														"name": "minBidIncrementPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "7710:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1458,
														"name": "_minBidIncrementPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "7738:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7710:54:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "7710:54:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1462,
															"name": "_minBidIncrementPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "7820:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1461,
														"name": "AuctionMinBidIncrementPercentageUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "7780:39:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7780:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "EmitStatement",
												"src": "7775:72:9"
											}
										]
									},
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "7479:116:9",
										"text": " @notice Set the auction minimum bid increment percentage.\n @dev Only callable by the owner."
									},
									"functionSelector": "36ebdb38",
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1455,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1454,
												"name": "onlyOwner",
												"nameLocations": [
													"7690:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7690:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7690:9:9"
										}
									],
									"name": "setMinBidIncrementPercentage",
									"nameLocation": "7609:28:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1453,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7681:8:9"
									},
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "_minBidIncrementPercentage",
												"nameLocation": "7644:26:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "7638:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1450,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7638:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7637:34:9"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7700:0:9"
									},
									"scope": 1833,
									"src": "7600:254:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "8202:432:9",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1507,
															"nodeType": "Block",
															"src": "8254:313:9",
															"statements": [
																{
																	"assignments": [
																		1477
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1477,
																			"mutability": "mutable",
																			"name": "startTime",
																			"nameLocation": "8276:9:9",
																			"nodeType": "VariableDeclaration",
																			"scope": 1507,
																			"src": "8268:17:9",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1476,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8268:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1480,
																	"initialValue": {
																		"expression": {
																			"id": 1478,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "8288:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8294:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "8288:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8268:35:9"
																},
																{
																	"assignments": [
																		1482
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1482,
																			"mutability": "mutable",
																			"name": "endTime",
																			"nameLocation": "8325:7:9",
																			"nodeType": "VariableDeclaration",
																			"scope": 1507,
																			"src": "8317:15:9",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1481,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8317:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1486,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1483,
																			"name": "startTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1477,
																			"src": "8335:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1484,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "8347:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8335:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8317:38:9"
																},
																{
																	"expression": {
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1487,
																			"name": "auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1130,
																			"src": "8370:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$2104_storage",
																				"typeString": "struct IVerbsAuctionHouse.Auction storage ref"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1489,
																					"name": "verbId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "8398:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1490,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8414:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				{
																					"id": 1491,
																					"name": "startTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1477,
																					"src": "8428:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1492,
																					"name": "endTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1482,
																					"src": "8448:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1495,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8473:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1494,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "8465:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 1493,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "8465:8:9",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1496,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8465:10:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"hexValue": "66616c7365",
																					"id": 1497,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8486:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 1488,
																				"name": "Auction",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2104,
																				"src": "8380:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_struct$_Auction_$2104_storage_ptr_$",
																					"typeString": "type(struct IVerbsAuctionHouse.Auction storage pointer)"
																				}
																			},
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "structConstructorCall",
																			"lValueRequested": false,
																			"nameLocations": [
																				"8390:6:9",
																				"8406:6:9",
																				"8417:9:9",
																				"8439:7:9",
																				"8457:6:9",
																				"8477:7:9"
																			],
																			"names": [
																				"verbId",
																				"amount",
																				"startTime",
																				"endTime",
																				"bidder",
																				"settled"
																			],
																			"nodeType": "FunctionCall",
																			"src": "8380:114:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																				"typeString": "struct IVerbsAuctionHouse.Auction memory"
																			}
																		},
																		"src": "8370:124:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$2104_storage",
																			"typeString": "struct IVerbsAuctionHouse.Auction storage ref"
																		}
																	},
																	"id": 1500,
																	"nodeType": "ExpressionStatement",
																	"src": "8370:124:9"
																},
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 1502,
																				"name": "verbId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1474,
																				"src": "8529:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1503,
																				"name": "startTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1477,
																				"src": "8537:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1504,
																				"name": "endTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1482,
																				"src": "8548:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1501,
																			"name": "AuctionCreated",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2112,
																			"src": "8514:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (uint256,uint256,uint256)"
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8514:42:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1506,
																	"nodeType": "EmitStatement",
																	"src": "8509:47:9"
																}
															]
														},
														"errorName": "",
														"id": 1508,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1475,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1474,
																	"mutability": "mutable",
																	"name": "verbId",
																	"nameLocation": "8246:6:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1508,
																	"src": "8238:14:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1473,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8238:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "8237:16:9"
														},
														"src": "8229:338:9"
													},
													{
														"block": {
															"id": 1515,
															"nodeType": "Block",
															"src": "8595:33:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1512,
																			"name": "_pause",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "8609:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																				"typeString": "function ()"
																			}
																		},
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8609:8:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1514,
																	"nodeType": "ExpressionStatement",
																	"src": "8609:8:9"
																}
															]
														},
														"errorName": "Error",
														"id": 1516,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1511,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1510,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1516,
																	"src": "8580:13:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1509,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "8580:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "8579:15:9"
														},
														"src": "8568:60:9"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1470,
															"name": "verbs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "8216:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVerbsToken_$2294",
																"typeString": "contract IVerbsToken"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8222:4:9",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2253,
														"src": "8216:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () external returns (uint256)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8216:12:9",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1517,
												"nodeType": "TryStatement",
												"src": "8212:416:9"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "7860:302:9",
										"text": " @notice Create an auction.\n @dev Store the auction details in the `auction` state variable and emit an AuctionCreated event.\n If the mint reverts, the minter was updated without pausing this contract first. To remedy this,\n catch the revert and pause this contract."
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createAuction",
									"nameLocation": "8176:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8190:2:9"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8202:0:9"
									},
									"scope": 1833,
									"src": "8167:467:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "8827:2617:9",
										"statements": [
											{
												"assignments": [
													1527
												],
												"declarations": [
													{
														"constant": false,
														"id": 1527,
														"mutability": "mutable",
														"name": "_auction",
														"nameLocation": "8871:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1773,
														"src": "8837:42:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
															"typeString": "struct IVerbsAuctionHouse.Auction"
														},
														"typeName": {
															"id": 1526,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1525,
																"name": "IVerbsAuctionHouse.Auction",
																"nameLocations": [
																	"8837:18:9",
																	"8856:7:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2104,
																"src": "8837:26:9"
															},
															"referencedDeclaration": 2104,
															"src": "8837:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$2104_storage_ptr",
																"typeString": "struct IVerbsAuctionHouse.Auction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1529,
												"initialValue": {
													"id": 1528,
													"name": "auction",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1130,
													"src": "8882:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Auction_$2104_storage",
														"typeString": "struct IVerbsAuctionHouse.Auction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8837:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1531,
																	"name": "_auction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "8908:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																		"typeString": "struct IVerbsAuctionHouse.Auction memory"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8917:9:9",
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2097,
																"src": "8908:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8930:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8908:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e206861736e277420626567756e",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8933:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59b32fee736cce03c77d145dd4099c3c4e1280b1dad0ad62e9e284b4fe62ad45",
																"typeString": "literal_string \"Auction hasn't begun\""
															},
															"value": "Auction hasn't begun"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59b32fee736cce03c77d145dd4099c3c4e1280b1dad0ad62e9e284b4fe62ad45",
																"typeString": "literal_string \"Auction hasn't begun\""
															}
														],
														"id": 1530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8900:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8900:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "8900:56:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8974:17:9",
															"subExpression": {
																"expression": {
																	"id": 1539,
																	"name": "_auction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "8975:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																		"typeString": "struct IVerbsAuctionHouse.Auction memory"
																	}
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8984:7:9",
																"memberName": "settled",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2103,
																"src": "8975:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e2068617320616c7265616479206265656e20736574746c6564",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8993:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b9c19275b9276d9745a484d1a2df68f7756a1cb166850daf9e0b5df0b846571",
																"typeString": "literal_string \"Auction has already been settled\""
															},
															"value": "Auction has already been settled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b9c19275b9276d9745a484d1a2df68f7756a1cb166850daf9e0b5df0b846571",
																"typeString": "literal_string \"Auction has already been settled\""
															}
														],
														"id": 1538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8966:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8966:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "8966:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1546,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9046:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9052:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "9046:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1548,
																	"name": "_auction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "9065:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																		"typeString": "struct IVerbsAuctionHouse.Auction memory"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9074:7:9",
																"memberName": "endTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2099,
																"src": "9065:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9046:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e206861736e277420636f6d706c65746564",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9083:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e27b8c83269c21fc917b88c4e1199f3cd97455682e8857f3f234160d3fa4df70",
																"typeString": "literal_string \"Auction hasn't completed\""
															},
															"value": "Auction hasn't completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e27b8c83269c21fc917b88c4e1199f3cd97455682e8857f3f234160d3fa4df70",
																"typeString": "literal_string \"Auction hasn't completed\""
															}
														],
														"id": 1545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9038:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9038:72:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "9038:72:9"
											},
											{
												"expression": {
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1554,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "9121:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$2104_storage",
																"typeString": "struct IVerbsAuctionHouse.Auction storage ref"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9129:7:9",
														"memberName": "settled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2103,
														"src": "9121:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9139:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9121:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "9121:22:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1560,
															"name": "_auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "9158:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																"typeString": "struct IVerbsAuctionHouse.Auction memory"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9167:6:9",
														"memberName": "bidder",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2101,
														"src": "9158:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9185:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9177:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1562,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9177:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9177:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9158:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1588,
													"nodeType": "Block",
													"src": "9247:92:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1580,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "9288:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_VerbsAuctionHouse_$1833",
																					"typeString": "contract VerbsAuctionHouse"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_VerbsAuctionHouse_$1833",
																					"typeString": "contract VerbsAuctionHouse"
																				}
																			],
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9280:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1578,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9280:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9280:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1582,
																			"name": "_auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1527,
																			"src": "9295:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																				"typeString": "struct IVerbsAuctionHouse.Auction memory"
																			}
																		},
																		"id": 1583,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9304:6:9",
																		"memberName": "bidder",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2101,
																		"src": "9295:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 1584,
																			"name": "_auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1527,
																			"src": "9312:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																				"typeString": "struct IVerbsAuctionHouse.Auction memory"
																			}
																		},
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9321:6:9",
																		"memberName": "verbId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2093,
																		"src": "9312:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1575,
																		"name": "verbs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "9261:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVerbsToken_$2294",
																			"typeString": "contract IVerbsToken"
																		}
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9267:12:9",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 951,
																	"src": "9261:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9261:67:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1587,
															"nodeType": "ExpressionStatement",
															"src": "9261:67:9"
														}
													]
												},
												"id": 1589,
												"nodeType": "IfStatement",
												"src": "9154:185:9",
												"trueBody": {
													"id": 1574,
													"nodeType": "Block",
													"src": "9189:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1570,
																			"name": "_auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1527,
																			"src": "9214:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																				"typeString": "struct IVerbsAuctionHouse.Auction memory"
																			}
																		},
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9223:6:9",
																		"memberName": "verbId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2093,
																		"src": "9214:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1567,
																		"name": "verbs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "9203:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVerbsToken_$2294",
																			"typeString": "contract IVerbsToken"
																		}
																	},
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9209:4:9",
																	"memberName": "burn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2258,
																	"src": "9203:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9203:27:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1573,
															"nodeType": "ExpressionStatement",
															"src": "9203:27:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1590,
															"name": "_auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "9353:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																"typeString": "struct IVerbsAuctionHouse.Auction memory"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9362:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2095,
														"src": "9353:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9371:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9353:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1763,
												"nodeType": "IfStatement",
												"src": "9349:2008:9",
												"trueBody": {
													"id": 1762,
													"nodeType": "Block",
													"src": "9374:1983:9",
													"statements": [
														{
															"assignments": [
																1595
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1595,
																	"mutability": "mutable",
																	"name": "auctioneerPayment",
																	"nameLocation": "9447:17:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1762,
																	"src": "9439:25:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1594,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9439:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1615,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"expression": {
																									"id": 1602,
																									"name": "_auction",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1527,
																									"src": "9496:8:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																										"typeString": "struct IVerbsAuctionHouse.Auction memory"
																									}
																								},
																								"id": 1603,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "9505:6:9",
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2095,
																								"src": "9496:15:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1601,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "9489:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int256_$",
																								"typeString": "type(int256)"
																							},
																							"typeName": {
																								"id": 1600,
																								"name": "int256",
																								"nodeType": "ElementaryTypeName",
																								"src": "9489:6:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1604,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9489:23:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1610,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130303030",
																							"id": 1605,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9514:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10000_by_1",
																								"typeString": "int_const 10000"
																							},
																							"value": "10000"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 1608,
																									"name": "creatorRateBps",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1123,
																									"src": "9529:14:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1607,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "9522:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1606,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "9522:6:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1609,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "9522:22:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "9514:30:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1599,
																					"name": "wadMul",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2381,
																					"src": "9482:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																						"typeString": "function (int256,int256) pure returns (int256)"
																					}
																				},
																				"id": 1611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9482:63:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			{
																				"hexValue": "3130303030",
																				"id": 1612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9547:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				{
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				}
																			],
																			"id": 1598,
																			"name": "wadDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2392,
																			"src": "9475:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																				"typeString": "function (int256,int256) pure returns (int256)"
																			}
																		},
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9475:78:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9467:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1596,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9467:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9467:87:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9439:115:9"
														},
														{
															"assignments": [
																1617
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1617,
																	"mutability": "mutable",
																	"name": "creatorPayment",
																	"nameLocation": "9630:14:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1762,
																	"src": "9622:22:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1616,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9622:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1622,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1618,
																		"name": "_auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "9647:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																			"typeString": "struct IVerbsAuctionHouse.Auction memory"
																		}
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9656:6:9",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2095,
																	"src": "9647:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1620,
																	"name": "auctioneerPayment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "9665:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9647:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9622:60:9"
														},
														{
															"assignments": [
																1624
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1624,
																	"mutability": "mutable",
																	"name": "creatorDirectPayment",
																	"nameLocation": "9762:20:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1762,
																	"src": "9754:28:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1623,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9754:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1641,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1631,
																								"name": "creatorPayment",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1617,
																								"src": "9814:14:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1630,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "9807:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int256_$",
																								"typeString": "type(int256)"
																							},
																							"typeName": {
																								"id": 1629,
																								"name": "int256",
																								"nodeType": "ElementaryTypeName",
																								"src": "9807:6:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1632,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9807:22:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"id": 1635,
																								"name": "entropyRateBps",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1125,
																								"src": "9838:14:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1634,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "9831:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int256_$",
																								"typeString": "type(int256)"
																							},
																							"typeName": {
																								"id": 1633,
																								"name": "int256",
																								"nodeType": "ElementaryTypeName",
																								"src": "9831:6:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9831:22:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1628,
																					"name": "wadMul",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2381,
																					"src": "9800:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																						"typeString": "function (int256,int256) pure returns (int256)"
																					}
																				},
																				"id": 1637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9800:54:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			{
																				"hexValue": "3130303030",
																				"id": 1638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9856:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				{
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				}
																			],
																			"id": 1627,
																			"name": "wadDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2392,
																			"src": "9793:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																				"typeString": "function (int256,int256) pure returns (int256)"
																			}
																		},
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9793:69:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9785:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1625,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9785:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9785:78:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9754:109:9"
														},
														{
															"assignments": [
																1643
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1643,
																	"mutability": "mutable",
																	"name": "creatorGovernancePayment",
																	"nameLocation": "9940:24:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1762,
																	"src": "9932:32:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1642,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9932:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1647,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1644,
																	"name": "creatorPayment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "9967:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1645,
																	"name": "creatorDirectPayment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "9984:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9967:37:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9932:72:9"
														},
														{
															"assignments": [
																1649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1649,
																	"mutability": "mutable",
																	"name": "numCreators",
																	"nameLocation": "10027:11:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1762,
																	"src": "10019:19:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1648,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10019:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1657,
															"initialValue": {
																"expression": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1652,
																					"name": "_auction",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1527,
																					"src": "10063:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																						"typeString": "struct IVerbsAuctionHouse.Auction memory"
																					}
																				},
																				"id": 1653,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10072:6:9",
																				"memberName": "verbId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2093,
																				"src": "10063:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1650,
																				"name": "verbs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1110,
																				"src": "10041:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IVerbsToken_$2294",
																					"typeString": "contract IVerbsToken"
																				}
																			},
																			"id": 1651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10047:15:9",
																			"memberName": "getArtPieceById",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2293,
																			"src": "10041:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_ArtPiece_$1940_memory_ptr_$",
																				"typeString": "function (uint256) view external returns (struct ICultureIndex.ArtPiece memory)"
																			}
																		},
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10041:38:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ArtPiece_$1940_memory_ptr",
																			"typeString": "struct ICultureIndex.ArtPiece memory"
																		}
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10080:8:9",
																	"memberName": "creators",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1935,
																	"src": "10041:47:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_CreatorBps_$1926_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct ICultureIndex.CreatorBps memory[] memory"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10089:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10041:54:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10019:76:9"
														},
														{
															"assignments": [
																1662
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1662,
																	"mutability": "mutable",
																	"name": "vrgdaReceivers",
																	"nameLocation": "10180:14:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1762,
																	"src": "10163:31:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1660,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10163:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1661,
																		"nodeType": "ArrayTypeName",
																		"src": "10163:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1668,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1666,
																		"name": "numCreators",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "10211:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "10197:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (address[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1663,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10201:7:9",
																			"stateMutability": "nonpayable",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1664,
																		"nodeType": "ArrayTypeName",
																		"src": "10201:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	}
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10197:26:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10163:60:9"
														},
														{
															"assignments": [
																1673
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1673,
																	"mutability": "mutable",
																	"name": "vrgdaSplits",
																	"nameLocation": "10254:11:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1762,
																	"src": "10237:28:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1671,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10237:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1672,
																		"nodeType": "ArrayTypeName",
																		"src": "10237:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1679,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1677,
																		"name": "numCreators",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "10282:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "10268:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (uint256[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1674,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10272:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1675,
																		"nodeType": "ArrayTypeName",
																		"src": "10272:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10268:26:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10237:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1681,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "10396:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10396:7:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1683,
																		"name": "auctioneerPayment",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "10405:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1680,
																	"name": "_safeTransferETHWithFallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1806,
																	"src": "10367:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10367:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1685,
															"nodeType": "ExpressionStatement",
															"src": "10367:56:9"
														},
														{
															"body": {
																"id": 1750,
																"nodeType": "Block",
																"src": "10596:562:9",
																"statements": [
																	{
																		"assignments": [
																			1700
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1700,
																				"mutability": "mutable",
																				"name": "creator",
																				"nameLocation": "10646:7:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1750,
																				"src": "10614:39:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_CreatorBps_$1926_memory_ptr",
																					"typeString": "struct ICultureIndex.CreatorBps"
																				},
																				"typeName": {
																					"id": 1699,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1698,
																						"name": "ICultureIndex.CreatorBps",
																						"nameLocations": [
																							"10614:13:9",
																							"10628:10:9"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1926,
																						"src": "10614:24:9"
																					},
																					"referencedDeclaration": 1926,
																					"src": "10614:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_CreatorBps_$1926_storage_ptr",
																						"typeString": "struct ICultureIndex.CreatorBps"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1709,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1703,
																								"name": "_auction",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1527,
																								"src": "10678:8:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																									"typeString": "struct IVerbsAuctionHouse.Auction memory"
																								}
																							},
																							"id": 1704,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10687:6:9",
																							"memberName": "verbId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2093,
																							"src": "10678:15:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1701,
																							"name": "verbs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1110,
																							"src": "10656:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IVerbsToken_$2294",
																								"typeString": "contract IVerbsToken"
																							}
																						},
																						"id": 1702,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10662:15:9",
																						"memberName": "getArtPieceById",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2293,
																						"src": "10656:21:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_ArtPiece_$1940_memory_ptr_$",
																							"typeString": "function (uint256) view external returns (struct ICultureIndex.ArtPiece memory)"
																						}
																					},
																					"id": 1705,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10656:38:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ArtPiece_$1940_memory_ptr",
																						"typeString": "struct ICultureIndex.ArtPiece memory"
																					}
																				},
																				"id": 1706,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10695:8:9",
																				"memberName": "creators",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1935,
																				"src": "10656:47:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_CreatorBps_$1926_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct ICultureIndex.CreatorBps memory[] memory"
																				}
																			},
																			"id": 1708,
																			"indexExpression": {
																				"id": 1707,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1687,
																				"src": "10704:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10656:50:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CreatorBps_$1926_memory_ptr",
																				"typeString": "struct ICultureIndex.CreatorBps memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10614:92:9"
																	},
																	{
																		"expression": {
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1710,
																					"name": "vrgdaReceivers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1662,
																					"src": "10724:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1712,
																				"indexExpression": {
																					"id": 1711,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1687,
																					"src": "10739:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "10724:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1713,
																					"name": "creator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1700,
																					"src": "10744:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_CreatorBps_$1926_memory_ptr",
																						"typeString": "struct ICultureIndex.CreatorBps memory"
																					}
																				},
																				"id": 1714,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10752:7:9",
																				"memberName": "creator",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1923,
																				"src": "10744:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "10724:35:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1716,
																		"nodeType": "ExpressionStatement",
																		"src": "10724:35:9"
																	},
																	{
																		"expression": {
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1717,
																					"name": "vrgdaSplits",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1673,
																					"src": "10777:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1719,
																				"indexExpression": {
																					"id": 1718,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1687,
																					"src": "10789:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "10777:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1720,
																					"name": "creator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1700,
																					"src": "10794:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_CreatorBps_$1926_memory_ptr",
																						"typeString": "struct ICultureIndex.CreatorBps memory"
																					}
																				},
																				"id": 1721,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10802:3:9",
																				"memberName": "bps",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1925,
																				"src": "10794:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10777:28:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1723,
																		"nodeType": "ExpressionStatement",
																		"src": "10777:28:9"
																	},
																	{
																		"assignments": [
																			1725
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1725,
																				"mutability": "mutable",
																				"name": "etherAmount",
																				"nameLocation": "10913:11:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1750,
																				"src": "10905:19:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1724,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10905:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1743,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"id": 1732,
																											"name": "creatorDirectPayment",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1624,
																											"src": "10956:20:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"id": 1731,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "10949:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_int256_$",
																											"typeString": "type(int256)"
																										},
																										"typeName": {
																											"id": 1730,
																											"name": "int256",
																											"nodeType": "ElementaryTypeName",
																											"src": "10949:6:9",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 1733,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "10949:28:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_int256",
																										"typeString": "int256"
																									}
																								},
																								{
																									"arguments": [
																										{
																											"expression": {
																												"id": 1736,
																												"name": "creator",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1700,
																												"src": "10986:7:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_CreatorBps_$1926_memory_ptr",
																													"typeString": "struct ICultureIndex.CreatorBps memory"
																												}
																											},
																											"id": 1737,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "10994:3:9",
																											"memberName": "bps",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1925,
																											"src": "10986:11:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"id": 1735,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "10979:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_int256_$",
																											"typeString": "type(int256)"
																										},
																										"typeName": {
																											"id": 1734,
																											"name": "int256",
																											"nodeType": "ElementaryTypeName",
																											"src": "10979:6:9",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 1738,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "10979:19:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_int256",
																										"typeString": "int256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int256",
																										"typeString": "int256"
																									},
																									{
																										"typeIdentifier": "t_int256",
																										"typeString": "int256"
																									}
																								],
																								"id": 1729,
																								"name": "wadMul",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2381,
																								"src": "10942:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																									"typeString": "function (int256,int256) pure returns (int256)"
																								}
																							},
																							"id": 1739,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "10942:57:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						{
																							"hexValue": "3130303030",
																							"id": 1740,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "11001:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10000_by_1",
																								"typeString": "int_const 10000"
																							},
																							"value": "10000"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							},
																							{
																								"typeIdentifier": "t_rational_10000_by_1",
																								"typeString": "int_const 10000"
																							}
																						],
																						"id": 1728,
																						"name": "wadDiv",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2392,
																						"src": "10935:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																							"typeString": "function (int256,int256) pure returns (int256)"
																						}
																					},
																					"id": 1741,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10935:72:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 1727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10927:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1726,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10927:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10927:81:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10905:103:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1745,
																						"name": "creator",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1700,
																						"src": "11114:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_CreatorBps_$1926_memory_ptr",
																							"typeString": "struct ICultureIndex.CreatorBps memory"
																						}
																					},
																					"id": 1746,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11122:7:9",
																					"memberName": "creator",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1923,
																					"src": "11114:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1747,
																					"name": "etherAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1725,
																					"src": "11131:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1744,
																				"name": "_safeTransferETHWithFallback",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1806,
																				"src": "11085:28:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11085:58:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1749,
																		"nodeType": "ExpressionStatement",
																		"src": "11085:58:9"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1690,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "10574:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1691,
																	"name": "numCreators",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "10578:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10574:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1751,
															"initializationExpression": {
																"assignments": [
																	1687
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1687,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "10567:1:9",
																		"nodeType": "VariableDeclaration",
																		"scope": 1751,
																		"src": "10559:9:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1686,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10559:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1689,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10571:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10559:13:9"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "10591:3:9",
																	"subExpression": {
																		"id": 1693,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "10591:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1695,
																"nodeType": "ExpressionStatement",
																"src": "10591:3:9"
															},
															"nodeType": "ForStatement",
															"src": "10554:604:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1757,
																		"name": "vrgdaReceivers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1662,
																		"src": "11292:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	{
																		"id": 1758,
																		"name": "vrgdaSplits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1673,
																		"src": "11308:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1759,
																		"name": "creatorGovernancePayment",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "11321:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1752,
																			"name": "tokenEmitter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "11235:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ITokenEmitter_$2089",
																				"typeString": "contract ITokenEmitter"
																			}
																		},
																		"id": 1754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11248:8:9",
																		"memberName": "buyToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2044,
																		"src": "11235:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address[] memory,uint256[] memory,uint256) payable external returns (uint256)"
																		}
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1755,
																			"name": "creatorGovernancePayment",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1643,
																			"src": "11265:24:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "11235:56:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$value",
																		"typeString": "function (address[] memory,uint256[] memory,uint256) payable external returns (uint256)"
																	}
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11235:111:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1761,
															"nodeType": "ExpressionStatement",
															"src": "11235:111:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1765,
																"name": "_auction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "11387:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																	"typeString": "struct IVerbsAuctionHouse.Auction memory"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11396:6:9",
															"memberName": "verbId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2093,
															"src": "11387:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1767,
																"name": "_auction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "11404:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																	"typeString": "struct IVerbsAuctionHouse.Auction memory"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11413:6:9",
															"memberName": "bidder",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2101,
															"src": "11404:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 1769,
																"name": "_auction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "11421:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Auction_$2104_memory_ptr",
																	"typeString": "struct IVerbsAuctionHouse.Auction memory"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11430:6:9",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2095,
															"src": "11421:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1764,
														"name": "AuctionSettled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "11372:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11372:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1772,
												"nodeType": "EmitStatement",
												"src": "11367:70:9"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "8640:147:9",
										"text": " @notice Settle an auction, finalizing the bid and paying out to the owner.\n @dev If there are no bids, the Verb is burned."
									},
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_settleAuction",
									"nameLocation": "8801:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8815:2:9"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8827:0:9"
									},
									"scope": 1833,
									"src": "8792:2652:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "11635:161:9",
										"statements": [
											{
												"condition": {
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11649:29:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1783,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "11667:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1784,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "11671:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1782,
															"name": "_safeTransferETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "11650:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) returns (bool)"
															}
														},
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1804,
												"nodeType": "IfStatement",
												"src": "11645:145:9",
												"trueBody": {
													"id": 1803,
													"nodeType": "Block",
													"src": "11680:110:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1788,
																					"name": "weth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1115,
																					"src": "11700:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1787,
																				"name": "IWETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2314,
																				"src": "11694:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IWETH_$2314_$",
																					"typeString": "type(contract IWETH)"
																				}
																			},
																			"id": 1789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11694:11:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWETH_$2314",
																				"typeString": "contract IWETH"
																			}
																		},
																		"id": 1790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11706:7:9",
																		"memberName": "deposit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2299,
																		"src": "11694:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$__$returns$__$",
																			"typeString": "function () payable external"
																		}
																	},
																	"id": 1792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1791,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1779,
																			"src": "11722:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "11694:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$__$value",
																		"typeString": "function () payable external"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11694:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1794,
															"nodeType": "ExpressionStatement",
															"src": "11694:38:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1799,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "11768:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1800,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "11772:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1796,
																				"name": "weth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1115,
																				"src": "11753:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1795,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "11746:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$869_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11746:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$869",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11759:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 836,
																	"src": "11746:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11746:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1802,
															"nodeType": "ExpressionStatement",
															"src": "11746:33:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "11450:105:9",
										"text": " @notice Transfer ETH. If the ETH transfer fails, wrap the ETH and try send it as WETH."
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferETHWithFallback",
									"nameLocation": "11569:28:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11606:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "11598:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11598:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11618:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "11610:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11610:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11597:28:9"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11635:0:9"
									},
									"scope": 1833,
									"src": "11560:236:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "12020:110:9",
										"statements": [
											{
												"assignments": [
													1817,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12036:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1831,
														"src": "12031:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1816,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12031:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1828,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12096:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "12086:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1823,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "12090:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12086:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1818,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "12049:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12052:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12049:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value",
															"gas"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1820,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "12065:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "33305f303030",
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12077:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30000_by_1",
																	"typeString": "int_const 30000"
																},
																"value": "30_000"
															}
														],
														"src": "12049:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12049:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12030:69:9"
											},
											{
												"expression": {
													"id": 1829,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1817,
													"src": "12116:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1830,
												"nodeType": "Return",
												"src": "12109:14:9"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "11802:136:9",
										"text": " @notice Transfer ETH and return the success status.\n @dev This function only forwards 30,000 gas to the callee."
									},
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferETH",
									"nameLocation": "11952:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11977:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "11969:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11969:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11989:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "11981:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11981:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11968:27:9"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "12014:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12014:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12013:6:9"
									},
									"scope": 1833,
									"src": "11943:187:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1834,
							"src": "2166:9966:9",
							"usedErrors": [
								30,
								35,
								211,
								214,
								525,
								528,
								693
							],
							"usedEvents": [
								41,
								219,
								517,
								522,
								2112,
								2122,
								2128,
								2136,
								2140,
								2144,
								2148
							]
						}
					],
					"src": "1369:10764:9"
				},
				"id": 9
			},
			"packages/revolution-contracts/interfaces/ICultureIndex.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/interfaces/ICultureIndex.sol",
					"exportedSymbols": {
						"ICultureIndex": [
							2029
						],
						"ICultureIndexEvents": [
							1897
						],
						"IERC20": [
							1076
						]
					},
					"id": 2030,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1835,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:10"
						},
						{
							"absolutePath": "packages/revolution-contracts/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2030,
							"sourceUnit": 1077,
							"src": "63:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1836,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1076,
										"src": "72:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICultureIndexEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1838,
								"nodeType": "StructuredDocumentation",
								"src": "104:110:10",
								"text": " @title ICultureIndexEvents\n @dev This interface defines the events for the CultureIndex contract."
							},
							"fullyImplemented": true,
							"id": 1897,
							"linearizedBaseContracts": [
								1897
							],
							"name": "ICultureIndexEvents",
							"nameLocation": "225:19:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "251:576:10",
										"text": " @dev Emitted when a new piece is created.\n @param pieceId Unique identifier for the newly created piece.\n @param dropper Address that created the piece.\n @param name Name of the art piece.\n @param description Description of the art piece.\n @param image URL for the image associated with the art piece.\n @param animationUrl (Optional) URL for the animation associated with the art piece.\n @param text Text content for the art piece.\n @param mediaType Integer representation of the media type for the art piece."
									},
									"eventSelector": "c6dda5d2a7a2baaaa424904e38bc3992b0dc78bfb2900bbdeca620424fa64570",
									"id": 1857,
									"name": "PieceCreated",
									"nameLocation": "838:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"indexed": true,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "876:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "860:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"indexed": true,
												"mutability": "mutable",
												"name": "dropper",
												"nameLocation": "909:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "893:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "933:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "926:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1844,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "926:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"indexed": false,
												"mutability": "mutable",
												"name": "description",
												"nameLocation": "954:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "947:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1846,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "947:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"indexed": false,
												"mutability": "mutable",
												"name": "image",
												"nameLocation": "982:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "975:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1848,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "975:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"indexed": false,
												"mutability": "mutable",
												"name": "animationUrl",
												"nameLocation": "1004:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "997:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "997:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"indexed": false,
												"mutability": "mutable",
												"name": "text",
												"nameLocation": "1033:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "1026:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1852,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1026:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"indexed": false,
												"mutability": "mutable",
												"name": "mediaType",
												"nameLocation": "1053:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "1047:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1854,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1047:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:218:10"
									},
									"src": "832:237:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "1075:196:10",
										"text": " @dev Emitted when a top-voted piece is dropped or released.\n @param pieceId Unique identifier for the dropped piece.\n @param remover Address that initiated the drop."
									},
									"eventSelector": "a9bd530a1a995fe2b42bddf7938e2e1acaef954cc9b31ffd1d13b7c3337502c8",
									"id": 1864,
									"name": "PieceDropped",
									"nameLocation": "1282:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"indexed": true,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "1311:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "1295:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1295:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"indexed": true,
												"mutability": "mutable",
												"name": "remover",
												"nameLocation": "1336:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "1320:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1294:50:10"
									},
									"src": "1276:69:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "1351:335:10",
										"text": " @dev Emitted for each creator added to a piece when it is dropped.\n @param pieceId Unique identifier for the dropped piece.\n @param creatorAddress Address of the creator.\n @param dropper Address that created the piece.\n @param bps Basis points associated with the creator for revenue sharing."
									},
									"eventSelector": "1d1b857a6a6c5e310602c1448332e9b2799ba4c6ae3d1fb7527b62828dc7b91d",
									"id": 1875,
									"name": "PieceDroppedCreator",
									"nameLocation": "1697:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"indexed": true,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "1733:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "1717:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"indexed": true,
												"mutability": "mutable",
												"name": "creatorAddress",
												"nameLocation": "1758:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "1742:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"indexed": true,
												"mutability": "mutable",
												"name": "dropper",
												"nameLocation": "1790:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "1774:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"indexed": false,
												"mutability": "mutable",
												"name": "bps",
												"nameLocation": "1807:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "1799:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:95:10"
									},
									"src": "1691:121:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "1818:300:10",
										"text": " @dev Emitted when a vote is cast for a piece.\n @param pieceId Unique identifier for the piece being voted for.\n @param voter Address of the voter.\n @param weight Weight of the vote.\n @param totalWeight Total weight of votes for the piece after the new vote."
									},
									"eventSelector": "0271f53eebbe20450d9578f28ec279231556c34545b30e2278d754ffd39cd63c",
									"id": 1886,
									"name": "VoteCast",
									"nameLocation": "2129:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"indexed": true,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "2154:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "2138:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"indexed": true,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "2179:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "2163:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2163:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "2194:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "2186:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalWeight",
												"nameLocation": "2210:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "2202:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:85:10"
									},
									"src": "2123:100:10"
								},
								{
									"anonymous": false,
									"eventSelector": "1cd5f4915fbea5fb35c9ebdfb2bfd7d12423db85aea22a9b5e92d6b0ec08fce1",
									"id": 1896,
									"name": "PieceCreatorAdded",
									"nameLocation": "2300:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"indexed": true,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "2334:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2318:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"indexed": true,
												"mutability": "mutable",
												"name": "creatorAddress",
												"nameLocation": "2359:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2343:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"indexed": true,
												"mutability": "mutable",
												"name": "dropper",
												"nameLocation": "2391:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2375:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"indexed": false,
												"mutability": "mutable",
												"name": "bps",
												"nameLocation": "2408:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2400:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:95:10"
									},
									"src": "2294:119:10"
								}
							],
							"scope": 2030,
							"src": "215:2200:10",
							"usedErrors": [],
							"usedEvents": [
								1857,
								1864,
								1875,
								1886,
								1896
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1899,
										"name": "ICultureIndexEvents",
										"nameLocations": [
											"2586:19:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1897,
										"src": "2586:19:10"
									},
									"id": 1900,
									"nodeType": "InheritanceSpecifier",
									"src": "2586:19:10"
								}
							],
							"canonicalName": "ICultureIndex",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1898,
								"nodeType": "StructuredDocumentation",
								"src": "2417:141:10",
								"text": " @title ICultureIndex\n @dev This interface defines the methods for the CultureIndex contract for art piece management and voting."
							},
							"fullyImplemented": false,
							"id": 2029,
							"linearizedBaseContracts": [
								2029,
								1897
							],
							"name": "ICultureIndex",
							"nameLocation": "2569:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ICultureIndex.MediaType",
									"id": 1907,
									"members": [
										{
											"id": 1901,
											"name": "NONE",
											"nameLocation": "2700:4:10",
											"nodeType": "EnumValue",
											"src": "2700:4:10"
										},
										{
											"id": 1902,
											"name": "IMAGE",
											"nameLocation": "2714:5:10",
											"nodeType": "EnumValue",
											"src": "2714:5:10"
										},
										{
											"id": 1903,
											"name": "ANIMATION",
											"nameLocation": "2729:9:10",
											"nodeType": "EnumValue",
											"src": "2729:9:10"
										},
										{
											"id": 1904,
											"name": "AUDIO",
											"nameLocation": "2748:5:10",
											"nodeType": "EnumValue",
											"src": "2748:5:10"
										},
										{
											"id": 1905,
											"name": "TEXT",
											"nameLocation": "2763:4:10",
											"nodeType": "EnumValue",
											"src": "2763:4:10"
										},
										{
											"id": 1906,
											"name": "OTHER",
											"nameLocation": "2777:5:10",
											"nodeType": "EnumValue",
											"src": "2777:5:10"
										}
									],
									"name": "MediaType",
									"nameLocation": "2680:9:10",
									"nodeType": "EnumDefinition",
									"src": "2675:113:10"
								},
								{
									"canonicalName": "ICultureIndex.ArtPieceMetadata",
									"id": 1921,
									"members": [
										{
											"constant": false,
											"id": 1909,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2885:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 1921,
											"src": "2878:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1908,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2878:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1911,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "2906:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 1921,
											"src": "2899:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1910,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2899:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1914,
											"mutability": "mutable",
											"name": "mediaType",
											"nameLocation": "2937:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1921,
											"src": "2927:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_MediaType_$1907",
												"typeString": "enum ICultureIndex.MediaType"
											},
											"typeName": {
												"id": 1913,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1912,
													"name": "MediaType",
													"nameLocations": [
														"2927:9:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1907,
													"src": "2927:9:10"
												},
												"referencedDeclaration": 1907,
												"src": "2927:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_MediaType_$1907",
													"typeString": "enum ICultureIndex.MediaType"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1916,
											"mutability": "mutable",
											"name": "image",
											"nameLocation": "2963:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1921,
											"src": "2956:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1915,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2956:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1918,
											"mutability": "mutable",
											"name": "text",
											"nameLocation": "2985:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 1921,
											"src": "2978:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1917,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2978:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1920,
											"mutability": "mutable",
											"name": "animationUrl",
											"nameLocation": "3006:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 1921,
											"src": "2999:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1919,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2999:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ArtPieceMetadata",
									"nameLocation": "2851:16:10",
									"nodeType": "StructDefinition",
									"scope": 2029,
									"src": "2844:181:10",
									"visibility": "public"
								},
								{
									"canonicalName": "ICultureIndex.CreatorBps",
									"id": 1926,
									"members": [
										{
											"constant": false,
											"id": 1923,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "3144:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1926,
											"src": "3136:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1922,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3136:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1925,
											"mutability": "mutable",
											"name": "bps",
											"nameLocation": "3169:3:10",
											"nodeType": "VariableDeclaration",
											"scope": 1926,
											"src": "3161:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1924,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3161:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CreatorBps",
									"nameLocation": "3115:10:10",
									"nodeType": "StructDefinition",
									"scope": 2029,
									"src": "3108:71:10",
									"visibility": "public"
								},
								{
									"canonicalName": "ICultureIndex.ArtPiece",
									"id": 1940,
									"members": [
										{
											"constant": false,
											"id": 1928,
											"mutability": "mutable",
											"name": "pieceId",
											"nameLocation": "3256:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1940,
											"src": "3248:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1927,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3248:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1931,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "3290:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1940,
											"src": "3273:25:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ArtPieceMetadata_$1921_storage_ptr",
												"typeString": "struct ICultureIndex.ArtPieceMetadata"
											},
											"typeName": {
												"id": 1930,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1929,
													"name": "ArtPieceMetadata",
													"nameLocations": [
														"3273:16:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1921,
													"src": "3273:16:10"
												},
												"referencedDeclaration": 1921,
												"src": "3273:16:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$1921_storage_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1935,
											"mutability": "mutable",
											"name": "creators",
											"nameLocation": "3321:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1940,
											"src": "3308:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_CreatorBps_$1926_storage_$dyn_storage_ptr",
												"typeString": "struct ICultureIndex.CreatorBps[]"
											},
											"typeName": {
												"baseType": {
													"id": 1933,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1932,
														"name": "CreatorBps",
														"nameLocations": [
															"3308:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1926,
														"src": "3308:10:10"
													},
													"referencedDeclaration": 1926,
													"src": "3308:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CreatorBps_$1926_storage_ptr",
														"typeString": "struct ICultureIndex.CreatorBps"
													}
												},
												"id": 1934,
												"nodeType": "ArrayTypeName",
												"src": "3308:12:10",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_CreatorBps_$1926_storage_$dyn_storage_ptr",
													"typeString": "struct ICultureIndex.CreatorBps[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1937,
											"mutability": "mutable",
											"name": "dropper",
											"nameLocation": "3347:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1940,
											"src": "3339:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1936,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3339:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1939,
											"mutability": "mutable",
											"name": "isDropped",
											"nameLocation": "3369:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1940,
											"src": "3364:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1938,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3364:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ArtPiece",
									"nameLocation": "3229:8:10",
									"nodeType": "StructDefinition",
									"scope": 2029,
									"src": "3222:163:10",
									"visibility": "public"
								},
								{
									"canonicalName": "ICultureIndex.Vote",
									"id": 1945,
									"members": [
										{
											"constant": false,
											"id": 1942,
											"mutability": "mutable",
											"name": "voterAddress",
											"nameLocation": "3499:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 1945,
											"src": "3491:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1941,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3491:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1944,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "3529:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1945,
											"src": "3521:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1943,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3521:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Vote",
									"nameLocation": "3476:4:10",
									"nodeType": "StructDefinition",
									"scope": 2029,
									"src": "3469:73:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "3548:112:10",
										"text": " @notice Returns the total number of art pieces.\n @return The total count of art pieces."
									},
									"functionSelector": "4a5c4dfe",
									"id": 1951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pieceCount",
									"nameLocation": "3674:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:2:10"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "3710:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3709:9:10"
									},
									"scope": 2029,
									"src": "3665:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "3725:187:10",
										"text": " @notice Returns the total voting weight for a specific art piece.\n @param pieceId The ID of the art piece.\n @return The total vote weight for the art piece."
									},
									"functionSelector": "04f50270",
									"id": 1959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVoteWeights",
									"nameLocation": "3926:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "3951:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "3943:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:17:10"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "3983:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:9:10"
									},
									"scope": 2029,
									"src": "3917:75:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "3998:265:10",
										"text": " @notice Checks if a specific voter has already voted for a given art piece.\n @param pieceId The ID of the art piece.\n @param voter The address of the voter.\n @return A boolean indicating if the voter has voted for the art piece."
									},
									"functionSelector": "43859632",
									"id": 1969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasVoted",
									"nameLocation": "4277:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "4294:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "4286:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "4311:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "4303:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4303:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4285:32:10"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "4341:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4341:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4340:6:10"
									},
									"scope": 2029,
									"src": "4268:79:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "4353:271:10",
										"text": " @notice Allows a user to create a new art piece.\n @param metadata The metadata associated with the art piece.\n @param creatorArray An array of creators and their associated basis points.\n @return The ID of the newly created art piece."
									},
									"functionSelector": "d75d43c9",
									"id": 1982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPiece",
									"nameLocation": "4638:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "4674:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "4650:32:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$1921_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 1972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1971,
														"name": "ArtPieceMetadata",
														"nameLocations": [
															"4650:16:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1921,
														"src": "4650:16:10"
													},
													"referencedDeclaration": 1921,
													"src": "4650:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$1921_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "creatorArray",
												"nameLocation": "4704:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "4684:32:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_CreatorBps_$1926_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ICultureIndex.CreatorBps[]"
												},
												"typeName": {
													"baseType": {
														"id": 1975,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1974,
															"name": "CreatorBps",
															"nameLocations": [
																"4684:10:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1926,
															"src": "4684:10:10"
														},
														"referencedDeclaration": 1926,
														"src": "4684:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CreatorBps_$1926_storage_ptr",
															"typeString": "struct ICultureIndex.CreatorBps"
														}
													},
													"id": 1976,
													"nodeType": "ArrayTypeName",
													"src": "4684:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_CreatorBps_$1926_storage_$dyn_storage_ptr",
														"typeString": "struct ICultureIndex.CreatorBps[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4649:68:10"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "4736:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4736:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4735:9:10"
									},
									"scope": 2029,
									"src": "4629:116:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "4751:121:10",
										"text": " @notice Allows a user to vote for a specific art piece.\n @param pieceId The ID of the art piece."
									},
									"functionSelector": "0121b93f",
									"id": 1988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "4886:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "4899:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "4891:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4891:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4890:17:10"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4916:0:10"
									},
									"scope": 2029,
									"src": "4877:40:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "4923:168:10",
										"text": " @notice Fetch an art piece by its ID.\n @param pieceId The ID of the art piece.\n @return The ArtPiece struct associated with the given ID."
									},
									"functionSelector": "deb50c35",
									"id": 1997,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPieceById",
									"nameLocation": "5105:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "5126:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "5118:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5118:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5117:17:10"
									},
									"returnParameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "5158:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPiece_$1940_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPiece"
												},
												"typeName": {
													"id": 1994,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1993,
														"name": "ArtPiece",
														"nameLocations": [
															"5158:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1940,
														"src": "5158:8:10"
													},
													"referencedDeclaration": 1940,
													"src": "5158:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPiece_$1940_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPiece"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5157:17:10"
									},
									"scope": 2029,
									"src": "5096:79:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1998,
										"nodeType": "StructuredDocumentation",
										"src": "5181:239:10",
										"text": " @notice Fetch the list of voters for a given art piece.\n @param pieceId The ID of the art piece.\n @param voter The address of the voter.\n @return An Voter structs associated with the given art piece ID."
									},
									"functionSelector": "bc3f931f",
									"id": 2008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVote",
									"nameLocation": "5434:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "pieceId",
												"nameLocation": "5450:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "5442:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5442:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "5467:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "5459:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5441:32:10"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "5497:11:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Vote_$1945_memory_ptr",
													"typeString": "struct ICultureIndex.Vote"
												},
												"typeName": {
													"id": 2005,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2004,
														"name": "Vote",
														"nameLocations": [
															"5497:4:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1945,
														"src": "5497:4:10"
													},
													"referencedDeclaration": 1945,
													"src": "5497:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vote_$1945_storage_ptr",
														"typeString": "struct ICultureIndex.Vote"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5496:13:10"
									},
									"scope": 2029,
									"src": "5425:85:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "5516:170:10",
										"text": " @notice Retrieve the top-voted art piece based on the accumulated votes.\n @return The ArtPiece struct representing the piece with the most votes."
									},
									"functionSelector": "f8a8be40",
									"id": 2015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTopVotedPiece",
									"nameLocation": "5700:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5716:2:10"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "5742:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPiece_$1940_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPiece"
												},
												"typeName": {
													"id": 2012,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2011,
														"name": "ArtPiece",
														"nameLocations": [
															"5742:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1940,
														"src": "5742:8:10"
													},
													"referencedDeclaration": 1940,
													"src": "5742:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPiece_$1940_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPiece"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5741:17:10"
									},
									"scope": 2029,
									"src": "5691:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "5765:127:10",
										"text": " @notice Fetch the ID of the top-voted art piece.\n @return The ID of the art piece with the most votes."
									},
									"functionSelector": "b7b61494",
									"id": 2021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "topVotedPieceId",
									"nameLocation": "5906:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5921:2:10"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "5947:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5947:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5946:9:10"
									},
									"scope": 2029,
									"src": "5897:59:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2022,
										"nodeType": "StructuredDocumentation",
										"src": "5962:264:10",
										"text": " @notice Officially release or \"drop\" the art piece with the most votes.\n @dev This function also updates internal state to reflect the piece's dropped status.\n @return The ArtPiece struct of the top voted piece that was just dropped."
									},
									"functionSelector": "bad22aff",
									"id": 2028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dropTopVotedPiece",
									"nameLocation": "6240:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6257:2:10"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "6278:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPiece_$1940_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPiece"
												},
												"typeName": {
													"id": 2025,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2024,
														"name": "ArtPiece",
														"nameLocations": [
															"6278:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1940,
														"src": "6278:8:10"
													},
													"referencedDeclaration": 1940,
													"src": "6278:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPiece_$1940_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPiece"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6277:17:10"
									},
									"scope": 2029,
									"src": "6231:64:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2030,
							"src": "2559:3738:10",
							"usedErrors": [],
							"usedEvents": [
								1857,
								1864,
								1875,
								1886,
								1896
							]
						}
					],
					"src": "37:6261:10"
				},
				"id": 10
			},
			"packages/revolution-contracts/interfaces/ITokenEmitter.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/interfaces/ITokenEmitter.sol",
					"exportedSymbols": {
						"ITokenEmitter": [
							2089
						]
					},
					"id": 2090,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2031,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenEmitter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2089,
							"linearizedBaseContracts": [
								2089
							],
							"name": "ITokenEmitter",
							"nameLocation": "75:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "dec86df1",
									"id": 2044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "104:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "_addresses",
												"nameLocation": "130:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "113:27:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2032,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "113:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2033,
													"nodeType": "ArrayTypeName",
													"src": "113:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "_percentages",
												"nameLocation": "156:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "142:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2035,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "142:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2036,
													"nodeType": "ArrayTypeName",
													"src": "142:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "numChunks",
												"nameLocation": "178:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "170:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:76:11"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "215:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:9:11"
									},
									"scope": 2089,
									"src": "95:129:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "244ec3c8",
									"id": 2053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmountForSinglePurchase",
									"nameLocation": "239:32:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "280:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "272:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "297:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "289:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:33:11"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "328:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:9:11"
									},
									"scope": 2089,
									"src": "230:107:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ba7614f",
									"id": 2060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAmountForMultiPurchase",
									"nameLocation": "352:30:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "391:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "383:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:17:11"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "423:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:9:11"
									},
									"scope": 2089,
									"src": "343:89:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ae9cdbe3",
									"id": 2069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "UNSAFE_getOverestimateTokenAmount",
									"nameLocation": "500:33:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "542:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "534:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "559:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "551:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:33:11"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "590:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:9:11"
									},
									"scope": 2089,
									"src": "491:108:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c457fb37",
									"id": 2076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenPrice",
									"nameLocation": "614:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "currentTotalSupply",
												"nameLocation": "636:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "628:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "627:28:11"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "679:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:9:11"
									},
									"scope": 2089,
									"src": "605:83:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 2081,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "703:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:2:11"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "740:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "740:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:6:11"
									},
									"scope": 2089,
									"src": "694:52:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 2088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "761:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "779:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "771:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:16:11"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "810:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "810:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:6:11"
									},
									"scope": 2089,
									"src": "752:64:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2090,
							"src": "65:753:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:780:11"
				},
				"id": 11
			},
			"packages/revolution-contracts/interfaces/IVerbsAuctionHouse.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/interfaces/IVerbsAuctionHouse.sol",
					"exportedSymbols": {
						"IVerbsAuctionHouse": [
							2181
						]
					},
					"id": 2182,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2091,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "1085:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVerbsAuctionHouse",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2181,
							"linearizedBaseContracts": [
								2181
							],
							"name": "IVerbsAuctionHouse",
							"nameLocation": "1121:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IVerbsAuctionHouse.Auction",
									"id": 2104,
									"members": [
										{
											"constant": false,
											"id": 2093,
											"mutability": "mutable",
											"name": "verbId",
											"nameLocation": "1224:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2104,
											"src": "1216:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2092,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1216:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2095,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1290:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2104,
											"src": "1282:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2094,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1282:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2097,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1359:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 2104,
											"src": "1351:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2096,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1351:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2099,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "1443:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2104,
											"src": "1435:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2098,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1435:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2101,
											"mutability": "mutable",
											"name": "bidder",
											"nameLocation": "1526:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2104,
											"src": "1510:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 2100,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1510:15:12",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2103,
											"mutability": "mutable",
											"name": "settled",
											"nameLocation": "1602:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2104,
											"src": "1597:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2102,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1597:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Auction",
									"nameLocation": "1153:7:12",
									"nodeType": "StructDefinition",
									"scope": 2181,
									"src": "1146:470:12",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d6eddd1118d71820909c1197aa966dbc15ed6f508554252169cc3d5ccac756ca",
									"id": 2112,
									"name": "AuctionCreated",
									"nameLocation": "1628:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"indexed": true,
												"mutability": "mutable",
												"name": "verbId",
												"nameLocation": "1659:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "1643:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1643:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "1675:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "1667:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1694:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "1686:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1642:60:12"
									},
									"src": "1622:81:12"
								},
								{
									"anonymous": false,
									"eventSelector": "1159164c56f277e6fc99c11731bd380e0347deb969b75523398734c252706ea3",
									"id": 2122,
									"name": "AuctionBid",
									"nameLocation": "1715:10:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"indexed": true,
												"mutability": "mutable",
												"name": "verbId",
												"nameLocation": "1742:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1726:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1758:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1750:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1774:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1766:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"indexed": false,
												"mutability": "mutable",
												"name": "extended",
												"nameLocation": "1786:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1781:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1781:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:70:12"
									},
									"src": "1709:87:12"
								},
								{
									"anonymous": false,
									"eventSelector": "6e912a3a9105bdd2af817ba5adc14e6c127c1035b5b648faa29ca0d58ab8ff4e",
									"id": 2128,
									"name": "AuctionExtended",
									"nameLocation": "1808:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"indexed": true,
												"mutability": "mutable",
												"name": "verbId",
												"nameLocation": "1840:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1824:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1856:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1848:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:41:12"
									},
									"src": "1802:63:12"
								},
								{
									"anonymous": false,
									"eventSelector": "c9f72b276a388619c6d185d146697036241880c36654b1a3ffdad07c24038d99",
									"id": 2136,
									"name": "AuctionSettled",
									"nameLocation": "1877:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"indexed": true,
												"mutability": "mutable",
												"name": "verbId",
												"nameLocation": "1908:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "1892:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"indexed": false,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "1924:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "1916:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1940:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "1932:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1891:56:12"
									},
									"src": "1871:77:12"
								},
								{
									"anonymous": false,
									"eventSelector": "1b55d9f7002bda4490f467e326f22a4a847629c0f2d1ed421607d318d25b410d",
									"id": 2140,
									"name": "AuctionTimeBufferUpdated",
									"nameLocation": "1960:24:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"indexed": false,
												"mutability": "mutable",
												"name": "timeBuffer",
												"nameLocation": "1993:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "1985:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:20:12"
									},
									"src": "1954:51:12"
								},
								{
									"anonymous": false,
									"eventSelector": "6ab2e127d7fdf53b8f304e59d3aab5bfe97979f52a85479691a6fab27a28a6b2",
									"id": 2144,
									"name": "AuctionReservePriceUpdated",
									"nameLocation": "2017:26:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"indexed": false,
												"mutability": "mutable",
												"name": "reservePrice",
												"nameLocation": "2052:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "2044:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2043:22:12"
									},
									"src": "2011:55:12"
								},
								{
									"anonymous": false,
									"eventSelector": "ec5ccd96cc77b6219e9d44143df916af68fc169339ea7de5008ff15eae13450d",
									"id": 2148,
									"name": "AuctionMinBidIncrementPercentageUpdated",
									"nameLocation": "2078:39:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"indexed": false,
												"mutability": "mutable",
												"name": "minBidIncrementPercentage",
												"nameLocation": "2126:25:12",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "2118:33:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:35:12"
									},
									"src": "2072:81:12"
								},
								{
									"functionSelector": "a4d0a17e",
									"id": 2151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settleAuction",
									"nameLocation": "2168:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:12"
									},
									"returnParameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2192:0:12"
									},
									"scope": 2181,
									"src": "2159:34:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f25efffc",
									"id": 2154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settleCurrentAndCreateNewAuction",
									"nameLocation": "2208:32:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2240:2:12"
									},
									"returnParameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:0:12"
									},
									"scope": 2181,
									"src": "2199:53:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "659dd2b4",
									"id": 2159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createBid",
									"nameLocation": "2267:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "verbId",
												"nameLocation": "2285:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "2277:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:16:12"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2309:0:12"
									},
									"scope": 2181,
									"src": "2258:52:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8456cb59",
									"id": 2162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nameLocation": "2325:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2330:2:12"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:0:12"
									},
									"scope": 2181,
									"src": "2316:26:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f4ba83a",
									"id": 2165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nameLocation": "2357:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:12"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:12"
									},
									"scope": 2181,
									"src": "2348:28:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7120334b",
									"id": 2170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTimeBuffer",
									"nameLocation": "2391:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "timeBuffer",
												"nameLocation": "2413:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "2405:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:20:12"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2433:0:12"
									},
									"scope": 2181,
									"src": "2382:52:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ce9c7c0d",
									"id": 2175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReservePrice",
									"nameLocation": "2449:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "reservePrice",
												"nameLocation": "2473:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "2465:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:22:12"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2495:0:12"
									},
									"scope": 2181,
									"src": "2440:56:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "36ebdb38",
									"id": 2180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMinBidIncrementPercentage",
									"nameLocation": "2511:28:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "minBidIncrementPercentage",
												"nameLocation": "2546:25:12",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "2540:31:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2176,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2540:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:33:12"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2581:0:12"
									},
									"scope": 2181,
									"src": "2502:80:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2182,
							"src": "1111:1473:12",
							"usedErrors": [],
							"usedEvents": [
								2112,
								2122,
								2128,
								2136,
								2140,
								2144,
								2148
							]
						}
					],
					"src": "1085:1500:12"
				},
				"id": 12
			},
			"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol",
					"exportedSymbols": {
						"ICultureIndex": [
							2029
						],
						"IVerbsDescriptorMinimal": [
							2207
						]
					},
					"id": 2208,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "1120:24:13"
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/ICultureIndex.sol",
							"file": "./ICultureIndex.sol",
							"id": 2185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2208,
							"sourceUnit": 2030,
							"src": "1146:52:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2184,
										"name": "ICultureIndex",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2029,
										"src": "1155:13:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVerbsDescriptorMinimal",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2207,
							"linearizedBaseContracts": [
								2207
							],
							"name": "IVerbsDescriptorMinimal",
							"nameLocation": "1210:23:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2186,
										"nodeType": "StructuredDocumentation",
										"src": "1240:34:13",
										"text": "\n USED BY TOKEN"
									},
									"functionSelector": "2c90464d",
									"id": 2196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1288:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1305:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "1297:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1352:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "1314:46:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$1921_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 2190,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2189,
														"name": "ICultureIndex.ArtPieceMetadata",
														"nameLocations": [
															"1314:13:13",
															"1328:16:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1921,
														"src": "1314:30:13"
													},
													"referencedDeclaration": 1921,
													"src": "1314:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$1921_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:65:13"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "1385:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1385:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:15:13"
									},
									"scope": 2207,
									"src": "1279:121:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dd4f079",
									"id": 2206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dataURI",
									"nameLocation": "1415:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1431:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "1423:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1478:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "1440:46:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPieceMetadata_$1921_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPieceMetadata"
												},
												"typeName": {
													"id": 2200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2199,
														"name": "ICultureIndex.ArtPieceMetadata",
														"nameLocations": [
															"1440:13:13",
															"1454:16:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1921,
														"src": "1440:30:13"
													},
													"referencedDeclaration": 1921,
													"src": "1440:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPieceMetadata_$1921_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPieceMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:65:13"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "1511:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2203,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1511:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:15:13"
									},
									"scope": 2207,
									"src": "1406:120:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2208,
							"src": "1200:328:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1120:409:13"
				},
				"id": 13
			},
			"packages/revolution-contracts/interfaces/IVerbsToken.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/interfaces/IVerbsToken.sol",
					"exportedSymbols": {
						"ICultureIndex": [
							2029
						],
						"IERC721": [
							986
						],
						"IVerbsDescriptorMinimal": [
							2207
						],
						"IVerbsToken": [
							2294
						]
					},
					"id": 2295,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2209,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "1076:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 987,
							"src": "1102:75:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2210,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 986,
										"src": "1111:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol",
							"file": "./IVerbsDescriptorMinimal.sol",
							"id": 2213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 2208,
							"src": "1178:72:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2212,
										"name": "IVerbsDescriptorMinimal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2207,
										"src": "1187:23:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/ICultureIndex.sol",
							"file": "./ICultureIndex.sol",
							"id": 2215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 2030,
							"src": "1251:52:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2214,
										"name": "ICultureIndex",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2029,
										"src": "1260:13:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2216,
										"name": "IERC721",
										"nameLocations": [
											"1330:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 986,
										"src": "1330:7:14"
									},
									"id": 2217,
									"nodeType": "InheritanceSpecifier",
									"src": "1330:7:14"
								}
							],
							"canonicalName": "IVerbsToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2294,
							"linearizedBaseContracts": [
								2294,
								986,
								998
							],
							"name": "IVerbsToken",
							"nameLocation": "1315:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "06f174d7a58e492ce228f757e0666c62560f8e9088115dca76f4eb2facab99e5",
									"id": 2224,
									"name": "VerbCreated",
									"nameLocation": "1350:11:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1378:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "1362:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1362:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"indexed": false,
												"mutability": "mutable",
												"name": "artPiece",
												"nameLocation": "1410:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "1387:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPiece_$1940_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPiece"
												},
												"typeName": {
													"id": 2221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2220,
														"name": "ICultureIndex.ArtPiece",
														"nameLocations": [
															"1387:13:14",
															"1401:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1940,
														"src": "1387:22:14"
													},
													"referencedDeclaration": 1940,
													"src": "1387:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPiece_$1940_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPiece"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1361:58:14"
									},
									"src": "1344:76:14"
								},
								{
									"anonymous": false,
									"eventSelector": "58a581a1fc8e6c8475bed8f58a53e3a04184e0b331d24d5d6237250f525eb8f4",
									"id": 2228,
									"name": "VerbBurned",
									"nameLocation": "1432:10:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1459:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1443:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:25:14"
									},
									"src": "1426:42:14"
								},
								{
									"anonymous": false,
									"eventSelector": "ad0f299ec81a386c98df0ac27dae11dd020ed1b56963c53a7292e7a3a314539a",
									"id": 2232,
									"name": "MinterUpdated",
									"nameLocation": "1480:13:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"indexed": false,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "1502:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "1494:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1493:16:14"
									},
									"src": "1474:36:14"
								},
								{
									"anonymous": false,
									"eventSelector": "192417b3f16b1ce69e0c59b0376549666650245ffc05e4b2569089dda8589b66",
									"id": 2234,
									"name": "MinterLocked",
									"nameLocation": "1522:12:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1534:2:14"
									},
									"src": "1516:21:14"
								},
								{
									"anonymous": false,
									"eventSelector": "6e66ab22238a5471005895947c8f57db923c2a9c9c73180eff80864c21295c1b",
									"id": 2239,
									"name": "DescriptorUpdated",
									"nameLocation": "1549:17:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"indexed": false,
												"mutability": "mutable",
												"name": "descriptor",
												"nameLocation": "1591:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "1567:34:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVerbsDescriptorMinimal_$2207",
													"typeString": "contract IVerbsDescriptorMinimal"
												},
												"typeName": {
													"id": 2236,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2235,
														"name": "IVerbsDescriptorMinimal",
														"nameLocations": [
															"1567:23:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2207,
														"src": "1567:23:14"
													},
													"referencedDeclaration": 2207,
													"src": "1567:23:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVerbsDescriptorMinimal_$2207",
														"typeString": "contract IVerbsDescriptorMinimal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:36:14"
									},
									"src": "1543:60:14"
								},
								{
									"anonymous": false,
									"eventSelector": "593e31e306c198bef259d839f7c6dc4ff7fc10c07f76fab193a210b03704105f",
									"id": 2241,
									"name": "DescriptorLocked",
									"nameLocation": "1615:16:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:14"
									},
									"src": "1609:25:14"
								},
								{
									"anonymous": false,
									"eventSelector": "bf2ad315fae5dee6ba95017618540791dbaf596829b5ab70bffd2c60a59769ed",
									"id": 2246,
									"name": "CultureIndexUpdated",
									"nameLocation": "1646:19:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"indexed": false,
												"mutability": "mutable",
												"name": "cultureIndex",
												"nameLocation": "1680:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "1666:26:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ICultureIndex_$2029",
													"typeString": "contract ICultureIndex"
												},
												"typeName": {
													"id": 2243,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2242,
														"name": "ICultureIndex",
														"nameLocations": [
															"1666:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2029,
														"src": "1666:13:14"
													},
													"referencedDeclaration": 2029,
													"src": "1666:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICultureIndex_$2029",
														"typeString": "contract ICultureIndex"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:28:14"
									},
									"src": "1640:54:14"
								},
								{
									"anonymous": false,
									"eventSelector": "c5c7cbcb393b85ef6fa9d608691afd9459b3850e9f73bf5ed22957a7d2a4b8da",
									"id": 2248,
									"name": "CultureIndexLocked",
									"nameLocation": "1706:18:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1724:2:14"
									},
									"src": "1700:27:14"
								},
								{
									"functionSelector": "1249c58b",
									"id": 2253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1742:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:2:14"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "1767:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:9:14"
									},
									"scope": 2294,
									"src": "1733:43:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 2258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1791:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1804:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "1796:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:17:14"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1821:0:14"
									},
									"scope": 2294,
									"src": "1782:40:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5ac1e3bb",
									"id": 2265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dataURI",
									"nameLocation": "1837:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1853:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "1845:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1844:17:14"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "1880:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1880:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1879:15:14"
									},
									"scope": 2294,
									"src": "1828:67:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fca3b5aa",
									"id": 2270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMinter",
									"nameLocation": "1910:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "1928:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "1920:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:16:14"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1944:0:14"
									},
									"scope": 2294,
									"src": "1901:44:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "76daebe1",
									"id": 2273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockMinter",
									"nameLocation": "1960:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1970:2:14"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1981:0:14"
									},
									"scope": 2294,
									"src": "1951:31:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01b9a397",
									"id": 2279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDescriptor",
									"nameLocation": "1997:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "descriptor",
												"nameLocation": "2035:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "2011:34:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVerbsDescriptorMinimal_$2207",
													"typeString": "contract IVerbsDescriptorMinimal"
												},
												"typeName": {
													"id": 2275,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2274,
														"name": "IVerbsDescriptorMinimal",
														"nameLocations": [
															"2011:23:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2207,
														"src": "2011:23:14"
													},
													"referencedDeclaration": 2207,
													"src": "2011:23:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVerbsDescriptorMinimal_$2207",
														"typeString": "contract IVerbsDescriptorMinimal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:36:14"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2055:0:14"
									},
									"scope": 2294,
									"src": "1988:68:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "41b5d0de",
									"id": 2282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockDescriptor",
									"nameLocation": "2071:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2085:2:14"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2096:0:14"
									},
									"scope": 2294,
									"src": "2062:35:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e2d8f40c",
									"id": 2285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockCultureIndex",
									"nameLocation": "2112:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2128:2:14"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2139:0:14"
									},
									"scope": 2294,
									"src": "2103:37:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "49a33562",
									"id": 2293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getArtPieceById",
									"nameLocation": "2155:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2179:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "2171:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:17:14"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "2211:29:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ArtPiece_$1940_memory_ptr",
													"typeString": "struct ICultureIndex.ArtPiece"
												},
												"typeName": {
													"id": 2290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2289,
														"name": "ICultureIndex.ArtPiece",
														"nameLocations": [
															"2211:13:14",
															"2225:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1940,
														"src": "2211:22:14"
													},
													"referencedDeclaration": 1940,
													"src": "2211:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ArtPiece_$1940_storage_ptr",
														"typeString": "struct ICultureIndex.ArtPiece"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:31:14"
									},
									"scope": 2294,
									"src": "2146:96:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2295,
							"src": "1305:939:14",
							"usedErrors": [],
							"usedEvents": [
								885,
								894,
								903,
								2224,
								2228,
								2232,
								2234,
								2239,
								2241,
								2246,
								2248
							]
						}
					],
					"src": "1076:1169:14"
				},
				"id": 14
			},
			"packages/revolution-contracts/interfaces/IWETH.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/interfaces/IWETH.sol",
					"exportedSymbols": {
						"IWETH": [
							2314
						]
					},
					"id": 2315,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2314,
							"linearizedBaseContracts": [
								2314
							],
							"name": "IWETH",
							"nameLocation": "73:5:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 2299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "94:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "101:2:15"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "120:0:15"
									},
									"scope": 2314,
									"src": "85:36:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 2304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "136:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "153:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "145:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "145:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "144:13:15"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:0:15"
									},
									"scope": 2314,
									"src": "127:40:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "182:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "199:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "191:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "211:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "203:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:27:15"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "236:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "236:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:6:15"
									},
									"scope": 2314,
									"src": "173:69:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2315,
							"src": "63:181:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:208:15"
				},
				"id": 15
			},
			"packages/revolution-contracts/libs/SignedWadMath.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/libs/SignedWadMath.sol",
					"exportedSymbols": {
						"fromDaysWadUnsafe": [
							2346
						],
						"toDaysWadUnsafe": [
							2336
						],
						"toWadUnsafe": [
							2326
						],
						"unsafeDiv": [
							2839
						],
						"unsafeWadDiv": [
							2370
						],
						"unsafeWadMul": [
							2358
						],
						"wadDiv": [
							2392
						],
						"wadExp": [
							2609
						],
						"wadLn": [
							2827
						],
						"wadMul": [
							2381
						],
						"wadPow": [
							2414
						]
					},
					"id": 2840,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2316,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:16"
						},
						{
							"body": {
								"id": 2325,
								"nodeType": "Block",
								"src": "450:135:16",
								"statements": [
									{
										"AST": {
											"nativeSrc": "504:79:16",
											"nodeType": "YulBlock",
											"src": "504:79:16",
											"statements": [
												{
													"nativeSrc": "545:32:16",
													"nodeType": "YulAssignment",
													"src": "545:32:16",
													"value": {
														"arguments": [
															{
																"name": "x",
																"nativeSrc": "554:1:16",
																"nodeType": "YulIdentifier",
																"src": "554:1:16"
															},
															{
																"kind": "number",
																"nativeSrc": "557:19:16",
																"nodeType": "YulLiteral",
																"src": "557:19:16",
																"type": "",
																"value": "1000000000000000000"
															}
														],
														"functionName": {
															"name": "mul",
															"nativeSrc": "550:3:16",
															"nodeType": "YulIdentifier",
															"src": "550:3:16"
														},
														"nativeSrc": "550:27:16",
														"nodeType": "YulFunctionCall",
														"src": "550:27:16"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "545:1:16",
															"nodeType": "YulIdentifier",
															"src": "545:1:16"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 2322,
												"isOffset": false,
												"isSlot": false,
												"src": "545:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2319,
												"isOffset": false,
												"isSlot": false,
												"src": "554:1:16",
												"valueSize": 1
											}
										],
										"id": 2324,
										"nodeType": "InlineAssembly",
										"src": "495:88:16"
									}
								]
							},
							"documentation": {
								"id": 2317,
								"nodeType": "StructuredDocumentation",
								"src": "315:79:16",
								"text": "@dev Will not revert on overflow, only use where overflow is not possible."
							},
							"id": 2326,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toWadUnsafe",
							"nameLocation": "403:11:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2320,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2319,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "423:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2326,
										"src": "415:9:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2318,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "415:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "414:11:16"
							},
							"returnParameters": {
								"id": 2323,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2322,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "447:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2326,
										"src": "440:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2321,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "440:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "439:10:16"
							},
							"scope": 2840,
							"src": "394:191:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2335,
								"nodeType": "Block",
								"src": "885:175:16",
								"statements": [
									{
										"AST": {
											"nativeSrc": "939:119:16",
											"nodeType": "YulBlock",
											"src": "939:119:16",
											"statements": [
												{
													"nativeSrc": "1008:44:16",
													"nodeType": "YulAssignment",
													"src": "1008:44:16",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1021:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "1021:1:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1024:19:16",
																		"nodeType": "YulLiteral",
																		"src": "1024:19:16",
																		"type": "",
																		"value": "1000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1017:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:16"
																},
																"nativeSrc": "1017:27:16",
																"nodeType": "YulFunctionCall",
																"src": "1017:27:16"
															},
															{
																"kind": "number",
																"nativeSrc": "1046:5:16",
																"nodeType": "YulLiteral",
																"src": "1046:5:16",
																"type": "",
																"value": "86400"
															}
														],
														"functionName": {
															"name": "div",
															"nativeSrc": "1013:3:16",
															"nodeType": "YulIdentifier",
															"src": "1013:3:16"
														},
														"nativeSrc": "1013:39:16",
														"nodeType": "YulFunctionCall",
														"src": "1013:39:16"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "1008:1:16",
															"nodeType": "YulIdentifier",
															"src": "1008:1:16"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 2332,
												"isOffset": false,
												"isSlot": false,
												"src": "1008:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2329,
												"isOffset": false,
												"isSlot": false,
												"src": "1021:1:16",
												"valueSize": 1
											}
										],
										"id": 2334,
										"nodeType": "InlineAssembly",
										"src": "930:128:16"
									}
								]
							},
							"documentation": {
								"id": 2327,
								"nodeType": "StructuredDocumentation",
								"src": "587:238:16",
								"text": "@dev Takes an integer amount of seconds and converts it to a wad amount of days.\n @dev Will not revert on overflow, only use where overflow is not possible.\n @dev Not meant for negative second amounts, it assumes x is positive."
							},
							"id": 2336,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toDaysWadUnsafe",
							"nameLocation": "834:15:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2330,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2329,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "858:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2336,
										"src": "850:9:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "850:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "849:11:16"
							},
							"returnParameters": {
								"id": 2333,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2332,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "882:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2336,
										"src": "875:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2331,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "875:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "874:10:16"
							},
							"scope": 2840,
							"src": "825:235:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2345,
								"nodeType": "Block",
								"src": "1359:175:16",
								"statements": [
									{
										"AST": {
											"nativeSrc": "1413:119:16",
											"nodeType": "YulBlock",
											"src": "1413:119:16",
											"statements": [
												{
													"nativeSrc": "1482:44:16",
													"nodeType": "YulAssignment",
													"src": "1482:44:16",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1495:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "1495:1:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:5:16",
																		"nodeType": "YulLiteral",
																		"src": "1498:5:16",
																		"type": "",
																		"value": "86400"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1491:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:16"
																},
																"nativeSrc": "1491:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1491:13:16"
															},
															{
																"kind": "number",
																"nativeSrc": "1506:19:16",
																"nodeType": "YulLiteral",
																"src": "1506:19:16",
																"type": "",
																"value": "1000000000000000000"
															}
														],
														"functionName": {
															"name": "div",
															"nativeSrc": "1487:3:16",
															"nodeType": "YulIdentifier",
															"src": "1487:3:16"
														},
														"nativeSrc": "1487:39:16",
														"nodeType": "YulFunctionCall",
														"src": "1487:39:16"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "1482:1:16",
															"nodeType": "YulIdentifier",
															"src": "1482:1:16"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 2342,
												"isOffset": false,
												"isSlot": false,
												"src": "1482:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2339,
												"isOffset": false,
												"isSlot": false,
												"src": "1495:1:16",
												"valueSize": 1
											}
										],
										"id": 2344,
										"nodeType": "InlineAssembly",
										"src": "1404:128:16"
									}
								]
							},
							"documentation": {
								"id": 2337,
								"nodeType": "StructuredDocumentation",
								"src": "1062:235:16",
								"text": "@dev Takes a wad amount of days and converts it to an integer amount of seconds.\n @dev Will not revert on overflow, only use where overflow is not possible.\n @dev Not meant for negative day amounts, it assumes x is positive."
							},
							"id": 2346,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "fromDaysWadUnsafe",
							"nameLocation": "1306:17:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2340,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2339,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "1331:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2346,
										"src": "1324:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2338,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "1324:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1323:10:16"
							},
							"returnParameters": {
								"id": 2343,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2342,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "1356:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2346,
										"src": "1348:9:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2341,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1348:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1347:11:16"
							},
							"scope": 2840,
							"src": "1297:237:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2357,
								"nodeType": "Block",
								"src": "1681:160:16",
								"statements": [
									{
										"AST": {
											"nativeSrc": "1735:104:16",
											"nodeType": "YulBlock",
											"src": "1735:104:16",
											"statements": [
												{
													"nativeSrc": "1792:41:16",
													"nodeType": "YulAssignment",
													"src": "1792:41:16",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1806:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "1806:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1809:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "1809:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1802:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:16"
																},
																"nativeSrc": "1802:9:16",
																"nodeType": "YulFunctionCall",
																"src": "1802:9:16"
															},
															{
																"kind": "number",
																"nativeSrc": "1813:19:16",
																"nodeType": "YulLiteral",
																"src": "1813:19:16",
																"type": "",
																"value": "1000000000000000000"
															}
														],
														"functionName": {
															"name": "sdiv",
															"nativeSrc": "1797:4:16",
															"nodeType": "YulIdentifier",
															"src": "1797:4:16"
														},
														"nativeSrc": "1797:36:16",
														"nodeType": "YulFunctionCall",
														"src": "1797:36:16"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "1792:1:16",
															"nodeType": "YulIdentifier",
															"src": "1792:1:16"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 2354,
												"isOffset": false,
												"isSlot": false,
												"src": "1792:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2349,
												"isOffset": false,
												"isSlot": false,
												"src": "1806:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2351,
												"isOffset": false,
												"isSlot": false,
												"src": "1809:1:16",
												"valueSize": 1
											}
										],
										"id": 2356,
										"nodeType": "InlineAssembly",
										"src": "1726:113:16"
									}
								]
							},
							"documentation": {
								"id": 2347,
								"nodeType": "StructuredDocumentation",
								"src": "1536:79:16",
								"text": "@dev Will not revert on overflow, only use where overflow is not possible."
							},
							"id": 2358,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "unsafeWadMul",
							"nameLocation": "1624:12:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2352,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2349,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "1644:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2358,
										"src": "1637:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2348,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "1637:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2351,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "1654:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2358,
										"src": "1647:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2350,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "1647:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1636:20:16"
							},
							"returnParameters": {
								"id": 2355,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2354,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "1678:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2358,
										"src": "1671:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2353,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "1671:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1670:10:16"
							},
							"scope": 2840,
							"src": "1615:226:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2369,
								"nodeType": "Block",
								"src": "2044:163:16",
								"statements": [
									{
										"AST": {
											"nativeSrc": "2098:107:16",
											"nodeType": "YulBlock",
											"src": "2098:107:16",
											"statements": [
												{
													"nativeSrc": "2158:41:16",
													"nodeType": "YulAssignment",
													"src": "2158:41:16",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2172:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "2172:1:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:19:16",
																		"nodeType": "YulLiteral",
																		"src": "2175:19:16",
																		"type": "",
																		"value": "1000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2168:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:16"
																},
																"nativeSrc": "2168:27:16",
																"nodeType": "YulFunctionCall",
																"src": "2168:27:16"
															},
															{
																"name": "y",
																"nativeSrc": "2197:1:16",
																"nodeType": "YulIdentifier",
																"src": "2197:1:16"
															}
														],
														"functionName": {
															"name": "sdiv",
															"nativeSrc": "2163:4:16",
															"nodeType": "YulIdentifier",
															"src": "2163:4:16"
														},
														"nativeSrc": "2163:36:16",
														"nodeType": "YulFunctionCall",
														"src": "2163:36:16"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "2158:1:16",
															"nodeType": "YulIdentifier",
															"src": "2158:1:16"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 2366,
												"isOffset": false,
												"isSlot": false,
												"src": "2158:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2361,
												"isOffset": false,
												"isSlot": false,
												"src": "2172:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2363,
												"isOffset": false,
												"isSlot": false,
												"src": "2197:1:16",
												"valueSize": 1
											}
										],
										"id": 2368,
										"nodeType": "InlineAssembly",
										"src": "2089:116:16"
									}
								]
							},
							"documentation": {
								"id": 2359,
								"nodeType": "StructuredDocumentation",
								"src": "1843:135:16",
								"text": "@dev Will return 0 instead of reverting if y is zero and will\n not revert on overflow, only use where overflow is not possible."
							},
							"id": 2370,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "unsafeWadDiv",
							"nameLocation": "1987:12:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2364,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2361,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "2007:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2370,
										"src": "2000:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2360,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2000:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2363,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "2017:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2370,
										"src": "2010:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2362,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2010:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1999:20:16"
							},
							"returnParameters": {
								"id": 2367,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2366,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "2041:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2370,
										"src": "2034:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2365,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2034:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2033:10:16"
							},
							"scope": 2840,
							"src": "1978:229:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2380,
								"nodeType": "Block",
								"src": "2269:867:16",
								"statements": [
									{
										"AST": {
											"nativeSrc": "2323:811:16",
											"nodeType": "YulBlock",
											"src": "2323:811:16",
											"statements": [
												{
													"nativeSrc": "2370:14:16",
													"nodeType": "YulAssignment",
													"src": "2370:14:16",
													"value": {
														"arguments": [
															{
																"name": "x",
																"nativeSrc": "2379:1:16",
																"nodeType": "YulIdentifier",
																"src": "2379:1:16"
															},
															{
																"name": "y",
																"nativeSrc": "2382:1:16",
																"nodeType": "YulIdentifier",
																"src": "2382:1:16"
															}
														],
														"functionName": {
															"name": "mul",
															"nativeSrc": "2375:3:16",
															"nodeType": "YulIdentifier",
															"src": "2375:3:16"
														},
														"nativeSrc": "2375:9:16",
														"nodeType": "YulFunctionCall",
														"src": "2375:9:16"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "2370:1:16",
															"nodeType": "YulIdentifier",
															"src": "2370:1:16"
														}
													]
												},
												{
													"body": {
														"nativeSrc": "3007:36:16",
														"nodeType": "YulBlock",
														"src": "3007:36:16",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "3028:1:16",
																			"nodeType": "YulLiteral",
																			"src": "3028:1:16",
																			"type": "",
																			"value": "0"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "3031:1:16",
																			"nodeType": "YulLiteral",
																			"src": "3031:1:16",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "revert",
																		"nativeSrc": "3021:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3021:6:16"
																	},
																	"nativeSrc": "3021:12:16",
																	"nodeType": "YulFunctionCall",
																	"src": "3021:12:16"
																},
																"nativeSrc": "3021:12:16",
																"nodeType": "YulExpressionStatement",
																"src": "3021:12:16"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2887:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "2887:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2880:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "2880:6:16"
																				},
																				"nativeSrc": "2880:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2880:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "2899:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "2899:1:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2902:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "2902:1:16"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nativeSrc": "2894:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "2894:4:16"
																						},
																						"nativeSrc": "2894:10:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2894:10:16"
																					},
																					{
																						"name": "y",
																						"nativeSrc": "2906:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "2906:1:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2891:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "2891:2:16"
																				},
																				"nativeSrc": "2891:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2891:17:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2877:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2877:2:16"
																		},
																		"nativeSrc": "2877:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2877:32:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2917:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "2917:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2924:1:16",
																								"nodeType": "YulLiteral",
																								"src": "2924:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2920:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "2920:3:16"
																						},
																						"nativeSrc": "2920:6:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2920:6:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2914:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "2914:2:16"
																				},
																				"nativeSrc": "2914:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2914:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2933:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "2933:1:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2936:66:16",
																						"nodeType": "YulLiteral",
																						"src": "2936:66:16",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nativeSrc": "2929:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2929:3:16"
																				},
																				"nativeSrc": "2929:74:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2929:74:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2911:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2911:2:16"
																		},
																		"nativeSrc": "2911:93:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2911:93:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2873:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2873:3:16"
																},
																"nativeSrc": "2873:132:16",
																"nodeType": "YulFunctionCall",
																"src": "2873:132:16"
															}
														],
														"functionName": {
															"name": "iszero",
															"nativeSrc": "2866:6:16",
															"nodeType": "YulIdentifier",
															"src": "2866:6:16"
														},
														"nativeSrc": "2866:140:16",
														"nodeType": "YulFunctionCall",
														"src": "2866:140:16"
													},
													"nativeSrc": "2863:180:16",
													"nodeType": "YulIf",
													"src": "2863:180:16"
												},
												{
													"nativeSrc": "3095:33:16",
													"nodeType": "YulAssignment",
													"src": "3095:33:16",
													"value": {
														"arguments": [
															{
																"name": "r",
																"nativeSrc": "3105:1:16",
																"nodeType": "YulIdentifier",
																"src": "3105:1:16"
															},
															{
																"kind": "number",
																"nativeSrc": "3108:19:16",
																"nodeType": "YulLiteral",
																"src": "3108:19:16",
																"type": "",
																"value": "1000000000000000000"
															}
														],
														"functionName": {
															"name": "sdiv",
															"nativeSrc": "3100:4:16",
															"nodeType": "YulIdentifier",
															"src": "3100:4:16"
														},
														"nativeSrc": "3100:28:16",
														"nodeType": "YulFunctionCall",
														"src": "3100:28:16"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "3095:1:16",
															"nodeType": "YulIdentifier",
															"src": "3095:1:16"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 2377,
												"isOffset": false,
												"isSlot": false,
												"src": "2370:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2377,
												"isOffset": false,
												"isSlot": false,
												"src": "2899:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2377,
												"isOffset": false,
												"isSlot": false,
												"src": "3095:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2377,
												"isOffset": false,
												"isSlot": false,
												"src": "3105:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2372,
												"isOffset": false,
												"isSlot": false,
												"src": "2379:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2372,
												"isOffset": false,
												"isSlot": false,
												"src": "2887:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2372,
												"isOffset": false,
												"isSlot": false,
												"src": "2902:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2372,
												"isOffset": false,
												"isSlot": false,
												"src": "2917:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2374,
												"isOffset": false,
												"isSlot": false,
												"src": "2382:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2374,
												"isOffset": false,
												"isSlot": false,
												"src": "2906:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2374,
												"isOffset": false,
												"isSlot": false,
												"src": "2933:1:16",
												"valueSize": 1
											}
										],
										"id": 2379,
										"nodeType": "InlineAssembly",
										"src": "2314:820:16"
									}
								]
							},
							"id": 2381,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "wadMul",
							"nameLocation": "2218:6:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2375,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2372,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "2232:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2381,
										"src": "2225:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2371,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2225:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2374,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "2242:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2381,
										"src": "2235:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2373,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2235:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2224:20:16"
							},
							"returnParameters": {
								"id": 2378,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2377,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "2266:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2381,
										"src": "2259:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2376,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2259:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2258:10:16"
							},
							"scope": 2840,
							"src": "2209:927:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2391,
								"nodeType": "Block",
								"src": "3198:381:16",
								"statements": [
									{
										"AST": {
											"nativeSrc": "3252:325:16",
											"nodeType": "YulBlock",
											"src": "3252:325:16",
											"statements": [
												{
													"nativeSrc": "3302:32:16",
													"nodeType": "YulAssignment",
													"src": "3302:32:16",
													"value": {
														"arguments": [
															{
																"name": "x",
																"nativeSrc": "3311:1:16",
																"nodeType": "YulIdentifier",
																"src": "3311:1:16"
															},
															{
																"kind": "number",
																"nativeSrc": "3314:19:16",
																"nodeType": "YulLiteral",
																"src": "3314:19:16",
																"type": "",
																"value": "1000000000000000000"
															}
														],
														"functionName": {
															"name": "mul",
															"nativeSrc": "3307:3:16",
															"nodeType": "YulIdentifier",
															"src": "3307:3:16"
														},
														"nativeSrc": "3307:27:16",
														"nodeType": "YulFunctionCall",
														"src": "3307:27:16"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "3302:1:16",
															"nodeType": "YulIdentifier",
															"src": "3302:1:16"
														}
													]
												},
												{
													"body": {
														"nativeSrc": "3484:36:16",
														"nodeType": "YulBlock",
														"src": "3484:36:16",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "3505:1:16",
																			"nodeType": "YulLiteral",
																			"src": "3505:1:16",
																			"type": "",
																			"value": "0"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "3508:1:16",
																			"nodeType": "YulLiteral",
																			"src": "3508:1:16",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "revert",
																		"nativeSrc": "3498:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3498:6:16"
																	},
																	"nativeSrc": "3498:12:16",
																	"nodeType": "YulFunctionCall",
																	"src": "3498:12:16"
																},
																"nativeSrc": "3498:12:16",
																"nodeType": "YulExpressionStatement",
																"src": "3498:12:16"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3441:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "3441:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3434:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "3434:6:16"
																				},
																				"nativeSrc": "3434:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3434:9:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3427:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3427:6:16"
																		},
																		"nativeSrc": "3427:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3427:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "3454:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "3454:1:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3457:19:16",
																						"nodeType": "YulLiteral",
																						"src": "3457:19:16",
																						"type": "",
																						"value": "1000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nativeSrc": "3449:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "3449:4:16"
																				},
																				"nativeSrc": "3449:28:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3449:28:16"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "3479:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "3479:1:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3446:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3446:2:16"
																		},
																		"nativeSrc": "3446:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:35:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3423:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3423:3:16"
																},
																"nativeSrc": "3423:59:16",
																"nodeType": "YulFunctionCall",
																"src": "3423:59:16"
															}
														],
														"functionName": {
															"name": "iszero",
															"nativeSrc": "3416:6:16",
															"nodeType": "YulIdentifier",
															"src": "3416:6:16"
														},
														"nativeSrc": "3416:67:16",
														"nodeType": "YulFunctionCall",
														"src": "3416:67:16"
													},
													"nativeSrc": "3413:107:16",
													"nodeType": "YulIf",
													"src": "3413:107:16"
												},
												{
													"nativeSrc": "3556:15:16",
													"nodeType": "YulAssignment",
													"src": "3556:15:16",
													"value": {
														"arguments": [
															{
																"name": "r",
																"nativeSrc": "3566:1:16",
																"nodeType": "YulIdentifier",
																"src": "3566:1:16"
															},
															{
																"name": "y",
																"nativeSrc": "3569:1:16",
																"nodeType": "YulIdentifier",
																"src": "3569:1:16"
															}
														],
														"functionName": {
															"name": "sdiv",
															"nativeSrc": "3561:4:16",
															"nodeType": "YulIdentifier",
															"src": "3561:4:16"
														},
														"nativeSrc": "3561:10:16",
														"nodeType": "YulFunctionCall",
														"src": "3561:10:16"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "3556:1:16",
															"nodeType": "YulIdentifier",
															"src": "3556:1:16"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 2388,
												"isOffset": false,
												"isSlot": false,
												"src": "3302:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2388,
												"isOffset": false,
												"isSlot": false,
												"src": "3454:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2388,
												"isOffset": false,
												"isSlot": false,
												"src": "3556:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2388,
												"isOffset": false,
												"isSlot": false,
												"src": "3566:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2383,
												"isOffset": false,
												"isSlot": false,
												"src": "3311:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2383,
												"isOffset": false,
												"isSlot": false,
												"src": "3479:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2385,
												"isOffset": false,
												"isSlot": false,
												"src": "3441:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2385,
												"isOffset": false,
												"isSlot": false,
												"src": "3569:1:16",
												"valueSize": 1
											}
										],
										"id": 2390,
										"nodeType": "InlineAssembly",
										"src": "3243:334:16"
									}
								]
							},
							"id": 2392,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "wadDiv",
							"nameLocation": "3147:6:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2386,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2383,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "3161:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2392,
										"src": "3154:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2382,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3154:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2385,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "3171:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2392,
										"src": "3164:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2384,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3164:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3153:20:16"
							},
							"returnParameters": {
								"id": 2389,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2388,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "3195:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2392,
										"src": "3188:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2387,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3188:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3187:10:16"
							},
							"scope": 2840,
							"src": "3138:441:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2413,
								"nodeType": "Block",
								"src": "3712:187:16",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2404,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2395,
																			"src": "3834:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2403,
																		"name": "wadLn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2827,
																		"src": "3828:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256) pure returns (int256)"
																		}
																	},
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3828:8:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2406,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2397,
																	"src": "3839:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3828:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2408,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3827:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 2409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3844:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "3827:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												],
												"id": 2402,
												"name": "wadExp",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2609,
												"src": "3820:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$",
													"typeString": "function (int256) pure returns (int256)"
												}
											},
											"id": 2411,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3820:29:16",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"functionReturnParameters": 2401,
										"id": 2412,
										"nodeType": "Return",
										"src": "3813:36:16"
									}
								]
							},
							"documentation": {
								"id": 2393,
								"nodeType": "StructuredDocumentation",
								"src": "3581:73:16",
								"text": "@dev Will not work with negative bases, only use when x is positive."
							},
							"id": 2414,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "wadPow",
							"nameLocation": "3663:6:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2398,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2395,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "3677:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2414,
										"src": "3670:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2394,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3670:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2397,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "3687:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2414,
										"src": "3680:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2396,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3680:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3669:20:16"
							},
							"returnParameters": {
								"id": 2401,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2400,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2414,
										"src": "3704:6:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2399,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3704:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3703:8:16"
							},
							"scope": 2840,
							"src": "3654:245:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2608,
								"nodeType": "Block",
								"src": "3951:2903:16",
								"statements": [
									{
										"id": 2607,
										"nodeType": "UncheckedBlock",
										"src": "3957:2895:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2421,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "4102:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "4107:21:16",
														"subExpression": {
															"hexValue": "3432313339363738383534343532373637353531",
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4108:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_42139678854452767551_by_1",
																"typeString": "int_const 42139678854452767551"
															},
															"value": "42139678854452767551"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_42139678854452767551_by_1",
															"typeString": "int_const -42139678854452767551"
														}
													},
													"src": "4102:26:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2427,
												"nodeType": "IfStatement",
												"src": "4098:40:16",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4137:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2420,
													"id": 2426,
													"nodeType": "Return",
													"src": "4130:8:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2428,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "4320:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313335333035393939333638383933323331353839",
														"id": 2429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4325:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_135305999368893231589_by_1",
															"typeString": "int_const 135305999368893231589"
														},
														"value": "135305999368893231589"
													},
													"src": "4320:26:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2435,
												"nodeType": "IfStatement",
												"src": "4316:54:16",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "4558505f4f564552464c4f57",
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4355:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f364785e6e651288224d2623ec5f083c58c85325644496b3d02635790697d3c7",
																	"typeString": "literal_string \"EXP_OVERFLOW\""
																},
																"value": "EXP_OVERFLOW"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_f364785e6e651288224d2623ec5f083c58c85325644496b3d02635790697d3c7",
																	"typeString": "literal_string \"EXP_OVERFLOW\""
																}
															],
															"id": 2431,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "4348:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 2433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4348:22:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2434,
													"nodeType": "ExpressionStatement",
													"src": "4348:22:16"
												}
											},
											{
												"expression": {
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2436,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "4611:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2437,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2416,
																		"src": "4616:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3738",
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4621:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_78_by_1",
																			"typeString": "int_const 78"
																		},
																		"value": "78"
																	},
																	"src": "4616:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2440,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4615:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_3814697265625_by_1",
																"typeString": "int_const 3814697265625"
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "35",
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4627:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4632:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "4627:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3814697265625_by_1",
																"typeString": "int_const 3814697265625"
															}
														},
														"src": "4615:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4611:23:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2446,
												"nodeType": "ExpressionStatement",
												"src": "4611:23:16"
											},
											{
												"assignments": [
													2448
												],
												"declarations": [
													{
														"constant": false,
														"id": 2448,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "4889:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 2607,
														"src": "4882:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2447,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4882:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2462,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2449,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2416,
																					"src": "4895:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "3936",
																					"id": 2450,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4900:2:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_96_by_1",
																						"typeString": "int_const 96"
																					},
																					"value": "96"
																				},
																				"src": "4895:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2452,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4894:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3534393136373737343637373037343733333531313431343731313238",
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4906:29:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_54916777467707473351141471128_by_1",
																			"typeString": "int_const 54916777467707473351141471128"
																		},
																		"value": "54916777467707473351141471128"
																	},
																	"src": "4894:41:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_39614081257132168796771975168_by_1",
																		"typeString": "int_const 39614081257132168796771975168"
																	},
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4938:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3935",
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4943:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_95_by_1",
																			"typeString": "int_const 95"
																		},
																		"value": "95"
																	},
																	"src": "4938:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_39614081257132168796771975168_by_1",
																		"typeString": "int_const 39614081257132168796771975168"
																	}
																},
																"src": "4894:51:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2459,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4893:53:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"hexValue": "3936",
														"id": 2460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4950:2:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"value": "96"
													},
													"src": "4893:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4882:70:16"
											},
											{
												"expression": {
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2463,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "4962:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2464,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "4966:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2465,
																"name": "k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "4970:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "3534393136373737343637373037343733333531313431343731313238",
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4974:29:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_54916777467707473351141471128_by_1",
																	"typeString": "int_const 54916777467707473351141471128"
																},
																"value": "54916777467707473351141471128"
															},
															"src": "4970:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4966:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4962:41:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2470,
												"nodeType": "ExpressionStatement",
												"src": "4962:41:16"
											},
											{
												"assignments": [
													2472
												],
												"declarations": [
													{
														"constant": false,
														"id": 2472,
														"mutability": "mutable",
														"name": "y",
														"nameLocation": "5195:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 2607,
														"src": "5188:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2471,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5188:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2476,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2473,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "5199:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31333436333836363136353435373936343738393230393530373733333238",
														"id": 2474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5203:31:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1346386616545796478920950773328_by_1",
															"typeString": "int_const 1346386616545796478920950773328"
														},
														"value": "1346386616545796478920950773328"
													},
													"src": "5199:35:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5188:46:16"
											},
											{
												"expression": {
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2477,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2472,
														"src": "5244:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2478,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2472,
																					"src": "5250:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2479,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2416,
																					"src": "5254:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5250:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2481,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5249:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5260:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5249:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2484,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3537313535343231323237353532333531303832323234333039373538343432",
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5266:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_57155421227552351082224309758442_by_1",
																"typeString": "int_const 57155421227552351082224309758442"
															},
															"value": "57155421227552351082224309758442"
														},
														"src": "5248:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5244:54:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2488,
												"nodeType": "ExpressionStatement",
												"src": "5244:54:16"
											},
											{
												"assignments": [
													2490
												],
												"declarations": [
													{
														"constant": false,
														"id": 2490,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "5315:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 2607,
														"src": "5308:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2489,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5308:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2496,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2491,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2472,
															"src": "5319:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2492,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "5323:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "5319:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "3934323031353439313934353530343932323534333536303432353034383132",
														"id": 2494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5327:32:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_94201549194550492254356042504812_by_1",
															"typeString": "int_const 94201549194550492254356042504812"
														},
														"value": "94201549194550492254356042504812"
													},
													"src": "5319:40:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5308:51:16"
											},
											{
												"expression": {
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2497,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2490,
														"src": "5369:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2498,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2490,
																					"src": "5375:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2499,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2472,
																					"src": "5379:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5375:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2501,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5374:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5385:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5374:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2504,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5373:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3238373139303231363434303239373236313533393536393434363830343132323430",
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5391:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_28719021644029726153956944680412240_by_1",
																"typeString": "int_const 2871...(27 digits omitted)...2240"
															},
															"value": "28719021644029726153956944680412240"
														},
														"src": "5373:53:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5369:57:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2508,
												"nodeType": "ExpressionStatement",
												"src": "5369:57:16"
											},
											{
												"expression": {
													"id": 2518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2509,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2490,
														"src": "5436:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2510,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2490,
																"src": "5440:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2511,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2416,
																"src": "5444:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5440:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_347437083999162433888837515002539729507623920905942392673140736_by_1",
																		"typeString": "int_const 3474...(55 digits omitted)...0736"
																	},
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "34333835323732353231343534383437393034363539303736393835363933323736",
																		"id": 2513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5449:34:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4385272521454847904659076985693276_by_1",
																			"typeString": "int_const 4385...(26 digits omitted)...3276"
																		},
																		"value": "4385272521454847904659076985693276"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5487:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5449:40:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_347437083999162433888837515002539729507623920905942392673140736_by_1",
																		"typeString": "int_const 3474...(55 digits omitted)...0736"
																	}
																}
															],
															"id": 2516,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5448:42:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_347437083999162433888837515002539729507623920905942392673140736_by_1",
																"typeString": "int_const 3474...(55 digits omitted)...0736"
															}
														},
														"src": "5440:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5436:54:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2519,
												"nodeType": "ExpressionStatement",
												"src": "5436:54:16"
											},
											{
												"assignments": [
													2521
												],
												"declarations": [
													{
														"constant": false,
														"id": 2521,
														"mutability": "mutable",
														"name": "q",
														"nameLocation": "5601:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 2607,
														"src": "5594:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2520,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5594:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2525,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2522,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "5605:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "32383535393839333934393037323233323633393336343834303539393030",
														"id": 2523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5609:31:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2855989394907223263936484059900_by_1",
															"typeString": "int_const 2855989394907223263936484059900"
														},
														"value": "2855989394907223263936484059900"
													},
													"src": "5605:35:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5594:46:16"
											},
											{
												"expression": {
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2526,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "5650:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2527,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "5656:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2528,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2416,
																					"src": "5660:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5656:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2530,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5655:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5666:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5655:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2533,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5654:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3530303230363033363532353335373833303139393631383331383831393435",
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5672:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50020603652535783019961831881945_by_1",
																"typeString": "int_const 50020603652535783019961831881945"
															},
															"value": "50020603652535783019961831881945"
														},
														"src": "5654:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5650:54:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2537,
												"nodeType": "ExpressionStatement",
												"src": "5650:54:16"
											},
											{
												"expression": {
													"id": 2548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2538,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "5714:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2539,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "5720:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2540,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2416,
																					"src": "5724:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5720:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2542,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5719:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5730:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5719:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5718:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "353333383435303333353833343236373033323833363333343333373235333830",
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5736:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_533845033583426703283633433725380_by_1",
																"typeString": "int_const 5338...(25 digits omitted)...5380"
															},
															"value": "533845033583426703283633433725380"
														},
														"src": "5718:51:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5714:55:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2549,
												"nodeType": "ExpressionStatement",
												"src": "5714:55:16"
											},
											{
												"expression": {
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2550,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "5779:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2551,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "5785:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2552,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2416,
																					"src": "5789:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5785:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2554,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5784:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5795:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5784:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2557,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5783:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "33363034383537323536393330363935343237303733363531393138303931343239",
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5801:34:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3604857256930695427073651918091429_by_1",
																"typeString": "int_const 3604...(26 digits omitted)...1429"
															},
															"value": "3604857256930695427073651918091429"
														},
														"src": "5783:52:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5779:56:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2561,
												"nodeType": "ExpressionStatement",
												"src": "5779:56:16"
											},
											{
												"expression": {
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2562,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "5845:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2563,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "5851:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2564,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2416,
																					"src": "5855:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5851:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2566,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5850:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5861:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5850:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2569,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5849:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "3134343233363038353637333530343633313830383837333732393632383037353733",
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5867:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_14423608567350463180887372962807573_by_1",
																"typeString": "int_const 1442...(27 digits omitted)...7573"
															},
															"value": "14423608567350463180887372962807573"
														},
														"src": "5849:53:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5845:57:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2573,
												"nodeType": "ExpressionStatement",
												"src": "5845:57:16"
											},
											{
												"expression": {
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2574,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "5912:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2575,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "5918:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2576,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2416,
																					"src": "5922:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5918:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2578,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5917:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5928:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5917:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2581,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5916:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3236343439313838343938333535353838333339393334383033373233393736303233",
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5934:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_26449188498355588339934803723976023_by_1",
																"typeString": "int_const 2644...(27 digits omitted)...6023"
															},
															"value": "26449188498355588339934803723976023"
														},
														"src": "5916:53:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5912:57:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2585,
												"nodeType": "ExpressionStatement",
												"src": "5912:57:16"
											},
											{
												"AST": {
													"nativeSrc": "6032:298:16",
													"nodeType": "YulBlock",
													"src": "6032:298:16",
													"statements": [
														{
															"nativeSrc": "6305:15:16",
															"nodeType": "YulAssignment",
															"src": "6305:15:16",
															"value": {
																"arguments": [
																	{
																		"name": "p",
																		"nativeSrc": "6315:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "6315:1:16"
																	},
																	{
																		"name": "q",
																		"nativeSrc": "6318:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "6318:1:16"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "6310:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6310:4:16"
																},
																"nativeSrc": "6310:10:16",
																"nodeType": "YulFunctionCall",
																"src": "6310:10:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6305:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "6305:1:16"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2490,
														"isOffset": false,
														"isSlot": false,
														"src": "6315:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2521,
														"isOffset": false,
														"isSlot": false,
														"src": "6318:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2419,
														"isOffset": false,
														"isSlot": false,
														"src": "6305:1:16",
														"valueSize": 1
													}
												],
												"id": 2586,
												"nodeType": "InlineAssembly",
												"src": "6023:307:16"
											},
											{
												"expression": {
													"id": 2605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2587,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2419,
														"src": "6749:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2592,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2419,
																						"src": "6769:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2591,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6761:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2590,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "6761:7:16",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6761:10:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "33383232383333303734393633323336343533303432373338323538393032313538303033313535343136363135363637",
																				"id": 2594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6774:49:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3822833074963236453042738258902158003155416615667_by_1",
																					"typeString": "int_const 3822...(41 digits omitted)...5667"
																				},
																				"value": "3822833074963236453042738258902158003155416615667"
																			},
																			"src": "6761:62:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2596,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6760:64:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313935",
																				"id": 2599,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6836:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_195_by_1",
																					"typeString": "int_const 195"
																				},
																				"value": "195"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2600,
																				"name": "k",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "6842:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "6836:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6828:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2597,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6828:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6828:16:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6760:84:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6753:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 2588,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "6753:6:16",
																"typeDescriptions": {}
															}
														},
														"id": 2604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6753:92:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6749:96:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2606,
												"nodeType": "ExpressionStatement",
												"src": "6749:96:16"
											}
										]
									}
								]
							},
							"id": 2609,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "wadExp",
							"nameLocation": "3910:6:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2417,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2416,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "3924:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2609,
										"src": "3917:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2415,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3917:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3916:10:16"
							},
							"returnParameters": {
								"id": 2420,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2419,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "3948:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2609,
										"src": "3941:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2418,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3941:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3940:10:16"
							},
							"scope": 2840,
							"src": "3901:2953:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2826,
								"nodeType": "Block",
								"src": "6905:3220:16",
								"statements": [
									{
										"id": 2825,
										"nodeType": "UncheckedBlock",
										"src": "6911:3212:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2617,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2611,
																"src": "6939:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6943:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6939:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e444546494e4544",
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6946:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b70f99725f613142a957aa77c3aedce39bd858a4e6387f20e61acd49274b091c",
																"typeString": "literal_string \"UNDEFINED\""
															},
															"value": "UNDEFINED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b70f99725f613142a957aa77c3aedce39bd858a4e6387f20e61acd49274b091c",
																"typeString": "literal_string \"UNDEFINED\""
															}
														],
														"id": 2616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6931:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:27:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2622,
												"nodeType": "ExpressionStatement",
												"src": "6931:27:16"
											},
											{
												"AST": {
													"nativeSrc": "7284:453:16",
													"nodeType": "YulBlock",
													"src": "7284:453:16",
													"statements": [
														{
															"nativeSrc": "7298:54:16",
															"nodeType": "YulAssignment",
															"src": "7298:54:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7307:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7307:1:16",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7313:34:16",
																				"nodeType": "YulLiteral",
																				"src": "7313:34:16",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "7349:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "7349:1:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7310:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7310:2:16"
																		},
																		"nativeSrc": "7310:41:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7310:41:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "7303:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:16"
																},
																"nativeSrc": "7303:49:16",
																"nodeType": "YulFunctionCall",
																"src": "7303:49:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7298:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "7298:1:16"
																}
															]
														},
														{
															"nativeSrc": "7365:53:16",
															"nodeType": "YulAssignment",
															"src": "7365:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7373:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7373:1:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7380:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7380:1:16",
																				"type": "",
																				"value": "6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7386:18:16",
																						"nodeType": "YulLiteral",
																						"src": "7386:18:16",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7410:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7410:1:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7413:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7413:1:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7406:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7406:3:16"
																						},
																						"nativeSrc": "7406:9:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7406:9:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7383:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "7383:2:16"
																				},
																				"nativeSrc": "7383:33:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7383:33:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7376:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7376:3:16"
																		},
																		"nativeSrc": "7376:41:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7376:41:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7370:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7370:2:16"
																},
																"nativeSrc": "7370:48:16",
																"nodeType": "YulFunctionCall",
																"src": "7370:48:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7365:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "7365:1:16"
																}
															]
														},
														{
															"nativeSrc": "7431:45:16",
															"nodeType": "YulAssignment",
															"src": "7431:45:16",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7439:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7439:1:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7446:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7446:1:16",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7452:10:16",
																						"nodeType": "YulLiteral",
																						"src": "7452:10:16",
																						"type": "",
																						"value": "0xffffffff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7468:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7468:1:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7471:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7471:1:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7464:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7464:3:16"
																						},
																						"nativeSrc": "7464:9:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7464:9:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7449:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "7449:2:16"
																				},
																				"nativeSrc": "7449:25:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7449:25:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7442:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:16"
																		},
																		"nativeSrc": "7442:33:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7442:33:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7436:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7436:2:16"
																},
																"nativeSrc": "7436:40:16",
																"nodeType": "YulFunctionCall",
																"src": "7436:40:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7431:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "7431:1:16"
																}
															]
														},
														{
															"nativeSrc": "7489:41:16",
															"nodeType": "YulAssignment",
															"src": "7489:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7497:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7497:1:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7504:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7504:1:16",
																				"type": "",
																				"value": "4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7510:6:16",
																						"nodeType": "YulLiteral",
																						"src": "7510:6:16",
																						"type": "",
																						"value": "0xffff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7522:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7522:1:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7525:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7525:1:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7518:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7518:3:16"
																						},
																						"nativeSrc": "7518:9:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7518:9:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7507:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "7507:2:16"
																				},
																				"nativeSrc": "7507:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7507:21:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7500:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7500:3:16"
																		},
																		"nativeSrc": "7500:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7500:29:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7494:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7494:2:16"
																},
																"nativeSrc": "7494:36:16",
																"nodeType": "YulFunctionCall",
																"src": "7494:36:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7489:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "7489:1:16"
																}
															]
														},
														{
															"nativeSrc": "7543:39:16",
															"nodeType": "YulAssignment",
															"src": "7543:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7551:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7551:1:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7558:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7558:1:16",
																				"type": "",
																				"value": "3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7564:4:16",
																						"nodeType": "YulLiteral",
																						"src": "7564:4:16",
																						"type": "",
																						"value": "0xff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7574:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7574:1:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7577:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7577:1:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7570:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7570:3:16"
																						},
																						"nativeSrc": "7570:9:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7570:9:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7561:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "7561:2:16"
																				},
																				"nativeSrc": "7561:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7561:19:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7554:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:16"
																		},
																		"nativeSrc": "7554:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7554:27:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7548:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7548:2:16"
																},
																"nativeSrc": "7548:34:16",
																"nodeType": "YulFunctionCall",
																"src": "7548:34:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7543:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "7543:1:16"
																}
															]
														},
														{
															"nativeSrc": "7595:38:16",
															"nodeType": "YulAssignment",
															"src": "7595:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7603:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7603:1:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7610:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7610:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7616:3:16",
																						"nodeType": "YulLiteral",
																						"src": "7616:3:16",
																						"type": "",
																						"value": "0xf"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7625:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7625:1:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7628:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7628:1:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7621:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7621:3:16"
																						},
																						"nativeSrc": "7621:9:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7621:9:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7613:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "7613:2:16"
																				},
																				"nativeSrc": "7613:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7613:18:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7606:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7606:3:16"
																		},
																		"nativeSrc": "7606:26:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7606:26:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7600:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7600:2:16"
																},
																"nativeSrc": "7600:33:16",
																"nodeType": "YulFunctionCall",
																"src": "7600:33:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7595:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "7595:1:16"
																}
															]
														},
														{
															"nativeSrc": "7646:38:16",
															"nodeType": "YulAssignment",
															"src": "7646:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7654:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7654:1:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7661:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7661:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7667:3:16",
																						"nodeType": "YulLiteral",
																						"src": "7667:3:16",
																						"type": "",
																						"value": "0x3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7676:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7676:1:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7679:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "7679:1:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7672:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7672:3:16"
																						},
																						"nativeSrc": "7672:9:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7672:9:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7664:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "7664:2:16"
																				},
																				"nativeSrc": "7664:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7664:18:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7657:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7657:3:16"
																		},
																		"nativeSrc": "7657:26:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7657:26:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7651:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7651:2:16"
																},
																"nativeSrc": "7651:33:16",
																"nodeType": "YulFunctionCall",
																"src": "7651:33:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7646:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "7646:1:16"
																}
															]
														},
														{
															"nativeSrc": "7697:30:16",
															"nodeType": "YulAssignment",
															"src": "7697:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7705:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7705:1:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7711:3:16",
																				"nodeType": "YulLiteral",
																				"src": "7711:3:16",
																				"type": "",
																				"value": "0x1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "7720:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "7720:1:16"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "7723:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "7723:1:16"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "7716:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7716:3:16"
																				},
																				"nativeSrc": "7716:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7716:9:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7708:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7708:2:16"
																		},
																		"nativeSrc": "7708:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:18:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7702:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7702:2:16"
																},
																"nativeSrc": "7702:25:16",
																"nodeType": "YulFunctionCall",
																"src": "7702:25:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7697:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "7697:1:16"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7298:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7365:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7373:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7410:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7431:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7439:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7468:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7489:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7497:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7522:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7543:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7551:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7574:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7595:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7603:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7625:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7646:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7654:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7676:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7697:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7705:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "7720:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2611,
														"isOffset": false,
														"isSlot": false,
														"src": "7349:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2611,
														"isOffset": false,
														"isSlot": false,
														"src": "7413:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2611,
														"isOffset": false,
														"isSlot": false,
														"src": "7471:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2611,
														"isOffset": false,
														"isSlot": false,
														"src": "7525:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2611,
														"isOffset": false,
														"isSlot": false,
														"src": "7577:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2611,
														"isOffset": false,
														"isSlot": false,
														"src": "7628:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2611,
														"isOffset": false,
														"isSlot": false,
														"src": "7679:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2611,
														"isOffset": false,
														"isSlot": false,
														"src": "7723:1:16",
														"valueSize": 1
													}
												],
												"id": 2623,
												"nodeType": "InlineAssembly",
												"src": "7275:462:16"
											},
											{
												"assignments": [
													2625
												],
												"declarations": [
													{
														"constant": false,
														"id": 2625,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "7844:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 2825,
														"src": "7837:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2624,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7837:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2629,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2626,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "7848:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "3936",
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7852:2:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"value": "96"
													},
													"src": "7848:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7837:17:16"
											},
											{
												"expression": {
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2630,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "7864:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "<<=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313539",
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7878:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_159_by_1",
																		"typeString": "int_const 159"
																	},
																	"value": "159"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2634,
																	"name": "k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2625,
																	"src": "7884:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7878:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7870:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2631,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7870:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7870:16:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7864:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2638,
												"nodeType": "ExpressionStatement",
												"src": "7864:22:16"
											},
											{
												"expression": {
													"id": 2649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2639,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "7896:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2644,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "7915:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7907:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2642,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7907:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7907:10:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313539",
																	"id": 2646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7921:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_159_by_1",
																		"typeString": "int_const 159"
																	},
																	"value": "159"
																},
																"src": "7907:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7900:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 2640,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "7900:6:16",
																"typeDescriptions": {}
															}
														},
														"id": 2648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7900:25:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7896:29:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2650,
												"nodeType": "ExpressionStatement",
												"src": "7896:29:16"
											},
											{
												"assignments": [
													2652
												],
												"declarations": [
													{
														"constant": false,
														"id": 2652,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "8077:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 2825,
														"src": "8070:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2651,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8070:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2656,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2653,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "8081:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "33323733323835343539363338353233383438363332323534303636323936",
														"id": 2654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8085:31:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3273285459638523848632254066296_by_1",
															"typeString": "int_const 3273285459638523848632254066296"
														},
														"value": "3273285459638523848632254066296"
													},
													"src": "8081:35:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8070:46:16"
											},
											{
												"expression": {
													"id": 2667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2657,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "8126:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2658,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2652,
																					"src": "8132:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2659,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "8136:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8132:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2661,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8131:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8142:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8131:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2664,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8130:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3234383238313537303831383333313633383932363538303839343435353234",
															"id": 2665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8148:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_24828157081833163892658089445524_by_1",
																"typeString": "int_const 24828157081833163892658089445524"
															},
															"value": "24828157081833163892658089445524"
														},
														"src": "8130:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8126:54:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2668,
												"nodeType": "ExpressionStatement",
												"src": "8126:54:16"
											},
											{
												"expression": {
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2669,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "8190:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2670,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2652,
																					"src": "8196:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2671,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "8200:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8196:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2673,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8195:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8206:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8195:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2676,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8194:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3433343536343835373235373339303337393538373430333735373433333933",
															"id": 2677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8212:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_43456485725739037958740375743393_by_1",
																"typeString": "int_const 43456485725739037958740375743393"
															},
															"value": "43456485725739037958740375743393"
														},
														"src": "8194:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8190:54:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2680,
												"nodeType": "ExpressionStatement",
												"src": "8190:54:16"
											},
											{
												"expression": {
													"id": 2691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2681,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "8254:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2682,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2652,
																					"src": "8260:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2683,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "8264:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8260:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2685,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8259:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8270:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8259:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2688,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8258:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "3131313131353039313039343430393637303532303233383535353236393637",
															"id": 2689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8276:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11111509109440967052023855526967_by_1",
																"typeString": "int_const 11111509109440967052023855526967"
															},
															"value": "11111509109440967052023855526967"
														},
														"src": "8258:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8254:54:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2692,
												"nodeType": "ExpressionStatement",
												"src": "8254:54:16"
											},
											{
												"expression": {
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2693,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "8318:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2694,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2652,
																					"src": "8324:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2695,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "8328:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8324:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2697,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8323:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8334:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8323:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2700,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8322:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "3435303233373039363637323534303633373633333336353334353135383537",
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8340:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_45023709667254063763336534515857_by_1",
																"typeString": "int_const 45023709667254063763336534515857"
															},
															"value": "45023709667254063763336534515857"
														},
														"src": "8322:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8318:54:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2704,
												"nodeType": "ExpressionStatement",
												"src": "8318:54:16"
											},
											{
												"expression": {
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2705,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "8382:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2706,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2652,
																					"src": "8388:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2707,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "8392:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8388:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2709,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8387:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8398:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8387:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2712,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8386:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "3134373036373733343137333738363038373836373034363336313834353236",
															"id": 2713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8404:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_14706773417378608786704636184526_by_1",
																"typeString": "int_const 14706773417378608786704636184526"
															},
															"value": "14706773417378608786704636184526"
														},
														"src": "8386:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8382:54:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2716,
												"nodeType": "ExpressionStatement",
												"src": "8382:54:16"
											},
											{
												"expression": {
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2717,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "8446:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2718,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2652,
																"src": "8450:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2719,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2611,
																"src": "8454:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "8450:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_62999401287715976015676079709131874438408901006995465699328_by_1",
																		"typeString": "int_const 6299...(51 digits omitted)...9328"
																	},
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "373935313634323335363531333530343236323538323439373837343938",
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8459:30:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_795164235651350426258249787498_by_1",
																			"typeString": "int_const 795164235651350426258249787498"
																		},
																		"value": "795164235651350426258249787498"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8493:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8459:36:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_62999401287715976015676079709131874438408901006995465699328_by_1",
																		"typeString": "int_const 6299...(51 digits omitted)...9328"
																	}
																}
															],
															"id": 2724,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8458:38:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_62999401287715976015676079709131874438408901006995465699328_by_1",
																"typeString": "int_const 6299...(51 digits omitted)...9328"
															}
														},
														"src": "8450:46:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8446:50:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2727,
												"nodeType": "ExpressionStatement",
												"src": "8446:50:16"
											},
											{
												"assignments": [
													2729
												],
												"declarations": [
													{
														"constant": false,
														"id": 2729,
														"mutability": "mutable",
														"name": "q",
														"nameLocation": "8644:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 2825,
														"src": "8637:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2728,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8637:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2733,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2730,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "8648:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "35353733303335323333343430363733343636333030343531383133393336",
														"id": 2731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8652:31:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5573035233440673466300451813936_by_1",
															"typeString": "int_const 5573035233440673466300451813936"
														},
														"value": "5573035233440673466300451813936"
													},
													"src": "8648:35:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8637:46:16"
											},
											{
												"expression": {
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2734,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2729,
														"src": "8693:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2735,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2729,
																					"src": "8699:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2736,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "8703:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8699:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2738,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8698:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8709:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8698:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2741,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8697:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3731363934383734373939333137383833373634303930353631343534393538",
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8715:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_71694874799317883764090561454958_by_1",
																"typeString": "int_const 71694874799317883764090561454958"
															},
															"value": "71694874799317883764090561454958"
														},
														"src": "8697:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8693:54:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2745,
												"nodeType": "ExpressionStatement",
												"src": "8693:54:16"
											},
											{
												"expression": {
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2746,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2729,
														"src": "8757:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2747,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2729,
																					"src": "8763:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2748,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "8767:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8763:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2750,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8762:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8773:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8762:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2753,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8761:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "323833343437303336313732393234353735373237313936343531333036393536",
															"id": 2754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8779:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_283447036172924575727196451306956_by_1",
																"typeString": "int_const 2834...(25 digits omitted)...6956"
															},
															"value": "283447036172924575727196451306956"
														},
														"src": "8761:51:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8757:55:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2757,
												"nodeType": "ExpressionStatement",
												"src": "8757:55:16"
											},
											{
												"expression": {
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2758,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2729,
														"src": "8822:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2759,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2729,
																					"src": "8828:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2760,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "8832:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8828:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2762,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8827:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8838:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8827:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2765,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8826:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "343031363836363930333934303237363633363531363234323038373639353533",
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8844:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_401686690394027663651624208769553_by_1",
																"typeString": "int_const 4016...(25 digits omitted)...9553"
															},
															"value": "401686690394027663651624208769553"
														},
														"src": "8826:51:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8822:55:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2769,
												"nodeType": "ExpressionStatement",
												"src": "8822:55:16"
											},
											{
												"expression": {
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2770,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2729,
														"src": "8887:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2771,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2729,
																					"src": "8893:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2772,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "8897:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8893:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2774,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8892:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8903:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8892:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2777,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8891:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "323034303438343537353930333932303132333632343835303631383136363232",
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8909:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_204048457590392012362485061816622_by_1",
																"typeString": "int_const 2040...(25 digits omitted)...6622"
															},
															"value": "204048457590392012362485061816622"
														},
														"src": "8891:51:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8887:55:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2781,
												"nodeType": "ExpressionStatement",
												"src": "8887:55:16"
											},
											{
												"expression": {
													"id": 2792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2782,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2729,
														"src": "8952:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2783,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2729,
																					"src": "8958:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2784,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "8962:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8958:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2786,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8957:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8968:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8957:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2789,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8956:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3331383533383939363938353031353731343032363533333539343237313338",
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8974:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31853899698501571402653359427138_by_1",
																"typeString": "int_const 31853899698501571402653359427138"
															},
															"value": "31853899698501571402653359427138"
														},
														"src": "8956:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8952:54:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2793,
												"nodeType": "ExpressionStatement",
												"src": "8952:54:16"
											},
											{
												"expression": {
													"id": 2804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2794,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2729,
														"src": "9016:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2795,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2729,
																					"src": "9022:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2796,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2611,
																					"src": "9026:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "9022:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 2798,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9021:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9032:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "9021:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 2801,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9020:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "393039343239393731323434333837333030323737333736353538333735",
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9038:30:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_909429971244387300277376558375_by_1",
																"typeString": "int_const 909429971244387300277376558375"
															},
															"value": "909429971244387300277376558375"
														},
														"src": "9020:48:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "9016:52:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2805,
												"nodeType": "ExpressionStatement",
												"src": "9016:52:16"
											},
											{
												"AST": {
													"nativeSrc": "9130:275:16",
													"nodeType": "YulBlock",
													"src": "9130:275:16",
													"statements": [
														{
															"nativeSrc": "9380:15:16",
															"nodeType": "YulAssignment",
															"src": "9380:15:16",
															"value": {
																"arguments": [
																	{
																		"name": "p",
																		"nativeSrc": "9390:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "9390:1:16"
																	},
																	{
																		"name": "q",
																		"nativeSrc": "9393:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "9393:1:16"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "9385:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9385:4:16"
																},
																"nativeSrc": "9385:10:16",
																"nodeType": "YulFunctionCall",
																"src": "9385:10:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9380:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "9380:1:16"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2652,
														"isOffset": false,
														"isSlot": false,
														"src": "9390:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2729,
														"isOffset": false,
														"isSlot": false,
														"src": "9393:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "9380:1:16",
														"valueSize": 1
													}
												],
												"id": 2806,
												"nodeType": "InlineAssembly",
												"src": "9121:284:16"
											},
											{
												"expression": {
													"id": 2809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2807,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "9734:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"hexValue": "31363737323032313130393936373138353838333432383230393637303637343433393633353136313636",
														"id": 2808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9739:43:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1677202110996718588342820967067443963516166_by_1",
															"typeString": "int_const 1677...(35 digits omitted)...6166"
														},
														"value": "1677202110996718588342820967067443963516166"
													},
													"src": "9734:48:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2810,
												"nodeType": "ExpressionStatement",
												"src": "9734:48:16"
											},
											{
												"expression": {
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2811,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "9833:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3136353937353737353532363835363134323231343837323835393538313933393437343639313933383230353539323139383738313737393038303933343939323038333731",
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9838:71:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16597577552685614221487285958193947469193820559219878177908093499208371_by_1",
																"typeString": "int_const 1659...(63 digits omitted)...8371"
															},
															"value": "16597577552685614221487285958193947469193820559219878177908093499208371"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2813,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2625,
															"src": "9912:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "9838:75:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "9833:80:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2816,
												"nodeType": "ExpressionStatement",
												"src": "9833:80:16"
											},
											{
												"expression": {
													"id": 2819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2817,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "9973:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "363030393230313739383239373331383631373336373032373739333231363231343539353935343732323538303439303734313031353637333737383833303230303138333038",
														"id": 2818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9978:72:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_600920179829731861736702779321621459595472258049074101567377883020018308_by_1",
															"typeString": "int_const 6009...(64 digits omitted)...8308"
														},
														"value": "600920179829731861736702779321621459595472258049074101567377883020018308"
													},
													"src": "9973:77:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2820,
												"nodeType": "ExpressionStatement",
												"src": "9973:77:16"
											},
											{
												"expression": {
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2821,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "10107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": ">>=",
													"rightHandSide": {
														"hexValue": "313734",
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10113:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_174_by_1",
															"typeString": "int_const 174"
														},
														"value": "174"
													},
													"src": "10107:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2824,
												"nodeType": "ExpressionStatement",
												"src": "10107:9:16"
											}
										]
									}
								]
							},
							"id": 2827,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "wadLn",
							"nameLocation": "6865:5:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2612,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2611,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6878:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2827,
										"src": "6871:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2610,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "6871:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6870:10:16"
							},
							"returnParameters": {
								"id": 2615,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2614,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "6902:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2827,
										"src": "6895:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2613,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "6895:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6894:10:16"
							},
							"scope": 2840,
							"src": "6856:3269:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2838,
								"nodeType": "Block",
								"src": "10248:113:16",
								"statements": [
									{
										"AST": {
											"nativeSrc": "10302:57:16",
											"nodeType": "YulBlock",
											"src": "10302:57:16",
											"statements": [
												{
													"nativeSrc": "10338:15:16",
													"nodeType": "YulAssignment",
													"src": "10338:15:16",
													"value": {
														"arguments": [
															{
																"name": "x",
																"nativeSrc": "10348:1:16",
																"nodeType": "YulIdentifier",
																"src": "10348:1:16"
															},
															{
																"name": "y",
																"nativeSrc": "10351:1:16",
																"nodeType": "YulIdentifier",
																"src": "10351:1:16"
															}
														],
														"functionName": {
															"name": "sdiv",
															"nativeSrc": "10343:4:16",
															"nodeType": "YulIdentifier",
															"src": "10343:4:16"
														},
														"nativeSrc": "10343:10:16",
														"nodeType": "YulFunctionCall",
														"src": "10343:10:16"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "10338:1:16",
															"nodeType": "YulIdentifier",
															"src": "10338:1:16"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 2835,
												"isOffset": false,
												"isSlot": false,
												"src": "10338:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2830,
												"isOffset": false,
												"isSlot": false,
												"src": "10348:1:16",
												"valueSize": 1
											},
											{
												"declaration": 2832,
												"isOffset": false,
												"isSlot": false,
												"src": "10351:1:16",
												"valueSize": 1
											}
										],
										"id": 2837,
										"nodeType": "InlineAssembly",
										"src": "10293:66:16"
									}
								]
							},
							"documentation": {
								"id": 2828,
								"nodeType": "StructuredDocumentation",
								"src": "10127:58:16",
								"text": "@dev Will return 0 instead of reverting if y is zero."
							},
							"id": 2839,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "unsafeDiv",
							"nameLocation": "10194:9:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2833,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2830,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "10211:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2839,
										"src": "10204:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2829,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "10204:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2832,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "10221:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2839,
										"src": "10214:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2831,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "10214:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "10203:20:16"
							},
							"returnParameters": {
								"id": 2836,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2835,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "10245:1:16",
										"nodeType": "VariableDeclaration",
										"scope": 2839,
										"src": "10238:8:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 2834,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "10238:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "10237:10:16"
							},
							"scope": 2840,
							"src": "10185:176:16",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "32:10330:16"
				},
				"id": 16
			}
		}
	}
}