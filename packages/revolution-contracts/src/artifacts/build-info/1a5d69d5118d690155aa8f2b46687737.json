{
	"id": "1a5d69d5118d690155aa8f2b46687737",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/revolution-contracts/TokenEmitter.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.22;\n\nimport { LinearVRGDA } from \"./libs/LinearVRGDA.sol\";\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport { toDaysWadUnsafe } from \"./libs/SignedWadMath.sol\";\nimport { Strings } from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport { NontransferableERC20 } from \"./NontransferableERC20.sol\";\nimport { ITokenEmitter } from \"./interfaces/ITokenEmitter.sol\";\nimport { ReentrancyGuard } from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract TokenEmitter is LinearVRGDA, ITokenEmitter, ReentrancyGuard {\n    // Events\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Log(string name, uint256 value);\n\n    // Vars\n    address private treasury;\n\n    NontransferableERC20 public token;\n\n    // solhint-disable-next-line not-rely-on-time\n    uint256 public immutable startTime = block.timestamp;\n\n    // approved contracts, owner, and a token contract address\n    constructor(\n        NontransferableERC20 _token,\n        address _treasury,\n        int256 _targetPrice, // SCALED BY E18. Target price. This is somewhat arbitrary for governance emissions, since there is no \"target price\" for 1 governance share.\n        int256 _priceDecayPercent, // SCALED BY E18. Price decay percent. This indicates how aggressively you discount governance when sales are not occurring.\n        int256 _governancePerTimeUnit // SCALED BY E18. The number of tokens to target selling in 1 full unit of time.\n    ) LinearVRGDA(_targetPrice, _priceDecayPercent, _governancePerTimeUnit) {\n        treasury = _treasury;\n\n        token = _token;\n    }\n\n    function _mint(address _to, uint _amount) private {\n        token.mint(_to, _amount);\n    }\n\n    function totalSupply() public view returns (uint) {\n        // returns total supply issued so far\n        return token.totalSupply();\n    }\n\n    function balanceOf(address _owner) public view returns (uint) {\n        // returns balance of address\n        return token.balanceOf(_owner);\n    }\n\n    // takes a list of addresses and a list of payout percentages as basis points\n    function buyToken(address[] memory _addresses, uint[] memory _bps, uint256) public payable nonReentrant returns (uint256) {\n        // ensure the same number of addresses and _bps\n        require(_addresses.length == _bps.length, \"Parallel arrays required\");\n\n        uint totalTokens = getTokenAmountForMultiPurchase(msg.value);\n        (bool success, ) = treasury.call{ value: msg.value }(new bytes(0));\n        require(success, \"Transfer failed.\");\n\n        // calculates how much total governance to give\n\n        uint sum = 0;\n\n        // calculates how much governance to give each address\n        for (uint i = 0; i < _addresses.length; i++) {\n            uint tokens = (totalTokens * _bps[i]) / 10_000;\n            // transfer governance to address\n            _mint(_addresses[i], tokens);\n            sum += _bps[i];\n        }\n\n        require(sum == 10_000, \"bps must add up to 10_000\");\n        return totalTokens;\n    }\n\n    // This returns a safe, underestimated amount of governance.\n    function _getTokenAmountForSinglePurchase(uint256 payment, uint256 supply) public view returns (uint256) {\n        // get the initial estimated amount of tokens - assuming we priced your entire purchase at supply + 1 (akin to buying 1 NFT)\n        uint256 overestimatedAmount = UNSAFE_getOverestimateTokenAmount(payment, supply);\n\n        // get the overestimated price - assuming we priced your entire purchase at supply + 1 (akin to buying 1 NFT)\n        uint256 overestimatedPrice = getTokenPrice(supply + overestimatedAmount);\n\n        // get the underestimated price - assuming you paid for the entire purchase at the price of the last token\n        uint256 underestimatedAmount = payment / overestimatedPrice;\n\n        return underestimatedAmount;\n    }\n\n    function getTokenAmountForMultiPurchase(uint256 payment) public view returns (uint256) {\n        // payment is split up into chunks of numTokens\n        // each chunk is estimated and the total is returned\n        // chunk up the payments into 0.001 eth chunks\n\n        //counter to keep track of how much eth is left in the payment\n        uint256 remainingEth = payment;\n\n        // the total amount of tokens to return\n        uint256 tokenAmount = 0;\n\n        // solhint-disable-next-line var-name-mixedcase\n        uint256 INCREMENT_SIZE = 1e15;\n\n        // loop through the payment and add the estimated amount of tokens to the total\n        while (remainingEth > 0) {\n            // if the remaining eth is less than the increment size, calculate the tokenAmount for the remaining eth\n            if (remainingEth < INCREMENT_SIZE) {\n                tokenAmount += _getTokenAmountForSinglePurchase(remainingEth, totalSupply() + tokenAmount);\n                remainingEth = 0;\n            }\n            // otherwise, calculate tokenAmount for the increment size\n            else {\n                tokenAmount += _getTokenAmountForSinglePurchase(INCREMENT_SIZE, totalSupply() + tokenAmount);\n                remainingEth -= INCREMENT_SIZE;\n            }\n        }\n        return tokenAmount;\n    }\n\n    // This will return MORE GOVERNANCE than it should. Never reward the user with this; the DAO will get taken over.\n    // solhint-disable-next-line func-name-mixedcase\n    function UNSAFE_getOverestimateTokenAmount(uint256 payment, uint256 supply) public view returns (uint256) {\n        uint256 priceForFirstToken = getTokenPrice(supply);\n        uint256 initialEstimatedAmount = payment / priceForFirstToken;\n        return initialEstimatedAmount;\n    }\n\n    function getTokenPrice(uint256 tokensSoldSoFar) public view returns (uint256) {\n        // Note: By using toDaysWadUnsafe(block.timestamp - startTime) we are establishing that 1 \"unit of time\" is 1 day.\n        // solhint-disable-next-line not-rely-on-time\n        uint256 price = getVRGDAPrice(toDaysWadUnsafe(block.timestamp - startTime), tokensSoldSoFar);\n\n        return price;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"packages/revolution-contracts/interfaces/ITokenEmitter.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.22;\n\ninterface ITokenEmitter {\n    function buyToken(address[] memory _addresses, uint[] memory _percentages, uint256 numChunks) external payable returns (uint256);\n\n    function _getTokenAmountForSinglePurchase(uint256 payment, uint256 supply) external view returns (uint256);\n\n    function getTokenAmountForMultiPurchase(uint256 payment) external view returns (uint256);\n\n    // solhint-disable-next-line func-name-mixedcase\n    function UNSAFE_getOverestimateTokenAmount(uint256 payment, uint256 supply) external view returns (uint256);\n\n    function getTokenPrice(uint256 currentTotalSupply) external view returns (uint256);\n\n    function totalSupply() external view returns (uint);\n\n    function balanceOf(address _owner) external view returns (uint);\n}\n"
			},
			"packages/revolution-contracts/NontransferableERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.22;\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract NontransferableERC20 is Ownable {\n    mapping(address => uint256) private _balances;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private immutable _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(address _initialOwner, string memory name_, string memory symbol_, uint8 decimals_) Ownable(_initialOwner) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address, uint256) public virtual returns (bool) {\n        return false;\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address, uint256) public virtual returns (bool) {\n        return false;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address, address, uint256) public virtual returns (bool) {\n        return false;\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        // only allow the owner to mint tokens\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    function mint(address account, uint256 amount) public onlyOwner {\n        _mint(account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    // solhint-disable-next-line no-empty-blocks\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    // solhint-disable-next-line no-empty-blocks\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"packages/revolution-contracts/libs/SignedWadMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\n/// @notice Signed 18 decimal fixed point (wad) arithmetic library.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SignedWadMath.sol)\n/// @author Modified from Remco Bloemen (https://xn--2-umb.com/22/exp-ln/index.html)\n\n/// @dev Will not revert on overflow, only use where overflow is not possible.\nfunction toWadUnsafe(uint256 x) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Multiply x by 1e18.\n        r := mul(x, 1000000000000000000)\n    }\n}\n\n/// @dev Takes an integer amount of seconds and converts it to a wad amount of days.\n/// @dev Will not revert on overflow, only use where overflow is not possible.\n/// @dev Not meant for negative second amounts, it assumes x is positive.\nfunction toDaysWadUnsafe(uint256 x) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Multiply x by 1e18 and then divide it by 86400.\n        r := div(mul(x, 1000000000000000000), 86400)\n    }\n}\n\n/// @dev Takes a wad amount of days and converts it to an integer amount of seconds.\n/// @dev Will not revert on overflow, only use where overflow is not possible.\n/// @dev Not meant for negative day amounts, it assumes x is positive.\nfunction fromDaysWadUnsafe(int256 x) pure returns (uint256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Multiply x by 86400 and then divide it by 1e18.\n        r := div(mul(x, 86400), 1000000000000000000)\n    }\n}\n\n/// @dev Will not revert on overflow, only use where overflow is not possible.\nfunction unsafeWadMul(int256 x, int256 y) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Multiply x by y and divide by 1e18.\n        r := sdiv(mul(x, y), 1000000000000000000)\n    }\n}\n\n/// @dev Will return 0 instead of reverting if y is zero and will\n/// not revert on overflow, only use where overflow is not possible.\nfunction unsafeWadDiv(int256 x, int256 y) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Multiply x by 1e18 and divide it by y.\n        r := sdiv(mul(x, 1000000000000000000), y)\n    }\n}\n\nfunction wadMul(int256 x, int256 y) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Store x * y in r for now.\n        r := mul(x, y)\n\n        // Combined overflow check (`x == 0 || (x * y) / x == y`) and edge case check\n        // where x == -1 and y == type(int256).min, for y == -1 and x == min int256,\n        // the second overflow check will catch this.\n        // See: https://secure-contracts.com/learn_evm/arithmetic-checks.html#arithmetic-checks-for-int256-multiplication\n        // Combining into 1 expression saves gas as resulting bytecode will only have 1 `JUMPI`\n        // rather than 2.\n        if iszero(and(or(iszero(x), eq(sdiv(r, x), y)), or(lt(x, not(0)), sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000)))) {\n            revert(0, 0)\n        }\n\n        // Scale the result down by 1e18.\n        r := sdiv(r, 1000000000000000000)\n    }\n}\n\nfunction wadDiv(int256 x, int256 y) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Store x * 1e18 in r for now.\n        r := mul(x, 1000000000000000000)\n\n        // Equivalent to require(y != 0 && ((x * 1e18) / 1e18 == x))\n        if iszero(and(iszero(iszero(y)), eq(sdiv(r, 1000000000000000000), x))) {\n            revert(0, 0)\n        }\n\n        // Divide r by y.\n        r := sdiv(r, y)\n    }\n}\n\n/// @dev Will not work with negative bases, only use when x is positive.\nfunction wadPow(int256 x, int256 y) pure returns (int256) {\n    // Equivalent to x to the power of y because x ** y = (e ** ln(x)) ** y = e ** (ln(x) * y)\n    return wadExp((wadLn(x) * y) / 1e18); // Using ln(x) means x must be greater than 0.\n}\n\nfunction wadExp(int256 x) pure returns (int256 r) {\n    unchecked {\n        // When the result is < 0.5 we return zero. This happens when\n        // x <= floor(log(0.5e18) * 1e18) ~ -42e18\n        if (x <= -42139678854452767551) return 0;\n\n        // When the result is > (2**255 - 1) / 1e18 we can not represent it as an\n        // int. This happens when x >= floor(log((2**255 - 1) / 1e18) * 1e18) ~ 135.\n        if (x >= 135305999368893231589) revert(\"EXP_OVERFLOW\");\n\n        // x is now in the range (-42, 136) * 1e18. Convert to (-42, 136) * 2**96\n        // for more intermediate precision and a binary basis. This base conversion\n        // is a multiplication by 1e18 / 2**96 = 5**18 / 2**78.\n        x = (x << 78) / 5 ** 18;\n\n        // Reduce range of x to (-½ ln 2, ½ ln 2) * 2**96 by factoring out powers\n        // of two such that exp(x) = exp(x') * 2**k, where k is an integer.\n        // Solving this gives k = round(x / log(2)) and x' = x - k * log(2).\n        int256 k = ((x << 96) / 54916777467707473351141471128 + 2 ** 95) >> 96;\n        x = x - k * 54916777467707473351141471128;\n\n        // k is in the range [-61, 195].\n\n        // Evaluate using a (6, 7)-term rational approximation.\n        // p is made monic, we'll multiply by a scale factor later.\n        int256 y = x + 1346386616545796478920950773328;\n        y = ((y * x) >> 96) + 57155421227552351082224309758442;\n        int256 p = y + x - 94201549194550492254356042504812;\n        p = ((p * y) >> 96) + 28719021644029726153956944680412240;\n        p = p * x + (4385272521454847904659076985693276 << 96);\n\n        // We leave p in 2**192 basis so we don't need to scale it back up for the division.\n        int256 q = x - 2855989394907223263936484059900;\n        q = ((q * x) >> 96) + 50020603652535783019961831881945;\n        q = ((q * x) >> 96) - 533845033583426703283633433725380;\n        q = ((q * x) >> 96) + 3604857256930695427073651918091429;\n        q = ((q * x) >> 96) - 14423608567350463180887372962807573;\n        q = ((q * x) >> 96) + 26449188498355588339934803723976023;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Div in assembly because solidity adds a zero check despite the unchecked.\n            // The q polynomial won't have zeros in the domain as all its roots are complex.\n            // No scaling is necessary because p is already 2**96 too large.\n            r := sdiv(p, q)\n        }\n\n        // r should be in the range (0.09, 0.25) * 2**96.\n\n        // We now need to multiply r by:\n        // * the scale factor s = ~6.031367120.\n        // * the 2**k factor from the range reduction.\n        // * the 1e18 / 2**96 factor for base conversion.\n        // We do this all at once, with an intermediate result in 2**213\n        // basis, so the final right shift is always by a positive amount.\n        r = int256((uint256(r) * 3822833074963236453042738258902158003155416615667) >> uint256(195 - k));\n    }\n}\n\nfunction wadLn(int256 x) pure returns (int256 r) {\n    unchecked {\n        require(x > 0, \"UNDEFINED\");\n\n        // We want to convert x from 10**18 fixed point to 2**96 fixed point.\n        // We do this by multiplying by 2**96 / 10**18. But since\n        // ln(x * C) = ln(x) + ln(C), we can simply do nothing here\n        // and add ln(2**96 / 10**18) at the end.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            r := shl(7, lt(0xffffffffffffffffffffffffffffffff, x))\n            r := or(r, shl(6, lt(0xffffffffffffffff, shr(r, x))))\n            r := or(r, shl(5, lt(0xffffffff, shr(r, x))))\n            r := or(r, shl(4, lt(0xffff, shr(r, x))))\n            r := or(r, shl(3, lt(0xff, shr(r, x))))\n            r := or(r, shl(2, lt(0xf, shr(r, x))))\n            r := or(r, shl(1, lt(0x3, shr(r, x))))\n            r := or(r, lt(0x1, shr(r, x)))\n        }\n\n        // Reduce range of x to (1, 2) * 2**96\n        // ln(2^k * x) = k * ln(2) + ln(x)\n        int256 k = r - 96;\n        x <<= uint256(159 - k);\n        x = int256(uint256(x) >> 159);\n\n        // Evaluate using a (8, 8)-term rational approximation.\n        // p is made monic, we will multiply by a scale factor later.\n        int256 p = x + 3273285459638523848632254066296;\n        p = ((p * x) >> 96) + 24828157081833163892658089445524;\n        p = ((p * x) >> 96) + 43456485725739037958740375743393;\n        p = ((p * x) >> 96) - 11111509109440967052023855526967;\n        p = ((p * x) >> 96) - 45023709667254063763336534515857;\n        p = ((p * x) >> 96) - 14706773417378608786704636184526;\n        p = p * x - (795164235651350426258249787498 << 96);\n\n        // We leave p in 2**192 basis so we don't need to scale it back up for the division.\n        // q is monic by convention.\n        int256 q = x + 5573035233440673466300451813936;\n        q = ((q * x) >> 96) + 71694874799317883764090561454958;\n        q = ((q * x) >> 96) + 283447036172924575727196451306956;\n        q = ((q * x) >> 96) + 401686690394027663651624208769553;\n        q = ((q * x) >> 96) + 204048457590392012362485061816622;\n        q = ((q * x) >> 96) + 31853899698501571402653359427138;\n        q = ((q * x) >> 96) + 909429971244387300277376558375;\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Div in assembly because solidity adds a zero check despite the unchecked.\n            // The q polynomial is known not to have zeros in the domain.\n            // No scaling required because p is already 2**96 too large.\n            r := sdiv(p, q)\n        }\n\n        // r is in the range (0, 0.125) * 2**96\n\n        // Finalization, we need to:\n        // * multiply by the scale factor s = 5.549…\n        // * add ln(2**96 / 10**18)\n        // * add k * ln(2)\n        // * multiply by 10**18 / 2**96 = 5**18 >> 78\n\n        // mul s * 5e18 * 2**96, base is now 5**18 * 2**192\n        r *= 1677202110996718588342820967067443963516166;\n        // add ln(2) * k * 5e18 * 2**192\n        r += 16597577552685614221487285958193947469193820559219878177908093499208371 * k;\n        // add ln(2**96 / 10**18) * 5e18 * 2**192\n        r += 600920179829731861736702779321621459595472258049074101567377883020018308;\n        // base conversion: mul 2**18 / 2**192\n        r >>= 174;\n    }\n}\n\n/// @dev Will return 0 instead of reverting if y is zero.\nfunction unsafeDiv(int256 x, int256 y) pure returns (int256 r) {\n    /// @solidity memory-safe-assembly\n    assembly {\n        // Divide x by y.\n        r := sdiv(x, y)\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"packages/revolution-contracts/libs/LinearVRGDA.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.22;\n\nimport { unsafeWadDiv } from \"./SignedWadMath.sol\";\nimport { VRGDA } from \"./VRGDA.sol\";\n\n/// @title Linear Variable Rate Gradual Dutch Auction\n/// @author transmissions11 <t11s@paradigm.xyz>\n/// @author FrankieIsLost <frankie@paradigm.xyz>\n/// @notice VRGDA with a linear issuance curve.\nabstract contract LinearVRGDA is VRGDA {\n    /*//////////////////////////////////////////////////////////////\n                           PRICING PARAMETERS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @dev The total number of tokens to target selling every full unit of time.\n    /// @dev Represented as an 18 decimal fixed point number.\n    int256 internal immutable perTimeUnit;\n\n    /// @notice Sets pricing parameters for the VRGDA.\n    /// @param _targetPrice The target price for a token if sold on pace, scaled by 1e18.\n    /// @param _priceDecayPercent The percent price decays per unit of time with no sales, scaled by 1e18.\n    /// @param _perTimeUnit The number of tokens to target selling in 1 full unit of time, scaled by 1e18.\n    constructor(int256 _targetPrice, int256 _priceDecayPercent, int256 _perTimeUnit) VRGDA(_targetPrice, _priceDecayPercent) {\n        perTimeUnit = _perTimeUnit;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                              PRICING LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @dev Given a number of tokens sold, return the target time that number of tokens should be sold by.\n    /// @param sold A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for.\n    /// @return The target time the tokens should be sold by, scaled by 1e18, where the time is\n    /// relative, such that 0 means the tokens should be sold immediately when the VRGDA begins.\n    function getTargetSaleTime(int256 sold) public view virtual override returns (int256) {\n        return unsafeWadDiv(sold, perTimeUnit);\n    }\n}\n"
			},
			"packages/revolution-contracts/libs/VRGDA.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.22;\n\nimport { wadExp, wadLn, wadMul, unsafeWadMul, toWadUnsafe } from \"./SignedWadMath.sol\";\n\n/// @title Variable Rate Gradual Dutch Auction\n/// @author transmissions11 <t11s@paradigm.xyz>\n/// @author FrankieIsLost <frankie@paradigm.xyz>\n/// @notice Sell tokens roughly according to an issuance schedule.\nabstract contract VRGDA {\n    /*//////////////////////////////////////////////////////////////\n                            VRGDA PARAMETERS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Target price for a token, to be scaled according to sales pace.\n    /// @dev Represented as an 18 decimal fixed point number.\n    int256 public immutable targetPrice;\n\n    /// @dev Precomputed constant that allows us to rewrite a pow() as an exp().\n    /// @dev Represented as an 18 decimal fixed point number.\n    int256 internal immutable decayConstant;\n\n    /// @notice Sets target price and per time unit price decay for the VRGDA.\n    /// @param _targetPrice The target price for a token if sold on pace, scaled by 1e18.\n    /// @param _priceDecayPercent The percent price decays per unit of time with no sales, scaled by 1e18.\n    constructor(int256 _targetPrice, int256 _priceDecayPercent) {\n        targetPrice = _targetPrice;\n\n        decayConstant = wadLn(1e18 - _priceDecayPercent);\n\n        // The decay constant must be negative for VRGDAs to work.\n        require(decayConstant < 0, \"NON_NEGATIVE_DECAY_CONSTANT\");\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                              PRICING LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Calculate the price of a token according to the VRGDA formula.\n    /// @param timeSinceStart Time passed since the VRGDA began, scaled by 1e18.\n    /// @param sold The total number of tokens that have been sold so far.\n    /// @return The price of a token according to VRGDA, scaled by 1e18.\n    function getVRGDAPrice(int256 timeSinceStart, uint256 sold) public view virtual returns (uint256) {\n        unchecked {\n            // prettier-ignore\n            uint256 price = uint256(wadMul(targetPrice, wadExp(unsafeWadMul(decayConstant,\n                // Theoretically calling toWadUnsafe with sold can silently overflow but under\n                // any reasonable circumstance it will never be large enough. We use sold + 1 as\n                // the VRGDA formula's n param represents the nth token and sold is the n-1th token.\n                timeSinceStart - getTargetSaleTime(toWadUnsafe(sold + 1))\n            ))));\n\n            uint256 priceFloor = 1;\n\n            if (price < priceFloor) {\n                return priceFloor;\n            }\n\n            return price;\n        }\n    }\n\n    /// @dev Given a number of tokens sold, return the target time that number of tokens should be sold by.\n    /// @param sold A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for.\n    /// @return The target time the tokens should be sold by, scaled by 1e18, where the time is\n    /// relative, such that 0 means the tokens should be sold immediately when the VRGDA begins.\n    function getTargetSaleTime(int256 sold) public view virtual returns (int256);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 936,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"packages/revolution-contracts/NontransferableERC20.sol",
								"packages/revolution-contracts/TokenEmitter.sol",
								"packages/revolution-contracts/interfaces/ITokenEmitter.sol",
								"packages/revolution-contracts/libs/LinearVRGDA.sol",
								"packages/revolution-contracts/libs/SignedWadMath.sol",
								"packages/revolution-contracts/libs/VRGDA.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"packages/revolution-contracts/NontransferableERC20.sol",
								"packages/revolution-contracts/TokenEmitter.sol",
								"packages/revolution-contracts/interfaces/ITokenEmitter.sol",
								"packages/revolution-contracts/libs/LinearVRGDA.sol",
								"packages/revolution-contracts/libs/SignedWadMath.sol",
								"packages/revolution-contracts/libs/VRGDA.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"packages/revolution-contracts/NontransferableERC20.sol",
								"packages/revolution-contracts/TokenEmitter.sol",
								"packages/revolution-contracts/interfaces/ITokenEmitter.sol",
								"packages/revolution-contracts/libs/LinearVRGDA.sol",
								"packages/revolution-contracts/libs/SignedWadMath.sol",
								"packages/revolution-contracts/libs/VRGDA.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/NontransferableERC20.sol": {
				"NontransferableERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/revolution-contracts/NontransferableERC20.sol\":1505:8273  contract NontransferableERC20 is Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":1987:2194  constructor(address _initialOwner, string memory name_, string memory symbol_, uint8 decimals_) Ownable(_initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2091:2104  _initialOwner */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2034:2085   */\n  mstore\n    /* \"#utility.yul\":2007:2025   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2116:2121  _name */\n  0x03\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2116:2129  _name = name_ */\n  tag_13\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2124:2129  name_ */\n  dup5\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2116:2121  _name */\n  dup3\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2116:2129  _name = name_ */\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2139:2146  _symbol */\n  0x04\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2139:2156  _symbol = symbol_ */\n  tag_15\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2149:2156  symbol_ */\n  dup4\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2139:2146  _symbol */\n  dup3\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2139:2156  _symbol = symbol_ */\n  tag_14\n  jump\t// in\ntag_15:\n  pop\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":2166:2187  _decimals = decimals_ */\n  0xff\n  and\n  0x80\n  mstore\n  pop\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":1505:8273  contract NontransferableERC20 is Ownable {... */\n  tag_24\n  swap2\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_18:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:990   */\ntag_19:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_27:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_29\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_31\n  tag_18\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":732:735   */\n  dup7\n    /* \"#utility.yul\":725:729   */\n  0x20\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:730   */\n  add\n    /* \"#utility.yul\":701:736   */\n  gt\n    /* \"#utility.yul\":698:753   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":746:747   */\n  dup1\n    /* \"#utility.yul\":739:751   */\n  revert\n    /* \"#utility.yul\":698:753   */\ntag_32:\n    /* \"#utility.yul\":771:772   */\n  0x00\n    /* \"#utility.yul\":762:772   */\n  swap2\n  pop\n    /* \"#utility.yul\":781:914   */\ntag_33:\n    /* \"#utility.yul\":795:797   */\n  dup4\n    /* \"#utility.yul\":792:793   */\n  dup3\n    /* \"#utility.yul\":789:798   */\n  lt\n    /* \"#utility.yul\":781:914   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":883:897   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":879:902   */\n  dup4\n  add\n    /* \"#utility.yul\":873:903   */\n  mload\n    /* \"#utility.yul\":852:866   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":848:871   */\n  dup5\n  add\n    /* \"#utility.yul\":841:904   */\n  mstore\n    /* \"#utility.yul\":806:816   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":781:914   */\n  jump(tag_33)\ntag_35:\n    /* \"#utility.yul\":958:959   */\n  0x00\n    /* \"#utility.yul\":951:955   */\n  0x20\n    /* \"#utility.yul\":946:948   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup4\n    /* \"#utility.yul\":934:949   */\n  add\n    /* \"#utility.yul\":930:956   */\n  add\n    /* \"#utility.yul\":923:960   */\n  mstore\n    /* \"#utility.yul\":978:984   */\n  dup1\n    /* \"#utility.yul\":969:984   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":995:1883   */\ntag_3:\n    /* \"#utility.yul\":1110:1116   */\n  0x00\n    /* \"#utility.yul\":1118:1124   */\n  dup1\n    /* \"#utility.yul\":1126:1132   */\n  0x00\n    /* \"#utility.yul\":1134:1140   */\n  dup1\n    /* \"#utility.yul\":1187:1190   */\n  0x80\n    /* \"#utility.yul\":1175:1184   */\n  dup6\n    /* \"#utility.yul\":1166:1173   */\n  dup8\n    /* \"#utility.yul\":1162:1185   */\n  sub\n    /* \"#utility.yul\":1158:1191   */\n  slt\n    /* \"#utility.yul\":1155:1208   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1204:1205   */\n  0x00\n    /* \"#utility.yul\":1201:1202   */\n  dup1\n    /* \"#utility.yul\":1194:1206   */\n  revert\n    /* \"#utility.yul\":1155:1208   */\ntag_37:\n    /* \"#utility.yul\":1230:1246   */\n  dup5\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1275:1306   */\n  dup2\n  and\n    /* \"#utility.yul\":1265:1307   */\n  dup2\n  eq\n    /* \"#utility.yul\":1255:1325   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1321:1322   */\n  0x00\n    /* \"#utility.yul\":1318:1319   */\n  dup1\n    /* \"#utility.yul\":1311:1323   */\n  revert\n    /* \"#utility.yul\":1255:1325   */\ntag_38:\n    /* \"#utility.yul\":1393:1395   */\n  0x20\n    /* \"#utility.yul\":1378:1396   */\n  dup7\n  add\n    /* \"#utility.yul\":1372:1397   */\n  mload\n    /* \"#utility.yul\":1344:1349   */\n  swap1\n  swap5\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1446:1460   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1443:1477   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1470:1471   */\n  dup1\n    /* \"#utility.yul\":1463:1475   */\n  revert\n    /* \"#utility.yul\":1443:1477   */\ntag_39:\n    /* \"#utility.yul\":1496:1557   */\n  tag_40\n    /* \"#utility.yul\":1549:1556   */\n  dup9\n    /* \"#utility.yul\":1540:1546   */\n  dup4\n    /* \"#utility.yul\":1529:1538   */\n  dup10\n    /* \"#utility.yul\":1525:1547   */\n  add\n    /* \"#utility.yul\":1496:1557   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1486:1557   */\n  swap5\n  pop\n    /* \"#utility.yul\":1603:1605   */\n  0x40\n    /* \"#utility.yul\":1592:1601   */\n  dup8\n    /* \"#utility.yul\":1588:1606   */\n  add\n    /* \"#utility.yul\":1582:1607   */\n  mload\n    /* \"#utility.yul\":1566:1607   */\n  swap2\n  pop\n    /* \"#utility.yul\":1632:1634   */\n  dup1\n    /* \"#utility.yul\":1622:1630   */\n  dup3\n    /* \"#utility.yul\":1619:1635   */\n  gt\n    /* \"#utility.yul\":1616:1652   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1648:1649   */\n  0x00\n    /* \"#utility.yul\":1645:1646   */\n  dup1\n    /* \"#utility.yul\":1638:1650   */\n  revert\n    /* \"#utility.yul\":1616:1652   */\ntag_41:\n  pop\n    /* \"#utility.yul\":1671:1734   */\n  tag_42\n    /* \"#utility.yul\":1726:1733   */\n  dup8\n    /* \"#utility.yul\":1715:1723   */\n  dup3\n    /* \"#utility.yul\":1704:1713   */\n  dup9\n    /* \"#utility.yul\":1700:1724   */\n  add\n    /* \"#utility.yul\":1671:1734   */\n  tag_19\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1661:1734   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x60\n    /* \"#utility.yul\":1768:1777   */\n  dup6\n    /* \"#utility.yul\":1764:1782   */\n  add\n    /* \"#utility.yul\":1758:1783   */\n  mload\n    /* \"#utility.yul\":1827:1831   */\n  0xff\n    /* \"#utility.yul\":1818:1825   */\n  dup2\n    /* \"#utility.yul\":1814:1832   */\n  and\n    /* \"#utility.yul\":1805:1812   */\n  dup2\n    /* \"#utility.yul\":1802:1833   */\n  eq\n    /* \"#utility.yul\":1792:1851   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1847:1848   */\n  0x00\n    /* \"#utility.yul\":1844:1845   */\n  dup1\n    /* \"#utility.yul\":1837:1849   */\n  revert\n    /* \"#utility.yul\":1792:1851   */\ntag_43:\n    /* \"#utility.yul\":995:1883   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  swap1\n  swap4\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2096:2476   */\ntag_20:\n    /* \"#utility.yul\":2175:2176   */\n  0x01\n    /* \"#utility.yul\":2171:2183   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2218:2230   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2239:2300   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2293:2297   */\n  0x7f\n    /* \"#utility.yul\":2285:2291   */\n  dup3\n    /* \"#utility.yul\":2281:2298   */\n  and\n    /* \"#utility.yul\":2271:2298   */\n  swap2\n  pop\n    /* \"#utility.yul\":2239:2300   */\ntag_46:\n    /* \"#utility.yul\":2346:2348   */\n  0x20\n    /* \"#utility.yul\":2338:2344   */\n  dup3\n    /* \"#utility.yul\":2335:2349   */\n  lt\n    /* \"#utility.yul\":2315:2333   */\n  dup2\n    /* \"#utility.yul\":2312:2350   */\n  sub\n    /* \"#utility.yul\":2309:2470   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2392:2402   */\n  0x4e487b71\n    /* \"#utility.yul\":2387:2390   */\n  0xe0\n    /* \"#utility.yul\":2383:2403   */\n  shl\n    /* \"#utility.yul\":2380:2381   */\n  0x00\n    /* \"#utility.yul\":2373:2404   */\n  mstore\n    /* \"#utility.yul\":2427:2431   */\n  0x22\n    /* \"#utility.yul\":2424:2425   */\n  0x04\n    /* \"#utility.yul\":2417:2432   */\n  mstore\n    /* \"#utility.yul\":2455:2459   */\n  0x24\n    /* \"#utility.yul\":2452:2453   */\n  0x00\n    /* \"#utility.yul\":2445:2460   */\n  revert\n    /* \"#utility.yul\":2309:2470   */\ntag_47:\n  pop\n    /* \"#utility.yul\":2096:2476   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2607:3125   */\ntag_22:\n    /* \"#utility.yul\":2709:2711   */\n  0x1f\n    /* \"#utility.yul\":2704:2707   */\n  dup3\n    /* \"#utility.yul\":2701:2712   */\n  gt\n    /* \"#utility.yul\":2698:3119   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2745:2750   */\n  dup1\n    /* \"#utility.yul\":2742:2743   */\n  0x00\n    /* \"#utility.yul\":2735:2751   */\n  mstore\n    /* \"#utility.yul\":2789:2793   */\n  0x20\n    /* \"#utility.yul\":2786:2787   */\n  0x00\n    /* \"#utility.yul\":2776:2794   */\n  keccak256\n    /* \"#utility.yul\":2859:2861   */\n  0x1f\n    /* \"#utility.yul\":2847:2857   */\n  dup5\n    /* \"#utility.yul\":2843:2862   */\n  add\n    /* \"#utility.yul\":2840:2841   */\n  0x05\n    /* \"#utility.yul\":2836:2863   */\n  shr\n    /* \"#utility.yul\":2830:2834   */\n  dup2\n    /* \"#utility.yul\":2826:2864   */\n  add\n    /* \"#utility.yul\":2895:2899   */\n  0x20\n    /* \"#utility.yul\":2883:2893   */\n  dup6\n    /* \"#utility.yul\":2880:2900   */\n  lt\n    /* \"#utility.yul\":2877:2924   */\n  iszero\n  tag_51\n  jumpi\n  pop\n    /* \"#utility.yul\":2918:2922   */\n  dup1\n    /* \"#utility.yul\":2877:2924   */\ntag_51:\n    /* \"#utility.yul\":2973:2975   */\n  0x1f\n    /* \"#utility.yul\":2968:2971   */\n  dup5\n    /* \"#utility.yul\":2964:2976   */\n  add\n    /* \"#utility.yul\":2961:2962   */\n  0x05\n    /* \"#utility.yul\":2957:2977   */\n  shr\n    /* \"#utility.yul\":2951:2955   */\n  dup3\n    /* \"#utility.yul\":2947:2978   */\n  add\n    /* \"#utility.yul\":2937:2978   */\n  swap2\n  pop\n    /* \"#utility.yul\":3028:3109   */\ntag_52:\n    /* \"#utility.yul\":3046:3048   */\n  dup2\n    /* \"#utility.yul\":3039:3044   */\n  dup2\n    /* \"#utility.yul\":3036:3049   */\n  lt\n    /* \"#utility.yul\":3028:3109   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3105:3106   */\n  0x00\n    /* \"#utility.yul\":3091:3107   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3072:3073   */\n  0x01\n    /* \"#utility.yul\":3061:3074   */\n  add\n    /* \"#utility.yul\":3028:3109   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3032:3035   */\n  pop\n  pop\n    /* \"#utility.yul\":2698:3119   */\ntag_50:\n    /* \"#utility.yul\":2607:3125   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3301:4646   */\ntag_14:\n    /* \"#utility.yul\":3421:3431   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3443:3473   */\n  dup2\n  gt\n    /* \"#utility.yul\":3440:3496   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3476:3494   */\n  tag_58\n  tag_18\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":3505:3602   */\n  tag_59\n    /* \"#utility.yul\":3595:3601   */\n  dup2\n    /* \"#utility.yul\":3555:3593   */\n  tag_60\n    /* \"#utility.yul\":3587:3591   */\n  dup5\n    /* \"#utility.yul\":3581:3592   */\n  sload\n    /* \"#utility.yul\":3555:3593   */\n  tag_20\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":3549:3553   */\n  dup5\n    /* \"#utility.yul\":3505:3602   */\n  tag_22\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":3657:3661   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3714:3716   */\n  0x1f\n    /* \"#utility.yul\":3703:3717   */\n  dup4\n  gt\n    /* \"#utility.yul\":3731:3732   */\n  0x01\n    /* \"#utility.yul\":3726:4389   */\n  dup2\n  eq\n  tag_62\n  jumpi\n    /* \"#utility.yul\":4433:4434   */\n  0x00\n    /* \"#utility.yul\":4450:4456   */\n  dup5\n    /* \"#utility.yul\":4447:4536   */\n  iszero\n  tag_63\n  jumpi\n  pop\n    /* \"#utility.yul\":4502:4521   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4496:4522   */\n  mload\n    /* \"#utility.yul\":4447:4536   */\ntag_63:\n  not(0x00)\n    /* \"#utility.yul\":3258:3259   */\n  0x03\n    /* \"#utility.yul\":3254:3265   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":3250:3274   */\n  shr\n    /* \"#utility.yul\":3246:3275   */\n  not\n    /* \"#utility.yul\":3236:3276   */\n  and\n    /* \"#utility.yul\":3282:3283   */\n  0x01\n    /* \"#utility.yul\":3278:3289   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3233:3290   */\n  or\n    /* \"#utility.yul\":4549:4630   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3696:4640   */\n  jump(tag_61)\n    /* \"#utility.yul\":3726:4389   */\ntag_62:\n    /* \"#utility.yul\":2554:2555   */\n  0x00\n    /* \"#utility.yul\":2547:2561   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2591:2595   */\n  0x20\n    /* \"#utility.yul\":2578:2596   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3762:3782   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3880:4116   */\ntag_66:\n    /* \"#utility.yul\":3894:3901   */\n  dup3\n    /* \"#utility.yul\":3891:3892   */\n  dup2\n    /* \"#utility.yul\":3888:3902   */\n  lt\n    /* \"#utility.yul\":3880:4116   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3983:4002   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3977:4003   */\n  mload\n    /* \"#utility.yul\":3962:4004   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4075:4102   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":4043:4044   */\n  0x01\n    /* \"#utility.yul\":4031:4045   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3910:3929   */\n  dup5\n  add\n    /* \"#utility.yul\":3880:4116   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":3884:3887   */\n  pop\n    /* \"#utility.yul\":4144:4150   */\n  dup6\n    /* \"#utility.yul\":4135:4142   */\n  dup3\n    /* \"#utility.yul\":4132:4151   */\n  lt\n    /* \"#utility.yul\":4129:4330   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":4205:4224   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4199:4225   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4288:4289   */\n  0x03\n    /* \"#utility.yul\":4284:4298   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4300:4303   */\n  0xf8\n    /* \"#utility.yul\":4280:4304   */\n  and\n    /* \"#utility.yul\":4276:4313   */\n  shr\n    /* \"#utility.yul\":4272:4314   */\n  not\n    /* \"#utility.yul\":4257:4315   */\n  and\n    /* \"#utility.yul\":4242:4316   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4129:4330   */\ntag_69:\n  pop\n  pop\n    /* \"#utility.yul\":4376:4377   */\n  0x01\n    /* \"#utility.yul\":4367:4373   */\n  dup5\n    /* \"#utility.yul\":4364:4365   */\n  0x01\n    /* \"#utility.yul\":4360:4374   */\n  shl\n    /* \"#utility.yul\":4356:4378   */\n  add\n    /* \"#utility.yul\":4350:4354   */\n  dup6\n    /* \"#utility.yul\":4343:4379   */\n  sstore\n    /* \"#utility.yul\":3696:4640   */\ntag_61:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3301:4646   */\n  pop\n  pop\n  jump\t// out\ntag_24:\n    /* \"packages/revolution-contracts/NontransferableERC20.sol\":1505:8273  contract NontransferableERC20 is Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xbdd0f066e12abc128a2b8a52cd37775ed020991860db7f3a354e1fd7d154333d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":1505:8273  contract NontransferableERC20 is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2259:2348  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4206:4300  function approve(address, uint256) public virtual returns (bool) {... */\n    tag_4:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4206:4300  function approve(address, uint256) public virtual returns (bool) {... */\n      tag_18\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3336:3433  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3414:3426  _totalSupply */\n      sload(0x02)\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3336:3433  function totalSupply() public view virtual returns (uint256) {... */\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3336:3433  function totalSupply() public view virtual returns (uint256) {... */\n      tag_18\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4862:4970  function transferFrom(address, address, uint256) public virtual returns (bool) {... */\n    tag_6:\n      tag_20\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4935:4939  bool */\n      0x00\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4862:4970  function transferFrom(address, address, uint256) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3187:3276  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"#utility.yul\":1883:1887   */\n      0xff\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3260:3269  _decimals */\n      immutable(\"0xbdd0f066e12abc128a2b8a52cd37775ed020991860db7f3a354e1fd7d154333d\")\n        /* \"#utility.yul\":1871:1888   */\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3187:3276  function decimals() public view virtual returns (uint8) {... */\n      tag_18\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5759:5862  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3491:3607  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_26\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3582:3600  _balances[account] */\n      and\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3556:3563  uint256 */\n      0x00\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3582:3600  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3582:3591  _balances */\n      0x01\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3582:3600  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":3491:3607  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_39\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2237:2288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_18\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2461:2554  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_16\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_39\n      tag_61\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2259:2348  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2304:2317  string memory */\n      0x60\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2336:2341  _name */\n      0x03\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2329:2341  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2259:2348  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4206:4300  function approve(address, uint256) public virtual returns (bool) {... */\n    tag_23:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4265:4269  bool */\n      0x00\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":4206:4300  function approve(address, uint256) public virtual returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5759:5862  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5833:5855  _mint(account, amount) */\n      tag_78\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5839:5846  account */\n      dup3\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5848:5854  amount */\n      dup3\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5833:5838  _mint */\n      tag_79\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5833:5855  _mint(account, amount) */\n      jump\t// in\n    tag_78:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5759:5862  function mint(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2461:2554  function symbol() public view virtual returns (string memory) {... */\n    tag_54:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2508:2521  string memory */\n      0x60\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2540:2547  _symbol */\n      0x04\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":2533:2547  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_97\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_98\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5246:5753  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5445:5451  amount */\n      dup1\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5429:5441  _totalSupply */\n      0x02\n      0x00\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5429:5451  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5597:5615  _balances[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5597:5606  _balances */\n      0x01\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5597:5615  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5597:5625  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5650:5687  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5650:5687  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5650:5687  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"packages/revolution-contracts/NontransferableERC20.sol\":5759:5862  function mint(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_19:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_122:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_122)\n    tag_124:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_119:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_126:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_22:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_128:\n        /* \"#utility.yul\":913:942   */\n      tag_129\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_119\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_32:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_133:\n        /* \"#utility.yul\":1563:1592   */\n      tag_134\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_119\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_135\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_119\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_138:\n        /* \"#utility.yul\":2051:2080   */\n      tag_139\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_119\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2679   */\n    tag_65:\n        /* \"#utility.yul\":2378:2379   */\n      0x01\n        /* \"#utility.yul\":2374:2386   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2421:2433   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2442:2503   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":2496:2500   */\n      0x7f\n        /* \"#utility.yul\":2488:2494   */\n      dup3\n        /* \"#utility.yul\":2484:2501   */\n      and\n        /* \"#utility.yul\":2474:2501   */\n      swap2\n      pop\n        /* \"#utility.yul\":2442:2503   */\n    tag_142:\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2541:2547   */\n      dup3\n        /* \"#utility.yul\":2538:2552   */\n      lt\n        /* \"#utility.yul\":2518:2536   */\n      dup2\n        /* \"#utility.yul\":2515:2553   */\n      sub\n        /* \"#utility.yul\":2512:2673   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2595:2605   */\n      0x4e487b71\n        /* \"#utility.yul\":2590:2593   */\n      0xe0\n        /* \"#utility.yul\":2586:2606   */\n      shl\n        /* \"#utility.yul\":2583:2584   */\n      0x00\n        /* \"#utility.yul\":2576:2607   */\n      mstore\n        /* \"#utility.yul\":2630:2634   */\n      0x22\n        /* \"#utility.yul\":2627:2628   */\n      0x04\n        /* \"#utility.yul\":2620:2635   */\n      mstore\n        /* \"#utility.yul\":2658:2662   */\n      0x24\n        /* \"#utility.yul\":2655:2656   */\n      0x00\n        /* \"#utility.yul\":2648:2663   */\n      revert\n        /* \"#utility.yul\":2512:2673   */\n    tag_143:\n      pop\n        /* \"#utility.yul\":2299:2679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2684:2906   */\n    tag_111:\n        /* \"#utility.yul\":2749:2758   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2770:2780   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2767:2900   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2822:2832   */\n      0x4e487b71\n        /* \"#utility.yul\":2817:2820   */\n      0xe0\n        /* \"#utility.yul\":2813:2833   */\n      shl\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2834   */\n      mstore\n        /* \"#utility.yul\":2857:2861   */\n      0x11\n        /* \"#utility.yul\":2854:2855   */\n      0x04\n        /* \"#utility.yul\":2847:2862   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x24\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2875:2890   */\n      revert\n\n    auxdata: 0xa2646970667358221220e66871006899e4bf01d97832268ed0e00aa7aca6d09bb4af2ec16f3923a1ac7064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2462": {
									"entryPoint": null,
									"id": 2462,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 143,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4648:16",
										"nodeType": "YulBlock",
										"src": "0:4648:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:16",
													"nodeType": "YulBlock",
													"src": "46:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:16",
																		"nodeType": "YulLiteral",
																		"src": "63:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:16",
																				"nodeType": "YulLiteral",
																				"src": "70:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:16",
																				"nodeType": "YulLiteral",
																				"src": "75:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:16"
																		},
																		"nativeSrc": "66:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:16"
																},
																"nativeSrc": "56:31:16",
																"nodeType": "YulFunctionCall",
																"src": "56:31:16"
															},
															"nativeSrc": "56:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:16",
																		"nodeType": "YulLiteral",
																		"src": "103:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:16",
																		"nodeType": "YulLiteral",
																		"src": "106:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:16"
																},
																"nativeSrc": "96:15:16",
																"nodeType": "YulFunctionCall",
																"src": "96:15:16"
															},
															"nativeSrc": "96:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:16",
																		"nodeType": "YulLiteral",
																		"src": "127:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:16",
																		"nodeType": "YulLiteral",
																		"src": "130:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:16"
																},
																"nativeSrc": "120:15:16",
																"nodeType": "YulFunctionCall",
																"src": "120:15:16"
															},
															"nativeSrc": "120:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:16"
											},
											{
												"body": {
													"nativeSrc": "210:780:16",
													"nodeType": "YulBlock",
													"src": "210:780:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:16",
																"nodeType": "YulBlock",
																"src": "259:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:16",
																					"nodeType": "YulLiteral",
																					"src": "268:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:16",
																					"nodeType": "YulLiteral",
																					"src": "271:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:16"
																			},
																			"nativeSrc": "261:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:16"
																		},
																		"nativeSrc": "261:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:16",
																						"nodeType": "YulLiteral",
																						"src": "246:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:16"
																				},
																				"nativeSrc": "234:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:16"
																		},
																		"nativeSrc": "230:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:16"
																},
																"nativeSrc": "223:35:16",
																"nodeType": "YulFunctionCall",
																"src": "223:35:16"
															},
															"nativeSrc": "220:55:16",
															"nodeType": "YulIf",
															"src": "220:55:16"
														},
														{
															"nativeSrc": "284:23:16",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:16"
																},
																"nativeSrc": "294:13:16",
																"nodeType": "YulFunctionCall",
																"src": "294:13:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:16",
																	"nodeType": "YulTypedName",
																	"src": "288:2:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:16",
																				"nodeType": "YulLiteral",
																				"src": "334:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:16",
																				"nodeType": "YulLiteral",
																				"src": "338:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:16"
																		},
																		"nativeSrc": "330:10:16",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:16",
																		"nodeType": "YulLiteral",
																		"src": "342:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:16"
																},
																"nativeSrc": "326:18:16",
																"nodeType": "YulFunctionCall",
																"src": "326:18:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:16",
																	"nodeType": "YulTypedName",
																	"src": "320:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:16",
																"nodeType": "YulBlock",
																"src": "367:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:16"
																			},
																			"nativeSrc": "369:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:16"
																		},
																		"nativeSrc": "369:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:16"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:16"
																},
																"nativeSrc": "356:10:16",
																"nodeType": "YulFunctionCall",
																"src": "356:10:16"
															},
															"nativeSrc": "353:36:16",
															"nodeType": "YulIf",
															"src": "353:36:16"
														},
														{
															"nativeSrc": "398:17:16",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:16",
																		"nodeType": "YulLiteral",
																		"src": "412:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:16"
																},
																"nativeSrc": "408:7:16",
																"nodeType": "YulFunctionCall",
																"src": "408:7:16"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:16",
																	"nodeType": "YulTypedName",
																	"src": "402:2:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:16",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:16",
																		"nodeType": "YulLiteral",
																		"src": "444:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:16"
																},
																"nativeSrc": "438:9:16",
																"nodeType": "YulFunctionCall",
																"src": "438:9:16"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:16",
																	"nodeType": "YulTypedName",
																	"src": "428:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:16",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:16",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:16",
																										"nodeType": "YulLiteral",
																										"src": "506:4:16",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:16"
																								},
																								"nativeSrc": "498:13:16",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:16"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:16",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:16"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:16"
																						},
																						"nativeSrc": "494:22:16",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:16",
																						"nodeType": "YulLiteral",
																						"src": "518:2:16",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:16"
																				},
																				"nativeSrc": "490:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:16"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:16"
																		},
																		"nativeSrc": "486:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:16"
																},
																"nativeSrc": "474:53:16",
																"nodeType": "YulFunctionCall",
																"src": "474:53:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:16",
																	"nodeType": "YulTypedName",
																	"src": "460:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:16",
																"nodeType": "YulBlock",
																"src": "586:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:16"
																			},
																			"nativeSrc": "588:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:16"
																		},
																		"nativeSrc": "588:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:16"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:16"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:16"
																		},
																		"nativeSrc": "542:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:16"
																		},
																		"nativeSrc": "562:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:16"
																},
																"nativeSrc": "539:46:16",
																"nodeType": "YulFunctionCall",
																"src": "539:46:16"
															},
															"nativeSrc": "536:72:16",
															"nodeType": "YulIf",
															"src": "536:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:16",
																		"nodeType": "YulLiteral",
																		"src": "624:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:16"
																},
																"nativeSrc": "617:22:16",
																"nodeType": "YulFunctionCall",
																"src": "617:22:16"
															},
															"nativeSrc": "617:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:16"
																},
																"nativeSrc": "648:18:16",
																"nodeType": "YulFunctionCall",
																"src": "648:18:16"
															},
															"nativeSrc": "648:18:16",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:16"
														},
														{
															"nativeSrc": "675:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:16",
																"nodeType": "YulLiteral",
																"src": "685:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:16",
																	"nodeType": "YulTypedName",
																	"src": "679:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:16:16",
																"nodeType": "YulBlock",
																"src": "737:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "746:1:16",
																					"nodeType": "YulLiteral",
																					"src": "746:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:16",
																					"nodeType": "YulLiteral",
																					"src": "749:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "739:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:16"
																			},
																			"nativeSrc": "739:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:16"
																		},
																		"nativeSrc": "739:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:16"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:16"
																				},
																				"nativeSrc": "708:15:16",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "725:4:16",
																				"nodeType": "YulLiteral",
																				"src": "725:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:16"
																		},
																		"nativeSrc": "704:26:16",
																		"nodeType": "YulFunctionCall",
																		"src": "704:26:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "732:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:16"
																},
																"nativeSrc": "701:35:16",
																"nodeType": "YulFunctionCall",
																"src": "701:35:16"
															},
															"nativeSrc": "698:55:16",
															"nodeType": "YulIf",
															"src": "698:55:16"
														},
														{
															"nativeSrc": "762:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "762:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "771:1:16",
																"nodeType": "YulLiteral",
																"src": "771:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "766:1:16",
																	"nodeType": "YulTypedName",
																	"src": "766:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "827:87:16",
																"nodeType": "YulBlock",
																"src": "827:87:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "856:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "856:6:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "864:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "864:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "852:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "852:3:16"
																							},
																							"nativeSrc": "852:14:16",
																							"nodeType": "YulFunctionCall",
																							"src": "852:14:16"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "868:2:16",
																							"nodeType": "YulIdentifier",
																							"src": "868:2:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:16"
																					},
																					"nativeSrc": "848:23:16",
																					"nodeType": "YulFunctionCall",
																					"src": "848:23:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "887:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "887:6:16"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "895:1:16",
																											"nodeType": "YulIdentifier",
																											"src": "895:1:16"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "883:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "883:3:16"
																									},
																									"nativeSrc": "883:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "883:14:16"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "899:2:16",
																									"nodeType": "YulIdentifier",
																									"src": "899:2:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "879:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "879:3:16"
																							},
																							"nativeSrc": "879:23:16",
																							"nodeType": "YulFunctionCall",
																							"src": "879:23:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "873:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:16"
																					},
																					"nativeSrc": "873:30:16",
																					"nodeType": "YulFunctionCall",
																					"src": "873:30:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:16"
																			},
																			"nativeSrc": "841:63:16",
																			"nodeType": "YulFunctionCall",
																			"src": "841:63:16"
																		},
																		"nativeSrc": "841:63:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:63:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "792:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "795:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "789:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "789:2:16"
																},
																"nativeSrc": "789:9:16",
																"nodeType": "YulFunctionCall",
																"src": "789:9:16"
															},
															"nativeSrc": "781:133:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "799:19:16",
																"nodeType": "YulBlock",
																"src": "799:19:16",
																"statements": [
																	{
																		"nativeSrc": "801:15:16",
																		"nodeType": "YulAssignment",
																		"src": "801:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "810:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:16"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "813:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "813:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "806:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:16"
																			},
																			"nativeSrc": "806:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "801:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "785:3:16",
																"nodeType": "YulBlock",
																"src": "785:3:16",
																"statements": []
															},
															"src": "781:133:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "938:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:16"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "934:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:16"
																				},
																				"nativeSrc": "934:15:16",
																				"nodeType": "YulFunctionCall",
																				"src": "934:15:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:4:16",
																				"nodeType": "YulLiteral",
																				"src": "951:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "930:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:16"
																		},
																		"nativeSrc": "930:26:16",
																		"nodeType": "YulFunctionCall",
																		"src": "930:26:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:1:16",
																		"nodeType": "YulLiteral",
																		"src": "958:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "923:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:16"
																},
																"nativeSrc": "923:37:16",
																"nodeType": "YulFunctionCall",
																"src": "923:37:16"
															},
															"nativeSrc": "923:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "923:37:16"
														},
														{
															"nativeSrc": "969:15:16",
															"nodeType": "YulAssignment",
															"src": "969:15:16",
															"value": {
																"name": "memPtr",
																"nativeSrc": "978:6:16",
																"nodeType": "YulIdentifier",
																"src": "978:6:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "969:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:844:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:16",
														"nodeType": "YulTypedName",
														"src": "184:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:16",
														"nodeType": "YulTypedName",
														"src": "192:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:16",
														"nodeType": "YulTypedName",
														"src": "200:5:16",
														"type": ""
													}
												],
												"src": "146:844:16"
											},
											{
												"body": {
													"nativeSrc": "1145:738:16",
													"nodeType": "YulBlock",
													"src": "1145:738:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1192:16:16",
																"nodeType": "YulBlock",
																"src": "1192:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1201:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1201:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1204:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1204:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1194:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1194:6:16"
																			},
																			"nativeSrc": "1194:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1194:12:16"
																		},
																		"nativeSrc": "1194:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1194:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1166:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1166:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1175:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1175:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1162:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1162:3:16"
																		},
																		"nativeSrc": "1162:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1187:3:16",
																		"nodeType": "YulLiteral",
																		"src": "1187:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1158:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1158:3:16"
																},
																"nativeSrc": "1158:33:16",
																"nodeType": "YulFunctionCall",
																"src": "1158:33:16"
															},
															"nativeSrc": "1155:53:16",
															"nodeType": "YulIf",
															"src": "1155:53:16"
														},
														{
															"nativeSrc": "1217:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1217:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1236:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1236:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1230:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:16"
																},
																"nativeSrc": "1230:16:16",
																"nodeType": "YulFunctionCall",
																"src": "1230:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1221:5:16",
																	"nodeType": "YulTypedName",
																	"src": "1221:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1309:16:16",
																"nodeType": "YulBlock",
																"src": "1309:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1318:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1318:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1321:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1321:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1311:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1311:6:16"
																			},
																			"nativeSrc": "1311:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1311:12:16"
																		},
																		"nativeSrc": "1311:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1311:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1268:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1268:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1279:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1279:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1294:3:16",
																										"nodeType": "YulLiteral",
																										"src": "1294:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1299:1:16",
																										"nodeType": "YulLiteral",
																										"src": "1299:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1290:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1290:3:16"
																								},
																								"nativeSrc": "1290:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "1290:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1303:1:16",
																								"nodeType": "YulLiteral",
																								"src": "1303:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1286:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1286:3:16"
																						},
																						"nativeSrc": "1286:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1286:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1275:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1275:3:16"
																				},
																				"nativeSrc": "1275:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1275:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1265:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1265:2:16"
																		},
																		"nativeSrc": "1265:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1265:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1258:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:16"
																},
																"nativeSrc": "1258:50:16",
																"nodeType": "YulFunctionCall",
																"src": "1258:50:16"
															},
															"nativeSrc": "1255:70:16",
															"nodeType": "YulIf",
															"src": "1255:70:16"
														},
														{
															"nativeSrc": "1334:15:16",
															"nodeType": "YulAssignment",
															"src": "1334:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "1344:5:16",
																"nodeType": "YulIdentifier",
																"src": "1344:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1334:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:16"
																}
															]
														},
														{
															"nativeSrc": "1358:39:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1358:39:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1382:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1382:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1393:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1393:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1378:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1378:3:16"
																		},
																		"nativeSrc": "1378:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1378:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1372:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1372:5:16"
																},
																"nativeSrc": "1372:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1372:25:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1362:6:16",
																	"nodeType": "YulTypedName",
																	"src": "1362:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1406:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1406:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1424:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1424:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1428:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1428:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1420:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1420:3:16"
																		},
																		"nativeSrc": "1420:10:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1420:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1416:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:16"
																},
																"nativeSrc": "1416:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1416:18:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1410:2:16",
																	"nodeType": "YulTypedName",
																	"src": "1410:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1461:16:16",
																"nodeType": "YulBlock",
																"src": "1461:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1470:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1470:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1463:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1463:6:16"
																			},
																			"nativeSrc": "1463:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1463:12:16"
																		},
																		"nativeSrc": "1463:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1463:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1449:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1457:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "1457:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1446:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1446:2:16"
																},
																"nativeSrc": "1446:14:16",
																"nodeType": "YulFunctionCall",
																"src": "1446:14:16"
															},
															"nativeSrc": "1443:34:16",
															"nodeType": "YulIf",
															"src": "1443:34:16"
														},
														{
															"nativeSrc": "1486:71:16",
															"nodeType": "YulAssignment",
															"src": "1486:71:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1529:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1529:9:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1540:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1540:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1525:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:16"
																		},
																		"nativeSrc": "1525:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:22:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1549:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "1549:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1496:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "1496:28:16"
																},
																"nativeSrc": "1496:61:16",
																"nodeType": "YulFunctionCall",
																"src": "1496:61:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1486:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:16"
																}
															]
														},
														{
															"nativeSrc": "1566:41:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1566:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1592:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1592:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1603:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1603:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1588:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1588:3:16"
																		},
																		"nativeSrc": "1588:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1588:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1582:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1582:5:16"
																},
																"nativeSrc": "1582:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1582:25:16"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1570:8:16",
																	"nodeType": "YulTypedName",
																	"src": "1570:8:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1636:16:16",
																"nodeType": "YulBlock",
																"src": "1636:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1645:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1645:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1648:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1648:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1638:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1638:6:16"
																			},
																			"nativeSrc": "1638:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1638:12:16"
																		},
																		"nativeSrc": "1638:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1638:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1622:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "1622:8:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1632:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "1632:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1619:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1619:2:16"
																},
																"nativeSrc": "1619:16:16",
																"nodeType": "YulFunctionCall",
																"src": "1619:16:16"
															},
															"nativeSrc": "1616:36:16",
															"nodeType": "YulIf",
															"src": "1616:36:16"
														},
														{
															"nativeSrc": "1661:73:16",
															"nodeType": "YulAssignment",
															"src": "1661:73:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1704:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1704:9:16"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1715:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "1715:8:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1700:3:16"
																		},
																		"nativeSrc": "1700:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1700:24:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1726:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "1726:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1671:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "1671:28:16"
																},
																"nativeSrc": "1671:63:16",
																"nodeType": "YulFunctionCall",
																"src": "1671:63:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1661:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:16"
																}
															]
														},
														{
															"nativeSrc": "1743:40:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1743:40:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1768:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1768:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1779:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1779:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1764:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1764:3:16"
																		},
																		"nativeSrc": "1764:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1758:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1758:5:16"
																},
																"nativeSrc": "1758:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1758:25:16"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1747:7:16",
																	"nodeType": "YulTypedName",
																	"src": "1747:7:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1835:16:16",
																"nodeType": "YulBlock",
																"src": "1835:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1844:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1844:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1847:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1847:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1837:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:16"
																			},
																			"nativeSrc": "1837:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1837:12:16"
																		},
																		"nativeSrc": "1837:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1837:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "1805:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1805:7:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "1818:7:16",
																						"nodeType": "YulIdentifier",
																						"src": "1818:7:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1827:4:16",
																						"nodeType": "YulLiteral",
																						"src": "1827:4:16",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1814:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1814:3:16"
																				},
																				"nativeSrc": "1814:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1814:18:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1802:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1802:2:16"
																		},
																		"nativeSrc": "1802:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1802:31:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1795:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1795:6:16"
																},
																"nativeSrc": "1795:39:16",
																"nodeType": "YulFunctionCall",
																"src": "1795:39:16"
															},
															"nativeSrc": "1792:59:16",
															"nodeType": "YulIf",
															"src": "1792:59:16"
														},
														{
															"nativeSrc": "1860:17:16",
															"nodeType": "YulAssignment",
															"src": "1860:17:16",
															"value": {
																"name": "value_1",
																"nativeSrc": "1870:7:16",
																"nodeType": "YulIdentifier",
																"src": "1870:7:16"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1860:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory",
												"nativeSrc": "995:888:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1087:9:16",
														"nodeType": "YulTypedName",
														"src": "1087:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1098:7:16",
														"nodeType": "YulTypedName",
														"src": "1098:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1110:6:16",
														"nodeType": "YulTypedName",
														"src": "1110:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1118:6:16",
														"nodeType": "YulTypedName",
														"src": "1118:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1126:6:16",
														"nodeType": "YulTypedName",
														"src": "1126:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1134:6:16",
														"nodeType": "YulTypedName",
														"src": "1134:6:16",
														"type": ""
													}
												],
												"src": "995:888:16"
											},
											{
												"body": {
													"nativeSrc": "1989:102:16",
													"nodeType": "YulBlock",
													"src": "1989:102:16",
													"statements": [
														{
															"nativeSrc": "1999:26:16",
															"nodeType": "YulAssignment",
															"src": "1999:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2011:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2022:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2007:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2007:3:16"
																},
																"nativeSrc": "2007:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2007:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1999:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1999:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2041:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2041:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2056:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2056:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2072:3:16",
																								"nodeType": "YulLiteral",
																								"src": "2072:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2077:1:16",
																								"nodeType": "YulLiteral",
																								"src": "2077:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2068:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "2068:3:16"
																						},
																						"nativeSrc": "2068:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2068:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2081:1:16",
																						"nodeType": "YulLiteral",
																						"src": "2081:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2064:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2064:3:16"
																				},
																				"nativeSrc": "2064:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2064:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2052:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2052:3:16"
																		},
																		"nativeSrc": "2052:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2052:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2034:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2034:6:16"
																},
																"nativeSrc": "2034:51:16",
																"nodeType": "YulFunctionCall",
																"src": "2034:51:16"
															},
															"nativeSrc": "2034:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "2034:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1888:203:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1958:9:16",
														"nodeType": "YulTypedName",
														"src": "1958:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1969:6:16",
														"nodeType": "YulTypedName",
														"src": "1969:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1980:4:16",
														"nodeType": "YulTypedName",
														"src": "1980:4:16",
														"type": ""
													}
												],
												"src": "1888:203:16"
											},
											{
												"body": {
													"nativeSrc": "2151:325:16",
													"nodeType": "YulBlock",
													"src": "2151:325:16",
													"statements": [
														{
															"nativeSrc": "2161:22:16",
															"nodeType": "YulAssignment",
															"src": "2161:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2175:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2178:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2178:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2171:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2171:3:16"
																},
																"nativeSrc": "2171:12:16",
																"nodeType": "YulFunctionCall",
																"src": "2171:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2161:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2161:6:16"
																}
															]
														},
														{
															"nativeSrc": "2192:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2192:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2222:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2222:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2228:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2228:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2218:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2218:3:16"
																},
																"nativeSrc": "2218:12:16",
																"nodeType": "YulFunctionCall",
																"src": "2218:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2196:18:16",
																	"nodeType": "YulTypedName",
																	"src": "2196:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2269:31:16",
																"nodeType": "YulBlock",
																"src": "2269:31:16",
																"statements": [
																	{
																		"nativeSrc": "2271:27:16",
																		"nodeType": "YulAssignment",
																		"src": "2271:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2285:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "2285:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2293:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2293:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2281:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2281:3:16"
																			},
																			"nativeSrc": "2281:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2281:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2271:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2271:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2249:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "2249:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2242:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2242:6:16"
																},
																"nativeSrc": "2242:26:16",
																"nodeType": "YulFunctionCall",
																"src": "2242:26:16"
															},
															"nativeSrc": "2239:61:16",
															"nodeType": "YulIf",
															"src": "2239:61:16"
														},
														{
															"body": {
																"nativeSrc": "2359:111:16",
																"nodeType": "YulBlock",
																"src": "2359:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2387:3:16",
																							"nodeType": "YulLiteral",
																							"src": "2387:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2392:10:16",
																							"nodeType": "YulLiteral",
																							"src": "2392:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2383:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2383:3:16"
																					},
																					"nativeSrc": "2383:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2383:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2373:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:16"
																			},
																			"nativeSrc": "2373:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2373:31:16"
																		},
																		"nativeSrc": "2373:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2424:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2424:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2427:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2427:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2417:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2417:6:16"
																			},
																			"nativeSrc": "2417:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2417:15:16"
																		},
																		"nativeSrc": "2417:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2417:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2452:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2452:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2455:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2455:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2445:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2445:6:16"
																			},
																			"nativeSrc": "2445:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2445:15:16"
																		},
																		"nativeSrc": "2445:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2445:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2315:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "2315:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2338:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2338:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2346:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2346:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2335:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2335:2:16"
																		},
																		"nativeSrc": "2335:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2335:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2312:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2312:2:16"
																},
																"nativeSrc": "2312:38:16",
																"nodeType": "YulFunctionCall",
																"src": "2312:38:16"
															},
															"nativeSrc": "2309:161:16",
															"nodeType": "YulIf",
															"src": "2309:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2096:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2131:4:16",
														"nodeType": "YulTypedName",
														"src": "2131:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2140:6:16",
														"nodeType": "YulTypedName",
														"src": "2140:6:16",
														"type": ""
													}
												],
												"src": "2096:380:16"
											},
											{
												"body": {
													"nativeSrc": "2537:65:16",
													"nodeType": "YulBlock",
													"src": "2537:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2554:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2554:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2557:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2557:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2547:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2547:6:16"
																},
																"nativeSrc": "2547:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2547:14:16"
															},
															"nativeSrc": "2547:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "2547:14:16"
														},
														{
															"nativeSrc": "2570:26:16",
															"nodeType": "YulAssignment",
															"src": "2570:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2588:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2588:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2591:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2591:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2578:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "2578:9:16"
																},
																"nativeSrc": "2578:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2578:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2570:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2570:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2481:121:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2520:3:16",
														"nodeType": "YulTypedName",
														"src": "2520:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2528:4:16",
														"nodeType": "YulTypedName",
														"src": "2528:4:16",
														"type": ""
													}
												],
												"src": "2481:121:16"
											},
											{
												"body": {
													"nativeSrc": "2688:437:16",
													"nodeType": "YulBlock",
													"src": "2688:437:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2721:398:16",
																"nodeType": "YulBlock",
																"src": "2721:398:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2742:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2742:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2745:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2745:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2735:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2735:6:16"
																			},
																			"nativeSrc": "2735:16:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2735:16:16"
																		},
																		"nativeSrc": "2735:16:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2735:16:16"
																	},
																	{
																		"nativeSrc": "2764:30:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2764:30:16",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2786:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2786:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2789:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2789:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2776:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2776:9:16"
																			},
																			"nativeSrc": "2776:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2776:18:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2768:4:16",
																				"nodeType": "YulTypedName",
																				"src": "2768:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2807:57:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2807:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2830:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "2830:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2840:1:16",
																							"nodeType": "YulLiteral",
																							"src": "2840:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2847:10:16",
																									"nodeType": "YulIdentifier",
																									"src": "2847:10:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2859:2:16",
																									"nodeType": "YulLiteral",
																									"src": "2859:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2843:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2843:3:16"
																							},
																							"nativeSrc": "2843:19:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2843:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2836:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2836:3:16"
																					},
																					"nativeSrc": "2836:27:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2836:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2826:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2826:3:16"
																			},
																			"nativeSrc": "2826:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2826:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2811:11:16",
																				"nodeType": "YulTypedName",
																				"src": "2811:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2901:23:16",
																			"nodeType": "YulBlock",
																			"src": "2901:23:16",
																			"statements": [
																				{
																					"nativeSrc": "2903:19:16",
																					"nodeType": "YulAssignment",
																					"src": "2903:19:16",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2918:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "2918:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2903:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "2903:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2883:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "2883:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2895:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2895:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2880:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "2880:2:16"
																			},
																			"nativeSrc": "2880:20:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2880:20:16"
																		},
																		"nativeSrc": "2877:47:16",
																		"nodeType": "YulIf",
																		"src": "2877:47:16"
																	},
																	{
																		"nativeSrc": "2937:41:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2937:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2951:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "2951:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2961:1:16",
																							"nodeType": "YulLiteral",
																							"src": "2961:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2968:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2968:3:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2973:2:16",
																									"nodeType": "YulLiteral",
																									"src": "2973:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2964:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2964:3:16"
																							},
																							"nativeSrc": "2964:12:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2964:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2957:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2957:3:16"
																					},
																					"nativeSrc": "2957:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2957:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2947:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2947:3:16"
																			},
																			"nativeSrc": "2947:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2947:31:16"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2941:2:16",
																				"nodeType": "YulTypedName",
																				"src": "2941:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2991:24:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2991:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "3004:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "3004:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2995:5:16",
																				"nodeType": "YulTypedName",
																				"src": "2995:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3089:20:16",
																			"nodeType": "YulBlock",
																			"src": "3089:20:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3098:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "3098:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3105:1:16",
																								"nodeType": "YulLiteral",
																								"src": "3105:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "3091:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "3091:6:16"
																						},
																						"nativeSrc": "3091:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3091:16:16"
																					},
																					"nativeSrc": "3091:16:16",
																					"nodeType": "YulExpressionStatement",
																					"src": "3091:16:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3039:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "3039:5:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3046:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "3046:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3036:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "3036:2:16"
																			},
																			"nativeSrc": "3036:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3036:13:16"
																		},
																		"nativeSrc": "3028:81:16",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "3050:26:16",
																			"nodeType": "YulBlock",
																			"src": "3050:26:16",
																			"statements": [
																				{
																					"nativeSrc": "3052:22:16",
																					"nodeType": "YulAssignment",
																					"src": "3052:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3065:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "3065:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3072:1:16",
																								"nodeType": "YulLiteral",
																								"src": "3072:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3061:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3061:3:16"
																						},
																						"nativeSrc": "3061:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3061:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "3052:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "3052:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "3032:3:16",
																			"nodeType": "YulBlock",
																			"src": "3032:3:16",
																			"statements": []
																		},
																		"src": "3028:81:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2704:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2704:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2709:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2701:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2701:2:16"
																},
																"nativeSrc": "2701:11:16",
																"nodeType": "YulFunctionCall",
																"src": "2701:11:16"
															},
															"nativeSrc": "2698:421:16",
															"nodeType": "YulIf",
															"src": "2698:421:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2607:518:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2660:5:16",
														"nodeType": "YulTypedName",
														"src": "2660:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2667:3:16",
														"nodeType": "YulTypedName",
														"src": "2667:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2672:10:16",
														"nodeType": "YulTypedName",
														"src": "2672:10:16",
														"type": ""
													}
												],
												"src": "2607:518:16"
											},
											{
												"body": {
													"nativeSrc": "3215:81:16",
													"nodeType": "YulBlock",
													"src": "3215:81:16",
													"statements": [
														{
															"nativeSrc": "3225:65:16",
															"nodeType": "YulAssignment",
															"src": "3225:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3240:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "3240:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3258:1:16",
																										"nodeType": "YulLiteral",
																										"src": "3258:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3261:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "3261:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3254:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3254:3:16"
																								},
																								"nativeSrc": "3254:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3254:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3271:1:16",
																										"nodeType": "YulLiteral",
																										"src": "3271:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3267:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3267:3:16"
																								},
																								"nativeSrc": "3267:6:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3267:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3250:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3250:3:16"
																						},
																						"nativeSrc": "3250:24:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3250:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3246:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3246:3:16"
																				},
																				"nativeSrc": "3246:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3246:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3236:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3236:3:16"
																		},
																		"nativeSrc": "3236:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3236:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3282:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3282:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3285:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3285:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3278:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3278:3:16"
																		},
																		"nativeSrc": "3278:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3278:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3233:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3233:2:16"
																},
																"nativeSrc": "3233:57:16",
																"nodeType": "YulFunctionCall",
																"src": "3233:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3225:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3130:166:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3192:4:16",
														"nodeType": "YulTypedName",
														"src": "3192:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3198:3:16",
														"nodeType": "YulTypedName",
														"src": "3198:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3206:4:16",
														"nodeType": "YulTypedName",
														"src": "3206:4:16",
														"type": ""
													}
												],
												"src": "3130:166:16"
											},
											{
												"body": {
													"nativeSrc": "3397:1249:16",
													"nodeType": "YulBlock",
													"src": "3397:1249:16",
													"statements": [
														{
															"nativeSrc": "3407:24:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3407:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3427:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3427:3:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3421:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3421:5:16"
																},
																"nativeSrc": "3421:10:16",
																"nodeType": "YulFunctionCall",
																"src": "3421:10:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3411:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3411:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3474:22:16",
																"nodeType": "YulBlock",
																"src": "3474:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3476:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "3476:16:16"
																			},
																			"nativeSrc": "3476:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3476:18:16"
																		},
																		"nativeSrc": "3476:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3446:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3462:2:16",
																						"nodeType": "YulLiteral",
																						"src": "3462:2:16",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3466:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3466:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3458:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3458:3:16"
																				},
																				"nativeSrc": "3458:10:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3458:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3470:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3470:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3454:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3454:3:16"
																		},
																		"nativeSrc": "3454:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3454:18:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3443:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3443:2:16"
																},
																"nativeSrc": "3443:30:16",
																"nodeType": "YulFunctionCall",
																"src": "3443:30:16"
															},
															"nativeSrc": "3440:56:16",
															"nodeType": "YulIf",
															"src": "3440:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3549:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3549:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3587:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "3587:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3581:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "3581:5:16"
																				},
																				"nativeSrc": "3581:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3581:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3555:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "3555:25:16"
																		},
																		"nativeSrc": "3555:38:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3555:38:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3595:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3595:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3505:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "3505:43:16"
																},
																"nativeSrc": "3505:97:16",
																"nodeType": "YulFunctionCall",
																"src": "3505:97:16"
															},
															"nativeSrc": "3505:97:16",
															"nodeType": "YulExpressionStatement",
															"src": "3505:97:16"
														},
														{
															"nativeSrc": "3611:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3611:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3628:1:16",
																"nodeType": "YulLiteral",
																"src": "3628:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3615:9:16",
																	"nodeType": "YulTypedName",
																	"src": "3615:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3638:23:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3638:23:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3657:4:16",
																"nodeType": "YulLiteral",
																"src": "3657:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3642:11:16",
																	"nodeType": "YulTypedName",
																	"src": "3642:11:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3670:17:16",
															"nodeType": "YulAssignment",
															"src": "3670:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3683:4:16",
																"nodeType": "YulLiteral",
																"src": "3683:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3670:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "3670:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3733:656:16",
																		"nodeType": "YulBlock",
																		"src": "3733:656:16",
																		"statements": [
																			{
																				"nativeSrc": "3747:35:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3747:35:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3766:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "3766:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3778:2:16",
																									"nodeType": "YulLiteral",
																									"src": "3778:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3774:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "3774:3:16"
																							},
																							"nativeSrc": "3774:7:16",
																							"nodeType": "YulFunctionCall",
																							"src": "3774:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3762:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "3762:3:16"
																					},
																					"nativeSrc": "3762:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3762:20:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3751:7:16",
																						"nodeType": "YulTypedName",
																						"src": "3751:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3795:49:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3795:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3839:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "3839:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3809:29:16",
																						"nodeType": "YulIdentifier",
																						"src": "3809:29:16"
																					},
																					"nativeSrc": "3809:35:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3799:6:16",
																						"nodeType": "YulTypedName",
																						"src": "3799:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3857:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3857:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3866:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3866:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3861:1:16",
																						"nodeType": "YulTypedName",
																						"src": "3861:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3944:172:16",
																					"nodeType": "YulBlock",
																					"src": "3944:172:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3969:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "3969:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3987:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "3987:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3992:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "3992:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3983:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "3983:3:16"
																												},
																												"nativeSrc": "3983:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "3983:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3977:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "3977:5:16"
																										},
																										"nativeSrc": "3977:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "3977:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3962:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "3962:6:16"
																								},
																								"nativeSrc": "3962:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:42:16"
																							},
																							"nativeSrc": "3962:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "3962:42:16"
																						},
																						{
																							"nativeSrc": "4021:24:16",
																							"nodeType": "YulAssignment",
																							"src": "4021:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4035:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4035:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4043:1:16",
																										"nodeType": "YulLiteral",
																										"src": "4043:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4031:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4031:3:16"
																								},
																								"nativeSrc": "4031:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4031:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4021:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4021:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4062:40:16",
																							"nodeType": "YulAssignment",
																							"src": "4062:40:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4079:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "4079:9:16"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "4090:11:16",
																										"nodeType": "YulIdentifier",
																										"src": "4090:11:16"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4075:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4075:3:16"
																								},
																								"nativeSrc": "4075:27:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4075:27:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4062:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "4062:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3891:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "3891:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3894:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "3894:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3888:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "3888:2:16"
																					},
																					"nativeSrc": "3888:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3888:14:16"
																				},
																				"nativeSrc": "3880:236:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3903:28:16",
																					"nodeType": "YulBlock",
																					"src": "3903:28:16",
																					"statements": [
																						{
																							"nativeSrc": "3905:24:16",
																							"nodeType": "YulAssignment",
																							"src": "3905:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3914:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "3914:1:16"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3917:11:16",
																										"nodeType": "YulIdentifier",
																										"src": "3917:11:16"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3910:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3910:3:16"
																								},
																								"nativeSrc": "3910:19:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3910:19:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3905:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "3905:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3884:3:16",
																					"nodeType": "YulBlock",
																					"src": "3884:3:16",
																					"statements": []
																				},
																				"src": "3880:236:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "4164:166:16",
																					"nodeType": "YulBlock",
																					"src": "4164:166:16",
																					"statements": [
																						{
																							"nativeSrc": "4182:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4182:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4209:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "4209:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4214:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4214:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4205:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "4205:3:16"
																										},
																										"nativeSrc": "4205:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4205:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4199:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4199:5:16"
																								},
																								"nativeSrc": "4199:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4199:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4186:9:16",
																									"nodeType": "YulTypedName",
																									"src": "4186:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4249:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4249:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4261:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4261:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4288:1:16",
																																				"nodeType": "YulLiteral",
																																				"src": "4288:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4291:6:16",
																																				"nodeType": "YulIdentifier",
																																				"src": "4291:6:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4284:3:16",
																																			"nodeType": "YulIdentifier",
																																			"src": "4284:3:16"
																																		},
																																		"nativeSrc": "4284:14:16",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4284:14:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4300:3:16",
																																		"nodeType": "YulLiteral",
																																		"src": "4300:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4280:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "4280:3:16"
																																},
																																"nativeSrc": "4280:24:16",
																																"nodeType": "YulFunctionCall",
																																"src": "4280:24:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4310:1:16",
																																		"nodeType": "YulLiteral",
																																		"src": "4310:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4306:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "4306:3:16"
																																},
																																"nativeSrc": "4306:6:16",
																																"nodeType": "YulFunctionCall",
																																"src": "4306:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4276:3:16",
																															"nodeType": "YulIdentifier",
																															"src": "4276:3:16"
																														},
																														"nativeSrc": "4276:37:16",
																														"nodeType": "YulFunctionCall",
																														"src": "4276:37:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4272:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "4272:3:16"
																												},
																												"nativeSrc": "4272:42:16",
																												"nodeType": "YulFunctionCall",
																												"src": "4272:42:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "4257:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "4257:3:16"
																										},
																										"nativeSrc": "4257:58:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4257:58:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4242:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4242:6:16"
																								},
																								"nativeSrc": "4242:74:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4242:74:16"
																							},
																							"nativeSrc": "4242:74:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "4242:74:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4135:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "4135:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4144:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "4144:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4132:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4132:2:16"
																					},
																					"nativeSrc": "4132:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4132:19:16"
																				},
																				"nativeSrc": "4129:201:16",
																				"nodeType": "YulIf",
																				"src": "4129:201:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4350:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4350:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4364:1:16",
																											"nodeType": "YulLiteral",
																											"src": "4364:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4367:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "4367:6:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4360:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "4360:3:16"
																									},
																									"nativeSrc": "4360:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "4360:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4376:1:16",
																									"nodeType": "YulLiteral",
																									"src": "4376:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4356:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "4356:3:16"
																							},
																							"nativeSrc": "4356:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4356:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4343:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4343:6:16"
																					},
																					"nativeSrc": "4343:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4343:36:16"
																				},
																				"nativeSrc": "4343:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "4343:36:16"
																			}
																		]
																	},
																	"nativeSrc": "3726:663:16",
																	"nodeType": "YulCase",
																	"src": "3726:663:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3731:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3731:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4406:234:16",
																		"nodeType": "YulBlock",
																		"src": "4406:234:16",
																		"statements": [
																			{
																				"nativeSrc": "4420:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4420:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4433:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4433:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4424:5:16",
																						"nodeType": "YulTypedName",
																						"src": "4424:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4469:67:16",
																					"nodeType": "YulBlock",
																					"src": "4469:67:16",
																					"statements": [
																						{
																							"nativeSrc": "4487:35:16",
																							"nodeType": "YulAssignment",
																							"src": "4487:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4506:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "4506:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4511:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4511:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4502:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "4502:3:16"
																										},
																										"nativeSrc": "4502:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4502:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4496:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4496:5:16"
																								},
																								"nativeSrc": "4496:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4496:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4487:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4487:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4450:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "4450:6:16"
																				},
																				"nativeSrc": "4447:89:16",
																				"nodeType": "YulIf",
																				"src": "4447:89:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4556:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4556:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4615:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4615:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4622:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4622:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4562:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "4562:52:16"
																							},
																							"nativeSrc": "4562:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4562:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4549:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4549:6:16"
																					},
																					"nativeSrc": "4549:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4549:81:16"
																				},
																				"nativeSrc": "4549:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "4549:81:16"
																			}
																		]
																	},
																	"nativeSrc": "4398:242:16",
																	"nodeType": "YulCase",
																	"src": "4398:242:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3706:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3706:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3714:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3714:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3703:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3703:2:16"
																},
																"nativeSrc": "3703:14:16",
																"nodeType": "YulFunctionCall",
																"src": "3703:14:16"
															},
															"nativeSrc": "3696:944:16",
															"nodeType": "YulSwitch",
															"src": "3696:944:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3301:1345:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3382:4:16",
														"nodeType": "YulTypedName",
														"src": "3382:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3388:3:16",
														"nodeType": "YulTypedName",
														"src": "3388:3:16",
														"type": ""
													}
												],
												"src": "3301:1345:16"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value_1 := mload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(0, 0) }\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b506040516108b83803806108b883398101604081905261002e91610195565b836001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100658161008f565b50600361007284826102ad565b50600461007f83826102ad565b5060ff166080525061036c915050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610101575f80fd5b81516001600160401b038082111561011b5761011b6100de565b604051601f8301601f19908116603f01168101908282118183101715610143576101436100de565b816040528381526020925086602085880101111561015f575f80fd5b5f91505b838210156101805785820183015181830184015290820190610163565b5f602085830101528094505050505092915050565b5f805f80608085870312156101a8575f80fd5b84516001600160a01b03811681146101be575f80fd5b60208601519094506001600160401b03808211156101da575f80fd5b6101e6888389016100f2565b945060408701519150808211156101fb575f80fd5b50610208878288016100f2565b925050606085015160ff8116811461021e575f80fd5b939692955090935050565b600181811c9082168061023d57607f821691505b60208210810361025b57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102a857805f5260205f20601f840160051c810160208510156102865750805b601f840160051c820191505b818110156102a5575f8155600101610292565b50505b505050565b81516001600160401b038111156102c6576102c66100de565b6102da816102d48454610229565b84610261565b602080601f83116001811461030d575f84156102f65750858301515b5f19600386901b1c1916600185901b178555610364565b5f85815260208120601f198616915b8281101561033b5788860151825594840194600190910190840161031c565b508582101561035857878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6080516105346103845f395f61012501526105345ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806370a082311161006e57806370a0823114610164578063715018a61461018c5780638da5cb5b1461019457806395d89b41146101ae578063a9059cbb146100d3578063f2fde38b146101b6575f80fd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011e57806340c10f191461014f575b5f80fd5b6100bd6101c9565b6040516100ca91906103bf565b60405180910390f35b6100e66100e1366004610426565b610259565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e661011636600461044e565b5f9392505050565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100ca565b61016261015d366004610426565b610261565b005b6100fa610172366004610487565b6001600160a01b03165f9081526001602052604090205490565b610162610277565b5f546040516001600160a01b0390911681526020016100ca565b6100bd61028a565b6101626101c4366004610487565b610299565b6060600380546101d8906104a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610204906104a7565b801561024f5780601f106102265761010080835404028352916020019161024f565b820191905f5260205f20905b81548152906001019060200180831161023257829003601f168201915b5050505050905090565b5f5b92915050565b6102696102db565b6102738282610307565b5050565b61027f6102db565b6102885f610370565b565b6060600480546101d8906104a7565b6102a16102db565b6001600160a01b0381166102cf57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6102d881610370565b50565b5f546001600160a01b031633146102885760405163118cdaa760e01b81523360048201526024016102c6565b8060025f82825461031891906104df565b90915550506001600160a01b0382165f818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b818110156103eb578581018301518582016040015282016103cf565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610421575f80fd5b919050565b5f8060408385031215610437575f80fd5b6104408361040b565b946020939093013593505050565b5f805f60608486031215610460575f80fd5b6104698461040b565b92506104776020850161040b565b9150604084013590509250925092565b5f60208284031215610497575f80fd5b6104a08261040b565b9392505050565b600181811c908216806104bb57607f821691505b6020821081036104d957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561025b57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e66871006899e4bf01d97832268ed0e00aa7aca6d09bb4af2ec16f3923a1ac7064736f6c63430008160033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8B8 CODESIZE SUB DUP1 PUSH2 0x8B8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x195 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x8F JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x72 DUP5 DUP3 PUSH2 0x2AD JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x7F DUP4 DUP3 PUSH2 0x2AD JUMP JUMPDEST POP PUSH1 0xFF AND PUSH1 0x80 MSTORE POP PUSH2 0x36C SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x11B JUMPI PUSH2 0x11B PUSH2 0xDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x143 JUMPI PUSH2 0x143 PUSH2 0xDE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x15F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH2 0x180 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH2 0x163 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1DA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E6 DUP9 DUP4 DUP10 ADD PUSH2 0xF2 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 DUP8 DUP3 DUP9 ADD PUSH2 0xF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A8 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x286 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x292 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C6 PUSH2 0xDE JUMP JUMPDEST PUSH2 0x2DA DUP2 PUSH2 0x2D4 DUP5 SLOAD PUSH2 0x229 JUMP JUMPDEST DUP5 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x30D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x364 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x33B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x31C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x358 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x534 PUSH2 0x384 PUSH0 CODECOPY PUSH0 PUSH2 0x125 ADD MSTORE PUSH2 0x534 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x44E JUMP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x277 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xBD PUSH2 0x28A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x487 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D8 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x204 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x226 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x232 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x273 DUP3 DUP3 PUSH2 0x307 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x288 PUSH0 PUSH2 0x370 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D8 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D8 DUP2 PUSH2 0x370 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2C6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3EB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3CF JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x437 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x440 DUP4 PUSH2 0x40B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x469 DUP5 PUSH2 0x40B JUMP JUMPDEST SWAP3 POP PUSH2 0x477 PUSH1 0x20 DUP6 ADD PUSH2 0x40B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x497 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A0 DUP3 PUSH2 0x40B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4BB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 PUSH9 0x71006899E4BF01D978 ORIGIN 0x26 DUP15 0xD0 0xE0 EXP 0xA7 0xAC 0xA6 0xD0 SWAP12 0xB4 0xAF 0x2E 0xC1 PUSH16 0x3923A1AC7064736F6C63430008160033 ",
							"sourceMap": "1505:6768:10:-:0;;;1987:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2091:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2034:51:16;2007:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2116:5:10::1;:13;2124:5:::0;2116;:13:::1;:::i;:::-;-1:-1:-1::0;2139:7:10::1;:17;2149:7:::0;2139;:17:::1;:::i;:::-;-1:-1:-1::0;2166:21:10::1;;;::::0;-1:-1:-1;1505:6768:10;;-1:-1:-1;;1505:6768:10;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:16:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:888::-;1110:6;1118;1126;1134;1187:3;1175:9;1166:7;1162:23;1158:33;1155:53;;;1204:1;1201;1194:12;1155:53;1230:16;;-1:-1:-1;;;;;1275:31:16;;1265:42;;1255:70;;1321:1;1318;1311:12;1255:70;1393:2;1378:18;;1372:25;1344:5;;-1:-1:-1;;;;;;1446:14:16;;;1443:34;;;1473:1;1470;1463:12;1443:34;1496:61;1549:7;1540:6;1529:9;1525:22;1496:61;:::i;:::-;1486:71;;1603:2;1592:9;1588:18;1582:25;1566:41;;1632:2;1622:8;1619:16;1616:36;;;1648:1;1645;1638:12;1616:36;;1671:63;1726:7;1715:8;1704:9;1700:24;1671:63;:::i;:::-;1661:73;;;1779:2;1768:9;1764:18;1758:25;1827:4;1818:7;1814:18;1805:7;1802:31;1792:59;;1847:1;1844;1837:12;1792:59;995:888;;;;-1:-1:-1;995:888:16;;-1:-1:-1;;995:888:16:o;2096:380::-;2175:1;2171:12;;;;2218;;;2239:61;;2293:4;2285:6;2281:17;2271:27;;2239:61;2346:2;2338:6;2335:14;2315:18;2312:38;2309:161;;2392:10;2387:3;2383:20;2380:1;2373:31;2427:4;2424:1;2417:15;2455:4;2452:1;2445:15;2309:161;;2096:380;;;:::o;2607:518::-;2709:2;2704:3;2701:11;2698:421;;;2745:5;2742:1;2735:16;2789:4;2786:1;2776:18;2859:2;2847:10;2843:19;2840:1;2836:27;2830:4;2826:38;2895:4;2883:10;2880:20;2877:47;;;-1:-1:-1;2918:4:16;2877:47;2973:2;2968:3;2964:12;2961:1;2957:20;2951:4;2947:31;2937:41;;3028:81;3046:2;3039:5;3036:13;3028:81;;;3105:1;3091:16;;3072:1;3061:13;3028:81;;;3032:3;;2698:421;2607:518;;;:::o;3301:1345::-;3421:10;;-1:-1:-1;;;;;3443:30:16;;3440:56;;;3476:18;;:::i;:::-;3505:97;3595:6;3555:38;3587:4;3581:11;3555:38;:::i;:::-;3549:4;3505:97;:::i;:::-;3657:4;;3714:2;3703:14;;3731:1;3726:663;;;;4433:1;4450:6;4447:89;;;-1:-1:-1;4502:19:16;;;4496:26;4447:89;-1:-1:-1;;3258:1:16;3254:11;;;3250:24;3246:29;3236:40;3282:1;3278:11;;;3233:57;4549:81;;3696:944;;3726:663;2554:1;2547:14;;;2591:4;2578:18;;-1:-1:-1;;3762:20:16;;;3880:236;3894:7;3891:1;3888:14;3880:236;;;3983:19;;;3977:26;3962:42;;4075:27;;;;4043:1;4031:14;;;;3910:19;;3880:236;;;3884:3;4144:6;4135:7;4132:19;4129:201;;;4205:19;;;4199:26;-1:-1:-1;;4288:1:16;4284:14;;;4300:3;4280:24;4276:37;4272:42;4257:58;4242:74;;4129:201;;;4376:1;4367:6;4364:1;4360:14;4356:22;4350:4;4343:36;3696:944;;;;;3301:1345;;:::o;:::-;1505:6768:10;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_2708": {
									"entryPoint": null,
									"id": 2708,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2697": {
									"entryPoint": null,
									"id": 2697,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 731,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_2599": {
									"entryPoint": 775,
									"id": 2599,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 880,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_2537": {
									"entryPoint": 601,
									"id": 2537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_2511": {
									"entryPoint": null,
									"id": 2511,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_2489": {
									"entryPoint": null,
									"id": 2489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_2614": {
									"entryPoint": 609,
									"id": 2614,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_2471": {
									"entryPoint": 457,
									"id": 2471,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 631,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_2480": {
									"entryPoint": 650,
									"id": 2480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_2498": {
									"entryPoint": null,
									"id": 2498,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2552": {
									"entryPoint": null,
									"id": 2552,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 665,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_2524": {
									"entryPoint": null,
									"id": 2524,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2908:16",
										"nodeType": "YulBlock",
										"src": "0:2908:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:16",
													"nodeType": "YulBlock",
													"src": "135:427:16",
													"statements": [
														{
															"nativeSrc": "145:12:16",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:16",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:16",
																"nodeType": "YulLiteral",
																"src": "155:2:16",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:16",
																	"nodeType": "YulTypedName",
																	"src": "149:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:16",
																		"nodeType": "YulLiteral",
																		"src": "184:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:16"
																},
																"nativeSrc": "166:21:16",
																"nodeType": "YulFunctionCall",
																"src": "166:21:16"
															},
															"nativeSrc": "166:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:16"
														},
														{
															"nativeSrc": "196:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:16"
																},
																"nativeSrc": "210:13:16",
																"nodeType": "YulFunctionCall",
																"src": "210:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:16",
																	"nodeType": "YulTypedName",
																	"src": "200:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:16",
																				"nodeType": "YulLiteral",
																				"src": "254:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:16"
																		},
																		"nativeSrc": "239:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:16"
																},
																"nativeSrc": "232:34:16",
																"nodeType": "YulFunctionCall",
																"src": "232:34:16"
															},
															"nativeSrc": "232:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:16"
														},
														{
															"nativeSrc": "275:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:16",
																"nodeType": "YulLiteral",
																"src": "284:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:16",
																	"nodeType": "YulTypedName",
																	"src": "279:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:16",
																"nodeType": "YulBlock",
																"src": "344:90:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:16"
																							},
																							"nativeSrc": "369:17:16",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:16"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:16",
																							"nodeType": "YulLiteral",
																							"src": "388:2:16",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:16"
																					},
																					"nativeSrc": "365:26:16",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:16"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:16",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:16"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:16"
																									},
																									"nativeSrc": "403:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:16"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:16",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:16"
																							},
																							"nativeSrc": "399:23:16",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:16"
																					},
																					"nativeSrc": "393:30:16",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:16"
																			},
																			"nativeSrc": "358:66:16",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:16"
																		},
																		"nativeSrc": "358:66:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:16"
																},
																"nativeSrc": "302:13:16",
																"nodeType": "YulFunctionCall",
																"src": "302:13:16"
															},
															"nativeSrc": "294:140:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:16",
																"nodeType": "YulBlock",
																"src": "316:19:16",
																"statements": [
																	{
																		"nativeSrc": "318:15:16",
																		"nodeType": "YulAssignment",
																		"src": "318:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:16"
																			},
																			"nativeSrc": "323:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:16",
																"nodeType": "YulBlock",
																"src": "298:3:16",
																"statements": []
															},
															"src": "294:140:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:16"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:16"
																				},
																				"nativeSrc": "454:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:16",
																				"nodeType": "YulLiteral",
																				"src": "478:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:16"
																		},
																		"nativeSrc": "450:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:16",
																		"nodeType": "YulLiteral",
																		"src": "483:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:16"
																},
																"nativeSrc": "443:42:16",
																"nodeType": "YulFunctionCall",
																"src": "443:42:16"
															},
															"nativeSrc": "443:42:16",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:16"
														},
														{
															"nativeSrc": "494:62:16",
															"nodeType": "YulAssignment",
															"src": "494:62:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:16",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:16",
																								"nodeType": "YulLiteral",
																								"src": "537:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:16"
																						},
																						"nativeSrc": "525:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:16",
																								"nodeType": "YulLiteral",
																								"src": "546:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:16"
																						},
																						"nativeSrc": "542:7:16",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:16"
																				},
																				"nativeSrc": "521:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:16"
																		},
																		"nativeSrc": "506:45:16",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:16",
																		"nodeType": "YulLiteral",
																		"src": "553:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:16"
																},
																"nativeSrc": "502:54:16",
																"nodeType": "YulFunctionCall",
																"src": "502:54:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:16",
														"nodeType": "YulTypedName",
														"src": "104:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:16",
														"nodeType": "YulTypedName",
														"src": "115:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:16",
														"nodeType": "YulTypedName",
														"src": "126:4:16",
														"type": ""
													}
												],
												"src": "14:548:16"
											},
											{
												"body": {
													"nativeSrc": "616:124:16",
													"nodeType": "YulBlock",
													"src": "616:124:16",
													"statements": [
														{
															"nativeSrc": "626:29:16",
															"nodeType": "YulAssignment",
															"src": "626:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:16"
																},
																"nativeSrc": "635:20:16",
																"nodeType": "YulFunctionCall",
																"src": "635:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:16",
																"nodeType": "YulBlock",
																"src": "718:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:16",
																					"nodeType": "YulLiteral",
																					"src": "727:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:16",
																					"nodeType": "YulLiteral",
																					"src": "730:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:16"
																			},
																			"nativeSrc": "720:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:16"
																		},
																		"nativeSrc": "720:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:16",
																										"nodeType": "YulLiteral",
																										"src": "703:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:16",
																										"nodeType": "YulLiteral",
																										"src": "708:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:16"
																								},
																								"nativeSrc": "699:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:16",
																								"nodeType": "YulLiteral",
																								"src": "712:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:16"
																						},
																						"nativeSrc": "695:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:16"
																				},
																				"nativeSrc": "684:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:16"
																		},
																		"nativeSrc": "674:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:16"
																},
																"nativeSrc": "667:50:16",
																"nodeType": "YulFunctionCall",
																"src": "667:50:16"
															},
															"nativeSrc": "664:70:16",
															"nodeType": "YulIf",
															"src": "664:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:16",
														"nodeType": "YulTypedName",
														"src": "595:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:16",
														"nodeType": "YulTypedName",
														"src": "606:5:16",
														"type": ""
													}
												],
												"src": "567:173:16"
											},
											{
												"body": {
													"nativeSrc": "832:167:16",
													"nodeType": "YulBlock",
													"src": "832:167:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:16",
																"nodeType": "YulBlock",
																"src": "878:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:16",
																					"nodeType": "YulLiteral",
																					"src": "887:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:16",
																					"nodeType": "YulLiteral",
																					"src": "890:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:16"
																			},
																			"nativeSrc": "880:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:16"
																		},
																		"nativeSrc": "880:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:16"
																		},
																		"nativeSrc": "849:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:16",
																		"nodeType": "YulLiteral",
																		"src": "874:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:16"
																},
																"nativeSrc": "845:32:16",
																"nodeType": "YulFunctionCall",
																"src": "845:32:16"
															},
															"nativeSrc": "842:52:16",
															"nodeType": "YulIf",
															"src": "842:52:16"
														},
														{
															"nativeSrc": "903:39:16",
															"nodeType": "YulAssignment",
															"src": "903:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:16"
																},
																"nativeSrc": "913:29:16",
																"nodeType": "YulFunctionCall",
																"src": "913:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:16"
																}
															]
														},
														{
															"nativeSrc": "951:42:16",
															"nodeType": "YulAssignment",
															"src": "951:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:16",
																				"nodeType": "YulLiteral",
																				"src": "989:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:16"
																		},
																		"nativeSrc": "974:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:16"
																},
																"nativeSrc": "961:32:16",
																"nodeType": "YulFunctionCall",
																"src": "961:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:16",
														"nodeType": "YulTypedName",
														"src": "790:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:16",
														"nodeType": "YulTypedName",
														"src": "801:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:16",
														"nodeType": "YulTypedName",
														"src": "813:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:16",
														"nodeType": "YulTypedName",
														"src": "821:6:16",
														"type": ""
													}
												],
												"src": "745:254:16"
											},
											{
												"body": {
													"nativeSrc": "1099:92:16",
													"nodeType": "YulBlock",
													"src": "1099:92:16",
													"statements": [
														{
															"nativeSrc": "1109:26:16",
															"nodeType": "YulAssignment",
															"src": "1109:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:16"
																},
																"nativeSrc": "1117:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:16"
																				},
																				"nativeSrc": "1169:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:16"
																		},
																		"nativeSrc": "1162:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:16"
																},
																"nativeSrc": "1144:41:16",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:16"
															},
															"nativeSrc": "1144:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:16",
														"nodeType": "YulTypedName",
														"src": "1068:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:16",
														"nodeType": "YulTypedName",
														"src": "1079:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:16",
														"nodeType": "YulTypedName",
														"src": "1090:4:16",
														"type": ""
													}
												],
												"src": "1004:187:16"
											},
											{
												"body": {
													"nativeSrc": "1297:76:16",
													"nodeType": "YulBlock",
													"src": "1297:76:16",
													"statements": [
														{
															"nativeSrc": "1307:26:16",
															"nodeType": "YulAssignment",
															"src": "1307:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:16"
																},
																"nativeSrc": "1315:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:16"
																},
																"nativeSrc": "1342:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:16"
															},
															"nativeSrc": "1342:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:16",
														"nodeType": "YulTypedName",
														"src": "1266:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:16",
														"nodeType": "YulTypedName",
														"src": "1277:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:16",
														"nodeType": "YulTypedName",
														"src": "1288:4:16",
														"type": ""
													}
												],
												"src": "1196:177:16"
											},
											{
												"body": {
													"nativeSrc": "1482:224:16",
													"nodeType": "YulBlock",
													"src": "1482:224:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:16",
																"nodeType": "YulBlock",
																"src": "1528:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:16"
																			},
																			"nativeSrc": "1530:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:16"
																		},
																		"nativeSrc": "1530:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:16"
																		},
																		"nativeSrc": "1499:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:16"
																},
																"nativeSrc": "1495:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:16"
															},
															"nativeSrc": "1492:52:16",
															"nodeType": "YulIf",
															"src": "1492:52:16"
														},
														{
															"nativeSrc": "1553:39:16",
															"nodeType": "YulAssignment",
															"src": "1553:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:16"
																},
																"nativeSrc": "1563:29:16",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:16"
																}
															]
														},
														{
															"nativeSrc": "1601:48:16",
															"nodeType": "YulAssignment",
															"src": "1601:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:16"
																		},
																		"nativeSrc": "1630:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:16"
																},
																"nativeSrc": "1611:38:16",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:16"
																}
															]
														},
														{
															"nativeSrc": "1658:42:16",
															"nodeType": "YulAssignment",
															"src": "1658:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:16"
																		},
																		"nativeSrc": "1681:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:16"
																},
																"nativeSrc": "1668:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:16",
														"nodeType": "YulTypedName",
														"src": "1432:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:16",
														"nodeType": "YulTypedName",
														"src": "1443:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:16",
														"nodeType": "YulTypedName",
														"src": "1455:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:16",
														"nodeType": "YulTypedName",
														"src": "1463:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:16",
														"nodeType": "YulTypedName",
														"src": "1471:6:16",
														"type": ""
													}
												],
												"src": "1378:328:16"
											},
											{
												"body": {
													"nativeSrc": "1808:87:16",
													"nodeType": "YulBlock",
													"src": "1808:87:16",
													"statements": [
														{
															"nativeSrc": "1818:26:16",
															"nodeType": "YulAssignment",
															"src": "1818:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:16"
																},
																"nativeSrc": "1826:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:16",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:16"
																		},
																		"nativeSrc": "1871:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:16"
																},
																"nativeSrc": "1853:36:16",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:16"
															},
															"nativeSrc": "1853:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:16",
														"nodeType": "YulTypedName",
														"src": "1777:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:16",
														"nodeType": "YulTypedName",
														"src": "1788:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:16",
														"nodeType": "YulTypedName",
														"src": "1799:4:16",
														"type": ""
													}
												],
												"src": "1711:184:16"
											},
											{
												"body": {
													"nativeSrc": "1970:116:16",
													"nodeType": "YulBlock",
													"src": "1970:116:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:16",
																"nodeType": "YulBlock",
																"src": "2016:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:16"
																			},
																			"nativeSrc": "2018:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:16"
																		},
																		"nativeSrc": "2018:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:16"
																		},
																		"nativeSrc": "1987:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:16"
																},
																"nativeSrc": "1983:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:16"
															},
															"nativeSrc": "1980:52:16",
															"nodeType": "YulIf",
															"src": "1980:52:16"
														},
														{
															"nativeSrc": "2041:39:16",
															"nodeType": "YulAssignment",
															"src": "2041:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:16"
																},
																"nativeSrc": "2051:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:16",
														"nodeType": "YulTypedName",
														"src": "1936:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:16",
														"nodeType": "YulTypedName",
														"src": "1947:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:16",
														"nodeType": "YulTypedName",
														"src": "1959:6:16",
														"type": ""
													}
												],
												"src": "1900:186:16"
											},
											{
												"body": {
													"nativeSrc": "2192:102:16",
													"nodeType": "YulBlock",
													"src": "2192:102:16",
													"statements": [
														{
															"nativeSrc": "2202:26:16",
															"nodeType": "YulAssignment",
															"src": "2202:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2214:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2225:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2210:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:16"
																},
																"nativeSrc": "2210:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2210:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2202:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2244:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2259:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2275:3:16",
																								"nodeType": "YulLiteral",
																								"src": "2275:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2280:1:16",
																								"nodeType": "YulLiteral",
																								"src": "2280:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2271:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "2271:3:16"
																						},
																						"nativeSrc": "2271:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2271:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2284:1:16",
																						"nodeType": "YulLiteral",
																						"src": "2284:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2267:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:16"
																				},
																				"nativeSrc": "2267:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2267:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2255:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:16"
																		},
																		"nativeSrc": "2255:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2237:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:16"
																},
																"nativeSrc": "2237:51:16",
																"nodeType": "YulFunctionCall",
																"src": "2237:51:16"
															},
															"nativeSrc": "2237:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "2237:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2091:203:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2161:9:16",
														"nodeType": "YulTypedName",
														"src": "2161:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2172:6:16",
														"nodeType": "YulTypedName",
														"src": "2172:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2183:4:16",
														"nodeType": "YulTypedName",
														"src": "2183:4:16",
														"type": ""
													}
												],
												"src": "2091:203:16"
											},
											{
												"body": {
													"nativeSrc": "2354:325:16",
													"nodeType": "YulBlock",
													"src": "2354:325:16",
													"statements": [
														{
															"nativeSrc": "2364:22:16",
															"nodeType": "YulAssignment",
															"src": "2364:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2378:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2378:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2381:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2381:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2374:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:16"
																},
																"nativeSrc": "2374:12:16",
																"nodeType": "YulFunctionCall",
																"src": "2374:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2364:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2364:6:16"
																}
															]
														},
														{
															"nativeSrc": "2395:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2395:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2425:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2425:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2431:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2431:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2421:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2421:3:16"
																},
																"nativeSrc": "2421:12:16",
																"nodeType": "YulFunctionCall",
																"src": "2421:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2399:18:16",
																	"nodeType": "YulTypedName",
																	"src": "2399:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2472:31:16",
																"nodeType": "YulBlock",
																"src": "2472:31:16",
																"statements": [
																	{
																		"nativeSrc": "2474:27:16",
																		"nodeType": "YulAssignment",
																		"src": "2474:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2488:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "2488:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2496:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2496:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2484:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2484:3:16"
																			},
																			"nativeSrc": "2484:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2484:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2474:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2474:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2452:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "2452:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2445:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2445:6:16"
																},
																"nativeSrc": "2445:26:16",
																"nodeType": "YulFunctionCall",
																"src": "2445:26:16"
															},
															"nativeSrc": "2442:61:16",
															"nodeType": "YulIf",
															"src": "2442:61:16"
														},
														{
															"body": {
																"nativeSrc": "2562:111:16",
																"nodeType": "YulBlock",
																"src": "2562:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2583:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2583:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2590:3:16",
																							"nodeType": "YulLiteral",
																							"src": "2590:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2595:10:16",
																							"nodeType": "YulLiteral",
																							"src": "2595:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2586:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2586:3:16"
																					},
																					"nativeSrc": "2586:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2586:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2576:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2576:6:16"
																			},
																			"nativeSrc": "2576:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2576:31:16"
																		},
																		"nativeSrc": "2576:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2576:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2627:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2627:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2630:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2630:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2620:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2620:6:16"
																			},
																			"nativeSrc": "2620:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:15:16"
																		},
																		"nativeSrc": "2620:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2620:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2655:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2655:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2658:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2658:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2648:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2648:6:16"
																			},
																			"nativeSrc": "2648:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2648:15:16"
																		},
																		"nativeSrc": "2648:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2648:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2518:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "2518:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2541:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2541:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2549:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2538:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2538:2:16"
																		},
																		"nativeSrc": "2538:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2538:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2515:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2515:2:16"
																},
																"nativeSrc": "2515:38:16",
																"nodeType": "YulFunctionCall",
																"src": "2515:38:16"
															},
															"nativeSrc": "2512:161:16",
															"nodeType": "YulIf",
															"src": "2512:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2299:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2334:4:16",
														"nodeType": "YulTypedName",
														"src": "2334:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2343:6:16",
														"nodeType": "YulTypedName",
														"src": "2343:6:16",
														"type": ""
													}
												],
												"src": "2299:380:16"
											},
											{
												"body": {
													"nativeSrc": "2732:174:16",
													"nodeType": "YulBlock",
													"src": "2732:174:16",
													"statements": [
														{
															"nativeSrc": "2742:16:16",
															"nodeType": "YulAssignment",
															"src": "2742:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2753:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "2753:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2756:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "2756:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2749:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:16"
																},
																"nativeSrc": "2749:9:16",
																"nodeType": "YulFunctionCall",
																"src": "2749:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2742:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2789:111:16",
																"nodeType": "YulBlock",
																"src": "2789:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2810:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2810:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2817:3:16",
																							"nodeType": "YulLiteral",
																							"src": "2817:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2822:10:16",
																							"nodeType": "YulLiteral",
																							"src": "2822:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2813:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2813:3:16"
																					},
																					"nativeSrc": "2813:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2803:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:16"
																			},
																			"nativeSrc": "2803:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2803:31:16"
																		},
																		"nativeSrc": "2803:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2803:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2854:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2854:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2857:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2857:4:16",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2847:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:16"
																			},
																			"nativeSrc": "2847:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:15:16"
																		},
																		"nativeSrc": "2847:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2882:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2885:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2885:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2875:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:16"
																			},
																			"nativeSrc": "2875:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:15:16"
																		},
																		"nativeSrc": "2875:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2773:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "2773:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2776:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2776:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2770:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2770:2:16"
																},
																"nativeSrc": "2770:10:16",
																"nodeType": "YulFunctionCall",
																"src": "2770:10:16"
															},
															"nativeSrc": "2767:133:16",
															"nodeType": "YulIf",
															"src": "2767:133:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2684:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2715:1:16",
														"nodeType": "YulTypedName",
														"src": "2715:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2718:1:16",
														"nodeType": "YulTypedName",
														"src": "2718:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2724:3:16",
														"nodeType": "YulTypedName",
														"src": "2724:3:16",
														"type": ""
													}
												],
												"src": "2684:222:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2434": [
									{
										"length": 32,
										"start": 293
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806370a082311161006e57806370a0823114610164578063715018a61461018c5780638da5cb5b1461019457806395d89b41146101ae578063a9059cbb146100d3578063f2fde38b146101b6575f80fd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011e57806340c10f191461014f575b5f80fd5b6100bd6101c9565b6040516100ca91906103bf565b60405180910390f35b6100e66100e1366004610426565b610259565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e661011636600461044e565b5f9392505050565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100ca565b61016261015d366004610426565b610261565b005b6100fa610172366004610487565b6001600160a01b03165f9081526001602052604090205490565b610162610277565b5f546040516001600160a01b0390911681526020016100ca565b6100bd61028a565b6101626101c4366004610487565b610299565b6060600380546101d8906104a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610204906104a7565b801561024f5780601f106102265761010080835404028352916020019161024f565b820191905f5260205f20905b81548152906001019060200180831161023257829003601f168201915b5050505050905090565b5f5b92915050565b6102696102db565b6102738282610307565b5050565b61027f6102db565b6102885f610370565b565b6060600480546101d8906104a7565b6102a16102db565b6001600160a01b0381166102cf57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6102d881610370565b50565b5f546001600160a01b031633146102885760405163118cdaa760e01b81523360048201526024016102c6565b8060025f82825461031891906104df565b90915550506001600160a01b0382165f818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b818110156103eb578581018301518582016040015282016103cf565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610421575f80fd5b919050565b5f8060408385031215610437575f80fd5b6104408361040b565b946020939093013593505050565b5f805f60608486031215610460575f80fd5b6104698461040b565b92506104776020850161040b565b9150604084013590509250925092565b5f60208284031215610497575f80fd5b6104a08261040b565b9392505050565b600181811c908216806104bb57607f821691505b6020821081036104d957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561025b57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e66871006899e4bf01d97832268ed0e00aa7aca6d09bb4af2ec16f3923a1ac7064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x44E JUMP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x277 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xBD PUSH2 0x28A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x487 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D8 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x204 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x226 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x232 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x273 DUP3 DUP3 PUSH2 0x307 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x288 PUSH0 PUSH2 0x370 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D8 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D8 DUP2 PUSH2 0x370 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2C6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3EB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3CF JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x437 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x440 DUP4 PUSH2 0x40B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x469 DUP5 PUSH2 0x40B JUMP JUMPDEST SWAP3 POP PUSH2 0x477 PUSH1 0x20 DUP6 ADD PUSH2 0x40B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x497 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A0 DUP3 PUSH2 0x40B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4BB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 PUSH9 0x71006899E4BF01D978 ORIGIN 0x26 DUP15 0xD0 0xE0 EXP 0xA7 0xAC 0xA6 0xD0 SWAP12 0xB4 0xAF 0x2E 0xC1 PUSH16 0x3923A1AC7064736F6C63430008160033 ",
							"sourceMap": "1505:6768:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2259:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4206:94;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:16;;1162:22;1144:41;;1132:2;1117:18;4206:94:10;1004:187:16;3336:97:10;3414:12;;3336:97;;;1342:25:16;;;1330:2;1315:18;3336:97:10;1196:177:16;4862:108:10;;;;;;:::i;:::-;4935:4;4862:108;;;;;;3187:89;;;1883:4:16;3260:9:10;1871:17:16;1853:36;;1841:2;1826:18;3187:89:10;1711:184:16;5759:103:10;;;;;;:::i;:::-;;:::i;:::-;;3491:116;;;;;;:::i;:::-;-1:-1:-1;;;;;3582:18:10;3556:7;3582:18;;;:9;:18;;;;;;;3491:116;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2237:51:16;;2225:2;2210:18;1638:85:0;2091:203:16;2461:93:10;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2259:89:10:-;2304:13;2336:5;2329:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2259:89;:::o;4206:94::-;4265:4;4206:94;;;;;:::o;5759:103::-;1531:13:0;:11;:13::i;:::-;5833:22:10::1;5839:7;5848:6;5833:5;:22::i;:::-;5759:103:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2461:93:10:-;2508:13;2540:7;2533:14;;;;;:::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2237:51:16::0;2210:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2237:51:16;2210:18;;1901:40:0;2091:203:16;5246:507:10;5445:6;5429:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;5597:18:10;;;;;;:9;:18;;;;;;;;:28;;;;;;5650:37;1342:25:16;;;5650:37:10;;1315:18:16;5650:37:10;;;;;;;5759:103;;:::o;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:548:16:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:16;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:16:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:16:o;2299:380::-;2378:1;2374:12;;;;2421;;;2442:61;;2496:4;2488:6;2484:17;2474:27;;2442:61;2549:2;2541:6;2538:14;2518:18;2515:38;2512:161;;2595:10;2590:3;2586:20;2583:1;2576:31;2630:4;2627:1;2620:15;2658:4;2655:1;2648:15;2512:161;;2299:380;;;:::o;2684:222::-;2749:9;;;2770:10;;;2767:133;;;2822:10;2817:3;2813:20;2810:1;2803:31;2857:4;2854:1;2847:15;2885:4;2882:1;2875:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "266400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "420",
								"balanceOf(address)": "2534",
								"decimals()": "infinite",
								"mint(address,uint256)": "53043",
								"name()": "infinite",
								"owner()": "2343",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "485",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28439"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1987,
									"end": 2194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1987,
									"end": 2194,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2091,
									"end": 2104,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2034,
									"end": 2085,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2007,
									"end": 2025,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2007,
									"end": 2025,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2116,
									"end": 2121,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2116,
									"end": 2129,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2124,
									"end": 2129,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2116,
									"end": 2121,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2116,
									"end": 2129,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2116,
									"end": 2129,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2116,
									"end": 2129,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2116,
									"end": 2129,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2139,
									"end": 2146,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2139,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2149,
									"end": 2156,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2139,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2139,
									"end": 2156,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2139,
									"end": 2156,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2139,
									"end": 2156,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2166,
									"end": 2187,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2166,
									"end": 2187,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2187,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2166,
									"end": 2187,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 146,
									"end": 990,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 990,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 16,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 732,
									"end": 735,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 725,
									"end": 729,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 704,
									"end": 730,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 701,
									"end": 736,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 698,
									"end": 753,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 698,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 747,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 739,
									"end": 751,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 698,
									"end": 753,
									"name": "tag",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 771,
									"end": 772,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 795,
									"end": 797,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 792,
									"end": 793,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 789,
									"end": 798,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 781,
									"end": 914,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 883,
									"end": 897,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 879,
									"end": 902,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 879,
									"end": 902,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 873,
									"end": 903,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 852,
									"end": 866,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 848,
									"end": 871,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 848,
									"end": 871,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 841,
									"end": 904,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 806,
									"end": 816,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 806,
									"end": 816,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 958,
									"end": 959,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 955,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 948,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 934,
									"end": 949,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 930,
									"end": 956,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 923,
									"end": 960,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 978,
									"end": 984,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 969,
									"end": 984,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 146,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1110,
									"end": 1116,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1118,
									"end": 1124,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1126,
									"end": 1132,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1187,
									"end": 1190,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 1175,
									"end": 1184,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1166,
									"end": 1173,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 1162,
									"end": 1185,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1158,
									"end": 1191,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 1155,
									"end": 1208,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1155,
									"end": 1208,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1155,
									"end": 1208,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1204,
									"end": 1205,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1194,
									"end": 1206,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1155,
									"end": 1208,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1155,
									"end": 1208,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1230,
									"end": 1246,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1230,
									"end": 1246,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1275,
									"end": 1306,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1275,
									"end": 1306,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1265,
									"end": 1307,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1265,
									"end": 1307,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1255,
									"end": 1325,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1255,
									"end": 1325,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1321,
									"end": 1322,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1319,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1323,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1255,
									"end": 1325,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1255,
									"end": 1325,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1393,
									"end": 1395,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1372,
									"end": 1397,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1344,
									"end": 1349,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1344,
									"end": 1349,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1446,
									"end": 1460,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1446,
									"end": 1460,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1446,
									"end": 1460,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1443,
									"end": 1477,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1443,
									"end": 1477,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1443,
									"end": 1477,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1470,
									"end": 1471,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1463,
									"end": 1475,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1443,
									"end": 1477,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1443,
									"end": 1477,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1496,
									"end": 1557,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1549,
									"end": 1556,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 1540,
									"end": 1546,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1529,
									"end": 1538,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 1525,
									"end": 1547,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1496,
									"end": 1557,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1496,
									"end": 1557,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1496,
									"end": 1557,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1496,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1486,
									"end": 1557,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 1486,
									"end": 1557,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1603,
									"end": 1605,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1592,
									"end": 1601,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 1588,
									"end": 1606,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1582,
									"end": 1607,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1566,
									"end": 1607,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1566,
									"end": 1607,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1632,
									"end": 1634,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1622,
									"end": 1630,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1635,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1648,
									"end": 1649,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1645,
									"end": 1646,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1638,
									"end": 1650,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "tag",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1671,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 1726,
									"end": 1733,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 1715,
									"end": 1723,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1704,
									"end": 1713,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 1700,
									"end": 1724,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1671,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1671,
									"end": 1734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1671,
									"end": 1734,
									"name": "tag",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 1671,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1661,
									"end": 1734,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1661,
									"end": 1734,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1661,
									"end": 1734,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1768,
									"end": 1777,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1758,
									"end": 1783,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1827,
									"end": 1831,
									"name": "PUSH",
									"source": 16,
									"value": "FF"
								},
								{
									"begin": 1818,
									"end": 1825,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1805,
									"end": 1812,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1802,
									"end": 1833,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1792,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1792,
									"end": 1851,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1847,
									"end": 1848,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1844,
									"end": 1845,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1792,
									"end": 1851,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1792,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP7",
									"source": 16
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 995,
									"end": 1883,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 995,
									"end": 1883,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "tag",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2218,
									"end": 2230,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2218,
									"end": 2230,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2218,
									"end": 2230,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2293,
									"end": 2297,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 2285,
									"end": 2291,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2281,
									"end": 2298,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2271,
									"end": 2298,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2271,
									"end": 2298,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "tag",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2346,
									"end": 2348,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2338,
									"end": 2344,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2335,
									"end": 2349,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2315,
									"end": 2333,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2312,
									"end": 2350,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2392,
									"end": 2402,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 2387,
									"end": 2390,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 2383,
									"end": 2403,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2373,
									"end": 2404,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2427,
									"end": 2431,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2424,
									"end": 2425,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 2417,
									"end": 2432,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2455,
									"end": 2459,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2452,
									"end": 2453,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2445,
									"end": 2460,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2096,
									"end": 2476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2709,
									"end": 2711,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2704,
									"end": 2707,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2701,
									"end": 2712,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2745,
									"end": 2750,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2742,
									"end": 2743,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2735,
									"end": 2751,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2789,
									"end": 2793,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2786,
									"end": 2787,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 2859,
									"end": 2861,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2847,
									"end": 2857,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2843,
									"end": 2862,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2840,
									"end": 2841,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 2836,
									"end": 2863,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2830,
									"end": 2834,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2826,
									"end": 2864,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2895,
									"end": 2899,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2883,
									"end": 2893,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2880,
									"end": 2900,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2918,
									"end": 2922,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "tag",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2973,
									"end": 2975,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2968,
									"end": 2971,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2964,
									"end": 2976,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 2957,
									"end": 2977,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2951,
									"end": 2955,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2947,
									"end": 2978,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2937,
									"end": 2978,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2937,
									"end": 2978,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "tag",
									"source": 16,
									"value": "52"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3046,
									"end": 3048,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3039,
									"end": 3044,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3036,
									"end": 3049,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3105,
									"end": 3106,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3091,
									"end": 3107,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3091,
									"end": 3107,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3072,
									"end": 3073,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3061,
									"end": 3074,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "52"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "tag",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3032,
									"end": 3035,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3032,
									"end": 3035,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "tag",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2607,
									"end": 3125,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3421,
									"end": 3431,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3421,
									"end": 3431,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3443,
									"end": 3473,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3443,
									"end": 3473,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 3476,
									"end": 3494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "tag",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 3595,
									"end": 3601,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 3587,
									"end": 3591,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3581,
									"end": 3592,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3555,
									"end": 3593,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3549,
									"end": 3553,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 3505,
									"end": 3602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "tag",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3714,
									"end": 3716,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 3703,
									"end": 3717,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3703,
									"end": 3717,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3731,
									"end": 3732,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4433,
									"end": 4434,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4450,
									"end": 4456,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4447,
									"end": 4536,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4447,
									"end": 4536,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 4447,
									"end": 4536,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4502,
									"end": 4521,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4502,
									"end": 4521,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4502,
									"end": 4521,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4496,
									"end": 4522,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4447,
									"end": 4536,
									"name": "tag",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 4447,
									"end": 4536,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3259,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 3254,
									"end": 3265,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3254,
									"end": 3265,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3254,
									"end": 3265,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3250,
									"end": 3274,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3246,
									"end": 3275,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3276,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3282,
									"end": 3283,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3278,
									"end": 3289,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3278,
									"end": 3289,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3278,
									"end": 3289,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3233,
									"end": 3290,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 4549,
									"end": 4630,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4549,
									"end": 4630,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "tag",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 3726,
									"end": 4389,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2554,
									"end": 2555,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2547,
									"end": 2561,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2547,
									"end": 2561,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2547,
									"end": 2561,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2591,
									"end": 2595,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2578,
									"end": 2596,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2578,
									"end": 2596,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3762,
									"end": 3782,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3762,
									"end": 3782,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3762,
									"end": 3782,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3894,
									"end": 3901,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3891,
									"end": 3892,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3888,
									"end": 3902,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3983,
									"end": 4002,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 3983,
									"end": 4002,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3983,
									"end": 4002,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3977,
									"end": 4003,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3962,
									"end": 4004,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3962,
									"end": 4004,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4075,
									"end": 4102,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 4075,
									"end": 4102,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4075,
									"end": 4102,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4075,
									"end": 4102,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 4043,
									"end": 4044,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4031,
									"end": 4045,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4031,
									"end": 4045,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4031,
									"end": 4045,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4031,
									"end": 4045,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3910,
									"end": 3929,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3910,
									"end": 3929,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "tag",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 3880,
									"end": 4116,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3884,
									"end": 3887,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4144,
									"end": 4150,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4135,
									"end": 4142,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4132,
									"end": 4151,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4205,
									"end": 4224,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 4205,
									"end": 4224,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4205,
									"end": 4224,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4199,
									"end": 4225,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4288,
									"end": 4289,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 4284,
									"end": 4298,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 4284,
									"end": 4298,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4284,
									"end": 4298,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4303,
									"name": "PUSH",
									"source": 16,
									"value": "F8"
								},
								{
									"begin": 4280,
									"end": 4304,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4276,
									"end": 4313,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4272,
									"end": 4314,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4257,
									"end": 4315,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4242,
									"end": 4316,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4242,
									"end": 4316,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "tag",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4129,
									"end": 4330,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4376,
									"end": 4377,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4367,
									"end": 4373,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4364,
									"end": 4365,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4360,
									"end": 4374,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4356,
									"end": 4378,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4350,
									"end": 4354,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4343,
									"end": 4379,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "tag",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3696,
									"end": 4640,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3301,
									"end": 4646,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3301,
									"end": 4646,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "2434"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 8273,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e66871006899e4bf01d97832268ed0e00aa7aca6d09bb4af2ec16f3923a1ac7064736f6c63430008160033",
									".code": [
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 8273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2259,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2259,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4206,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4206,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4862,
											"end": 4970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4970,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3276,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3187,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3276,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3276,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 3260,
											"end": 3269,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "2434"
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3187,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 5759,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 5759,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3491,
											"end": 3607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3491,
											"end": 3607,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2461,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2317,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2329,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2329,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5839,
											"end": 5846,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5848,
											"end": 5854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5833,
											"end": 5838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 5833,
											"end": 5855,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5833,
											"end": 5855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5833,
											"end": 5855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2461,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2533,
											"end": 2547,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2533,
											"end": 2547,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2533,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2533,
											"end": 2547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2533,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2533,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5246,
											"end": 5753,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 5246,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5445,
											"end": 5451,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5441,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5429,
											"end": 5441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5429,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5625,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "PUSH",
											"source": 10,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5687,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "126"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 16,
											"value": "126"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "134"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 16,
											"value": "134"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2299,
											"end": 2679,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 2299,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2374,
											"end": 2386,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2374,
											"end": 2386,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2374,
											"end": 2386,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2374,
											"end": 2386,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2421,
											"end": 2433,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2421,
											"end": 2433,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2421,
											"end": 2433,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2442,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 2442,
											"end": 2503,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2496,
											"end": 2500,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 2488,
											"end": 2494,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2484,
											"end": 2501,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2474,
											"end": 2501,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2474,
											"end": 2501,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2442,
											"end": 2503,
											"name": "tag",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 2442,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2552,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2512,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 2512,
											"end": 2673,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2595,
											"end": 2605,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 2590,
											"end": 2593,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2607,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2630,
											"end": 2634,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 2627,
											"end": 2628,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2620,
											"end": 2635,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2658,
											"end": 2662,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2655,
											"end": 2656,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2663,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2512,
											"end": 2673,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 2512,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2512,
											"end": 2673,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2299,
											"end": 2679,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2299,
											"end": 2679,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2299,
											"end": 2679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2299,
											"end": 2679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2684,
											"end": 2906,
											"name": "tag",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 2684,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2767,
											"end": 2900,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2767,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 2767,
											"end": 2900,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2834,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2862,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"packages/revolution-contracts/NontransferableERC20.sol",
								"packages/revolution-contracts/TokenEmitter.sol",
								"packages/revolution-contracts/interfaces/ITokenEmitter.sol",
								"packages/revolution-contracts/libs/LinearVRGDA.sol",
								"packages/revolution-contracts/libs/SignedWadMath.sol",
								"packages/revolution-contracts/libs/VRGDA.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/NontransferableERC20.sol\":\"NontransferableERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"packages/revolution-contracts/NontransferableERC20.sol\":{\"keccak256\":\"0xd68565d51e1b9a109f494d1df0c39555bd61c7b921e9e732b52902bac333a89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca11bc6d0d22e87b8b1c7caec1ce389fa69acc5b421fae5ca9a11ef9562ed9d0\",\"dweb:/ipfs/QmXktFkEqTY6eTaPP8YRbDcn9UirpXWnGkgRzqbG4bigAC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "packages/revolution-contracts/NontransferableERC20.sol:NontransferableERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2418,
								"contract": "packages/revolution-contracts/NontransferableERC20.sol:NontransferableERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2428,
								"contract": "packages/revolution-contracts/NontransferableERC20.sol:NontransferableERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2430,
								"contract": "packages/revolution-contracts/NontransferableERC20.sol:NontransferableERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2432,
								"contract": "packages/revolution-contracts/NontransferableERC20.sol:NontransferableERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/TokenEmitter.sol": {
				"TokenEmitter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract NontransferableERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "int256",
									"name": "_targetPrice",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "_priceDecayPercent",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "_governancePerTimeUnit",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "UNSAFE_getOverestimateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "_getTokenAmountForSinglePurchase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_addresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_bps",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "sold",
									"type": "int256"
								}
							],
							"name": "getTargetSaleTime",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								}
							],
							"name": "getTokenAmountForMultiPurchase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokensSoldSoFar",
									"type": "uint256"
								}
							],
							"name": "getTokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "timeSinceStart",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "sold",
									"type": "uint256"
								}
							],
							"name": "getVRGDAPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract NontransferableERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"getTargetSaleTime(int256)": {
								"details": "Given a number of tokens sold, return the target time that number of tokens should be sold by.",
								"params": {
									"sold": "A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for."
								},
								"returns": {
									"_0": "The target time the tokens should be sold by, scaled by 1e18, where the time is relative, such that 0 means the tokens should be sold immediately when the VRGDA begins."
								}
							},
							"getVRGDAPrice(int256,uint256)": {
								"params": {
									"sold": "The total number of tokens that have been sold so far.",
									"timeSinceStart": "Time passed since the VRGDA began, scaled by 1e18."
								},
								"returns": {
									"_0": "The price of a token according to VRGDA, scaled by 1e18."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/revolution-contracts/TokenEmitter.sol\":536:6074  contract TokenEmitter is LinearVRGDA, ITokenEmitter, ReentrancyGuard {... */\n  mstore(0x40, 0x0100)\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":916:931  block.timestamp */\n  timestamp\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":879:931  uint256 public immutable startTime = block.timestamp */\n  0xe0\n  mstore\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":1001:1666  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1292:1318  targetPrice = _targetPrice */\n  0x80\n  dup4\n  swap1\n  mstore\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":1546:1558  _targetPrice */\n  dup3\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":1560:1578  _priceDecayPercent */\n  dup3\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":1580:1602  _governancePerTimeUnit */\n  dup3\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":1546:1558  _targetPrice */\n  dup3\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":1560:1578  _priceDecayPercent */\n  dup3\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1345:1377  wadLn(1e18 - _priceDecayPercent) */\n  tag_9\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1351:1376  1e18 - _priceDecayPercent */\n  tag_10\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":1560:1578  _priceDecayPercent */\n  dup3\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1351:1355  1e18 */\n  0x0de0b6b3a7640000\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1351:1376  1e18 - _priceDecayPercent */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1345:1350  wadLn */\n  tag_12\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1345:1377  wadLn(1e18 - _priceDecayPercent) */\n  jump\t// in\ntag_9:\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1329:1377  decayConstant = wadLn(1e18 - _priceDecayPercent) */\n  0xa0\n  dup2\n  swap1\n  mstore\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1479:1480  0 */\n  0x00\n  sgt\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1455:1512  require(decayConstant < 0, \"NON_NEGATIVE_DECAY_CONSTANT\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1321:1323   */\n  0x20\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1455:1512  require(decayConstant < 0, \"NON_NEGATIVE_DECAY_CONSTANT\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1303:1324   */\n  mstore\n    /* \"#utility.yul\":1360:1362   */\n  0x1b\n    /* \"#utility.yul\":1340:1358   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1333:1363   */\n  mstore\n    /* \"#utility.yul\":1399:1428   */\n  0x4e4f4e5f4e454741544956455f44454341595f434f4e5354414e540000000000\n    /* \"#utility.yul\":1379:1397   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1372:1429   */\n  mstore\n    /* \"#utility.yul\":1446:1464   */\n  0x64\n  add\n    /* \"packages/revolution-contracts/libs/VRGDA.sol\":1455:1512  require(decayConstant < 0, \"NON_NEGATIVE_DECAY_CONSTANT\") */\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n  pop\n  pop\n    /* \"packages/revolution-contracts/libs/LinearVRGDA.sol\":1257:1283  perTimeUnit = _perTimeUnit */\n  0xc0\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":1614:1634  treasury = _treasury */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap6\n  dup7\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":1645:1650  token */\n  0x02\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":1645:1659  token = _token */\n  dup1\n  sload\n  swap7\n  swap1\n  swap6\n  and\n  swap6\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap3\n  sstore\n  pop\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":536:6074  contract TokenEmitter is LinearVRGDA, ITokenEmitter, ReentrancyGuard {... */\n  tag_25\n  swap2\n  pop\n  pop\n  jump\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6856:10125  function wadLn(int256 x) pure returns (int256 r) {... */\ntag_12:\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6895:6903  int256 r */\n  0x00\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6943:6944  0 */\n  dup1\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6939:6940  x */\n  dup3\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6939:6944  x > 0 */\n  sgt\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6931:6958  require(x > 0, \"UNDEFINED\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1677:1679   */\n  0x20\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6931:6958  require(x > 0, \"UNDEFINED\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1659:1680   */\n  mstore\n    /* \"#utility.yul\":1716:1717   */\n  0x09\n    /* \"#utility.yul\":1696:1714   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1689:1718   */\n  mstore\n  shl(0xba, 0x155391115192539151)\n    /* \"#utility.yul\":1734:1752   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1727:1766   */\n  mstore\n    /* \"#utility.yul\":1783:1801   */\n  0x64\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6931:6958  require(x > 0, \"UNDEFINED\") */\n  tag_14\n    /* \"#utility.yul\":1475:1807   */\n  jump\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6931:6958  require(x > 0, \"UNDEFINED\") */\ntag_21:\n  pop\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7852:7854  96 */\n  0x60\n  sub(shl(0x80, 0x01), 0x01)\n  dup3\n  gt\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7307:7308  7 */\n  0x07\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7303:7352  shl(7, lt(0xffffffffffffffffffffffffffffffff, x)) */\n  shl\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7406:7415  shr(r, x) */\n  dup3\n  dup2\n  shr\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7383:7416  lt(0xffffffffffffffff, shr(r, x)) */\n  lt\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7380:7381  6 */\n  0x06\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7376:7417  shl(6, lt(0xffffffffffffffff, shr(r, x))) */\n  shl\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7370:7418  or(r, shl(6, lt(0xffffffffffffffff, shr(r, x)))) */\n  or\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7464:7473  shr(r, x) */\n  dup3\n  dup2\n  shr\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7452:7462  0xffffffff */\n  0xffffffff\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7449:7474  lt(0xffffffff, shr(r, x)) */\n  lt\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7446:7447  5 */\n  0x05\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7442:7475  shl(5, lt(0xffffffff, shr(r, x))) */\n  shl\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7436:7476  or(r, shl(5, lt(0xffffffff, shr(r, x)))) */\n  or\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7518:7527  shr(r, x) */\n  dup3\n  dup2\n  shr\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7510:7516  0xffff */\n  0xffff\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7507:7528  lt(0xffff, shr(r, x)) */\n  lt\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7504:7505  4 */\n  0x04\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7500:7529  shl(4, lt(0xffff, shr(r, x))) */\n  shl\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7494:7530  or(r, shl(4, lt(0xffff, shr(r, x)))) */\n  or\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7570:7579  shr(r, x) */\n  dup3\n  dup2\n  shr\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7564:7568  0xff */\n  0xff\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7561:7580  lt(0xff, shr(r, x)) */\n  lt\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7558:7559  3 */\n  0x03\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7554:7581  shl(3, lt(0xff, shr(r, x))) */\n  swap1\n  dup2\n  shl\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7548:7582  or(r, shl(3, lt(0xff, shr(r, x)))) */\n  swap1\n  swap2\n  or\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7621:7630  shr(r, x) */\n  dup4\n  dup2\n  shr\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7616:7619  0xf */\n  0x0f\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7613:7631  lt(0xf, shr(r, x)) */\n  lt\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7610:7611  2 */\n  0x02\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7606:7632  shl(2, lt(0xf, shr(r, x))) */\n  shl\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7600:7633  or(r, shl(2, lt(0xf, shr(r, x)))) */\n  or\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7672:7681  shr(r, x) */\n  dup4\n  dup2\n  shr\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7664:7682  lt(0x3, shr(r, x)) */\n  swap1\n  swap2\n  lt\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7661:7662  1 */\n  0x01\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7657:7683  shl(1, lt(0x3, shr(r, x))) */\n  swap1\n  dup2\n  shl\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7651:7684  or(r, shl(1, lt(0x3, shr(r, x)))) */\n  swap1\n  swap2\n  or\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7716:7725  shr(r, x) */\n  dup4\n  dup2\n  shr\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7708:7726  lt(0x1, shr(r, x)) */\n  swap1\n  swap2\n  lt\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7702:7727  or(r, lt(0x1, shr(r, x))) */\n  or\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7878:7881  159 */\n  0x9f\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7878:7885  159 - k */\n  dup2\n  dup2\n  sub\n  dup4\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7864:7886  x <<= uint256(159 - k) */\n  swap4\n  swap1\n  swap4\n  shl\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7907:7924  uint256(x) >> 159 */\n  swap1\n  swap3\n  shr\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8652:8683  5573035233440673466300451813936 */\n  0x465772b2bbbb5f824b15207a30\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8648:8683  x + 5573035233440673466300451813936 */\n  dup2\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8699:8704  q * x */\n  dup2\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8698:8711  (q * x) >> 96 */\n  dup3\n  sar\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8715:8747  71694874799317883764090561454958 */\n  0x0388eaa27412d5aca026815d636e\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8697:8747  ((q * x) >> 96) + 71694874799317883764090561454958 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8763:8768  q * x */\n  dup2\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8762:8775  (q * x) >> 96 */\n  dup3\n  sar\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8779:8812  283447036172924575727196451306956 */\n  0x0df99ac502031bf953eff472fdcc\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8761:8812  ((q * x) >> 96) + 283447036172924575727196451306956 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8828:8833  q * x */\n  dup2\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8827:8840  (q * x) >> 96 */\n  dup3\n  sar\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8844:8877  401686690394027663651624208769553 */\n  0x13cdffb29d51d99322bdff5f2211\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8826:8877  ((q * x) >> 96) + 401686690394027663651624208769553 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8893:8898  q * x */\n  dup2\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8892:8905  (q * x) >> 96 */\n  dup3\n  sar\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8909:8942  204048457590392012362485061816622 */\n  0x0a0f742023def783a307a986912e\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8891:8942  ((q * x) >> 96) + 204048457590392012362485061816622 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8958:8963  q * x */\n  dup2\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8957:8970  (q * x) >> 96 */\n  dup3\n  sar\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8974:9006  31853899698501571402653359427138 */\n  0x01920d8043ca89b5239253284e42\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8956:9006  ((q * x) >> 96) + 31853899698501571402653359427138 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9022:9027  q * x */\n  dup2\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9021:9034  (q * x) >> 96 */\n  dup3\n  sar\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9038:9068  909429971244387300277376558375 */\n  0x0b7a86d7375468fac667a0a527\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9020:9068  ((q * x) >> 96) + 909429971244387300277376558375 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8085:8116  3273285459638523848632254066296 */\n  0x29508e458543d8aa4df2abee78\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8081:8116  x + 3273285459638523848632254066296 */\n  dup3\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8132:8137  p * x */\n  dup3\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8131:8144  (p * x) >> 96 */\n  dup4\n  sar\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8148:8180  24828157081833163892658089445524 */\n  0x0139601a2efabe717e604cbb4894\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8130:8180  ((p * x) >> 96) + 24828157081833163892658089445524 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8196:8201  p * x */\n  dup3\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8195:8208  (p * x) >> 96 */\n  dup4\n  sar\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8212:8244  43456485725739037958740375743393 */\n  0x02247f7a7b6594320649aa03aba1\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8194:8244  ((p * x) >> 96) + 43456485725739037958740375743393 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8260:8265  p * x */\n  dup3\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8259:8272  (p * x) >> 96 */\n  dup4\n  sar\n  not(0x8c3f38e95a6b1ff2ab1c3b3436)\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8258:8308  ((p * x) >> 96) - 11111509109440967052023855526967 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8324:8329  p * x */\n  dup3\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8323:8336  (p * x) >> 96 */\n  dup4\n  sar\n  not(0x02384773bdf1ac5676facced6090)\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8322:8372  ((p * x) >> 96) - 45023709667254063763336534515857 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8388:8393  p * x */\n  dup3\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8387:8400  (p * x) >> 96 */\n  swap1\n  swap3\n  sar\n  not(0xb9a025d814b29c212b8b1a07cd)\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8386:8436  ((p * x) >> 96) - 14706773417378608786704636184526 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8450:8455  p * x */\n  mul\n  not(sub(shl(0x61, 0x0504a838426634cdd8738f5435), 0x01))\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":8450:8496  p * x - (795164235651350426258249787498 << 96) */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9385:9395  sdiv(p, q) */\n  sdiv\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9739:9782  1677202110996718588342820967067443963516166 */\n  0x1340daa0d5f769dba1915cef59f0815a5506\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9734:9782  r *= 1677202110996718588342820967067443963516166 */\n  mul\n  not(0x5f)\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":7848:7854  r - 96 */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9838:9909  16597577552685614221487285958193947469193820559219878177908093499208371 */\n  0x0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b3\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9838:9913  16597577552685614221487285958193947469193820559219878177908093499208371 * k */\n  mul\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9833:9913  r += 16597577552685614221487285958193947469193820559219878177908093499208371 * k */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9978:10050  600920179829731861736702779321621459595472258049074101567377883020018308 */\n  0x57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b8864284\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":9973:10050  r += 600920179829731861736702779321621459595472258049074101567377883020018308 */\n  add\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":10113:10116  174 */\n  0xae\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":10107:10116  r >>= 174 */\n  sar\n  swap1\n    /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6856:10125  function wadLn(int256 x) pure returns (int256 r) {... */\n  jump\t// out\n    /* \"#utility.yul\":14:167   */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":111:142   */\n  dup2\n  and\n    /* \"#utility.yul\":101:143   */\n  dup2\n  eq\n    /* \"#utility.yul\":91:161   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":154:155   */\n  dup1\n    /* \"#utility.yul\":147:159   */\n  revert\n    /* \"#utility.yul\":91:161   */\ntag_27:\n    /* \"#utility.yul\":14:167   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":172:812   */\ntag_3:\n    /* \"#utility.yul\":304:310   */\n  0x00\n    /* \"#utility.yul\":312:318   */\n  dup1\n    /* \"#utility.yul\":320:326   */\n  0x00\n    /* \"#utility.yul\":328:334   */\n  dup1\n    /* \"#utility.yul\":336:342   */\n  0x00\n    /* \"#utility.yul\":389:392   */\n  0xa0\n    /* \"#utility.yul\":377:386   */\n  dup7\n    /* \"#utility.yul\":368:375   */\n  dup9\n    /* \"#utility.yul\":364:387   */\n  sub\n    /* \"#utility.yul\":360:393   */\n  slt\n    /* \"#utility.yul\":357:410   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":406:407   */\n  0x00\n    /* \"#utility.yul\":403:404   */\n  dup1\n    /* \"#utility.yul\":396:408   */\n  revert\n    /* \"#utility.yul\":357:410   */\ntag_29:\n    /* \"#utility.yul\":438:447   */\n  dup6\n    /* \"#utility.yul\":432:448   */\n  mload\n    /* \"#utility.yul\":457:510   */\n  tag_30\n    /* \"#utility.yul\":504:509   */\n  dup2\n    /* \"#utility.yul\":457:510   */\n  tag_24\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":579:581   */\n  0x20\n    /* \"#utility.yul\":564:582   */\n  dup8\n  add\n    /* \"#utility.yul\":558:583   */\n  mload\n    /* \"#utility.yul\":529:534   */\n  swap1\n  swap6\n  pop\n    /* \"#utility.yul\":592:647   */\n  tag_31\n    /* \"#utility.yul\":558:583   */\n  dup2\n    /* \"#utility.yul\":592:647   */\n  tag_24\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":713:715   */\n  0x40\n    /* \"#utility.yul\":698:716   */\n  dup8\n  add\n    /* \"#utility.yul\":692:717   */\n  mload\n    /* \"#utility.yul\":757:759   */\n  0x60\n    /* \"#utility.yul\":742:760   */\n  dup9\n  add\n    /* \"#utility.yul\":736:761   */\n  mload\n    /* \"#utility.yul\":801:804   */\n  0x80\n    /* \"#utility.yul\":786:805   */\n  swap1\n  swap9\n  add\n    /* \"#utility.yul\":780:806   */\n  mload\n    /* \"#utility.yul\":172:812   */\n  swap7\n  swap10\n    /* \"#utility.yul\":666:673   */\n  swap2\n  swap9\n  pop\n    /* \"#utility.yul\":692:717   */\n  swap7\n    /* \"#utility.yul\":736:761   */\n  swap6\n    /* \"#utility.yul\":780:806   */\n  swap5\n  pop\n    /* \"#utility.yul\":172:812   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":817:1114   */\ntag_11:\n    /* \"#utility.yul\":883:892   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":856:860   */\n  0x00\n    /* \"#utility.yul\":911:920   */\n  dup4\n  slt\n    /* \"#utility.yul\":939:949   */\n  dup1\n  iszero\n    /* \"#utility.yul\":951:963   */\n  dup4\n  dup4\n  sgt\n    /* \"#utility.yul\":935:964   */\n  and\n    /* \"#utility.yul\":974:986   */\n  dup4\n  dup4\n  slt\n    /* \"#utility.yul\":966:987   */\n  dup3\n  and\n    /* \"#utility.yul\":932:988   */\n  or\n    /* \"#utility.yul\":929:1108   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1030:1040   */\n  0x4e487b71\n    /* \"#utility.yul\":1025:1028   */\n  0xe0\n    /* \"#utility.yul\":1021:1041   */\n  shl\n    /* \"#utility.yul\":1018:1019   */\n  0x00\n    /* \"#utility.yul\":1011:1042   */\n  mstore\n    /* \"#utility.yul\":1065:1069   */\n  0x11\n    /* \"#utility.yul\":1062:1063   */\n  0x04\n    /* \"#utility.yul\":1055:1070   */\n  mstore\n    /* \"#utility.yul\":1093:1097   */\n  0x24\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1083:1098   */\n  revert\n    /* \"#utility.yul\":929:1108   */\ntag_33:\n  pop\n    /* \"#utility.yul\":817:1114   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1475:1807   */\ntag_25:\n    /* \"packages/revolution-contracts/TokenEmitter.sol\":536:6074  contract TokenEmitter is LinearVRGDA, ITokenEmitter, ReentrancyGuard {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x11e71f01d3621d7090d68d54b26900749cfcc68885b7bc6f2e18d9b762711b42\")\n  0x00\n  assignImmutable(\"0xa8ea1ee9d62307d190bf897e0d0e646fb969abde33eed40ef131c8a19f303559\")\n  0x00\n  assignImmutable(\"0xe152391e880680785b8297811e752bfde3d2926e8154bc2d7749de22b772d25f\")\n  0x00\n  assignImmutable(\"0x5472fdd700a9b2b6613d103095048c92304e97215a2607f73a9d5aa3701f3f09\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":536:6074  contract TokenEmitter is LinearVRGDA, ITokenEmitter, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xae9cdbe3\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xae9cdbe3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc457fb37\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdc38679c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdec86df1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf466d4ab\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x18160ddd\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x244ec3c8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6d9d33b7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7ba7614f\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1769:1908  function totalSupply() public view returns (uint) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1769:1908  function totalSupply() public view returns (uint) {... */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3152:3911  function _getTokenAmountForSinglePurchase(uint256 payment, uint256 supply) public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_16\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n        /* \"packages/revolution-contracts/libs/LinearVRGDA.sol\":1888:2029  function getTargetSaleTime(int256 sold) public view virtual override returns (int256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_16\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1914:2061  function balanceOf(address _owner) public view returns (uint) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_16\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":879:931  uint256 public immutable startTime = block.timestamp */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_16\n      immutable(\"0x11e71f01d3621d7090d68d54b26900749cfcc68885b7bc6f2e18d9b762711b42\")\n      dup2\n      jump\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3917:5219  function getTokenAmountForMultiPurchase(uint256 payment) public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_16\n      tag_45\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5396:5679  function UNSAFE_getOverestimateTokenAmount(uint256 payment, uint256 supply) public view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_16\n      tag_51\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5685:6072  function getTokenPrice(uint256 tokensSoldSoFar) public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_16\n      tag_56\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":715:750  int256 public immutable targetPrice */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_16\n      immutable(\"0x5472fdd700a9b2b6613d103095048c92304e97215a2607f73a9d5aa3701f3f09\")\n      dup2\n      jump\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2149:3081  function buyToken(address[] memory _addresses, uint[] memory _bps, uint256) public payable nonReentrant returns (uint256) {... */\n    tag_11:\n      tag_16\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2016:2810  function getVRGDAPrice(int256 timeSinceStart, uint256 sold) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_16\n      tag_70\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":789:822  NontransferableERC20 public token */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      sload(0x02)\n      tag_75\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_75:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4304:4336   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4286:4337   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4274:4276   */\n      0x20\n        /* \"#utility.yul\":4259:4277   */\n      add\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":789:822  NontransferableERC20 public token */\n      tag_18\n        /* \"#utility.yul\":4111:4343   */\n      jump\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1769:1908  function totalSupply() public view returns (uint) {... */\n    tag_17:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1882:1887  token */\n      sload(0x02)\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1882:1901  token.totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1813:1817  uint */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1882:1887  token */\n      and\n      swap2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1882:1899  token.totalSupply */\n      0x18160ddd\n      swap2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1882:1901  token.totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1882:1887  token */\n      dup7\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1882:1901  token.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1875:1901  return token.totalSupply() */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1769:1908  function totalSupply() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3152:3911  function _getTokenAmountForSinglePurchase(uint256 payment, uint256 supply) public view returns (uint256) {... */\n    tag_24:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3248:3255  uint256 */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3400:3427  uint256 overestimatedAmount */\n      dup1\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3430:3480  UNSAFE_getOverestimateTokenAmount(payment, supply) */\n      tag_85\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3464:3471  payment */\n      dup5\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3473:3479  supply */\n      dup5\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3430:3463  UNSAFE_getOverestimateTokenAmount */\n      tag_52\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3430:3480  UNSAFE_getOverestimateTokenAmount(payment, supply) */\n      jump\t// in\n    tag_85:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3400:3480  uint256 overestimatedAmount = UNSAFE_getOverestimateTokenAmount(payment, supply) */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3609:3635  uint256 overestimatedPrice */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3638:3681  getTokenPrice(supply + overestimatedAmount) */\n      tag_86\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3652:3680  supply + overestimatedAmount */\n      tag_56\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3400:3480  uint256 overestimatedAmount = UNSAFE_getOverestimateTokenAmount(payment, supply) */\n      dup4\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3652:3658  supply */\n      dup7\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3652:3680  supply + overestimatedAmount */\n      tag_88\n      jump\t// in\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3638:3681  getTokenPrice(supply + overestimatedAmount) */\n    tag_86:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3609:3681  uint256 overestimatedPrice = getTokenPrice(supply + overestimatedAmount) */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3807:3835  uint256 underestimatedAmount */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3838:3866  payment / overestimatedPrice */\n      tag_89\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3609:3681  uint256 overestimatedPrice = getTokenPrice(supply + overestimatedAmount) */\n      dup3\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3838:3845  payment */\n      dup8\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3838:3866  payment / overestimatedPrice */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3807:3866  uint256 underestimatedAmount = payment / overestimatedPrice */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3152:3911  function _getTokenAmountForSinglePurchase(uint256 payment, uint256 supply) public view returns (uint256) {... */\n    tag_84:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/libs/LinearVRGDA.sol\":1888:2029  function getTargetSaleTime(int256 sold) public view virtual override returns (int256) {... */\n    tag_30:\n        /* \"packages/revolution-contracts/libs/LinearVRGDA.sol\":1966:1972  int256 */\n      0x00\n        /* \"packages/revolution-contracts/libs/LinearVRGDA.sol\":2010:2021  perTimeUnit */\n      immutable(\"0xa8ea1ee9d62307d190bf897e0d0e646fb969abde33eed40ef131c8a19f303559\")\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2175:2194  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2168:2195  mul(x, 1000000000000000000) */\n      dup4\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2163:2199  sdiv(mul(x, 1000000000000000000), y) */\n      sdiv\n        /* \"packages/revolution-contracts/libs/LinearVRGDA.sol\":1991:2022  unsafeWadDiv(sold, perTimeUnit) */\n      tag_84\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":1978:2207  function unsafeWadDiv(int256 x, int256 y) pure returns (int256 r) {... */\n      jump\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1914:2061  function balanceOf(address _owner) public view returns (uint) {... */\n    tag_37:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2031:2036  token */\n      sload(0x02)\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2031:2054  token.balanceOf(_owner) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4304:4336   */\n      dup4\n      dup2\n      and\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2031:2054  token.balanceOf(_owner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4286:4337   */\n      mstore\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1970:1974  uint */\n      0x00\n      swap3\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2031:2036  token */\n      and\n      swap1\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2031:2046  token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4259:4277   */\n      0x24\n      add\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2031:2054  token.balanceOf(_owner) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3917:5219  function getTokenAmountForMultiPurchase(uint256 payment) public view returns (uint256) {... */\n    tag_47:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3995:4002  uint256 */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4281:4288  payment */\n      dup2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3995:4002  uint256 */\n      dup2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4462:4466  1e15 */\n      0x038d7ea4c68000\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4565:5185  while (remainingEth > 0) {... */\n    tag_101:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4572:4588  remainingEth > 0 */\n      dup3\n      iszero\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4565:5185  while (remainingEth > 0) {... */\n      tag_102\n      jumpi\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4740:4754  INCREMENT_SIZE */\n      dup1\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4725:4737  remainingEth */\n      dup4\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4725:4754  remainingEth < INCREMENT_SIZE */\n      lt\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4721:5175  if (remainingEth < INCREMENT_SIZE) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4789:4864  _getTokenAmountForSinglePurchase(remainingEth, totalSupply() + tokenAmount) */\n      tag_104\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4822:4834  remainingEth */\n      dup4\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4852:4863  tokenAmount */\n      dup4\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4836:4849  totalSupply() */\n      tag_105\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4836:4847  totalSupply */\n      tag_17\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4836:4849  totalSupply() */\n      jump\t// in\n    tag_105:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4836:4863  totalSupply() + tokenAmount */\n      tag_22\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4789:4864  _getTokenAmountForSinglePurchase(remainingEth, totalSupply() + tokenAmount) */\n    tag_104:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4774:4864  tokenAmount += _getTokenAmountForSinglePurchase(remainingEth, totalSupply() + tokenAmount) */\n      tag_107\n      swap1\n      dup4\n      tag_88\n      jump\t// in\n    tag_107:\n      swap2\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4897:4898  0 */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4882:4898  remainingEth = 0 */\n      swap3\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4565:5185  while (remainingEth > 0) {... */\n      jump(tag_101)\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4721:5175  if (remainingEth < INCREMENT_SIZE) {... */\n    tag_103:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5035:5112  _getTokenAmountForSinglePurchase(INCREMENT_SIZE, totalSupply() + tokenAmount) */\n      tag_109\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5068:5082  INCREMENT_SIZE */\n      dup2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5100:5111  tokenAmount */\n      dup4\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5084:5097  totalSupply() */\n      tag_105\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5084:5095  totalSupply */\n      tag_17\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5084:5097  totalSupply() */\n      jump\t// in\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5035:5112  _getTokenAmountForSinglePurchase(INCREMENT_SIZE, totalSupply() + tokenAmount) */\n    tag_109:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5020:5112  tokenAmount += _getTokenAmountForSinglePurchase(INCREMENT_SIZE, totalSupply() + tokenAmount) */\n      tag_112\n      swap1\n      dup4\n      tag_88\n      jump\t// in\n    tag_112:\n      swap2\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5130:5160  remainingEth -= INCREMENT_SIZE */\n      tag_113\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5146:5160  INCREMENT_SIZE */\n      dup2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5130:5160  remainingEth -= INCREMENT_SIZE */\n      dup5\n      tag_114\n      jump\t// in\n    tag_113:\n      swap3\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":4565:5185  while (remainingEth > 0) {... */\n      jump(tag_101)\n    tag_102:\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5201:5212  tokenAmount */\n      swap4\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3917:5219  function getTokenAmountForMultiPurchase(uint256 payment) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5396:5679  function UNSAFE_getOverestimateTokenAmount(uint256 payment, uint256 supply) public view returns (uint256) {... */\n    tag_52:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5493:5500  uint256 */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5512:5538  uint256 priceForFirstToken */\n      dup1\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5541:5562  getTokenPrice(supply) */\n      tag_116\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5555:5561  supply */\n      dup4\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5541:5554  getTokenPrice */\n      tag_57\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5541:5562  getTokenPrice(supply) */\n      jump\t// in\n    tag_116:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5512:5562  uint256 priceForFirstToken = getTokenPrice(supply) */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5572:5602  uint256 initialEstimatedAmount */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5605:5633  payment / priceForFirstToken */\n      tag_117\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5512:5562  uint256 priceForFirstToken = getTokenPrice(supply) */\n      dup3\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5605:5612  payment */\n      dup7\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5605:5633  payment / priceForFirstToken */\n      tag_90\n      jump\t// in\n    tag_117:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5572:5633  uint256 initialEstimatedAmount = payment / priceForFirstToken */\n      swap6\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5396:5679  function UNSAFE_getOverestimateTokenAmount(uint256 payment, uint256 supply) public view returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5685:6072  function getTokenPrice(uint256 tokensSoldSoFar) public view returns (uint256) {... */\n    tag_57:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5754:5761  uint256 */\n      0x00\n      dup1\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5966:6042  getVRGDAPrice(toDaysWadUnsafe(block.timestamp - startTime), tokensSoldSoFar) */\n      tag_119\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5980:6024  toDaysWadUnsafe(block.timestamp - startTime) */\n      tag_120\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5996:6023  block.timestamp - startTime */\n      tag_121\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":6014:6023  startTime */\n      immutable(\"0x11e71f01d3621d7090d68d54b26900749cfcc68885b7bc6f2e18d9b762711b42\")\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5996:6011  block.timestamp */\n      timestamp\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5996:6023  block.timestamp - startTime */\n      tag_114\n      jump\t// in\n    tag_121:\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":1046:1051  86400 */\n      0x015180\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":1024:1043  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":1017:1044  mul(x, 1000000000000000000) */\n      swap2\n      swap1\n      swap2\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":1013:1052  div(mul(x, 1000000000000000000), 86400) */\n      div\n      swap1\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":825:1060  function toDaysWadUnsafe(uint256 x) pure returns (int256 r) {... */\n      jump\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5980:6024  toDaysWadUnsafe(block.timestamp - startTime) */\n    tag_120:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":6026:6041  tokensSoldSoFar */\n      dup5\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5966:5979  getVRGDAPrice */\n      tag_72\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5966:6042  getVRGDAPrice(toDaysWadUnsafe(block.timestamp - startTime), tokensSoldSoFar) */\n      jump\t// in\n    tag_119:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5950:6042  uint256 price = getVRGDAPrice(toDaysWadUnsafe(block.timestamp - startTime), tokensSoldSoFar) */\n      swap4\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":5685:6072  function getTokenPrice(uint256 tokensSoldSoFar) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2149:3081  function buyToken(address[] memory _addresses, uint[] memory _bps, uint256) public payable nonReentrant returns (uint256) {... */\n    tag_66:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2262:2269  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_125\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_124:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2366:2370  _bps */\n      dup3\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2366:2377  _bps.length */\n      mload\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2345:2355  _addresses */\n      dup5\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2345:2362  _addresses.length */\n      mload\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2345:2377  _addresses.length == _bps.length */\n      eq\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2337:2406  require(_addresses.length == _bps.length, \"Parallel arrays required\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5696:5698   */\n      0x20\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2337:2406  require(_addresses.length == _bps.length, \"Parallel arrays required\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5678:5699   */\n      mstore\n        /* \"#utility.yul\":5735:5737   */\n      0x18\n        /* \"#utility.yul\":5715:5733   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5708:5738   */\n      mstore\n        /* \"#utility.yul\":5774:5800   */\n      0x506172616c6c656c206172726179732072657175697265640000000000000000\n        /* \"#utility.yul\":5754:5772   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5747:5801   */\n      mstore\n        /* \"#utility.yul\":5818:5836   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2337:2406  require(_addresses.length == _bps.length, \"Parallel arrays required\") */\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2417:2433  uint totalTokens */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2436:2477  getTokenAmountForMultiPurchase(msg.value) */\n      tag_130\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2467:2476  msg.value */\n      callvalue\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2436:2466  getTokenAmountForMultiPurchase */\n      tag_47\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2436:2477  getTokenAmountForMultiPurchase(msg.value) */\n      jump\t// in\n    tag_130:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2506:2514  treasury */\n      sload(0x01)\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2540:2552  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2488:2500  bool success */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2540:2552  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      dup4\n      swap1\n      mstore\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2417:2477  uint totalTokens = getTokenAmountForMultiPurchase(msg.value) */\n      swap4\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2506:2514  treasury */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2528:2537  msg.value */\n      callvalue\n      swap2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2506:2553  treasury.call{ value: msg.value }(new bytes(0)) */\n      tag_135\n      swap2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2540:2552  new bytes(0) */\n      swap1\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2506:2553  treasury.call{ value: msg.value }(new bytes(0)) */\n      tag_136\n      jump\t// in\n    tag_135:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_139\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_138)\n    tag_139:\n      0x60\n      swap2\n      pop\n    tag_138:\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2487:2553  (bool success, ) = treasury.call{ value: msg.value }(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2571:2578  success */\n      dup1\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2563:2599  require(success, \"Transfer failed.\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6466:6468   */\n      0x20\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2563:2599  require(success, \"Transfer failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6448:6469   */\n      mstore\n        /* \"#utility.yul\":6505:6507   */\n      0x10\n        /* \"#utility.yul\":6485:6503   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6478:6508   */\n      mstore\n      shl(0x81, 0x2a3930b739b332b9103330b4b632b217)\n        /* \"#utility.yul\":6524:6542   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6517:6563   */\n      mstore\n        /* \"#utility.yul\":6580:6598   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2563:2599  require(success, \"Transfer failed.\") */\n      tag_128\n        /* \"#utility.yul\":6264:6604   */\n      jump\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2563:2599  require(success, \"Transfer failed.\") */\n    tag_140:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2667:2675  uint sum */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2758:2764  uint i */\n      dup1\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2753:2985  for (uint i = 0; i < _addresses.length; i++) {... */\n    tag_143:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2774:2784  _addresses */\n      dup8\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2774:2791  _addresses.length */\n      mload\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2770:2771  i */\n      dup2\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2770:2791  i < _addresses.length */\n      lt\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2753:2985  for (uint i = 0; i < _addresses.length; i++) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2812:2823  uint tokens */\n      0x00\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2852:2858  10_000 */\n      0x2710\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2841:2845  _bps */\n      dup9\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2846:2847  i */\n      dup4\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2841:2848  _bps[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_147\n      jumpi\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2827:2838  totalTokens */\n      dup7\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2827:2848  totalTokens * _bps[i] */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2826:2858  (totalTokens * _bps[i]) / 10_000 */\n      tag_151\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_151:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2812:2858  uint tokens = (totalTokens * _bps[i]) / 10_000 */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2918:2946  _mint(_addresses[i], tokens) */\n      tag_152\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2924:2934  _addresses */\n      dup10\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2935:2936  i */\n      dup4\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2924:2937  _addresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_154\n      tag_148\n      jump\t// in\n    tag_154:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2939:2945  tokens */\n      dup3\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2918:2923  _mint */\n      tag_155\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2918:2946  _mint(_addresses[i], tokens) */\n      jump\t// in\n    tag_152:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2967:2971  _bps */\n      dup8\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2972:2973  i */\n      dup3\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2967:2974  _bps[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_157\n      jumpi\n      tag_157\n      tag_148\n      jump\t// in\n    tag_157:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2960:2974  sum += _bps[i] */\n      dup4\n      tag_158\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_158:\n      swap3\n      pop\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2793:2796  i++ */\n      0x01\n      add\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2753:2985  for (uint i = 0; i < _addresses.length; i++) {... */\n      jump(tag_143)\n    tag_144:\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3003:3006  sum */\n      dup1\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3010:3016  10_000 */\n      0x2710\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3003:3016  sum == 10_000 */\n      eq\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2995:3046  require(sum == 10_000, \"bps must add up to 10_000\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7116:7118   */\n      0x20\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2995:3046  require(sum == 10_000, \"bps must add up to 10_000\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7098:7119   */\n      mstore\n        /* \"#utility.yul\":7155:7157   */\n      0x19\n        /* \"#utility.yul\":7135:7153   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7128:7158   */\n      mstore\n        /* \"#utility.yul\":7194:7221   */\n      0x627073206d7573742061646420757020746f2031305f30303000000000000000\n        /* \"#utility.yul\":7174:7192   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7167:7222   */\n      mstore\n        /* \"#utility.yul\":7239:7257   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2995:3046  require(sum == 10_000, \"bps must add up to 10_000\") */\n      tag_128\n        /* \"#utility.yul\":6914:7263   */\n      jump\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":2995:3046  require(sum == 10_000, \"bps must add up to 10_000\") */\n    tag_159:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      sstore\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":3063:3074  totalTokens */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2016:2810  function getVRGDAPrice(int256 timeSinceStart, uint256 sold) public view virtual returns (uint256) {... */\n    tag_72:\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2105:2112  uint256 */\n      0x00\n      dup1\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2203:2640  wadMul(targetPrice, wadExp(unsafeWadMul(decayConstant,... */\n      tag_165\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2210:2221  targetPrice */\n      immutable(\"0x5472fdd700a9b2b6613d103095048c92304e97215a2607f73a9d5aa3701f3f09\")\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2223:2639  wadExp(unsafeWadMul(decayConstant,... */\n      tag_166\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2230:2638  unsafeWadMul(decayConstant,... */\n      tag_167\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2243:2256  decayConstant */\n      immutable(\"0xe152391e880680785b8297811e752bfde3d2926e8154bc2d7749de22b772d25f\")\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2584:2624  getTargetSaleTime(toWadUnsafe(sold + 1)) */\n      tag_168\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":557:576  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2621:2622  1 */\n      0x01\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2614:2622  sold + 1 */\n      dup11\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":550:577  mul(x, 1000000000000000000) */\n      mul\n        /* \"packages/revolution-contracts/libs/LinearVRGDA.sol\":1888:2029  function getTargetSaleTime(int256 sold) public view virtual override returns (int256) {... */\n      tag_30\n      jump\t// in\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2584:2624  getTargetSaleTime(toWadUnsafe(sold + 1)) */\n    tag_168:\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2567:2581  timeSinceStart */\n      dup10\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2567:2624  timeSinceStart - getTargetSaleTime(toWadUnsafe(sold + 1)) */\n      sub\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":1813:1832  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":1802:1811  mul(x, y) */\n      swap2\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":1797:1833  sdiv(mul(x, y), 1000000000000000000) */\n      sdiv\n      swap1\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":1615:1841  function unsafeWadMul(int256 x, int256 y) pure returns (int256 r) {... */\n      jump\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2230:2638  unsafeWadMul(decayConstant,... */\n    tag_167:\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2223:2229  wadExp */\n      tag_172\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2223:2639  wadExp(unsafeWadMul(decayConstant,... */\n      jump\t// in\n    tag_166:\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2203:2209  wadMul */\n      tag_173\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2203:2640  wadMul(targetPrice, wadExp(unsafeWadMul(decayConstant,... */\n      jump\t// in\n    tag_165:\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2179:2641  uint256 price = uint256(wadMul(targetPrice, wadExp(unsafeWadMul(decayConstant,... */\n      swap1\n      pop\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2677:2678  1 */\n      0x01\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2697:2715  price < priceFloor */\n      dup1\n      dup3\n      lt\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2693:2767  if (price < priceFloor) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2742:2752  priceFloor */\n      swap2\n      pop\n        /* \"packages/revolution-contracts/libs/VRGDA.sol\":2735:2752  return priceFloor */\n      tag_84\n      swap1\n      pop\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1672:1763  function _mint(address _to, uint _amount) private {... */\n    tag_155:\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1732:1737  token */\n      sload(0x02)\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1732:1756  token.mint(_to, _amount) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7460:7492   */\n      dup5\n      dup2\n      and\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1732:1756  token.mint(_to, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7442:7493   */\n      mstore\n        /* \"#utility.yul\":7509:7527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7502:7536   */\n      dup5\n      swap1\n      mstore\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1732:1737  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1732:1742  token.mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":7415:7433   */\n      0x44\n      add\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1732:1756  token.mint(_to, _amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/revolution-contracts/TokenEmitter.sol\":1672:1763  function _mint(address _to, uint _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3901:6854  function wadExp(int256 x) pure returns (int256 r) {... */\n    tag_172:\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3941:3949  int256 r */\n      0x00\n      not(0x0248ce36a70cb26b3e)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4102:4103  x */\n      dup3\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4102:4128  x <= -42139678854452767551 */\n      sgt\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4098:4138  if (x <= -42139678854452767551) return 0 */\n      tag_189\n      jumpi\n      pop\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4137:4138  0 */\n      0x00\n      swap2\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3901:6854  function wadExp(int256 x) pure returns (int256 r) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4098:4138  if (x <= -42139678854452767551) return 0 */\n    tag_189:\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4325:4346  135305999368893231589 */\n      0x0755bf798b4a1bf1e5\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4320:4321  x */\n      dup3\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4320:4346  x >= 135305999368893231589 */\n      slt\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4316:4370  if (x >= 135305999368893231589) revert(\"EXP_OVERFLOW\") */\n      tag_190\n      jumpi\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4348:4370  revert(\"EXP_OVERFLOW\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7749:7751   */\n      0x20\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4348:4370  revert(\"EXP_OVERFLOW\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7731:7752   */\n      mstore\n        /* \"#utility.yul\":7788:7790   */\n      0x0c\n        /* \"#utility.yul\":7768:7786   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7761:7791   */\n      mstore\n      shl(0xa0, 0x4558505f4f564552464c4f57)\n        /* \"#utility.yul\":7807:7825   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7800:7842   */\n      mstore\n        /* \"#utility.yul\":7859:7877   */\n      0x64\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4348:4370  revert(\"EXP_OVERFLOW\") */\n      tag_128\n        /* \"#utility.yul\":7547:7883   */\n      jump\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4316:4370  if (x >= 135305999368893231589) revert(\"EXP_OVERFLOW\") */\n    tag_190:\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4627:4634  5 ** 18 */\n      0x03782dace9d9\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4621:4623  78 */\n      0x4e\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4616:4623  x << 78 */\n      dup4\n      swap1\n      shl\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4615:4634  (x << 78) / 5 ** 18 */\n      sdiv\n      swap2\n      pop\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4882:4890  int256 k */\n      0x00\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4950:4952  96 */\n      0x60\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4906:4935  54916777467707473351141471128 */\n      0xb17217f7d1cf79abc9e3b398\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4895:4902  x << 96 */\n      dup5\n      dup3\n      shl\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4894:4935  (x << 96) / 54916777467707473351141471128 */\n      sdiv\n      shl(0x5f, 0x01)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4894:4945  (x << 96) / 54916777467707473351141471128 + 2 ** 95 */\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4893:4952  ((x << 96) / 54916777467707473351141471128 + 2 ** 95) >> 96 */\n      swap1\n      sar\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4974:5003  54916777467707473351141471128 */\n      0xb17217f7d1cf79abc9e3b398\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4970:5003  k * 54916777467707473351141471128 */\n      dup2\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":4966:5003  x - k * 54916777467707473351141471128 */\n      swap1\n      swap4\n      sub\n      not(0x240c330e9fb2d9cbaf0fd5aafb)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5605:5640  x - 2855989394907223263936484059900 */\n      dup2\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5656:5661  q * x */\n      dup2\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5260:5262  96 */\n      0x60\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5655:5668  (q * x) >> 96 */\n      swap1\n      dup2\n      sar\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5672:5704  50020603652535783019961831881945 */\n      0x0277594991cfc85f6e2461837cd9\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5654:5704  ((q * x) >> 96) + 50020603652535783019961831881945 */\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5720:5725  q * x */\n      dup3\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5719:5732  (q * x) >> 96 */\n      dup2\n      sar\n      not(0x1a521255e34f6a5061b25ef1c9c3)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5718:5769  ((q * x) >> 96) - 533845033583426703283633433725380 */\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5785:5790  q * x */\n      dup3\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5784:5797  (q * x) >> 96 */\n      dup2\n      sar\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5801:5835  3604857256930695427073651918091429 */\n      0xb1bbb201f443cf962f1a1d3db4a5\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5783:5835  ((q * x) >> 96) + 3604857256930695427073651918091429 */\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5851:5856  q * x */\n      dup3\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5850:5863  (q * x) >> 96 */\n      dup2\n      sar\n      not(0x02c72388d9f74f51a9331fed693f14)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5849:5902  ((q * x) >> 96) - 14423608567350463180887372962807573 */\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5918:5923  q * x */\n      dup3\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5917:5930  (q * x) >> 96 */\n      dup2\n      sar\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5934:5969  26449188498355588339934803723976023 */\n      0x05180bb14799ab47a8a8cb2a527d57\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5916:5969  ((q * x) >> 96) + 26449188498355588339934803723976023 */\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5266:5298  57155421227552351082224309758442 */\n      0x02d16720577bd19bf614176fe9ea\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5203:5234  1346386616545796478920950773328 */\n      0x10fe68e7fd37d0007b713f7650\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5199:5234  x + 1346386616545796478920950773328 */\n      dup5\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5250:5255  y * x */\n      dup5\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5249:5262  (y * x) >> 96 */\n      dup4\n      sar\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5248:5298  ((y * x) >> 96) + 57155421227552351082224309758442 */\n      swap1\n      dup2\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5319:5324  y + x */\n      swap1\n      dup5\n      add\n      not(0x01d3967ed30fc4f89c02bab57081)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5319:5359  y + x - 94201549194550492254356042504812 */\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5375:5380  p * y */\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5374:5387  (p * y) >> 96 */\n      swap1\n      swap2\n      sar\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5391:5426  28719021644029726153956944680412240 */\n      0x0587f503bb6ea29d25fcb740196450\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5373:5426  ((p * y) >> 96) + 28719021644029726153956944680412240 */\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5440:5445  p * x */\n      swap1\n      swap2\n      mul\n      shl(0x62, 0x360d7aeea093263ecc6e0ecb2917)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":5440:5490  p * x + (4385272521454847904659076985693276 << 96) */\n      add\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6310:6320  sdiv(p, q) */\n      sdiv\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6774:6823  3822833074963236453042738258902158003155416615667 */\n      0x029d9dc38563c32e5c2f6dc192ee70ef65f9978af3\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6761:6823  uint256(r) * 3822833074963236453042738258902158003155416615667 */\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6836:6839  195 */\n      0xc3\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6836:6843  195 - k */\n      swap4\n      swap1\n      swap4\n      sub\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":6760:6844  (uint256(r) * 3822833074963236453042738258902158003155416615667) >> uint256(195 - k) */\n      swap3\n      swap1\n      swap3\n      shr\n      swap3\n      swap2\n      pop\n      pop\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3901:6854  function wadExp(int256 x) pure returns (int256 r) {... */\n      jump\t// out\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2209:3136  function wadMul(int256 x, int256 y) pure returns (int256 r) {... */\n    tag_173:\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2375:2384  mul(x, y) */\n      dup2\n      dup2\n      mul\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2880:2889  iszero(x) */\n      dup3\n      iszero\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2894:2904  sdiv(r, x) */\n      dup4\n      dup3\n      sdiv\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2891:2908  eq(sdiv(r, x), y) */\n      dup4\n      eq\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2877:2909  or(iszero(x), eq(sdiv(r, x), y)) */\n      or\n      not(0x00)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2914:2927  lt(x, not(0)) */\n      dup5\n      lt\n      shl(0xff, 0x01)\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2929:3003  sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000) */\n      dup5\n      sgt\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2911:3004  or(lt(x, not(0)), sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) */\n      or\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2873:3005  and(or(iszero(x), eq(sdiv(r, x), y)), or(lt(x, not(0)), sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000))) */\n      and\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2863:3043  if iszero(and(or(iszero(x), eq(sdiv(r, x), y)), or(lt(x, not(0)), sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000)))) {... */\n      tag_199\n      jumpi\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3031:3032  0 */\n      0x00\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3028:3029  0 */\n      dup1\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3021:3033  revert(0, 0) */\n      revert\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2863:3043  if iszero(and(or(iszero(x), eq(sdiv(r, x), y)), or(lt(x, not(0)), sgt(y, 0x8000000000000000000000000000000000000000000000000000000000000000)))) {... */\n    tag_199:\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3108:3127  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":3100:3128  sdiv(r, 1000000000000000000) */\n      swap1\n      sdiv\n      swap3\n        /* \"packages/revolution-contracts/libs/SignedWadMath.sol\":2209:3136  function wadMul(int256 x, int256 y) pure returns (int256 r) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:444   */\n    tag_23:\n        /* \"#utility.yul\":264:270   */\n      0x00\n        /* \"#utility.yul\":272:278   */\n      dup1\n        /* \"#utility.yul\":325:327   */\n      0x40\n        /* \"#utility.yul\":313:322   */\n      dup4\n        /* \"#utility.yul\":304:311   */\n      dup6\n        /* \"#utility.yul\":300:323   */\n      sub\n        /* \"#utility.yul\":296:328   */\n      slt\n        /* \"#utility.yul\":293:345   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":341:342   */\n      0x00\n        /* \"#utility.yul\":338:339   */\n      dup1\n        /* \"#utility.yul\":331:343   */\n      revert\n        /* \"#utility.yul\":293:345   */\n    tag_208:\n      pop\n      pop\n        /* \"#utility.yul\":364:387   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":434:436   */\n      0x20\n        /* \"#utility.yul\":419:437   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":406:438   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":196:444   */\n      jump\t// out\n        /* \"#utility.yul\":449:628   */\n    tag_29:\n        /* \"#utility.yul\":507:513   */\n      0x00\n        /* \"#utility.yul\":560:562   */\n      0x20\n        /* \"#utility.yul\":548:557   */\n      dup3\n        /* \"#utility.yul\":539:546   */\n      dup5\n        /* \"#utility.yul\":535:558   */\n      sub\n        /* \"#utility.yul\":531:563   */\n      slt\n        /* \"#utility.yul\":528:580   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":573:574   */\n      dup1\n        /* \"#utility.yul\":566:578   */\n      revert\n        /* \"#utility.yul\":528:580   */\n    tag_210:\n      pop\n        /* \"#utility.yul\":599:622   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":449:628   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":813:986   */\n    tag_200:\n        /* \"#utility.yul\":881:901   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":930:961   */\n      dup2\n      and\n        /* \"#utility.yul\":920:962   */\n      dup2\n      eq\n        /* \"#utility.yul\":910:980   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":976:977   */\n      0x00\n        /* \"#utility.yul\":973:974   */\n      dup1\n        /* \"#utility.yul\":966:978   */\n      revert\n        /* \"#utility.yul\":910:980   */\n    tag_213:\n        /* \"#utility.yul\":813:986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":991:1177   */\n    tag_36:\n        /* \"#utility.yul\":1050:1056   */\n      0x00\n        /* \"#utility.yul\":1103:1105   */\n      0x20\n        /* \"#utility.yul\":1091:1100   */\n      dup3\n        /* \"#utility.yul\":1082:1089   */\n      dup5\n        /* \"#utility.yul\":1078:1101   */\n      sub\n        /* \"#utility.yul\":1074:1106   */\n      slt\n        /* \"#utility.yul\":1071:1123   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":1119:1120   */\n      0x00\n        /* \"#utility.yul\":1116:1117   */\n      dup1\n        /* \"#utility.yul\":1109:1121   */\n      revert\n        /* \"#utility.yul\":1071:1123   */\n    tag_215:\n        /* \"#utility.yul\":1142:1171   */\n      tag_119\n        /* \"#utility.yul\":1161:1170   */\n      dup3\n        /* \"#utility.yul\":1142:1171   */\n      tag_200\n      jump\t// in\n        /* \"#utility.yul\":1367:1494   */\n    tag_133:\n        /* \"#utility.yul\":1428:1438   */\n      0x4e487b71\n        /* \"#utility.yul\":1423:1426   */\n      0xe0\n        /* \"#utility.yul\":1419:1439   */\n      shl\n        /* \"#utility.yul\":1416:1417   */\n      0x00\n        /* \"#utility.yul\":1409:1440   */\n      mstore\n        /* \"#utility.yul\":1459:1463   */\n      0x41\n        /* \"#utility.yul\":1456:1457   */\n      0x04\n        /* \"#utility.yul\":1449:1464   */\n      mstore\n        /* \"#utility.yul\":1483:1487   */\n      0x24\n        /* \"#utility.yul\":1480:1481   */\n      0x00\n        /* \"#utility.yul\":1473:1488   */\n      revert\n        /* \"#utility.yul\":1499:1774   */\n    tag_201:\n        /* \"#utility.yul\":1570:1572   */\n      0x40\n        /* \"#utility.yul\":1564:1573   */\n      mload\n        /* \"#utility.yul\":1635:1637   */\n      0x1f\n        /* \"#utility.yul\":1616:1629   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1612:1639   */\n      and\n        /* \"#utility.yul\":1600:1640   */\n      dup2\n      add\n        /* \"#utility.yul\":1670:1688   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1655:1689   */\n      dup2\n      gt\n        /* \"#utility.yul\":1691:1713   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1652:1714   */\n      or\n        /* \"#utility.yul\":1649:1737   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":1717:1735   */\n      tag_222\n      tag_133\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1753:1755   */\n      0x40\n        /* \"#utility.yul\":1746:1768   */\n      mstore\n        /* \"#utility.yul\":1499:1774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1779:1962   */\n    tag_202:\n        /* \"#utility.yul\":1839:1843   */\n      0x00\n        /* \"#utility.yul\":1872:1890   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1864:1870   */\n      dup3\n        /* \"#utility.yul\":1861:1891   */\n      gt\n        /* \"#utility.yul\":1858:1914   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":1894:1912   */\n      tag_225\n      tag_133\n      jump\t// in\n    tag_225:\n      pop\n        /* \"#utility.yul\":1939:1940   */\n      0x05\n        /* \"#utility.yul\":1935:1949   */\n      shl\n        /* \"#utility.yul\":1951:1955   */\n      0x20\n        /* \"#utility.yul\":1931:1956   */\n      add\n      swap1\n        /* \"#utility.yul\":1779:1962   */\n      jump\t// out\n        /* \"#utility.yul\":1967:2635   */\n    tag_203:\n        /* \"#utility.yul\":2021:2026   */\n      0x00\n        /* \"#utility.yul\":2074:2077   */\n      dup3\n        /* \"#utility.yul\":2067:2071   */\n      0x1f\n        /* \"#utility.yul\":2059:2065   */\n      dup4\n        /* \"#utility.yul\":2055:2072   */\n      add\n        /* \"#utility.yul\":2051:2078   */\n      slt\n        /* \"#utility.yul\":2041:2096   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":2092:2093   */\n      0x00\n        /* \"#utility.yul\":2089:2090   */\n      dup1\n        /* \"#utility.yul\":2082:2094   */\n      revert\n        /* \"#utility.yul\":2041:2096   */\n    tag_227:\n        /* \"#utility.yul\":2128:2134   */\n      dup2\n        /* \"#utility.yul\":2115:2135   */\n      calldataload\n        /* \"#utility.yul\":2154:2158   */\n      0x20\n        /* \"#utility.yul\":2178:2238   */\n      tag_228\n        /* \"#utility.yul\":2194:2237   */\n      tag_229\n        /* \"#utility.yul\":2234:2236   */\n      dup4\n        /* \"#utility.yul\":2194:2237   */\n      tag_202\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2178:2238   */\n      tag_201\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2260:2263   */\n      dup1\n        /* \"#utility.yul\":2284:2286   */\n      dup4\n        /* \"#utility.yul\":2279:2282   */\n      dup3\n        /* \"#utility.yul\":2272:2287   */\n      mstore\n        /* \"#utility.yul\":2312:2316   */\n      0x20\n        /* \"#utility.yul\":2307:2310   */\n      dup3\n        /* \"#utility.yul\":2303:2317   */\n      add\n        /* \"#utility.yul\":2296:2317   */\n      swap2\n      pop\n        /* \"#utility.yul\":2369:2373   */\n      0x20\n        /* \"#utility.yul\":2363:2365   */\n      dup5\n        /* \"#utility.yul\":2360:2361   */\n      0x05\n        /* \"#utility.yul\":2356:2366   */\n      shl\n        /* \"#utility.yul\":2348:2354   */\n      dup8\n        /* \"#utility.yul\":2344:2367   */\n      add\n        /* \"#utility.yul\":2340:2374   */\n      add\n        /* \"#utility.yul\":2326:2374   */\n      swap4\n      pop\n        /* \"#utility.yul\":2397:2400   */\n      dup7\n        /* \"#utility.yul\":2389:2395   */\n      dup5\n        /* \"#utility.yul\":2386:2401   */\n      gt\n        /* \"#utility.yul\":2383:2418   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":2414:2415   */\n      0x00\n        /* \"#utility.yul\":2411:2412   */\n      dup1\n        /* \"#utility.yul\":2404:2416   */\n      revert\n        /* \"#utility.yul\":2383:2418   */\n    tag_230:\n        /* \"#utility.yul\":2450:2454   */\n      0x20\n        /* \"#utility.yul\":2442:2448   */\n      dup7\n        /* \"#utility.yul\":2438:2455   */\n      add\n        /* \"#utility.yul\":2464:2606   */\n    tag_231:\n        /* \"#utility.yul\":2480:2486   */\n      dup5\n        /* \"#utility.yul\":2475:2478   */\n      dup2\n        /* \"#utility.yul\":2472:2487   */\n      lt\n        /* \"#utility.yul\":2464:2606   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":2546:2563   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2534:2564   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2584:2596   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":2497:2509   */\n      dup4\n      add\n        /* \"#utility.yul\":2464:2606   */\n      jump(tag_231)\n    tag_233:\n      pop\n        /* \"#utility.yul\":2624:2629   */\n      swap7\n        /* \"#utility.yul\":1967:2635   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2640:3854   */\n    tag_65:\n        /* \"#utility.yul\":2767:2773   */\n      0x00\n        /* \"#utility.yul\":2775:2781   */\n      dup1\n        /* \"#utility.yul\":2783:2789   */\n      0x00\n        /* \"#utility.yul\":2836:2838   */\n      0x60\n        /* \"#utility.yul\":2824:2833   */\n      dup5\n        /* \"#utility.yul\":2815:2822   */\n      dup7\n        /* \"#utility.yul\":2811:2834   */\n      sub\n        /* \"#utility.yul\":2807:2839   */\n      slt\n        /* \"#utility.yul\":2804:2856   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":2852:2853   */\n      0x00\n        /* \"#utility.yul\":2849:2850   */\n      dup1\n        /* \"#utility.yul\":2842:2854   */\n      revert\n        /* \"#utility.yul\":2804:2856   */\n    tag_235:\n        /* \"#utility.yul\":2892:2901   */\n      dup4\n        /* \"#utility.yul\":2879:2902   */\n      calldataload\n        /* \"#utility.yul\":2921:2939   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2962:2964   */\n      dup1\n        /* \"#utility.yul\":2954:2960   */\n      dup3\n        /* \"#utility.yul\":2951:2965   */\n      gt\n        /* \"#utility.yul\":2948:2982   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":2978:2979   */\n      0x00\n        /* \"#utility.yul\":2975:2976   */\n      dup1\n        /* \"#utility.yul\":2968:2980   */\n      revert\n        /* \"#utility.yul\":2948:2982   */\n    tag_236:\n        /* \"#utility.yul\":3016:3022   */\n      dup2\n        /* \"#utility.yul\":3005:3014   */\n      dup7\n        /* \"#utility.yul\":3001:3023   */\n      add\n        /* \"#utility.yul\":2991:3023   */\n      swap2\n      pop\n        /* \"#utility.yul\":3061:3068   */\n      dup7\n        /* \"#utility.yul\":3054:3058   */\n      0x1f\n        /* \"#utility.yul\":3050:3052   */\n      dup4\n        /* \"#utility.yul\":3046:3059   */\n      add\n        /* \"#utility.yul\":3042:3069   */\n      slt\n        /* \"#utility.yul\":3032:3087   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":3083:3084   */\n      0x00\n        /* \"#utility.yul\":3080:3081   */\n      dup1\n        /* \"#utility.yul\":3073:3085   */\n      revert\n        /* \"#utility.yul\":3032:3087   */\n    tag_237:\n        /* \"#utility.yul\":3119:3121   */\n      dup2\n        /* \"#utility.yul\":3106:3122   */\n      calldataload\n        /* \"#utility.yul\":3141:3145   */\n      0x20\n        /* \"#utility.yul\":3165:3225   */\n      tag_238\n        /* \"#utility.yul\":3181:3224   */\n      tag_229\n        /* \"#utility.yul\":3221:3223   */\n      dup4\n        /* \"#utility.yul\":3181:3224   */\n      tag_202\n      jump\t// in\n        /* \"#utility.yul\":3165:3225   */\n    tag_238:\n        /* \"#utility.yul\":3259:3274   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":3341:3342   */\n      0x05\n        /* \"#utility.yul\":3337:3347   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":3329:3348   */\n      dup5\n      add\n        /* \"#utility.yul\":3325:3353   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":3290:3302   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3365:3384   */\n      dup11\n      dup5\n      gt\n        /* \"#utility.yul\":3362:3401   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":3397:3398   */\n      0x00\n        /* \"#utility.yul\":3394:3395   */\n      dup1\n        /* \"#utility.yul\":3387:3399   */\n      revert\n        /* \"#utility.yul\":3362:3401   */\n    tag_240:\n        /* \"#utility.yul\":3421:3432   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":3441:3589   */\n    tag_241:\n        /* \"#utility.yul\":3457:3463   */\n      dup4\n        /* \"#utility.yul\":3452:3455   */\n      dup7\n        /* \"#utility.yul\":3449:3464   */\n      lt\n        /* \"#utility.yul\":3441:3589   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":3523:3546   */\n      tag_244\n        /* \"#utility.yul\":3542:3545   */\n      dup7\n        /* \"#utility.yul\":3523:3546   */\n      tag_200\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3511:3547   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3474:3486   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":3567:3579   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3441:3589   */\n      jump(tag_241)\n    tag_243:\n        /* \"#utility.yul\":3608:3613   */\n      swap8\n      pop\n      pop\n        /* \"#utility.yul\":3651:3669   */\n      dup8\n      add\n        /* \"#utility.yul\":3638:3670   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":3682:3698   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3679:3715   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":3711:3712   */\n      0x00\n        /* \"#utility.yul\":3708:3709   */\n      dup1\n        /* \"#utility.yul\":3701:3713   */\n      revert\n        /* \"#utility.yul\":3679:3715   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":3734:3797   */\n      tag_246\n        /* \"#utility.yul\":3789:3796   */\n      dup7\n        /* \"#utility.yul\":3778:3786   */\n      dup3\n        /* \"#utility.yul\":3767:3776   */\n      dup8\n        /* \"#utility.yul\":3763:3787   */\n      add\n        /* \"#utility.yul\":3734:3797   */\n      tag_203\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3724:3797   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":3844:3846   */\n      0x40\n        /* \"#utility.yul\":3833:3842   */\n      dup5\n        /* \"#utility.yul\":3829:3847   */\n      add\n        /* \"#utility.yul\":3816:3848   */\n      calldataload\n        /* \"#utility.yul\":3806:3848   */\n      swap1\n      pop\n        /* \"#utility.yul\":2640:3854   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4348:4532   */\n    tag_83:\n        /* \"#utility.yul\":4418:4424   */\n      0x00\n        /* \"#utility.yul\":4471:4473   */\n      0x20\n        /* \"#utility.yul\":4459:4468   */\n      dup3\n        /* \"#utility.yul\":4450:4457   */\n      dup5\n        /* \"#utility.yul\":4446:4469   */\n      sub\n        /* \"#utility.yul\":4442:4474   */\n      slt\n        /* \"#utility.yul\":4439:4491   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":4487:4488   */\n      0x00\n        /* \"#utility.yul\":4484:4485   */\n      dup1\n        /* \"#utility.yul\":4477:4489   */\n      revert\n        /* \"#utility.yul\":4439:4491   */\n    tag_251:\n      pop\n        /* \"#utility.yul\":4510:4526   */\n      mload\n      swap2\n        /* \"#utility.yul\":4348:4532   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4537:4664   */\n    tag_204:\n        /* \"#utility.yul\":4598:4608   */\n      0x4e487b71\n        /* \"#utility.yul\":4593:4596   */\n      0xe0\n        /* \"#utility.yul\":4589:4609   */\n      shl\n        /* \"#utility.yul\":4586:4587   */\n      0x00\n        /* \"#utility.yul\":4579:4610   */\n      mstore\n        /* \"#utility.yul\":4629:4633   */\n      0x11\n        /* \"#utility.yul\":4626:4627   */\n      0x04\n        /* \"#utility.yul\":4619:4634   */\n      mstore\n        /* \"#utility.yul\":4653:4657   */\n      0x24\n        /* \"#utility.yul\":4650:4651   */\n      0x00\n        /* \"#utility.yul\":4643:4658   */\n      revert\n        /* \"#utility.yul\":4669:4794   */\n    tag_88:\n        /* \"#utility.yul\":4734:4743   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4755:4765   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4752:4788   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":4768:4786   */\n      tag_84\n      tag_204\n      jump\t// in\n        /* \"#utility.yul\":4931:5148   */\n    tag_90:\n        /* \"#utility.yul\":4971:4972   */\n      0x00\n        /* \"#utility.yul\":4997:4998   */\n      dup3\n        /* \"#utility.yul\":4987:5119   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":5041:5051   */\n      0x4e487b71\n        /* \"#utility.yul\":5036:5039   */\n      0xe0\n        /* \"#utility.yul\":5032:5052   */\n      shl\n        /* \"#utility.yul\":5029:5030   */\n      0x00\n        /* \"#utility.yul\":5022:5053   */\n      mstore\n        /* \"#utility.yul\":5076:5080   */\n      0x12\n        /* \"#utility.yul\":5073:5074   */\n      0x04\n        /* \"#utility.yul\":5066:5081   */\n      mstore\n        /* \"#utility.yul\":5104:5108   */\n      0x24\n        /* \"#utility.yul\":5101:5102   */\n      0x00\n        /* \"#utility.yul\":5094:5109   */\n      revert\n        /* \"#utility.yul\":4987:5119   */\n    tag_258:\n      pop\n        /* \"#utility.yul\":5133:5142   */\n      div\n      swap1\n        /* \"#utility.yul\":4931:5148   */\n      jump\t// out\n        /* \"#utility.yul\":5361:5489   */\n    tag_114:\n        /* \"#utility.yul\":5428:5437   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5449:5460   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5446:5483   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":5463:5481   */\n      tag_84\n      tag_204\n      jump\t// in\n        /* \"#utility.yul\":5847:6259   */\n    tag_136:\n        /* \"#utility.yul\":5976:5979   */\n      0x00\n        /* \"#utility.yul\":6014:6020   */\n      dup3\n        /* \"#utility.yul\":6008:6021   */\n      mload\n        /* \"#utility.yul\":6039:6040   */\n      0x00\n        /* \"#utility.yul\":6049:6178   */\n    tag_265:\n        /* \"#utility.yul\":6063:6069   */\n      dup2\n        /* \"#utility.yul\":6060:6061   */\n      dup2\n        /* \"#utility.yul\":6057:6070   */\n      lt\n        /* \"#utility.yul\":6049:6178   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":6161:6165   */\n      0x20\n        /* \"#utility.yul\":6145:6159   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":6141:6166   */\n      dup2\n      add\n        /* \"#utility.yul\":6135:6167   */\n      mload\n        /* \"#utility.yul\":6122:6133   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":6115:6168   */\n      mstore\n        /* \"#utility.yul\":6078:6090   */\n      add\n        /* \"#utility.yul\":6049:6178   */\n      jump(tag_265)\n    tag_267:\n      pop\n        /* \"#utility.yul\":6233:6234   */\n      0x00\n        /* \"#utility.yul\":6197:6213   */\n      swap3\n      add\n        /* \"#utility.yul\":6222:6235   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":6197:6213   */\n      swap2\n        /* \"#utility.yul\":5847:6259   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6609:6736   */\n    tag_148:\n        /* \"#utility.yul\":6670:6680   */\n      0x4e487b71\n        /* \"#utility.yul\":6665:6668   */\n      0xe0\n        /* \"#utility.yul\":6661:6681   */\n      shl\n        /* \"#utility.yul\":6658:6659   */\n      0x00\n        /* \"#utility.yul\":6651:6682   */\n      mstore\n        /* \"#utility.yul\":6701:6705   */\n      0x32\n        /* \"#utility.yul\":6698:6699   */\n      0x04\n        /* \"#utility.yul\":6691:6706   */\n      mstore\n        /* \"#utility.yul\":6725:6729   */\n      0x24\n        /* \"#utility.yul\":6722:6723   */\n      0x00\n        /* \"#utility.yul\":6715:6730   */\n      revert\n        /* \"#utility.yul\":6741:6909   */\n    tag_150:\n        /* \"#utility.yul\":6814:6823   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6845:6854   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6862:6877   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6856:6878   */\n      dup5\n      eq\n        /* \"#utility.yul\":6842:6879   */\n      or\n        /* \"#utility.yul\":6832:6903   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":6883:6901   */\n      tag_84\n      tag_204\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220e6e2f61604cd4d160ab899967c69c423acfe0c1139a27b238eb96d7f1a8c000864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2782": {
									"entryPoint": null,
									"id": 2782,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_3152": {
									"entryPoint": null,
									"id": 3152,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_3736": {
									"entryPoint": null,
									"id": 3736,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_947": {
									"entryPoint": null,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@wadLn_3681": {
									"entryPoint": 243,
									"id": 3681,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_NontransferableERC20_$2709t_addresst_int256t_int256t_int256_fromMemory": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_stringliteral_5cdf9122426f15ed01aca3ede9c6bb62ffa88d2271c7acb09d4af0813c4b83f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b70f99725f613142a957aa77c3aedce39bd858a4e6387f20e61acd49274b091c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_contract_NontransferableERC20": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1809:16",
										"nodeType": "YulBlock",
										"src": "0:1809:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "81:86:16",
													"nodeType": "YulBlock",
													"src": "81:86:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "145:16:16",
																"nodeType": "YulBlock",
																"src": "145:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "154:1:16",
																					"nodeType": "YulLiteral",
																					"src": "154:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "157:1:16",
																					"nodeType": "YulLiteral",
																					"src": "157:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "147:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "147:6:16"
																			},
																			"nativeSrc": "147:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "147:12:16"
																		},
																		"nativeSrc": "147:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "147:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "104:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "104:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "115:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "115:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "130:3:16",
																										"nodeType": "YulLiteral",
																										"src": "130:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "135:1:16",
																										"nodeType": "YulLiteral",
																										"src": "135:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "126:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "126:3:16"
																								},
																								"nativeSrc": "126:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "126:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "139:1:16",
																								"nodeType": "YulLiteral",
																								"src": "139:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "122:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "122:3:16"
																						},
																						"nativeSrc": "122:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "122:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "111:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "111:3:16"
																				},
																				"nativeSrc": "111:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "111:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "101:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "101:2:16"
																		},
																		"nativeSrc": "101:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "101:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "94:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "94:6:16"
																},
																"nativeSrc": "94:50:16",
																"nodeType": "YulFunctionCall",
																"src": "94:50:16"
															},
															"nativeSrc": "91:70:16",
															"nodeType": "YulIf",
															"src": "91:70:16"
														}
													]
												},
												"name": "validator_revert_contract_NontransferableERC20",
												"nativeSrc": "14:153:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "70:5:16",
														"nodeType": "YulTypedName",
														"src": "70:5:16",
														"type": ""
													}
												],
												"src": "14:153:16"
											},
											{
												"body": {
													"nativeSrc": "347:465:16",
													"nodeType": "YulBlock",
													"src": "347:465:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "394:16:16",
																"nodeType": "YulBlock",
																"src": "394:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "403:1:16",
																					"nodeType": "YulLiteral",
																					"src": "403:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "406:1:16",
																					"nodeType": "YulLiteral",
																					"src": "406:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "396:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "396:6:16"
																			},
																			"nativeSrc": "396:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "396:12:16"
																		},
																		"nativeSrc": "396:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "396:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "368:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "368:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "377:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "377:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "364:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "364:3:16"
																		},
																		"nativeSrc": "364:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "364:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "389:3:16",
																		"nodeType": "YulLiteral",
																		"src": "389:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "360:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "360:3:16"
																},
																"nativeSrc": "360:33:16",
																"nodeType": "YulFunctionCall",
																"src": "360:33:16"
															},
															"nativeSrc": "357:53:16",
															"nodeType": "YulIf",
															"src": "357:53:16"
														},
														{
															"nativeSrc": "419:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "419:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "438:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "438:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "432:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "432:5:16"
																},
																"nativeSrc": "432:16:16",
																"nodeType": "YulFunctionCall",
																"src": "432:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "423:5:16",
																	"nodeType": "YulTypedName",
																	"src": "423:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "504:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "504:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_NontransferableERC20",
																	"nativeSrc": "457:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "457:46:16"
																},
																"nativeSrc": "457:53:16",
																"nodeType": "YulFunctionCall",
																"src": "457:53:16"
															},
															"nativeSrc": "457:53:16",
															"nodeType": "YulExpressionStatement",
															"src": "457:53:16"
														},
														{
															"nativeSrc": "519:15:16",
															"nodeType": "YulAssignment",
															"src": "519:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "529:5:16",
																"nodeType": "YulIdentifier",
																"src": "529:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "519:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:16"
																}
															]
														},
														{
															"nativeSrc": "543:40:16",
															"nodeType": "YulVariableDeclaration",
															"src": "543:40:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "568:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "568:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "579:2:16",
																				"nodeType": "YulLiteral",
																				"src": "579:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "564:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "564:3:16"
																		},
																		"nativeSrc": "564:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "564:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "558:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "558:5:16"
																},
																"nativeSrc": "558:25:16",
																"nodeType": "YulFunctionCall",
																"src": "558:25:16"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "547:7:16",
																	"nodeType": "YulTypedName",
																	"src": "547:7:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "639:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "639:7:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_NontransferableERC20",
																	"nativeSrc": "592:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "592:46:16"
																},
																"nativeSrc": "592:55:16",
																"nodeType": "YulFunctionCall",
																"src": "592:55:16"
															},
															"nativeSrc": "592:55:16",
															"nodeType": "YulExpressionStatement",
															"src": "592:55:16"
														},
														{
															"nativeSrc": "656:17:16",
															"nodeType": "YulAssignment",
															"src": "656:17:16",
															"value": {
																"name": "value_1",
																"nativeSrc": "666:7:16",
																"nodeType": "YulIdentifier",
																"src": "666:7:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "656:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:16"
																}
															]
														},
														{
															"nativeSrc": "682:35:16",
															"nodeType": "YulAssignment",
															"src": "682:35:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "702:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "702:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "713:2:16",
																				"nodeType": "YulLiteral",
																				"src": "713:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "698:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "698:3:16"
																		},
																		"nativeSrc": "698:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "698:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "692:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "692:5:16"
																},
																"nativeSrc": "692:25:16",
																"nodeType": "YulFunctionCall",
																"src": "692:25:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "682:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "682:6:16"
																}
															]
														},
														{
															"nativeSrc": "726:35:16",
															"nodeType": "YulAssignment",
															"src": "726:35:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "746:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "746:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "757:2:16",
																				"nodeType": "YulLiteral",
																				"src": "757:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "742:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "742:3:16"
																		},
																		"nativeSrc": "742:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "742:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "736:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "736:5:16"
																},
																"nativeSrc": "736:25:16",
																"nodeType": "YulFunctionCall",
																"src": "736:25:16"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "726:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:16"
																}
															]
														},
														{
															"nativeSrc": "770:36:16",
															"nodeType": "YulAssignment",
															"src": "770:36:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "790:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "790:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "801:3:16",
																				"nodeType": "YulLiteral",
																				"src": "801:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "786:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "786:3:16"
																		},
																		"nativeSrc": "786:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "786:19:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "780:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "780:5:16"
																},
																"nativeSrc": "780:26:16",
																"nodeType": "YulFunctionCall",
																"src": "780:26:16"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "770:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "770:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_NontransferableERC20_$2709t_addresst_int256t_int256t_int256_fromMemory",
												"nativeSrc": "172:640:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "281:9:16",
														"nodeType": "YulTypedName",
														"src": "281:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "292:7:16",
														"nodeType": "YulTypedName",
														"src": "292:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "304:6:16",
														"nodeType": "YulTypedName",
														"src": "304:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "312:6:16",
														"nodeType": "YulTypedName",
														"src": "312:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "320:6:16",
														"nodeType": "YulTypedName",
														"src": "320:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "328:6:16",
														"nodeType": "YulTypedName",
														"src": "328:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "336:6:16",
														"nodeType": "YulTypedName",
														"src": "336:6:16",
														"type": ""
													}
												],
												"src": "172:640:16"
											},
											{
												"body": {
													"nativeSrc": "865:249:16",
													"nodeType": "YulBlock",
													"src": "865:249:16",
													"statements": [
														{
															"nativeSrc": "875:17:16",
															"nodeType": "YulAssignment",
															"src": "875:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "887:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "887:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "890:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "890:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "883:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "883:3:16"
																},
																"nativeSrc": "883:9:16",
																"nodeType": "YulFunctionCall",
																"src": "883:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "875:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "875:4:16"
																}
															]
														},
														{
															"nativeSrc": "901:19:16",
															"nodeType": "YulVariableDeclaration",
															"src": "901:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "915:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "915:1:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "918:1:16",
																		"nodeType": "YulLiteral",
																		"src": "918:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "911:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:16"
																},
																"nativeSrc": "911:9:16",
																"nodeType": "YulFunctionCall",
																"src": "911:9:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "905:2:16",
																	"nodeType": "YulTypedName",
																	"src": "905:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "997:111:16",
																"nodeType": "YulBlock",
																"src": "997:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1018:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1018:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1025:3:16",
																							"nodeType": "YulLiteral",
																							"src": "1025:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1030:10:16",
																							"nodeType": "YulLiteral",
																							"src": "1030:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1021:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1021:3:16"
																					},
																					"nativeSrc": "1021:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1021:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1011:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1011:6:16"
																			},
																			"nativeSrc": "1011:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1011:31:16"
																		},
																		"nativeSrc": "1011:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1011:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1062:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1062:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1065:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1065:4:16",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1055:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1055:6:16"
																			},
																			"nativeSrc": "1055:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1055:15:16"
																		},
																		"nativeSrc": "1055:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1090:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1090:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1093:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1093:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1083:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1083:6:16"
																			},
																			"nativeSrc": "1083:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1083:15:16"
																		},
																		"nativeSrc": "1083:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1083:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "939:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "939:6:16"
																				},
																				"nativeSrc": "939:10:16",
																				"nodeType": "YulFunctionCall",
																				"src": "939:10:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nativeSrc": "955:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "955:4:16"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "961:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "961:1:16"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nativeSrc": "951:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "951:3:16"
																				},
																				"nativeSrc": "951:12:16",
																				"nodeType": "YulFunctionCall",
																				"src": "951:12:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "935:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:16"
																		},
																		"nativeSrc": "935:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "935:29:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "970:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "970:2:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nativeSrc": "978:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "978:4:16"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "984:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "984:1:16"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "974:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "974:3:16"
																				},
																				"nativeSrc": "974:12:16",
																				"nodeType": "YulFunctionCall",
																				"src": "974:12:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "966:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "966:3:16"
																		},
																		"nativeSrc": "966:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "966:21:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "932:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "932:2:16"
																},
																"nativeSrc": "932:56:16",
																"nodeType": "YulFunctionCall",
																"src": "932:56:16"
															},
															"nativeSrc": "929:179:16",
															"nodeType": "YulIf",
															"src": "929:179:16"
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nativeSrc": "817:297:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "847:1:16",
														"nodeType": "YulTypedName",
														"src": "847:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "850:1:16",
														"nodeType": "YulTypedName",
														"src": "850:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "856:4:16",
														"nodeType": "YulTypedName",
														"src": "856:4:16",
														"type": ""
													}
												],
												"src": "817:297:16"
											},
											{
												"body": {
													"nativeSrc": "1293:177:16",
													"nodeType": "YulBlock",
													"src": "1293:177:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1310:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1310:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1321:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1321:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1303:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:16"
																},
																"nativeSrc": "1303:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1303:21:16"
															},
															"nativeSrc": "1303:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "1303:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1344:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1344:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1355:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1355:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1340:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:16"
																		},
																		"nativeSrc": "1340:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1340:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1360:2:16",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1333:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1333:6:16"
																},
																"nativeSrc": "1333:30:16",
																"nodeType": "YulFunctionCall",
																"src": "1333:30:16"
															},
															"nativeSrc": "1333:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "1333:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1383:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1383:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1394:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1394:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1379:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1379:3:16"
																		},
																		"nativeSrc": "1379:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1379:18:16"
																	},
																	{
																		"hexValue": "4e4f4e5f4e454741544956455f44454341595f434f4e5354414e54",
																		"kind": "string",
																		"nativeSrc": "1399:29:16",
																		"nodeType": "YulLiteral",
																		"src": "1399:29:16",
																		"type": "",
																		"value": "NON_NEGATIVE_DECAY_CONSTANT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1372:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1372:6:16"
																},
																"nativeSrc": "1372:57:16",
																"nodeType": "YulFunctionCall",
																"src": "1372:57:16"
															},
															"nativeSrc": "1372:57:16",
															"nodeType": "YulExpressionStatement",
															"src": "1372:57:16"
														},
														{
															"nativeSrc": "1438:26:16",
															"nodeType": "YulAssignment",
															"src": "1438:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1450:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1450:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1461:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1461:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1446:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:16"
																},
																"nativeSrc": "1446:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1446:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1438:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1438:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5cdf9122426f15ed01aca3ede9c6bb62ffa88d2271c7acb09d4af0813c4b83f0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1119:351:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:16",
														"nodeType": "YulTypedName",
														"src": "1270:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1284:4:16",
														"nodeType": "YulTypedName",
														"src": "1284:4:16",
														"type": ""
													}
												],
												"src": "1119:351:16"
											},
											{
												"body": {
													"nativeSrc": "1649:158:16",
													"nodeType": "YulBlock",
													"src": "1649:158:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1666:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1666:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1677:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1677:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1659:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:16"
																},
																"nativeSrc": "1659:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1659:21:16"
															},
															"nativeSrc": "1659:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "1659:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1700:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1700:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1711:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1711:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1696:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1696:3:16"
																		},
																		"nativeSrc": "1696:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1696:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1716:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1716:1:16",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1689:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1689:6:16"
																},
																"nativeSrc": "1689:29:16",
																"nodeType": "YulFunctionCall",
																"src": "1689:29:16"
															},
															"nativeSrc": "1689:29:16",
															"nodeType": "YulExpressionStatement",
															"src": "1689:29:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1738:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1738:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1749:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1749:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1734:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1734:3:16"
																		},
																		"nativeSrc": "1734:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1734:18:16"
																	},
																	{
																		"hexValue": "554e444546494e4544",
																		"kind": "string",
																		"nativeSrc": "1754:11:16",
																		"nodeType": "YulLiteral",
																		"src": "1754:11:16",
																		"type": "",
																		"value": "UNDEFINED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1727:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:16"
																},
																"nativeSrc": "1727:39:16",
																"nodeType": "YulFunctionCall",
																"src": "1727:39:16"
															},
															"nativeSrc": "1727:39:16",
															"nodeType": "YulExpressionStatement",
															"src": "1727:39:16"
														},
														{
															"nativeSrc": "1775:26:16",
															"nodeType": "YulAssignment",
															"src": "1775:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1787:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1787:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1798:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1783:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1783:3:16"
																},
																"nativeSrc": "1783:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1783:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1775:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1775:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b70f99725f613142a957aa77c3aedce39bd858a4e6387f20e61acd49274b091c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1475:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1626:9:16",
														"nodeType": "YulTypedName",
														"src": "1626:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1640:4:16",
														"nodeType": "YulTypedName",
														"src": "1640:4:16",
														"type": ""
													}
												],
												"src": "1475:332:16"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_contract_NontransferableERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_NontransferableERC20_$2709t_addresst_int256t_int256t_int256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_NontransferableERC20(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_NontransferableERC20(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n    function checked_sub_t_int256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        let _1 := slt(y, 0)\n        if or(and(iszero(_1), sgt(diff, x)), and(_1, slt(diff, x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_5cdf9122426f15ed01aca3ede9c6bb62ffa88d2271c7acb09d4af0813c4b83f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"NON_NEGATIVE_DECAY_CONSTANT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b70f99725f613142a957aa77c3aedce39bd858a4e6387f20e61acd49274b091c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"UNDEFINED\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE TIMESTAMP PUSH1 0xE0 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x107D CODESIZE SUB DUP1 PUSH2 0x107D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x33 SWAP2 PUSH2 0x330 JUMP JUMPDEST PUSH1 0x80 DUP4 SWAP1 MSTORE DUP3 DUP3 DUP3 DUP3 DUP3 PUSH2 0x57 PUSH2 0x52 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x37F JUMP JUMPDEST PUSH2 0xF3 JUMP JUMPDEST PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH0 SGT PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F4E5F4E454741544956455F44454341595F434F4E5354414E540000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0xC0 MSTORE POP POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP7 SWAP1 SWAP6 AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE POP PUSH2 0x3B1 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SGT PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x155391115192539151 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA6 JUMP JUMPDEST POP PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 GT PUSH1 0x7 SHL DUP3 DUP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB LT PUSH1 0x6 SHL OR DUP3 DUP2 SHR PUSH4 0xFFFFFFFF LT PUSH1 0x5 SHL OR DUP3 DUP2 SHR PUSH2 0xFFFF LT PUSH1 0x4 SHL OR DUP3 DUP2 SHR PUSH1 0xFF LT PUSH1 0x3 SWAP1 DUP2 SHL SWAP1 SWAP2 OR DUP4 DUP2 SHR PUSH1 0xF LT PUSH1 0x2 SHL OR DUP4 DUP2 SHR SWAP1 SWAP2 LT PUSH1 0x1 SWAP1 DUP2 SHL SWAP1 SWAP2 OR DUP4 DUP2 SHR SWAP1 SWAP2 LT OR PUSH1 0x9F DUP2 DUP2 SUB DUP4 ADD SWAP4 SWAP1 SWAP4 SHL SWAP1 SWAP3 SHR PUSH13 0x465772B2BBBB5F824B15207A30 DUP2 ADD DUP2 MUL DUP3 SAR PUSH14 0x388EAA27412D5ACA026815D636E ADD DUP2 MUL DUP3 SAR PUSH14 0xDF99AC502031BF953EFF472FDCC ADD DUP2 MUL DUP3 SAR PUSH14 0x13CDFFB29D51D99322BDFF5F2211 ADD DUP2 MUL DUP3 SAR PUSH14 0xA0F742023DEF783A307A986912E ADD DUP2 MUL DUP3 SAR PUSH14 0x1920D8043CA89B5239253284E42 ADD DUP2 MUL DUP3 SAR PUSH13 0xB7A86D7375468FAC667A0A527 ADD PUSH13 0x29508E458543D8AA4DF2ABEE78 DUP3 ADD DUP3 MUL DUP4 SAR PUSH14 0x139601A2EFABE717E604CBB4894 ADD DUP3 MUL DUP4 SAR PUSH14 0x2247F7A7B6594320649AA03ABA1 ADD DUP3 MUL DUP4 SAR PUSH13 0x8C3F38E95A6B1FF2AB1C3B3436 NOT ADD DUP3 MUL DUP4 SAR PUSH14 0x2384773BDF1AC5676FACCED6090 NOT ADD DUP3 MUL SWAP1 SWAP3 SAR PUSH13 0xB9A025D814B29C212B8B1A07CD NOT ADD MUL PUSH1 0x1 PUSH13 0x504A838426634CDD8738F5435 PUSH1 0x61 SHL SUB NOT ADD SDIV PUSH18 0x1340DAA0D5F769DBA1915CEF59F0815A5506 MUL PUSH1 0x5F NOT SWAP2 SWAP1 SWAP2 ADD PUSH30 0x267A36C0C95B3975AB3EE5B203A7614A3F75373F047D803AE7B6687F2B3 MUL ADD PUSH30 0x57115E47018C7177EEBF7CD370A3356A1B7863008A5AE8028C72B8864284 ADD PUSH1 0xAE SAR SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x34F DUP2 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH2 0x360 DUP2 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 SWAP1 SWAP9 ADD MLOAD SWAP7 SWAP10 SWAP2 SWAP9 POP SWAP7 SWAP6 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH0 DUP4 SLT DUP1 ISZERO DUP4 DUP4 SGT AND DUP4 DUP4 SLT DUP3 AND OR ISZERO PUSH2 0x3AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0xC8B PUSH2 0x3F2 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x13E ADD MSTORE PUSH2 0x442 ADD MSTORE PUSH0 PUSH2 0x301 ADD MSTORE PUSH0 PUSH2 0x6C4 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1CE ADD MSTORE PUSH2 0x69D ADD MSTORE PUSH2 0xC8B PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE9CDBE3 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xAE9CDBE3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xC457FB37 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xDC38679C EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xDEC86DF1 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xF466D4AB EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x244EC3C8 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x6D9D33B7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x7BA7614F EQ PUSH2 0x160 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xACC JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x241 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2D5 DUP5 DUP5 PUSH2 0x414 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2E5 PUSH2 0x1B8 DUP4 DUP7 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2F2 DUP3 DUP8 PUSH2 0xBCC JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH8 0xDE0B6B3A7640000 DUP4 MUL SDIV PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH0 DUP2 DUP2 PUSH7 0x38D7EA4C68000 JUMPDEST DUP3 ISZERO PUSH2 0x40C JUMPI DUP1 DUP4 LT ISZERO PUSH2 0x3E2 JUMPI PUSH2 0x3CE DUP4 DUP4 PUSH2 0x3C4 PUSH2 0x259 JUMP JUMPDEST PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x3D8 SWAP1 DUP4 PUSH2 0xBB9 JUMP JUMPDEST SWAP2 POP PUSH0 SWAP3 POP PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x3EF DUP2 DUP4 PUSH2 0x3C4 PUSH2 0x259 JUMP JUMPDEST PUSH2 0x3F9 SWAP1 DUP4 PUSH2 0xBB9 JUMP JUMPDEST SWAP2 POP PUSH2 0x405 DUP2 DUP5 PUSH2 0xBEB JUMP JUMPDEST SWAP3 POP PUSH2 0x3A9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x41F DUP4 PUSH2 0x435 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x42C DUP3 DUP7 PUSH2 0xBCC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x482 PUSH2 0x47C PUSH2 0x467 PUSH32 0x0 TIMESTAMP PUSH2 0xBEB JUMP JUMPDEST PUSH3 0x15180 PUSH8 0xDE0B6B3A7640000 SWAP2 SWAP1 SWAP2 MUL DIV SWAP1 JUMP JUMPDEST DUP5 PUSH2 0x696 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x492 PUSH2 0x729 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506172616C6C656C206172726179732072657175697265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4F2 CALLVALUE PUSH2 0x39D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 CALLVALUE SWAP2 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x55F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DF JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x637 JUMPI PUSH0 PUSH2 0x2710 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5C5 JUMPI PUSH2 0x5C5 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0xBCC JUMP JUMPDEST SWAP1 POP PUSH2 0x607 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5F9 JUMPI PUSH2 0x5F9 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x751 JUMP JUMPDEST DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x619 JUMPI PUSH2 0x619 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x5A6 JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0x689 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x627073206D7573742061646420757020746F2031305F30303000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DF JUMP JUMPDEST POP POP PUSH1 0x1 PUSH0 SSTORE SWAP1 POP PUSH2 0x482 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x714 PUSH32 0x0 PUSH2 0x70F PUSH2 0x70A PUSH32 0x0 PUSH2 0x6F9 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 DUP11 ADD MUL PUSH2 0x2FE JUMP JUMPDEST DUP10 SUB PUSH8 0xDE0B6B3A7640000 SWAP2 MUL SDIV SWAP1 JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 DUP3 LT ISZERO PUSH2 0x40C JUMPI SWAP2 POP PUSH2 0x2F8 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH9 0x248CE36A70CB26B3E NOT DUP3 SGT PUSH2 0x7CF JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH9 0x755BF798B4A1BF1E5 DUP3 SLT PUSH2 0x816 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4558505F4F564552464C4F57 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DF JUMP JUMPDEST PUSH6 0x3782DACE9D9 PUSH1 0x4E DUP4 SWAP1 SHL SDIV SWAP2 POP PUSH0 PUSH1 0x60 PUSH12 0xB17217F7D1CF79ABC9E3B398 DUP5 DUP3 SHL SDIV PUSH1 0x1 PUSH1 0x5F SHL ADD SWAP1 SAR PUSH12 0xB17217F7D1CF79ABC9E3B398 DUP2 MUL SWAP1 SWAP4 SUB PUSH13 0x240C330E9FB2D9CBAF0FD5AAFB NOT DUP2 ADD DUP2 MUL PUSH1 0x60 SWAP1 DUP2 SAR PUSH14 0x277594991CFC85F6E2461837CD9 ADD DUP3 MUL DUP2 SAR PUSH14 0x1A521255E34F6A5061B25EF1C9C3 NOT ADD DUP3 MUL DUP2 SAR PUSH14 0xB1BBB201F443CF962F1A1D3DB4A5 ADD DUP3 MUL DUP2 SAR PUSH15 0x2C72388D9F74F51A9331FED693F14 NOT ADD DUP3 MUL DUP2 SAR PUSH15 0x5180BB14799AB47A8A8CB2A527D57 ADD PUSH14 0x2D16720577BD19BF614176FE9EA PUSH13 0x10FE68E7FD37D0007B713F7650 DUP5 ADD DUP5 MUL DUP4 SAR SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH14 0x1D3967ED30FC4F89C02BAB57081 NOT ADD MUL SWAP1 SWAP2 SAR PUSH15 0x587F503BB6EA29D25FCB740196450 ADD SWAP1 SWAP2 MUL PUSH14 0x360D7AEEA093263ECC6E0ECB2917 PUSH1 0x62 SHL ADD SDIV PUSH21 0x29D9DC38563C32E5C2F6DC192EE70EF65F9978AF3 MUL PUSH1 0xC3 SWAP4 SWAP1 SWAP4 SUB SWAP3 SWAP1 SWAP3 SHR SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 MUL DUP3 ISZERO DUP4 DUP3 SDIV DUP4 EQ OR PUSH0 NOT DUP5 LT PUSH1 0x1 PUSH1 0xFF SHL DUP5 SGT OR AND PUSH2 0x97C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x99E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9DA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP3 PUSH2 0x9C4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xA35 JUMPI PUSH2 0xA35 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA56 JUMPI PUSH2 0xA56 PUSH2 0x9F8 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA6F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xA84 PUSH2 0xA7F DUP4 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0xAA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xAC1 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xAAA JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xADE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB08 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xB18 PUSH2 0xA7F DUP4 PUSH2 0xA3D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0xB36 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xB5B JUMPI PUSH2 0xB4C DUP7 PUSH2 0x9C4 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xB3B JUMP JUMPDEST SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xB70 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7D DUP7 DUP3 DUP8 ADD PUSH2 0xA60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2F8 JUMPI PUSH2 0x2F8 PUSH2 0xBA5 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI PUSH2 0x2F8 PUSH2 0xBA5 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC1D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xC03 JUMP JUMPDEST POP PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2F8 JUMPI PUSH2 0x2F8 PUSH2 0xBA5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xE2 0xF6 AND DIV 0xCD 0x4D AND EXP 0xB8 SWAP10 SWAP7 PUSH29 0x69C423ACFE0C1139A27B238EB96D7F1A8C000864736F6C634300081600 CALLER ",
							"sourceMap": "536:5538:11:-:0;;;916:15;879:52;;1001:665;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1292:26:15;;;;1546:12:11;1560:18;1580:22;1546:12;1560:18;1345:32:15;1351:25;1560:18:11;1351:4:15;:25;:::i;:::-;1345:5;:32::i;:::-;1329:48;;;;1479:1;-1:-1:-1;1455:57:15;;;;-1:-1:-1;;;1455:57:15;;1321:2:16;1455:57:15;;;1303:21:16;1360:2;1340:18;;;1333:30;1399:29;1379:18;;;1372:57;1446:18;;1455:57:15;;;;;;;;;-1:-1:-1;;1257:26:13::1;::::0;-1:-1:-1;;1713:1:6;1917:7;:21;;;1614:20:11;;-1:-1:-1;;;;;1614:20:11;;::::1;-1:-1:-1::0;;;;;;1614:20:11;;::::1;;::::0;;;1645:5:::1;:14:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;536:5538:11;;-1:-1:-1;;536:5538:11;6856:3269:14;6895:8;6943:1;6939;:5;6931:27;;;;-1:-1:-1;;;6931:27:14;;1677:2:16;6931:27:14;;;1659:21:16;1716:1;1696:18;;;1689:29;-1:-1:-1;;;1734:18:16;;;1727:39;1783:18;;6931:27:14;1475:332:16;6931:27:14;-1:-1:-1;7852:2:14;-1:-1:-1;;;;;;;7307:1:14;7303:49;7406:9;;;-1:-1:-1;;;;;7383:33:14;7380:1;7376:41;7370:48;7464:9;;;7452:10;7449:25;7446:1;7442:33;7436:40;7518:9;;;7510:6;7507:21;7504:1;7500:29;7494:36;7570:9;;;7564:4;7561:19;7558:1;7554:27;;;7548:34;;;7621:9;;;7616:3;7613:18;7610:1;7606:26;7600:33;7672:9;;;7664:18;;;7661:1;7657:26;;;7651:33;;;7716:9;;;7708:18;;;7702:25;7878:3;:7;;;;;7864:22;;;;7907:17;;;8652:31;8648:35;;8699:5;;8698:13;;8715:32;8697:50;8763:5;;8762:13;;8779:33;8761:51;8828:5;;8827:13;;8844:33;8826:51;8893:5;;8892:13;;8909:33;8891:51;8958:5;;8957:13;;8974:32;8956:50;9022:5;;9021:13;;9038:30;9020:48;8085:31;8081:35;;8132:5;;8131:13;;8148:32;8130:50;8196:5;;8195:13;;8212:32;8194:50;8260:5;;8259:13;;-1:-1:-1;;8258:50:14;8324:5;;8323:13;;-1:-1:-1;;8322:50:14;8388:5;;8387:13;;;-1:-1:-1;;8386:50:14;8450:5;-1:-1:-1;;;;;;8450:46:14;9385:10;9739:43;9734:48;-1:-1:-1;;7848:6:14;;;;9838:71;:75;9833:80;9978:72;9973:77;10113:3;10107:9;;6856:3269::o;14:153:16:-;-1:-1:-1;;;;;111:31:16;;101:42;;91:70;;157:1;154;147:12;91:70;14:153;:::o;172:640::-;304:6;312;320;328;336;389:3;377:9;368:7;364:23;360:33;357:53;;;406:1;403;396:12;357:53;438:9;432:16;457:53;504:5;457:53;:::i;:::-;579:2;564:18;;558:25;529:5;;-1:-1:-1;592:55:16;558:25;592:55;:::i;:::-;713:2;698:18;;692:25;757:2;742:18;;736:25;801:3;786:19;;;780:26;172:640;;666:7;;-1:-1:-1;692:25:16;736;780:26;-1:-1:-1;172:640:16;-1:-1:-1;;;172:640:16:o;817:297::-;883:9;;;856:4;911:9;;939:10;;951:12;;;935:29;974:12;;;966:21;;932:56;929:179;;;1030:10;1025:3;1021:20;1018:1;1011:31;1065:4;1062:1;1055:15;1093:4;1090:1;1083:15;929:179;;817:297;;;;:::o;1475:332::-;536:5538:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UNSAFE_getOverestimateTokenAmount_3038": {
									"entryPoint": 1044,
									"id": 3038,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getTokenAmountForSinglePurchase_2953": {
									"entryPoint": 713,
									"id": 2953,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_2797": {
									"entryPoint": 1873,
									"id": 2797,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_982": {
									"entryPoint": null,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_974": {
									"entryPoint": 1833,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_2820": {
									"entryPoint": 817,
									"id": 2820,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyToken_2920": {
									"entryPoint": 1161,
									"id": 2920,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getTargetSaleTime_3167": {
									"entryPoint": 766,
									"id": 3167,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenAmountForMultiPurchase_3014": {
									"entryPoint": 925,
									"id": 3014,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenPrice_3060": {
									"entryPoint": 1077,
									"id": 3060,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getVRGDAPrice_3784": {
									"entryPoint": 1686,
									"id": 3784,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@startTime_2754": {
									"entryPoint": null,
									"id": 2754,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@targetPrice_3705": {
									"entryPoint": null,
									"id": 3705,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toDaysWadUnsafe_3190": {
									"entryPoint": null,
									"id": 3190,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toWadUnsafe_3180": {
									"entryPoint": null,
									"id": 3180,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_2750": {
									"entryPoint": null,
									"id": 2750,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_2807": {
									"entryPoint": 601,
									"id": 2807,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@unsafeWadDiv_3224": {
									"entryPoint": null,
									"id": 3224,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeWadMul_3212": {
									"entryPoint": null,
									"id": 3212,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@wadExp_3463": {
									"entryPoint": 1974,
									"id": 3463,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@wadMul_3235": {
									"entryPoint": 2396,
									"id": 3235,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_int256": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_NontransferableERC20_$2709__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_acc8e6b392ae5ea49a977f4a22bbeef20668f0599da3aa71343be83e7801bf6c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b47f3966672aae22628307f5eebf063e78b1aba7576c0235e641db21ef936037__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f364785e6e651288224d2623ec5f083c58c85325644496b3d02635790697d3c7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7885:16",
										"nodeType": "YulBlock",
										"src": "0:7885:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:16",
													"nodeType": "YulBlock",
													"src": "115:76:16",
													"statements": [
														{
															"nativeSrc": "125:26:16",
															"nodeType": "YulAssignment",
															"src": "125:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:16",
																		"nodeType": "YulLiteral",
																		"src": "148:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:16"
																},
																"nativeSrc": "133:18:16",
																"nodeType": "YulFunctionCall",
																"src": "133:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:16"
																},
																"nativeSrc": "160:25:16",
																"nodeType": "YulFunctionCall",
																"src": "160:25:16"
															},
															"nativeSrc": "160:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:16",
														"nodeType": "YulTypedName",
														"src": "84:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:16",
														"nodeType": "YulTypedName",
														"src": "95:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:16",
														"nodeType": "YulTypedName",
														"src": "106:4:16",
														"type": ""
													}
												],
												"src": "14:177:16"
											},
											{
												"body": {
													"nativeSrc": "283:161:16",
													"nodeType": "YulBlock",
													"src": "283:161:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "329:16:16",
																"nodeType": "YulBlock",
																"src": "329:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "338:1:16",
																					"nodeType": "YulLiteral",
																					"src": "338:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "341:1:16",
																					"nodeType": "YulLiteral",
																					"src": "341:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "331:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "331:6:16"
																			},
																			"nativeSrc": "331:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "331:12:16"
																		},
																		"nativeSrc": "331:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "331:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "304:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "304:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "313:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "313:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "300:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "300:3:16"
																		},
																		"nativeSrc": "300:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "300:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "325:2:16",
																		"nodeType": "YulLiteral",
																		"src": "325:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "296:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "296:3:16"
																},
																"nativeSrc": "296:32:16",
																"nodeType": "YulFunctionCall",
																"src": "296:32:16"
															},
															"nativeSrc": "293:52:16",
															"nodeType": "YulIf",
															"src": "293:52:16"
														},
														{
															"nativeSrc": "354:33:16",
															"nodeType": "YulAssignment",
															"src": "354:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "377:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "377:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "364:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "364:12:16"
																},
																"nativeSrc": "364:23:16",
																"nodeType": "YulFunctionCall",
																"src": "364:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "354:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "354:6:16"
																}
															]
														},
														{
															"nativeSrc": "396:42:16",
															"nodeType": "YulAssignment",
															"src": "396:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "423:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "423:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "434:2:16",
																				"nodeType": "YulLiteral",
																				"src": "434:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "419:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "419:3:16"
																		},
																		"nativeSrc": "419:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "419:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "406:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "406:12:16"
																},
																"nativeSrc": "406:32:16",
																"nodeType": "YulFunctionCall",
																"src": "406:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "396:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "396:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "196:248:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "241:9:16",
														"nodeType": "YulTypedName",
														"src": "241:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "252:7:16",
														"nodeType": "YulTypedName",
														"src": "252:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "264:6:16",
														"nodeType": "YulTypedName",
														"src": "264:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "272:6:16",
														"nodeType": "YulTypedName",
														"src": "272:6:16",
														"type": ""
													}
												],
												"src": "196:248:16"
											},
											{
												"body": {
													"nativeSrc": "518:110:16",
													"nodeType": "YulBlock",
													"src": "518:110:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "564:16:16",
																"nodeType": "YulBlock",
																"src": "564:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "573:1:16",
																					"nodeType": "YulLiteral",
																					"src": "573:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "576:1:16",
																					"nodeType": "YulLiteral",
																					"src": "576:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "566:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "566:6:16"
																			},
																			"nativeSrc": "566:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "566:12:16"
																		},
																		"nativeSrc": "566:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "566:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "539:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "539:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "548:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "548:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "535:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "535:3:16"
																		},
																		"nativeSrc": "535:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "535:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "560:2:16",
																		"nodeType": "YulLiteral",
																		"src": "560:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "531:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "531:3:16"
																},
																"nativeSrc": "531:32:16",
																"nodeType": "YulFunctionCall",
																"src": "531:32:16"
															},
															"nativeSrc": "528:52:16",
															"nodeType": "YulIf",
															"src": "528:52:16"
														},
														{
															"nativeSrc": "589:33:16",
															"nodeType": "YulAssignment",
															"src": "589:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "612:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "612:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "599:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:16"
																},
																"nativeSrc": "599:23:16",
																"nodeType": "YulFunctionCall",
																"src": "599:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "589:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256",
												"nativeSrc": "449:179:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "484:9:16",
														"nodeType": "YulTypedName",
														"src": "484:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "495:7:16",
														"nodeType": "YulTypedName",
														"src": "495:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "507:6:16",
														"nodeType": "YulTypedName",
														"src": "507:6:16",
														"type": ""
													}
												],
												"src": "449:179:16"
											},
											{
												"body": {
													"nativeSrc": "732:76:16",
													"nodeType": "YulBlock",
													"src": "732:76:16",
													"statements": [
														{
															"nativeSrc": "742:26:16",
															"nodeType": "YulAssignment",
															"src": "742:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "754:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "754:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "765:2:16",
																		"nodeType": "YulLiteral",
																		"src": "765:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "750:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "750:3:16"
																},
																"nativeSrc": "750:18:16",
																"nodeType": "YulFunctionCall",
																"src": "750:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "742:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "742:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "784:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "784:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "795:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "795:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "777:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "777:6:16"
																},
																"nativeSrc": "777:25:16",
																"nodeType": "YulFunctionCall",
																"src": "777:25:16"
															},
															"nativeSrc": "777:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "777:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "633:175:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "701:9:16",
														"nodeType": "YulTypedName",
														"src": "701:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "712:6:16",
														"nodeType": "YulTypedName",
														"src": "712:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "723:4:16",
														"nodeType": "YulTypedName",
														"src": "723:4:16",
														"type": ""
													}
												],
												"src": "633:175:16"
											},
											{
												"body": {
													"nativeSrc": "862:124:16",
													"nodeType": "YulBlock",
													"src": "862:124:16",
													"statements": [
														{
															"nativeSrc": "872:29:16",
															"nodeType": "YulAssignment",
															"src": "872:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "894:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "894:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "881:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "881:12:16"
																},
																"nativeSrc": "881:20:16",
																"nodeType": "YulFunctionCall",
																"src": "881:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "872:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "872:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "964:16:16",
																"nodeType": "YulBlock",
																"src": "964:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "973:1:16",
																					"nodeType": "YulLiteral",
																					"src": "973:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "976:1:16",
																					"nodeType": "YulLiteral",
																					"src": "976:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "966:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "966:6:16"
																			},
																			"nativeSrc": "966:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "966:12:16"
																		},
																		"nativeSrc": "966:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "966:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "923:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "923:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "934:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "934:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "949:3:16",
																										"nodeType": "YulLiteral",
																										"src": "949:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "954:1:16",
																										"nodeType": "YulLiteral",
																										"src": "954:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "945:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "945:3:16"
																								},
																								"nativeSrc": "945:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "945:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "958:1:16",
																								"nodeType": "YulLiteral",
																								"src": "958:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "941:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "941:3:16"
																						},
																						"nativeSrc": "941:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "941:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "930:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "930:3:16"
																				},
																				"nativeSrc": "930:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "930:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "920:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "920:2:16"
																		},
																		"nativeSrc": "920:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "920:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "913:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "913:6:16"
																},
																"nativeSrc": "913:50:16",
																"nodeType": "YulFunctionCall",
																"src": "913:50:16"
															},
															"nativeSrc": "910:70:16",
															"nodeType": "YulIf",
															"src": "910:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "813:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "841:6:16",
														"nodeType": "YulTypedName",
														"src": "841:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "852:5:16",
														"nodeType": "YulTypedName",
														"src": "852:5:16",
														"type": ""
													}
												],
												"src": "813:173:16"
											},
											{
												"body": {
													"nativeSrc": "1061:116:16",
													"nodeType": "YulBlock",
													"src": "1061:116:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1107:16:16",
																"nodeType": "YulBlock",
																"src": "1107:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1116:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1116:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1119:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1119:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1109:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1109:6:16"
																			},
																			"nativeSrc": "1109:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1109:12:16"
																		},
																		"nativeSrc": "1109:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1109:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1082:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1082:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1091:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1091:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1078:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1078:3:16"
																		},
																		"nativeSrc": "1078:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1103:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1103:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1074:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:16"
																},
																"nativeSrc": "1074:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1074:32:16"
															},
															"nativeSrc": "1071:52:16",
															"nodeType": "YulIf",
															"src": "1071:52:16"
														},
														{
															"nativeSrc": "1132:39:16",
															"nodeType": "YulAssignment",
															"src": "1132:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1161:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1161:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1142:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1142:18:16"
																},
																"nativeSrc": "1142:29:16",
																"nodeType": "YulFunctionCall",
																"src": "1142:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1132:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1132:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "991:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1027:9:16",
														"nodeType": "YulTypedName",
														"src": "1027:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1038:7:16",
														"nodeType": "YulTypedName",
														"src": "1038:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1050:6:16",
														"nodeType": "YulTypedName",
														"src": "1050:6:16",
														"type": ""
													}
												],
												"src": "991:186:16"
											},
											{
												"body": {
													"nativeSrc": "1252:110:16",
													"nodeType": "YulBlock",
													"src": "1252:110:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1298:16:16",
																"nodeType": "YulBlock",
																"src": "1298:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1307:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1310:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1310:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1300:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1300:6:16"
																			},
																			"nativeSrc": "1300:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1300:12:16"
																		},
																		"nativeSrc": "1300:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1300:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1273:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1273:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1282:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1282:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1269:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1269:3:16"
																		},
																		"nativeSrc": "1269:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1269:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1294:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1294:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1265:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:16"
																},
																"nativeSrc": "1265:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1265:32:16"
															},
															"nativeSrc": "1262:52:16",
															"nodeType": "YulIf",
															"src": "1262:52:16"
														},
														{
															"nativeSrc": "1323:33:16",
															"nodeType": "YulAssignment",
															"src": "1323:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1346:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1346:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1333:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1333:12:16"
																},
																"nativeSrc": "1333:23:16",
																"nodeType": "YulFunctionCall",
																"src": "1333:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1323:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1182:180:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1218:9:16",
														"nodeType": "YulTypedName",
														"src": "1218:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1229:7:16",
														"nodeType": "YulTypedName",
														"src": "1229:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1241:6:16",
														"nodeType": "YulTypedName",
														"src": "1241:6:16",
														"type": ""
													}
												],
												"src": "1182:180:16"
											},
											{
												"body": {
													"nativeSrc": "1399:95:16",
													"nodeType": "YulBlock",
													"src": "1399:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1416:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1416:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1423:3:16",
																				"nodeType": "YulLiteral",
																				"src": "1423:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1428:10:16",
																				"nodeType": "YulLiteral",
																				"src": "1428:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1419:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1419:3:16"
																		},
																		"nativeSrc": "1419:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1419:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1409:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1409:6:16"
																},
																"nativeSrc": "1409:31:16",
																"nodeType": "YulFunctionCall",
																"src": "1409:31:16"
															},
															"nativeSrc": "1409:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "1409:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1456:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1456:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1459:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1459:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1449:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:16"
																},
																"nativeSrc": "1449:15:16",
																"nodeType": "YulFunctionCall",
																"src": "1449:15:16"
															},
															"nativeSrc": "1449:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "1449:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1480:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1480:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1483:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1483:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1473:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1473:6:16"
																},
																"nativeSrc": "1473:15:16",
																"nodeType": "YulFunctionCall",
																"src": "1473:15:16"
															},
															"nativeSrc": "1473:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "1473:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1367:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1367:127:16"
											},
											{
												"body": {
													"nativeSrc": "1544:230:16",
													"nodeType": "YulBlock",
													"src": "1544:230:16",
													"statements": [
														{
															"nativeSrc": "1554:19:16",
															"nodeType": "YulAssignment",
															"src": "1554:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1564:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1564:5:16"
																},
																"nativeSrc": "1564:9:16",
																"nodeType": "YulFunctionCall",
																"src": "1564:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1554:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1554:6:16"
																}
															]
														},
														{
															"nativeSrc": "1582:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1582:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1604:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1604:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "1620:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "1620:4:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1626:2:16",
																						"nodeType": "YulLiteral",
																						"src": "1626:2:16",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1616:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1616:3:16"
																				},
																				"nativeSrc": "1616:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1616:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1635:2:16",
																						"nodeType": "YulLiteral",
																						"src": "1635:2:16",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1631:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1631:3:16"
																				},
																				"nativeSrc": "1631:7:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:7:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1612:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1612:3:16"
																		},
																		"nativeSrc": "1612:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1612:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1600:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:16"
																},
																"nativeSrc": "1600:40:16",
																"nodeType": "YulFunctionCall",
																"src": "1600:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1586:10:16",
																	"nodeType": "YulTypedName",
																	"src": "1586:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1715:22:16",
																"nodeType": "YulBlock",
																"src": "1715:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1717:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "1717:16:16"
																			},
																			"nativeSrc": "1717:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1717:18:16"
																		},
																		"nativeSrc": "1717:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1717:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1658:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "1658:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1670:18:16",
																				"nodeType": "YulLiteral",
																				"src": "1670:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1655:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1655:2:16"
																		},
																		"nativeSrc": "1655:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1655:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1694:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "1694:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1706:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1706:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1691:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1691:2:16"
																		},
																		"nativeSrc": "1691:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1691:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1652:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1652:2:16"
																},
																"nativeSrc": "1652:62:16",
																"nodeType": "YulFunctionCall",
																"src": "1652:62:16"
															},
															"nativeSrc": "1649:88:16",
															"nodeType": "YulIf",
															"src": "1649:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1753:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1753:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1757:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "1757:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1746:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:16"
																},
																"nativeSrc": "1746:22:16",
																"nodeType": "YulFunctionCall",
																"src": "1746:22:16"
															},
															"nativeSrc": "1746:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "1746:22:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1499:275:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1524:4:16",
														"nodeType": "YulTypedName",
														"src": "1524:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1533:6:16",
														"nodeType": "YulTypedName",
														"src": "1533:6:16",
														"type": ""
													}
												],
												"src": "1499:275:16"
											},
											{
												"body": {
													"nativeSrc": "1848:114:16",
													"nodeType": "YulBlock",
													"src": "1848:114:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1892:22:16",
																"nodeType": "YulBlock",
																"src": "1892:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1894:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "1894:16:16"
																			},
																			"nativeSrc": "1894:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1894:18:16"
																		},
																		"nativeSrc": "1894:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1864:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1864:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1872:18:16",
																		"nodeType": "YulLiteral",
																		"src": "1872:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1861:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1861:2:16"
																},
																"nativeSrc": "1861:30:16",
																"nodeType": "YulFunctionCall",
																"src": "1861:30:16"
															},
															"nativeSrc": "1858:56:16",
															"nodeType": "YulIf",
															"src": "1858:56:16"
														},
														{
															"nativeSrc": "1923:33:16",
															"nodeType": "YulAssignment",
															"src": "1923:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1939:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:16",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1942:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1942:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1935:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1935:3:16"
																		},
																		"nativeSrc": "1935:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1951:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1951:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1931:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1931:3:16"
																},
																"nativeSrc": "1931:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1931:25:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1923:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1923:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nativeSrc": "1779:183:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1828:6:16",
														"nodeType": "YulTypedName",
														"src": "1828:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1839:4:16",
														"nodeType": "YulTypedName",
														"src": "1839:4:16",
														"type": ""
													}
												],
												"src": "1779:183:16"
											},
											{
												"body": {
													"nativeSrc": "2031:604:16",
													"nodeType": "YulBlock",
													"src": "2031:604:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2080:16:16",
																"nodeType": "YulBlock",
																"src": "2080:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2089:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2089:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2092:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2092:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2082:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2082:6:16"
																			},
																			"nativeSrc": "2082:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2082:12:16"
																		},
																		"nativeSrc": "2082:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2082:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2059:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2059:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2067:4:16",
																						"nodeType": "YulLiteral",
																						"src": "2067:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2055:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2055:3:16"
																				},
																				"nativeSrc": "2055:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2055:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2074:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2074:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2051:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2051:3:16"
																		},
																		"nativeSrc": "2051:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2051:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2044:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2044:6:16"
																},
																"nativeSrc": "2044:35:16",
																"nodeType": "YulFunctionCall",
																"src": "2044:35:16"
															},
															"nativeSrc": "2041:55:16",
															"nodeType": "YulIf",
															"src": "2041:55:16"
														},
														{
															"nativeSrc": "2105:30:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2105:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2128:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2128:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2115:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2115:12:16"
																},
																"nativeSrc": "2115:20:16",
																"nodeType": "YulFunctionCall",
																"src": "2115:20:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2109:2:16",
																	"nodeType": "YulTypedName",
																	"src": "2109:2:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2144:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2144:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2154:4:16",
																"nodeType": "YulLiteral",
																"src": "2154:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2148:2:16",
																	"nodeType": "YulTypedName",
																	"src": "2148:2:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2167:71:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2167:71:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2234:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "2234:2:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "2194:39:16",
																			"nodeType": "YulIdentifier",
																			"src": "2194:39:16"
																		},
																		"nativeSrc": "2194:43:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2194:43:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2178:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "2178:15:16"
																},
																"nativeSrc": "2178:60:16",
																"nodeType": "YulFunctionCall",
																"src": "2178:60:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2171:3:16",
																	"nodeType": "YulTypedName",
																	"src": "2171:3:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2247:16:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2247:16:16",
															"value": {
																"name": "dst",
																"nativeSrc": "2260:3:16",
																"nodeType": "YulIdentifier",
																"src": "2260:3:16"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "2251:5:16",
																	"nodeType": "YulTypedName",
																	"src": "2251:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2279:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2279:3:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2284:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "2284:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2272:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:16"
																},
																"nativeSrc": "2272:15:16",
																"nodeType": "YulFunctionCall",
																"src": "2272:15:16"
															},
															"nativeSrc": "2272:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "2272:15:16"
														},
														{
															"nativeSrc": "2296:21:16",
															"nodeType": "YulAssignment",
															"src": "2296:21:16",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2307:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2307:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2312:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2312:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2303:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2303:3:16"
																},
																"nativeSrc": "2303:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2303:14:16"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2296:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:16"
																}
															]
														},
														{
															"nativeSrc": "2326:48:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2326:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2348:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2348:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2360:1:16",
																						"nodeType": "YulLiteral",
																						"src": "2360:1:16",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2363:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "2363:2:16"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2356:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2356:3:16"
																				},
																				"nativeSrc": "2356:10:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2356:10:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2344:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2344:3:16"
																		},
																		"nativeSrc": "2344:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2344:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2369:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2369:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2340:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2340:3:16"
																},
																"nativeSrc": "2340:34:16",
																"nodeType": "YulFunctionCall",
																"src": "2340:34:16"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2330:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2330:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2402:16:16",
																"nodeType": "YulBlock",
																"src": "2402:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2411:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2411:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2414:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2414:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2404:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2404:6:16"
																			},
																			"nativeSrc": "2404:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2404:12:16"
																		},
																		"nativeSrc": "2404:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2404:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2389:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2389:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2397:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2386:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2386:2:16"
																},
																"nativeSrc": "2386:15:16",
																"nodeType": "YulFunctionCall",
																"src": "2386:15:16"
															},
															"nativeSrc": "2383:35:16",
															"nodeType": "YulIf",
															"src": "2383:35:16"
														},
														{
															"nativeSrc": "2427:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2427:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2442:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2442:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2450:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2438:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2438:3:16"
																},
																"nativeSrc": "2438:17:16",
																"nodeType": "YulFunctionCall",
																"src": "2438:17:16"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "2431:3:16",
																	"nodeType": "YulTypedName",
																	"src": "2431:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2520:86:16",
																"nodeType": "YulBlock",
																"src": "2520:86:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2541:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2541:3:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "2559:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "2559:3:16"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "2546:12:16",
																						"nodeType": "YulIdentifier",
																						"src": "2546:12:16"
																					},
																					"nativeSrc": "2546:17:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2546:17:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2534:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2534:6:16"
																			},
																			"nativeSrc": "2534:30:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2534:30:16"
																		},
																		"nativeSrc": "2534:30:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2534:30:16"
																	},
																	{
																		"nativeSrc": "2577:19:16",
																		"nodeType": "YulAssignment",
																		"src": "2577:19:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2588:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2588:3:16"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "2593:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "2593:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2584:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2584:3:16"
																			},
																			"nativeSrc": "2584:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2584:12:16"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2577:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2577:3:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2475:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2475:3:16"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2480:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2472:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2472:2:16"
																},
																"nativeSrc": "2472:15:16",
																"nodeType": "YulFunctionCall",
																"src": "2472:15:16"
															},
															"nativeSrc": "2464:142:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2488:23:16",
																"nodeType": "YulBlock",
																"src": "2488:23:16",
																"statements": [
																	{
																		"nativeSrc": "2490:19:16",
																		"nodeType": "YulAssignment",
																		"src": "2490:19:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2501:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2501:3:16"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "2506:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "2506:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2497:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2497:3:16"
																			},
																			"nativeSrc": "2497:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2497:12:16"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2490:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2490:3:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2468:3:16",
																"nodeType": "YulBlock",
																"src": "2468:3:16",
																"statements": []
															},
															"src": "2464:142:16"
														},
														{
															"nativeSrc": "2615:14:16",
															"nodeType": "YulAssignment",
															"src": "2615:14:16",
															"value": {
																"name": "dst_1",
																"nativeSrc": "2624:5:16",
																"nodeType": "YulIdentifier",
																"src": "2624:5:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2615:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2615:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nativeSrc": "1967:668:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2005:6:16",
														"nodeType": "YulTypedName",
														"src": "2005:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2013:3:16",
														"nodeType": "YulTypedName",
														"src": "2013:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2021:5:16",
														"nodeType": "YulTypedName",
														"src": "2021:5:16",
														"type": ""
													}
												],
												"src": "1967:668:16"
											},
											{
												"body": {
													"nativeSrc": "2794:1060:16",
													"nodeType": "YulBlock",
													"src": "2794:1060:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2840:16:16",
																"nodeType": "YulBlock",
																"src": "2840:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2849:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2849:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2852:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2852:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2842:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2842:6:16"
																			},
																			"nativeSrc": "2842:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2842:12:16"
																		},
																		"nativeSrc": "2842:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2842:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2815:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2815:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2824:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2824:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2811:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2811:3:16"
																		},
																		"nativeSrc": "2811:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2811:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2836:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2807:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2807:3:16"
																},
																"nativeSrc": "2807:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2807:32:16"
															},
															"nativeSrc": "2804:52:16",
															"nodeType": "YulIf",
															"src": "2804:52:16"
														},
														{
															"nativeSrc": "2865:37:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2865:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2892:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2892:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2879:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2879:12:16"
																},
																"nativeSrc": "2879:23:16",
																"nodeType": "YulFunctionCall",
																"src": "2879:23:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2869:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2869:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2911:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2911:28:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2921:18:16",
																"nodeType": "YulLiteral",
																"src": "2921:18:16",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2915:2:16",
																	"nodeType": "YulTypedName",
																	"src": "2915:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2966:16:16",
																"nodeType": "YulBlock",
																"src": "2966:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2975:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2975:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2978:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2978:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2968:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2968:6:16"
																			},
																			"nativeSrc": "2968:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2968:12:16"
																		},
																		"nativeSrc": "2968:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2968:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2954:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2954:6:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2962:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "2962:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2951:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2951:2:16"
																},
																"nativeSrc": "2951:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2951:14:16"
															},
															"nativeSrc": "2948:34:16",
															"nodeType": "YulIf",
															"src": "2948:34:16"
														},
														{
															"nativeSrc": "2991:32:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2991:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3005:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3005:9:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3016:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3016:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3001:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3001:3:16"
																},
																"nativeSrc": "3001:22:16",
																"nodeType": "YulFunctionCall",
																"src": "3001:22:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2995:2:16",
																	"nodeType": "YulTypedName",
																	"src": "2995:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3071:16:16",
																"nodeType": "YulBlock",
																"src": "3071:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3080:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3080:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3083:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3083:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3073:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3073:6:16"
																			},
																			"nativeSrc": "3073:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3073:12:16"
																		},
																		"nativeSrc": "3073:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3073:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3050:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "3050:2:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3054:4:16",
																						"nodeType": "YulLiteral",
																						"src": "3054:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3046:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3046:3:16"
																				},
																				"nativeSrc": "3046:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3046:13:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3061:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3061:7:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3042:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3042:3:16"
																		},
																		"nativeSrc": "3042:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3042:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3035:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3035:6:16"
																},
																"nativeSrc": "3035:35:16",
																"nodeType": "YulFunctionCall",
																"src": "3035:35:16"
															},
															"nativeSrc": "3032:55:16",
															"nodeType": "YulIf",
															"src": "3032:55:16"
														},
														{
															"nativeSrc": "3096:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3096:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3119:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "3119:2:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3106:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3106:12:16"
																},
																"nativeSrc": "3106:16:16",
																"nodeType": "YulFunctionCall",
																"src": "3106:16:16"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3100:2:16",
																	"nodeType": "YulTypedName",
																	"src": "3100:2:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3131:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3131:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3141:4:16",
																"nodeType": "YulLiteral",
																"src": "3141:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "3135:2:16",
																	"nodeType": "YulTypedName",
																	"src": "3135:2:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3154:71:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3154:71:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "3221:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "3221:2:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "3181:39:16",
																			"nodeType": "YulIdentifier",
																			"src": "3181:39:16"
																		},
																		"nativeSrc": "3181:43:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3181:43:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3165:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "3165:15:16"
																},
																"nativeSrc": "3165:60:16",
																"nodeType": "YulFunctionCall",
																"src": "3165:60:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3158:3:16",
																	"nodeType": "YulTypedName",
																	"src": "3158:3:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3234:16:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3234:16:16",
															"value": {
																"name": "dst",
																"nativeSrc": "3247:3:16",
																"nodeType": "YulIdentifier",
																"src": "3247:3:16"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "3238:5:16",
																	"nodeType": "YulTypedName",
																	"src": "3238:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3266:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3266:3:16"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "3271:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "3271:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3259:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:16"
																},
																"nativeSrc": "3259:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3259:15:16"
															},
															"nativeSrc": "3259:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:16"
														},
														{
															"nativeSrc": "3283:19:16",
															"nodeType": "YulAssignment",
															"src": "3283:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3294:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3294:3:16"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "3299:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "3299:2:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3290:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3290:3:16"
																},
																"nativeSrc": "3290:12:16",
																"nodeType": "YulFunctionCall",
																"src": "3290:12:16"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "3283:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3283:3:16"
																}
															]
														},
														{
															"nativeSrc": "3311:42:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3311:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "3333:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "3333:2:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3341:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3341:1:16",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "3344:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "3344:2:16"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3337:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3337:3:16"
																				},
																				"nativeSrc": "3337:10:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3337:10:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3329:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3329:3:16"
																		},
																		"nativeSrc": "3329:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3329:19:16"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "3350:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "3350:2:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3325:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3325:3:16"
																},
																"nativeSrc": "3325:28:16",
																"nodeType": "YulFunctionCall",
																"src": "3325:28:16"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "3315:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3315:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3385:16:16",
																"nodeType": "YulBlock",
																"src": "3385:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3394:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3394:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3397:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3397:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3387:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3387:6:16"
																			},
																			"nativeSrc": "3387:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3387:12:16"
																		},
																		"nativeSrc": "3387:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3387:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3368:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3368:6:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3376:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "3376:7:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3365:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3365:2:16"
																},
																"nativeSrc": "3365:19:16",
																"nodeType": "YulFunctionCall",
																"src": "3365:19:16"
															},
															"nativeSrc": "3362:39:16",
															"nodeType": "YulIf",
															"src": "3362:39:16"
														},
														{
															"nativeSrc": "3410:22:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3410:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3425:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "3425:2:16"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "3429:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "3429:2:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3421:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:16"
																},
																"nativeSrc": "3421:11:16",
																"nodeType": "YulFunctionCall",
																"src": "3421:11:16"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "3414:3:16",
																	"nodeType": "YulTypedName",
																	"src": "3414:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3497:92:16",
																"nodeType": "YulBlock",
																"src": "3497:92:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3518:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3518:3:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "3542:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3542:3:16"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "3523:18:16",
																						"nodeType": "YulIdentifier",
																						"src": "3523:18:16"
																					},
																					"nativeSrc": "3523:23:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3523:23:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3511:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3511:6:16"
																			},
																			"nativeSrc": "3511:36:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3511:36:16"
																		},
																		"nativeSrc": "3511:36:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3511:36:16"
																	},
																	{
																		"nativeSrc": "3560:19:16",
																		"nodeType": "YulAssignment",
																		"src": "3560:19:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3571:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:16"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "3576:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "3576:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3567:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3567:3:16"
																			},
																			"nativeSrc": "3567:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3567:12:16"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "3560:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3560:3:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3452:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3452:3:16"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3457:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3457:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3449:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3449:2:16"
																},
																"nativeSrc": "3449:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3449:15:16"
															},
															"nativeSrc": "3441:148:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3465:23:16",
																"nodeType": "YulBlock",
																"src": "3465:23:16",
																"statements": [
																	{
																		"nativeSrc": "3467:19:16",
																		"nodeType": "YulAssignment",
																		"src": "3467:19:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3478:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3478:3:16"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "3483:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "3483:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3474:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3474:3:16"
																			},
																			"nativeSrc": "3474:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3474:12:16"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "3467:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3467:3:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3445:3:16",
																"nodeType": "YulBlock",
																"src": "3445:3:16",
																"statements": []
															},
															"src": "3441:148:16"
														},
														{
															"nativeSrc": "3598:15:16",
															"nodeType": "YulAssignment",
															"src": "3598:15:16",
															"value": {
																"name": "dst_1",
																"nativeSrc": "3608:5:16",
																"nodeType": "YulIdentifier",
																"src": "3608:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3598:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3598:6:16"
																}
															]
														},
														{
															"nativeSrc": "3622:48:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3622:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3655:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3655:9:16"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "3666:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "3666:2:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3651:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3651:3:16"
																		},
																		"nativeSrc": "3651:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3651:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3638:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3638:12:16"
																},
																"nativeSrc": "3638:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3638:32:16"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3626:8:16",
																	"nodeType": "YulTypedName",
																	"src": "3626:8:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3699:16:16",
																"nodeType": "YulBlock",
																"src": "3699:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3708:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3708:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3711:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3711:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3701:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3701:6:16"
																			},
																			"nativeSrc": "3701:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3701:12:16"
																		},
																		"nativeSrc": "3701:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3701:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3685:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "3685:8:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3695:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "3695:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3682:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3682:2:16"
																},
																"nativeSrc": "3682:16:16",
																"nodeType": "YulFunctionCall",
																"src": "3682:16:16"
															},
															"nativeSrc": "3679:36:16",
															"nodeType": "YulIf",
															"src": "3679:36:16"
														},
														{
															"nativeSrc": "3724:73:16",
															"nodeType": "YulAssignment",
															"src": "3724:73:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3767:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3767:9:16"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "3778:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "3778:8:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3763:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3763:3:16"
																		},
																		"nativeSrc": "3763:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3763:24:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3789:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "3789:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "3734:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "3734:28:16"
																},
																"nativeSrc": "3734:63:16",
																"nodeType": "YulFunctionCall",
																"src": "3734:63:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3724:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:16"
																}
															]
														},
														{
															"nativeSrc": "3806:42:16",
															"nodeType": "YulAssignment",
															"src": "3806:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3833:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3833:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3844:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3844:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3829:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3829:3:16"
																		},
																		"nativeSrc": "3829:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3829:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3816:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3816:12:16"
																},
																"nativeSrc": "3816:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3816:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3806:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3806:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256",
												"nativeSrc": "2640:1214:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2744:9:16",
														"nodeType": "YulTypedName",
														"src": "2744:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2755:7:16",
														"nodeType": "YulTypedName",
														"src": "2755:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2767:6:16",
														"nodeType": "YulTypedName",
														"src": "2767:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2775:6:16",
														"nodeType": "YulTypedName",
														"src": "2775:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2783:6:16",
														"nodeType": "YulTypedName",
														"src": "2783:6:16",
														"type": ""
													}
												],
												"src": "2640:1214:16"
											},
											{
												"body": {
													"nativeSrc": "3945:161:16",
													"nodeType": "YulBlock",
													"src": "3945:161:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3991:16:16",
																"nodeType": "YulBlock",
																"src": "3991:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4000:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4000:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4003:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4003:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3993:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3993:6:16"
																			},
																			"nativeSrc": "3993:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3993:12:16"
																		},
																		"nativeSrc": "3993:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3993:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3966:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3966:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3975:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3975:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3962:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:16"
																		},
																		"nativeSrc": "3962:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3987:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3987:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3958:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3958:3:16"
																},
																"nativeSrc": "3958:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3958:32:16"
															},
															"nativeSrc": "3955:52:16",
															"nodeType": "YulIf",
															"src": "3955:52:16"
														},
														{
															"nativeSrc": "4016:33:16",
															"nodeType": "YulAssignment",
															"src": "4016:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4039:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4039:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4026:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4026:12:16"
																},
																"nativeSrc": "4026:23:16",
																"nodeType": "YulFunctionCall",
																"src": "4026:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4016:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4016:6:16"
																}
															]
														},
														{
															"nativeSrc": "4058:42:16",
															"nodeType": "YulAssignment",
															"src": "4058:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4085:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4085:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4096:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4096:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4081:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:16"
																		},
																		"nativeSrc": "4081:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4081:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4068:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4068:12:16"
																},
																"nativeSrc": "4068:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4068:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4058:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4058:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_uint256",
												"nativeSrc": "3859:247:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3903:9:16",
														"nodeType": "YulTypedName",
														"src": "3903:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3914:7:16",
														"nodeType": "YulTypedName",
														"src": "3914:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3926:6:16",
														"nodeType": "YulTypedName",
														"src": "3926:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3934:6:16",
														"nodeType": "YulTypedName",
														"src": "3934:6:16",
														"type": ""
													}
												],
												"src": "3859:247:16"
											},
											{
												"body": {
													"nativeSrc": "4241:102:16",
													"nodeType": "YulBlock",
													"src": "4241:102:16",
													"statements": [
														{
															"nativeSrc": "4251:26:16",
															"nodeType": "YulAssignment",
															"src": "4251:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4263:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4263:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4274:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4274:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4259:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4259:3:16"
																},
																"nativeSrc": "4259:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4259:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4251:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4251:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4293:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4293:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4308:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4308:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4324:3:16",
																								"nodeType": "YulLiteral",
																								"src": "4324:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4329:1:16",
																								"nodeType": "YulLiteral",
																								"src": "4329:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4320:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "4320:3:16"
																						},
																						"nativeSrc": "4320:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "4320:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4333:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4333:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4316:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4316:3:16"
																				},
																				"nativeSrc": "4316:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4316:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4304:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4304:3:16"
																		},
																		"nativeSrc": "4304:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4304:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4286:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4286:6:16"
																},
																"nativeSrc": "4286:51:16",
																"nodeType": "YulFunctionCall",
																"src": "4286:51:16"
															},
															"nativeSrc": "4286:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "4286:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_NontransferableERC20_$2709__to_t_address__fromStack_reversed",
												"nativeSrc": "4111:232:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4210:9:16",
														"nodeType": "YulTypedName",
														"src": "4210:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4221:6:16",
														"nodeType": "YulTypedName",
														"src": "4221:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4232:4:16",
														"nodeType": "YulTypedName",
														"src": "4232:4:16",
														"type": ""
													}
												],
												"src": "4111:232:16"
											},
											{
												"body": {
													"nativeSrc": "4429:103:16",
													"nodeType": "YulBlock",
													"src": "4429:103:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4475:16:16",
																"nodeType": "YulBlock",
																"src": "4475:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4484:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4484:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4487:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4487:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4477:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4477:6:16"
																			},
																			"nativeSrc": "4477:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4477:12:16"
																		},
																		"nativeSrc": "4477:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4477:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4450:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4450:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4459:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4446:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4446:3:16"
																		},
																		"nativeSrc": "4446:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4446:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4471:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4442:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4442:3:16"
																},
																"nativeSrc": "4442:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4442:32:16"
															},
															"nativeSrc": "4439:52:16",
															"nodeType": "YulIf",
															"src": "4439:52:16"
														},
														{
															"nativeSrc": "4500:26:16",
															"nodeType": "YulAssignment",
															"src": "4500:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4516:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4516:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4510:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4510:5:16"
																},
																"nativeSrc": "4510:16:16",
																"nodeType": "YulFunctionCall",
																"src": "4510:16:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4500:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4500:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4348:184:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4395:9:16",
														"nodeType": "YulTypedName",
														"src": "4395:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4406:7:16",
														"nodeType": "YulTypedName",
														"src": "4406:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4418:6:16",
														"nodeType": "YulTypedName",
														"src": "4418:6:16",
														"type": ""
													}
												],
												"src": "4348:184:16"
											},
											{
												"body": {
													"nativeSrc": "4569:95:16",
													"nodeType": "YulBlock",
													"src": "4569:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4586:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4586:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4593:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4593:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4598:10:16",
																				"nodeType": "YulLiteral",
																				"src": "4598:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4589:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4589:3:16"
																		},
																		"nativeSrc": "4589:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4589:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4579:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4579:6:16"
																},
																"nativeSrc": "4579:31:16",
																"nodeType": "YulFunctionCall",
																"src": "4579:31:16"
															},
															"nativeSrc": "4579:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "4579:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4626:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4626:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4629:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4629:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4619:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4619:6:16"
																},
																"nativeSrc": "4619:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4619:15:16"
															},
															"nativeSrc": "4619:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "4619:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4650:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4650:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4653:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4643:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4643:6:16"
																},
																"nativeSrc": "4643:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4643:15:16"
															},
															"nativeSrc": "4643:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "4643:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4537:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4537:127:16"
											},
											{
												"body": {
													"nativeSrc": "4717:77:16",
													"nodeType": "YulBlock",
													"src": "4717:77:16",
													"statements": [
														{
															"nativeSrc": "4727:16:16",
															"nodeType": "YulAssignment",
															"src": "4727:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4738:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "4738:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4741:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "4741:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4734:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4734:3:16"
																},
																"nativeSrc": "4734:9:16",
																"nodeType": "YulFunctionCall",
																"src": "4734:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4727:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4727:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4766:22:16",
																"nodeType": "YulBlock",
																"src": "4766:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4768:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "4768:16:16"
																			},
																			"nativeSrc": "4768:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4768:18:16"
																		},
																		"nativeSrc": "4768:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4768:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4758:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "4758:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4761:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4761:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4755:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4755:2:16"
																},
																"nativeSrc": "4755:10:16",
																"nodeType": "YulFunctionCall",
																"src": "4755:10:16"
															},
															"nativeSrc": "4752:36:16",
															"nodeType": "YulIf",
															"src": "4752:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4669:125:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4700:1:16",
														"nodeType": "YulTypedName",
														"src": "4700:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4703:1:16",
														"nodeType": "YulTypedName",
														"src": "4703:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4709:3:16",
														"nodeType": "YulTypedName",
														"src": "4709:3:16",
														"type": ""
													}
												],
												"src": "4669:125:16"
											},
											{
												"body": {
													"nativeSrc": "4831:95:16",
													"nodeType": "YulBlock",
													"src": "4831:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4848:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4848:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4855:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4855:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4860:10:16",
																				"nodeType": "YulLiteral",
																				"src": "4860:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4851:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4851:3:16"
																		},
																		"nativeSrc": "4851:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4851:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4841:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:16"
																},
																"nativeSrc": "4841:31:16",
																"nodeType": "YulFunctionCall",
																"src": "4841:31:16"
															},
															"nativeSrc": "4841:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "4841:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4888:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4888:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4891:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4891:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4881:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4881:6:16"
																},
																"nativeSrc": "4881:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4881:15:16"
															},
															"nativeSrc": "4881:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "4881:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4912:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4912:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4915:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4915:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4905:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4905:6:16"
																},
																"nativeSrc": "4905:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4905:15:16"
															},
															"nativeSrc": "4905:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "4905:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4799:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4799:127:16"
											},
											{
												"body": {
													"nativeSrc": "4977:171:16",
													"nodeType": "YulBlock",
													"src": "4977:171:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5008:111:16",
																"nodeType": "YulBlock",
																"src": "5008:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5029:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5029:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5036:3:16",
																							"nodeType": "YulLiteral",
																							"src": "5036:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5041:10:16",
																							"nodeType": "YulLiteral",
																							"src": "5041:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5032:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "5032:3:16"
																					},
																					"nativeSrc": "5032:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5032:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5022:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5022:6:16"
																			},
																			"nativeSrc": "5022:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5022:31:16"
																		},
																		"nativeSrc": "5022:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5022:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5073:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5073:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5076:4:16",
																					"nodeType": "YulLiteral",
																					"src": "5076:4:16",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5066:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5066:6:16"
																			},
																			"nativeSrc": "5066:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5066:15:16"
																		},
																		"nativeSrc": "5066:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5066:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5101:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5104:4:16",
																					"nodeType": "YulLiteral",
																					"src": "5104:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5094:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:16"
																			},
																			"nativeSrc": "5094:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5094:15:16"
																		},
																		"nativeSrc": "5094:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4997:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "4997:1:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4990:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4990:6:16"
																},
																"nativeSrc": "4990:9:16",
																"nodeType": "YulFunctionCall",
																"src": "4990:9:16"
															},
															"nativeSrc": "4987:132:16",
															"nodeType": "YulIf",
															"src": "4987:132:16"
														},
														{
															"nativeSrc": "5128:14:16",
															"nodeType": "YulAssignment",
															"src": "5128:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5137:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5137:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5140:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5140:1:16"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5133:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5133:3:16"
																},
																"nativeSrc": "5133:9:16",
																"nodeType": "YulFunctionCall",
																"src": "5133:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5128:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "5128:1:16"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4931:217:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4962:1:16",
														"nodeType": "YulTypedName",
														"src": "4962:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4965:1:16",
														"nodeType": "YulTypedName",
														"src": "4965:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4971:1:16",
														"nodeType": "YulTypedName",
														"src": "4971:1:16",
														"type": ""
													}
												],
												"src": "4931:217:16"
											},
											{
												"body": {
													"nativeSrc": "5254:102:16",
													"nodeType": "YulBlock",
													"src": "5254:102:16",
													"statements": [
														{
															"nativeSrc": "5264:26:16",
															"nodeType": "YulAssignment",
															"src": "5264:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5276:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5276:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5287:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5287:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5272:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5272:3:16"
																},
																"nativeSrc": "5272:18:16",
																"nodeType": "YulFunctionCall",
																"src": "5272:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5264:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5264:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5306:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5306:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5321:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5321:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5337:3:16",
																								"nodeType": "YulLiteral",
																								"src": "5337:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5342:1:16",
																								"nodeType": "YulLiteral",
																								"src": "5342:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5333:3:16"
																						},
																						"nativeSrc": "5333:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5333:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5346:1:16",
																						"nodeType": "YulLiteral",
																						"src": "5346:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5329:3:16"
																				},
																				"nativeSrc": "5329:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5329:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5317:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5317:3:16"
																		},
																		"nativeSrc": "5317:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5317:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5299:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5299:6:16"
																},
																"nativeSrc": "5299:51:16",
																"nodeType": "YulFunctionCall",
																"src": "5299:51:16"
															},
															"nativeSrc": "5299:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "5299:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5153:203:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5223:9:16",
														"nodeType": "YulTypedName",
														"src": "5223:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5234:6:16",
														"nodeType": "YulTypedName",
														"src": "5234:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5245:4:16",
														"nodeType": "YulTypedName",
														"src": "5245:4:16",
														"type": ""
													}
												],
												"src": "5153:203:16"
											},
											{
												"body": {
													"nativeSrc": "5410:79:16",
													"nodeType": "YulBlock",
													"src": "5410:79:16",
													"statements": [
														{
															"nativeSrc": "5420:17:16",
															"nodeType": "YulAssignment",
															"src": "5420:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5432:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5432:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5435:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5435:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5428:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:16"
																},
																"nativeSrc": "5428:9:16",
																"nodeType": "YulFunctionCall",
																"src": "5428:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5420:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5461:22:16",
																"nodeType": "YulBlock",
																"src": "5461:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5463:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5463:16:16"
																			},
																			"nativeSrc": "5463:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5463:18:16"
																		},
																		"nativeSrc": "5463:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5463:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5452:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5452:4:16"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5458:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5458:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5449:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5449:2:16"
																},
																"nativeSrc": "5449:11:16",
																"nodeType": "YulFunctionCall",
																"src": "5449:11:16"
															},
															"nativeSrc": "5446:37:16",
															"nodeType": "YulIf",
															"src": "5446:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5361:128:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5392:1:16",
														"nodeType": "YulTypedName",
														"src": "5392:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5395:1:16",
														"nodeType": "YulTypedName",
														"src": "5395:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5401:4:16",
														"nodeType": "YulTypedName",
														"src": "5401:4:16",
														"type": ""
													}
												],
												"src": "5361:128:16"
											},
											{
												"body": {
													"nativeSrc": "5668:174:16",
													"nodeType": "YulBlock",
													"src": "5668:174:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5685:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5685:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5696:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5696:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5678:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5678:6:16"
																},
																"nativeSrc": "5678:21:16",
																"nodeType": "YulFunctionCall",
																"src": "5678:21:16"
															},
															"nativeSrc": "5678:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "5678:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5719:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5719:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5730:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5730:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5715:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5715:3:16"
																		},
																		"nativeSrc": "5715:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5715:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5735:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5735:2:16",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5708:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5708:6:16"
																},
																"nativeSrc": "5708:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5708:30:16"
															},
															"nativeSrc": "5708:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "5708:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5758:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5758:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5769:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5769:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5754:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5754:3:16"
																		},
																		"nativeSrc": "5754:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5754:18:16"
																	},
																	{
																		"hexValue": "506172616c6c656c20617272617973207265717569726564",
																		"kind": "string",
																		"nativeSrc": "5774:26:16",
																		"nodeType": "YulLiteral",
																		"src": "5774:26:16",
																		"type": "",
																		"value": "Parallel arrays required"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5747:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:16"
																},
																"nativeSrc": "5747:54:16",
																"nodeType": "YulFunctionCall",
																"src": "5747:54:16"
															},
															"nativeSrc": "5747:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "5747:54:16"
														},
														{
															"nativeSrc": "5810:26:16",
															"nodeType": "YulAssignment",
															"src": "5810:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5822:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5822:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5833:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5833:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5818:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:16"
																},
																"nativeSrc": "5818:18:16",
																"nodeType": "YulFunctionCall",
																"src": "5818:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5810:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5810:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b47f3966672aae22628307f5eebf063e78b1aba7576c0235e641db21ef936037__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5494:348:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5645:9:16",
														"nodeType": "YulTypedName",
														"src": "5645:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5659:4:16",
														"nodeType": "YulTypedName",
														"src": "5659:4:16",
														"type": ""
													}
												],
												"src": "5494:348:16"
											},
											{
												"body": {
													"nativeSrc": "5984:275:16",
													"nodeType": "YulBlock",
													"src": "5984:275:16",
													"statements": [
														{
															"nativeSrc": "5994:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5994:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6014:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6014:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6008:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6008:5:16"
																},
																"nativeSrc": "6008:13:16",
																"nodeType": "YulFunctionCall",
																"src": "6008:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5998:6:16",
																	"nodeType": "YulTypedName",
																	"src": "5998:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6030:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6030:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "6039:1:16",
																"nodeType": "YulLiteral",
																"src": "6039:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6034:1:16",
																	"nodeType": "YulTypedName",
																	"src": "6034:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6101:77:16",
																"nodeType": "YulBlock",
																"src": "6101:77:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "6126:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6126:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6131:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "6131:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6122:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "6122:3:16"
																					},
																					"nativeSrc": "6122:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6122:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "6149:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "6149:6:16"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "6157:1:16",
																											"nodeType": "YulIdentifier",
																											"src": "6157:1:16"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "6145:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "6145:3:16"
																									},
																									"nativeSrc": "6145:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "6145:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6161:4:16",
																									"nodeType": "YulLiteral",
																									"src": "6161:4:16",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6141:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "6141:3:16"
																							},
																							"nativeSrc": "6141:25:16",
																							"nodeType": "YulFunctionCall",
																							"src": "6141:25:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6135:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6135:5:16"
																					},
																					"nativeSrc": "6135:32:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6135:32:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6115:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6115:6:16"
																			},
																			"nativeSrc": "6115:53:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6115:53:16"
																		},
																		"nativeSrc": "6115:53:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6115:53:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6060:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "6060:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6063:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6063:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6057:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6057:2:16"
																},
																"nativeSrc": "6057:13:16",
																"nodeType": "YulFunctionCall",
																"src": "6057:13:16"
															},
															"nativeSrc": "6049:129:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6071:21:16",
																"nodeType": "YulBlock",
																"src": "6071:21:16",
																"statements": [
																	{
																		"nativeSrc": "6073:17:16",
																		"nodeType": "YulAssignment",
																		"src": "6073:17:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6082:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "6082:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6085:4:16",
																					"nodeType": "YulLiteral",
																					"src": "6085:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6078:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6078:3:16"
																			},
																			"nativeSrc": "6078:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6078:12:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6073:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "6073:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6053:3:16",
																"nodeType": "YulBlock",
																"src": "6053:3:16",
																"statements": []
															},
															"src": "6049:129:16"
														},
														{
															"nativeSrc": "6187:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6187:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6201:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6201:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6206:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6206:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6197:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6197:3:16"
																},
																"nativeSrc": "6197:16:16",
																"nodeType": "YulFunctionCall",
																"src": "6197:16:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6191:2:16",
																	"nodeType": "YulTypedName",
																	"src": "6191:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6229:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "6229:2:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6233:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6233:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6222:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6222:6:16"
																},
																"nativeSrc": "6222:13:16",
																"nodeType": "YulFunctionCall",
																"src": "6222:13:16"
															},
															"nativeSrc": "6222:13:16",
															"nodeType": "YulExpressionStatement",
															"src": "6222:13:16"
														},
														{
															"nativeSrc": "6244:9:16",
															"nodeType": "YulAssignment",
															"src": "6244:9:16",
															"value": {
																"name": "_1",
																"nativeSrc": "6251:2:16",
																"nodeType": "YulIdentifier",
																"src": "6251:2:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6244:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6244:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5847:412:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5960:3:16",
														"nodeType": "YulTypedName",
														"src": "5960:3:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5965:6:16",
														"nodeType": "YulTypedName",
														"src": "5965:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5976:3:16",
														"nodeType": "YulTypedName",
														"src": "5976:3:16",
														"type": ""
													}
												],
												"src": "5847:412:16"
											},
											{
												"body": {
													"nativeSrc": "6438:166:16",
													"nodeType": "YulBlock",
													"src": "6438:166:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6455:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6455:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6466:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6466:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6448:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6448:6:16"
																},
																"nativeSrc": "6448:21:16",
																"nodeType": "YulFunctionCall",
																"src": "6448:21:16"
															},
															"nativeSrc": "6448:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "6448:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6489:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6489:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6500:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6500:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6485:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6485:3:16"
																		},
																		"nativeSrc": "6485:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6485:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6505:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6505:2:16",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6478:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6478:6:16"
																},
																"nativeSrc": "6478:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6478:30:16"
															},
															"nativeSrc": "6478:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "6478:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6528:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6528:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6539:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6539:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6524:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6524:3:16"
																		},
																		"nativeSrc": "6524:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6524:18:16"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65642e",
																		"kind": "string",
																		"nativeSrc": "6544:18:16",
																		"nodeType": "YulLiteral",
																		"src": "6544:18:16",
																		"type": "",
																		"value": "Transfer failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6517:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6517:6:16"
																},
																"nativeSrc": "6517:46:16",
																"nodeType": "YulFunctionCall",
																"src": "6517:46:16"
															},
															"nativeSrc": "6517:46:16",
															"nodeType": "YulExpressionStatement",
															"src": "6517:46:16"
														},
														{
															"nativeSrc": "6572:26:16",
															"nodeType": "YulAssignment",
															"src": "6572:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6584:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6584:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6595:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6595:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6580:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6580:3:16"
																},
																"nativeSrc": "6580:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6580:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6572:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6572:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6264:340:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6415:9:16",
														"nodeType": "YulTypedName",
														"src": "6415:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6429:4:16",
														"nodeType": "YulTypedName",
														"src": "6429:4:16",
														"type": ""
													}
												],
												"src": "6264:340:16"
											},
											{
												"body": {
													"nativeSrc": "6641:95:16",
													"nodeType": "YulBlock",
													"src": "6641:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6658:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6658:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6665:3:16",
																				"nodeType": "YulLiteral",
																				"src": "6665:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6670:10:16",
																				"nodeType": "YulLiteral",
																				"src": "6670:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6661:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:16"
																		},
																		"nativeSrc": "6661:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6651:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6651:6:16"
																},
																"nativeSrc": "6651:31:16",
																"nodeType": "YulFunctionCall",
																"src": "6651:31:16"
															},
															"nativeSrc": "6651:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "6651:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6698:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6698:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6701:4:16",
																		"nodeType": "YulLiteral",
																		"src": "6701:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6691:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6691:6:16"
																},
																"nativeSrc": "6691:15:16",
																"nodeType": "YulFunctionCall",
																"src": "6691:15:16"
															},
															"nativeSrc": "6691:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "6691:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6722:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6722:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6725:4:16",
																		"nodeType": "YulLiteral",
																		"src": "6725:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6715:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6715:6:16"
																},
																"nativeSrc": "6715:15:16",
																"nodeType": "YulFunctionCall",
																"src": "6715:15:16"
															},
															"nativeSrc": "6715:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "6715:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6609:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "6609:127:16"
											},
											{
												"body": {
													"nativeSrc": "6793:116:16",
													"nodeType": "YulBlock",
													"src": "6793:116:16",
													"statements": [
														{
															"nativeSrc": "6803:20:16",
															"nodeType": "YulAssignment",
															"src": "6803:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6818:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "6818:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6821:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "6821:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6814:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6814:3:16"
																},
																"nativeSrc": "6814:9:16",
																"nodeType": "YulFunctionCall",
																"src": "6814:9:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6803:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "6803:7:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6881:22:16",
																"nodeType": "YulBlock",
																"src": "6881:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6883:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "6883:16:16"
																			},
																			"nativeSrc": "6883:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6883:18:16"
																		},
																		"nativeSrc": "6883:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6883:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6852:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "6852:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6845:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "6845:6:16"
																				},
																				"nativeSrc": "6845:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6845:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6859:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "6859:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6866:7:16",
																								"nodeType": "YulIdentifier",
																								"src": "6866:7:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6875:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "6875:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6862:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6862:3:16"
																						},
																						"nativeSrc": "6862:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6862:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6856:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "6856:2:16"
																				},
																				"nativeSrc": "6856:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6856:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6842:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "6842:2:16"
																		},
																		"nativeSrc": "6842:37:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6842:37:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6835:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6835:6:16"
																},
																"nativeSrc": "6835:45:16",
																"nodeType": "YulFunctionCall",
																"src": "6835:45:16"
															},
															"nativeSrc": "6832:71:16",
															"nodeType": "YulIf",
															"src": "6832:71:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6741:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6772:1:16",
														"nodeType": "YulTypedName",
														"src": "6772:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6775:1:16",
														"nodeType": "YulTypedName",
														"src": "6775:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6781:7:16",
														"nodeType": "YulTypedName",
														"src": "6781:7:16",
														"type": ""
													}
												],
												"src": "6741:168:16"
											},
											{
												"body": {
													"nativeSrc": "7088:175:16",
													"nodeType": "YulBlock",
													"src": "7088:175:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7105:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7105:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7116:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7116:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7098:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7098:6:16"
																},
																"nativeSrc": "7098:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7098:21:16"
															},
															"nativeSrc": "7098:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "7098:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7139:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7139:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7150:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7150:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7135:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7135:3:16"
																		},
																		"nativeSrc": "7135:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7135:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7155:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7155:2:16",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7128:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7128:6:16"
																},
																"nativeSrc": "7128:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7128:30:16"
															},
															"nativeSrc": "7128:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "7128:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7178:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7178:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7189:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7189:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7174:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7174:3:16"
																		},
																		"nativeSrc": "7174:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7174:18:16"
																	},
																	{
																		"hexValue": "627073206d7573742061646420757020746f2031305f303030",
																		"kind": "string",
																		"nativeSrc": "7194:27:16",
																		"nodeType": "YulLiteral",
																		"src": "7194:27:16",
																		"type": "",
																		"value": "bps must add up to 10_000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7167:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7167:6:16"
																},
																"nativeSrc": "7167:55:16",
																"nodeType": "YulFunctionCall",
																"src": "7167:55:16"
															},
															"nativeSrc": "7167:55:16",
															"nodeType": "YulExpressionStatement",
															"src": "7167:55:16"
														},
														{
															"nativeSrc": "7231:26:16",
															"nodeType": "YulAssignment",
															"src": "7231:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7243:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7243:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7254:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7254:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7239:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7239:3:16"
																},
																"nativeSrc": "7239:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7239:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7231:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7231:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_acc8e6b392ae5ea49a977f4a22bbeef20668f0599da3aa71343be83e7801bf6c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6914:349:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7065:9:16",
														"nodeType": "YulTypedName",
														"src": "7065:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7079:4:16",
														"nodeType": "YulTypedName",
														"src": "7079:4:16",
														"type": ""
													}
												],
												"src": "6914:349:16"
											},
											{
												"body": {
													"nativeSrc": "7397:145:16",
													"nodeType": "YulBlock",
													"src": "7397:145:16",
													"statements": [
														{
															"nativeSrc": "7407:26:16",
															"nodeType": "YulAssignment",
															"src": "7407:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7419:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7419:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7430:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7430:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7415:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7415:3:16"
																},
																"nativeSrc": "7415:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7415:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7407:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7407:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7449:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7449:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7464:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7464:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7480:3:16",
																								"nodeType": "YulLiteral",
																								"src": "7480:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7485:1:16",
																								"nodeType": "YulLiteral",
																								"src": "7485:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7476:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7476:3:16"
																						},
																						"nativeSrc": "7476:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7476:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7489:1:16",
																						"nodeType": "YulLiteral",
																						"src": "7489:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7472:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7472:3:16"
																				},
																				"nativeSrc": "7472:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7472:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7460:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7460:3:16"
																		},
																		"nativeSrc": "7460:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7442:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7442:6:16"
																},
																"nativeSrc": "7442:51:16",
																"nodeType": "YulFunctionCall",
																"src": "7442:51:16"
															},
															"nativeSrc": "7442:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "7442:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7513:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7513:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7524:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7524:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7509:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7509:3:16"
																		},
																		"nativeSrc": "7509:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7509:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7529:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7529:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7502:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7502:6:16"
																},
																"nativeSrc": "7502:34:16",
																"nodeType": "YulFunctionCall",
																"src": "7502:34:16"
															},
															"nativeSrc": "7502:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "7502:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7268:274:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7358:9:16",
														"nodeType": "YulTypedName",
														"src": "7358:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7369:6:16",
														"nodeType": "YulTypedName",
														"src": "7369:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7377:6:16",
														"nodeType": "YulTypedName",
														"src": "7377:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7388:4:16",
														"nodeType": "YulTypedName",
														"src": "7388:4:16",
														"type": ""
													}
												],
												"src": "7268:274:16"
											},
											{
												"body": {
													"nativeSrc": "7721:162:16",
													"nodeType": "YulBlock",
													"src": "7721:162:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7738:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7738:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7749:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7749:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7731:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7731:6:16"
																},
																"nativeSrc": "7731:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7731:21:16"
															},
															"nativeSrc": "7731:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "7731:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7772:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7772:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7783:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7783:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7768:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7768:3:16"
																		},
																		"nativeSrc": "7768:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7768:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7788:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7788:2:16",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7761:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7761:6:16"
																},
																"nativeSrc": "7761:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7761:30:16"
															},
															"nativeSrc": "7761:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "7761:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7811:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7811:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7822:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7822:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7807:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7807:3:16"
																		},
																		"nativeSrc": "7807:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7807:18:16"
																	},
																	{
																		"hexValue": "4558505f4f564552464c4f57",
																		"kind": "string",
																		"nativeSrc": "7827:14:16",
																		"nodeType": "YulLiteral",
																		"src": "7827:14:16",
																		"type": "",
																		"value": "EXP_OVERFLOW"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7800:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7800:6:16"
																},
																"nativeSrc": "7800:42:16",
																"nodeType": "YulFunctionCall",
																"src": "7800:42:16"
															},
															"nativeSrc": "7800:42:16",
															"nodeType": "YulExpressionStatement",
															"src": "7800:42:16"
														},
														{
															"nativeSrc": "7851:26:16",
															"nodeType": "YulAssignment",
															"src": "7851:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7863:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7863:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7874:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7874:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7859:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7859:3:16"
																},
																"nativeSrc": "7859:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7859:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7851:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7851:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f364785e6e651288224d2623ec5f083c58c85325644496b3d02635790697d3c7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7547:336:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7698:9:16",
														"nodeType": "YulTypedName",
														"src": "7698:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7712:4:16",
														"nodeType": "YulTypedName",
														"src": "7712:4:16",
														"type": ""
													}
												],
												"src": "7547:336:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_int256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_NontransferableERC20_$2709__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_b47f3966672aae22628307f5eebf063e78b1aba7576c0235e641db21ef936037__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Parallel arrays required\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Transfer failed.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_acc8e6b392ae5ea49a977f4a22bbeef20668f0599da3aa71343be83e7801bf6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"bps must add up to 10_000\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_f364785e6e651288224d2623ec5f083c58c85325644496b3d02635790697d3c7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"EXP_OVERFLOW\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2754": [
									{
										"length": 32,
										"start": 318
									},
									{
										"length": 32,
										"start": 1090
									}
								],
								"3133": [
									{
										"length": 32,
										"start": 769
									}
								],
								"3705": [
									{
										"length": 32,
										"start": 462
									},
									{
										"length": 32,
										"start": 1693
									}
								],
								"3708": [
									{
										"length": 32,
										"start": 1732
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100a5575f3560e01c8063ae9cdbe311610062578063ae9cdbe31461017f578063c457fb371461019e578063dc38679c146101bd578063dec86df1146101f0578063f466d4ab14610203578063fc0c546a14610222575f80fd5b806318160ddd146100a9578063244ec3c8146100d05780636d9d33b7146100ef57806370a082311461010e57806378e979251461012d5780637ba7614f14610160575b5f80fd5b3480156100b4575f80fd5b506100bd610259565b6040519081526020015b60405180910390f35b3480156100db575f80fd5b506100bd6100ea36600461098d565b6102c9565b3480156100fa575f80fd5b506100bd6101093660046109ad565b6102fe565b348015610119575f80fd5b506100bd6101283660046109df565b610331565b348015610138575f80fd5b506100bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561016b575f80fd5b506100bd61017a3660046109ad565b61039d565b34801561018a575f80fd5b506100bd61019936600461098d565b610414565b3480156101a9575f80fd5b506100bd6101b83660046109ad565b610435565b3480156101c8575f80fd5b506100bd7f000000000000000000000000000000000000000000000000000000000000000081565b6100bd6101fe366004610acc565b610489565b34801561020e575f80fd5b506100bd61021d36600461098d565b610696565b34801561022d575f80fd5b50600254610241906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b600254604080516318160ddd60e01b815290515f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156102a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c49190610b8e565b905090565b5f806102d58484610414565b90505f6102e56101b88386610bb9565b90505f6102f28287610bcc565b93505050505b92915050565b5f7f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a76400008302056102f8565b6002546040516370a0823160e01b81526001600160a01b0383811660048301525f9216906370a0823190602401602060405180830381865afa158015610379573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102f89190610b8e565b5f818166038d7ea4c680005b821561040c57808310156103e2576103ce83836103c4610259565b6100ea9190610bb9565b6103d89083610bb9565b91505f92506103a9565b6103ef81836103c4610259565b6103f99083610bb9565b91506104058184610beb565b92506103a9565b509392505050565b5f8061041f83610435565b90505f61042c8286610bcc565b95945050505050565b5f8061048261047c6104677f000000000000000000000000000000000000000000000000000000000000000042610beb565b62015180670de0b6b3a7640000919091020490565b84610696565b9392505050565b5f610492610729565b82518451146104e85760405162461bcd60e51b815260206004820152601860248201527f506172616c6c656c20617272617973207265717569726564000000000000000060448201526064015b60405180910390fd5b5f6104f23461039d565b600154604080515f80825260208201928390529394506001600160a01b039092169134916105209190610bfe565b5f6040518083038185875af1925050503d805f811461055a576040519150601f19603f3d011682016040523d82523d5f602084013e61055f565b606091505b50509050806105a35760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b60448201526064016104df565b5f805b8751811015610637575f6127108883815181106105c5576105c5610c2a565b6020026020010151866105d89190610c3e565b6105e29190610bcc565b90506106078983815181106105f9576105f9610c2a565b602002602001015182610751565b87828151811061061957610619610c2a565b60200260200101518361062c9190610bb9565b9250506001016105a6565b5080612710146106895760405162461bcd60e51b815260206004820152601960248201527f627073206d7573742061646420757020746f2031305f3030300000000000000060448201526064016104df565b505060015f559050610482565b5f806107147f000000000000000000000000000000000000000000000000000000000000000061070f61070a7f00000000000000000000000000000000000000000000000000000000000000006106f9670de0b6b3a764000060018a01026102fe565b8903670de0b6b3a764000091020590565b6107b6565b61095c565b905060018082101561040c5791506102f89050565b60025f540361074b57604051633ee5aeb560e01b815260040160405180910390fd5b60025f55565b6002546040516340c10f1960e01b81526001600160a01b03848116600483015260248201849052909116906340c10f19906044015f604051808303815f87803b15801561079c575f80fd5b505af11580156107ae573d5f803e3d5ffd5b505050505050565b5f680248ce36a70cb26b3e1982136107cf57505f919050565b680755bf798b4a1bf1e582126108165760405162461bcd60e51b815260206004820152600c60248201526b4558505f4f564552464c4f5760a01b60448201526064016104df565b6503782dace9d9604e83901b0591505f60606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b39881029093036c240c330e9fb2d9cbaf0fd5aafb1981018102606090811d6d0277594991cfc85f6e2461837cd9018202811d6d1a521255e34f6a5061b25ef1c9c319018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d6e02c72388d9f74f51a9331fed693f1419018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084016d01d3967ed30fc4f89c02bab5708119010290911d6e0587f503bb6ea29d25fcb740196450019091026d360d7aeea093263ecc6e0ecb291760621b010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b81810282158382058314175f198410600160ff1b8413171661097c575f80fd5b670de0b6b3a7640000900592915050565b5f806040838503121561099e575f80fd5b50508035926020909101359150565b5f602082840312156109bd575f80fd5b5035919050565b80356001600160a01b03811681146109da575f80fd5b919050565b5f602082840312156109ef575f80fd5b610482826109c4565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a3557610a356109f8565b604052919050565b5f67ffffffffffffffff821115610a5657610a566109f8565b5060051b60200190565b5f82601f830112610a6f575f80fd5b81356020610a84610a7f83610a3d565b610a0c565b8083825260208201915060208460051b870101935086841115610aa5575f80fd5b602086015b84811015610ac15780358352918301918301610aaa565b509695505050505050565b5f805f60608486031215610ade575f80fd5b833567ffffffffffffffff80821115610af5575f80fd5b818601915086601f830112610b08575f80fd5b81356020610b18610a7f83610a3d565b82815260059290921b8401810191818101908a841115610b36575f80fd5b948201945b83861015610b5b57610b4c866109c4565b82529482019490820190610b3b565b97505087013592505080821115610b70575f80fd5b50610b7d86828701610a60565b925050604084013590509250925092565b5f60208284031215610b9e575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102f8576102f8610ba5565b5f82610be657634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156102f8576102f8610ba5565b5f82515f5b81811015610c1d5760208186018101518583015201610c03565b505f920191825250919050565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176102f8576102f8610ba556fea2646970667358221220e6e2f61604cd4d160ab899967c69c423acfe0c1139a27b238eb96d7f1a8c000864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE9CDBE3 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xAE9CDBE3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xC457FB37 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xDC38679C EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xDEC86DF1 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xF466D4AB EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x244EC3C8 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x6D9D33B7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x7BA7614F EQ PUSH2 0x160 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xACC JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x241 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2D5 DUP5 DUP5 PUSH2 0x414 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2E5 PUSH2 0x1B8 DUP4 DUP7 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2F2 DUP3 DUP8 PUSH2 0xBCC JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH8 0xDE0B6B3A7640000 DUP4 MUL SDIV PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH0 DUP2 DUP2 PUSH7 0x38D7EA4C68000 JUMPDEST DUP3 ISZERO PUSH2 0x40C JUMPI DUP1 DUP4 LT ISZERO PUSH2 0x3E2 JUMPI PUSH2 0x3CE DUP4 DUP4 PUSH2 0x3C4 PUSH2 0x259 JUMP JUMPDEST PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x3D8 SWAP1 DUP4 PUSH2 0xBB9 JUMP JUMPDEST SWAP2 POP PUSH0 SWAP3 POP PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x3EF DUP2 DUP4 PUSH2 0x3C4 PUSH2 0x259 JUMP JUMPDEST PUSH2 0x3F9 SWAP1 DUP4 PUSH2 0xBB9 JUMP JUMPDEST SWAP2 POP PUSH2 0x405 DUP2 DUP5 PUSH2 0xBEB JUMP JUMPDEST SWAP3 POP PUSH2 0x3A9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x41F DUP4 PUSH2 0x435 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x42C DUP3 DUP7 PUSH2 0xBCC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x482 PUSH2 0x47C PUSH2 0x467 PUSH32 0x0 TIMESTAMP PUSH2 0xBEB JUMP JUMPDEST PUSH3 0x15180 PUSH8 0xDE0B6B3A7640000 SWAP2 SWAP1 SWAP2 MUL DIV SWAP1 JUMP JUMPDEST DUP5 PUSH2 0x696 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x492 PUSH2 0x729 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506172616C6C656C206172726179732072657175697265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4F2 CALLVALUE PUSH2 0x39D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 CALLVALUE SWAP2 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x55F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DF JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x637 JUMPI PUSH0 PUSH2 0x2710 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5C5 JUMPI PUSH2 0x5C5 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0xBCC JUMP JUMPDEST SWAP1 POP PUSH2 0x607 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5F9 JUMPI PUSH2 0x5F9 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x751 JUMP JUMPDEST DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x619 JUMPI PUSH2 0x619 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x5A6 JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0x689 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x627073206D7573742061646420757020746F2031305F30303000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DF JUMP JUMPDEST POP POP PUSH1 0x1 PUSH0 SSTORE SWAP1 POP PUSH2 0x482 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x714 PUSH32 0x0 PUSH2 0x70F PUSH2 0x70A PUSH32 0x0 PUSH2 0x6F9 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 DUP11 ADD MUL PUSH2 0x2FE JUMP JUMPDEST DUP10 SUB PUSH8 0xDE0B6B3A7640000 SWAP2 MUL SDIV SWAP1 JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 DUP3 LT ISZERO PUSH2 0x40C JUMPI SWAP2 POP PUSH2 0x2F8 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH9 0x248CE36A70CB26B3E NOT DUP3 SGT PUSH2 0x7CF JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH9 0x755BF798B4A1BF1E5 DUP3 SLT PUSH2 0x816 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4558505F4F564552464C4F57 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DF JUMP JUMPDEST PUSH6 0x3782DACE9D9 PUSH1 0x4E DUP4 SWAP1 SHL SDIV SWAP2 POP PUSH0 PUSH1 0x60 PUSH12 0xB17217F7D1CF79ABC9E3B398 DUP5 DUP3 SHL SDIV PUSH1 0x1 PUSH1 0x5F SHL ADD SWAP1 SAR PUSH12 0xB17217F7D1CF79ABC9E3B398 DUP2 MUL SWAP1 SWAP4 SUB PUSH13 0x240C330E9FB2D9CBAF0FD5AAFB NOT DUP2 ADD DUP2 MUL PUSH1 0x60 SWAP1 DUP2 SAR PUSH14 0x277594991CFC85F6E2461837CD9 ADD DUP3 MUL DUP2 SAR PUSH14 0x1A521255E34F6A5061B25EF1C9C3 NOT ADD DUP3 MUL DUP2 SAR PUSH14 0xB1BBB201F443CF962F1A1D3DB4A5 ADD DUP3 MUL DUP2 SAR PUSH15 0x2C72388D9F74F51A9331FED693F14 NOT ADD DUP3 MUL DUP2 SAR PUSH15 0x5180BB14799AB47A8A8CB2A527D57 ADD PUSH14 0x2D16720577BD19BF614176FE9EA PUSH13 0x10FE68E7FD37D0007B713F7650 DUP5 ADD DUP5 MUL DUP4 SAR SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH14 0x1D3967ED30FC4F89C02BAB57081 NOT ADD MUL SWAP1 SWAP2 SAR PUSH15 0x587F503BB6EA29D25FCB740196450 ADD SWAP1 SWAP2 MUL PUSH14 0x360D7AEEA093263ECC6E0ECB2917 PUSH1 0x62 SHL ADD SDIV PUSH21 0x29D9DC38563C32E5C2F6DC192EE70EF65F9978AF3 MUL PUSH1 0xC3 SWAP4 SWAP1 SWAP4 SUB SWAP3 SWAP1 SWAP3 SHR SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 MUL DUP3 ISZERO DUP4 DUP3 SDIV DUP4 EQ OR PUSH0 NOT DUP5 LT PUSH1 0x1 PUSH1 0xFF SHL DUP5 SGT OR AND PUSH2 0x97C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x99E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9DA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP3 PUSH2 0x9C4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xA35 JUMPI PUSH2 0xA35 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA56 JUMPI PUSH2 0xA56 PUSH2 0x9F8 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA6F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xA84 PUSH2 0xA7F DUP4 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0xAA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xAC1 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xAAA JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xADE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB08 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xB18 PUSH2 0xA7F DUP4 PUSH2 0xA3D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0xB36 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xB5B JUMPI PUSH2 0xB4C DUP7 PUSH2 0x9C4 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xB3B JUMP JUMPDEST SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xB70 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7D DUP7 DUP3 DUP8 ADD PUSH2 0xA60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2F8 JUMPI PUSH2 0x2F8 PUSH2 0xBA5 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI PUSH2 0x2F8 PUSH2 0xBA5 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC1D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xC03 JUMP JUMPDEST POP PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2F8 JUMPI PUSH2 0x2F8 PUSH2 0xBA5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xE2 0xF6 AND DIV 0xCD 0x4D AND EXP 0xB8 SWAP10 SWAP7 PUSH29 0x69C423ACFE0C1139A27B238EB96D7F1A8C000864736F6C634300081600 CALLER ",
							"sourceMap": "536:5538:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1769:139;;;;;;;;;;;;;:::i;:::-;;;160:25:16;;;148:2;133:18;1769:139:11;;;;;;;;3152:759;;;;;;;;;;-1:-1:-1;3152:759:11;;;;;:::i;:::-;;:::i;1888:141:13:-;;;;;;;;;;-1:-1:-1;1888:141:13;;;;;:::i;:::-;;:::i;1914:147:11:-;;;;;;;;;;-1:-1:-1;1914:147:11;;;;;:::i;:::-;;:::i;879:52::-;;;;;;;;;;;;;;;3917:1302;;;;;;;;;;-1:-1:-1;3917:1302:11;;;;;:::i;:::-;;:::i;5396:283::-;;;;;;;;;;-1:-1:-1;5396:283:11;;;;;:::i;:::-;;:::i;5685:387::-;;;;;;;;;;-1:-1:-1;5685:387:11;;;;;:::i;:::-;;:::i;715:35:15:-;;;;;;;;;;;;;;;2149:932:11;;;;;;:::i;:::-;;:::i;2016:794:15:-;;;;;;;;;;-1:-1:-1;2016:794:15;;;;;:::i;:::-;;:::i;789:33:11:-;;;;;;;;;;-1:-1:-1;789:33:11;;;;-1:-1:-1;;;;;789:33:11;;;;;;-1:-1:-1;;;;;4304:32:16;;;4286:51;;4274:2;4259:18;789:33:11;4111:232:16;1769:139:11;1882:5;;:19;;;-1:-1:-1;;;1882:19:11;;;;1813:4;;-1:-1:-1;;;;;1882:5:11;;:17;;:19;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1875:26;;1769:139;:::o;3152:759::-;3248:7;3400:27;3430:50;3464:7;3473:6;3430:33;:50::i;:::-;3400:80;-1:-1:-1;3609:26:11;3638:43;3652:28;3400:80;3652:6;:28;:::i;3638:43::-;3609:72;-1:-1:-1;3807:28:11;3838;3609:72;3838:7;:28;:::i;:::-;3807:59;-1:-1:-1;;;;3152:759:11;;;;;:::o;1888:141:13:-;1966:6;2010:11;2175:19:14;2168:27;;2163:36;1991:31:13;1978:229:14;1914:147:11;2031:5;;:23;;-1:-1:-1;;;2031:23:11;;-1:-1:-1;;;;;4304:32:16;;;2031:23:11;;;4286:51:16;1970:4:11;;2031:5;;:15;;4259:18:16;;2031:23:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3917:1302::-;3995:7;4281;3995;4462:4;4565:620;4572:16;;4565:620;;4740:14;4725:12;:29;4721:454;;;4789:75;4822:12;4852:11;4836:13;:11;:13::i;:::-;:27;;;;:::i;4789:75::-;4774:90;;;;:::i;:::-;;;4897:1;4882:16;;4565:620;;4721:454;5035:77;5068:14;5100:11;5084:13;:11;:13::i;5035:77::-;5020:92;;;;:::i;:::-;;-1:-1:-1;5130:30:11;5146:14;5130:30;;:::i;:::-;;;4565:620;;;-1:-1:-1;5201:11:11;3917:1302;-1:-1:-1;;;3917:1302:11:o;5396:283::-;5493:7;5512:26;5541:21;5555:6;5541:13;:21::i;:::-;5512:50;-1:-1:-1;5572:30:11;5605:28;5512:50;5605:7;:28;:::i;:::-;5572:61;5396:283;-1:-1:-1;;;;;5396:283:11:o;5685:387::-;5754:7;;5966:76;5980:44;5996:27;6014:9;5996:15;:27;:::i;:::-;1046:5:14;1024:19;1017:27;;;;1013:39;;825:235;5980:44:11;6026:15;5966:13;:76::i;:::-;5950:92;5685:387;-1:-1:-1;;;5685:387:11:o;2149:932::-;2262:7;2356:21:6;:19;:21::i;:::-;2366:4:11::1;:11;2345:10;:17;:32;2337:69;;;::::0;-1:-1:-1;;;2337:69:11;;5696:2:16;2337:69:11::1;::::0;::::1;5678:21:16::0;5735:2;5715:18;;;5708:30;5774:26;5754:18;;;5747:54;5818:18;;2337:69:11::1;;;;;;;;;2417:16;2436:41;2467:9;2436:30;:41::i;:::-;2506:8;::::0;2540:12:::1;::::0;;2488::::1;2540::::0;;;::::1;::::0;::::1;::::0;;;;2417:60;;-1:-1:-1;;;;;;2506:8:11;;::::1;::::0;2528:9:::1;::::0;2506:47:::1;::::0;2540:12;2506:47:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:66;;;2571:7;2563:36;;;::::0;-1:-1:-1;;;2563:36:11;;6466:2:16;2563:36:11::1;::::0;::::1;6448:21:16::0;6505:2;6485:18;;;6478:30;-1:-1:-1;;;6524:18:16;;;6517:46;6580:18;;2563:36:11::1;6264:340:16::0;2563:36:11::1;2667:8;2758:6:::0;2753:232:::1;2774:10;:17;2770:1;:21;2753:232;;;2812:11;2852:6;2841:4;2846:1;2841:7;;;;;;;;:::i;:::-;;;;;;;2827:11;:21;;;;:::i;:::-;2826:32;;;;:::i;:::-;2812:46;;2918:28;2924:10;2935:1;2924:13;;;;;;;;:::i;:::-;;;;;;;2939:6;2918:5;:28::i;:::-;2967:4;2972:1;2967:7;;;;;;;;:::i;:::-;;;;;;;2960:14;;;;;:::i;:::-;::::0;-1:-1:-1;;2793:3:11::1;;2753:232;;;;3003:3;3010:6;3003:13;2995:51;;;::::0;-1:-1:-1;;;2995:51:11;;7116:2:16;2995:51:11::1;::::0;::::1;7098:21:16::0;7155:2;7135:18;;;7128:30;7194:27;7174:18;;;7167:55;7239:18;;2995:51:11::1;6914:349:16::0;2995:51:11::1;-1:-1:-1::0;;1713:1:6;2924:7;:21;3063:11:11;-1:-1:-1;2398:20:6;2744:208;2016:794:15;2105:7;;2203:437;2210:11;2223:416;2230:408;2243:13;2584:40;557:19:14;2621:1:15;2614:8;;550:27:14;1888:141:13;:::i;2584:40:15:-;2567:14;:57;1813:19:14;1802:9;;1797:36;;1615:226;2230:408:15;2223:6;:416::i;:::-;2203:6;:437::i;:::-;2179:462;-1:-1:-1;2677:1:15;2697:18;;;2693:74;;;2742:10;-1:-1:-1;2735:17:15;;-1:-1:-1;2735:17:15;2431:307:6;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:6;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;1672:91:11:-;1732:5;;:24;;-1:-1:-1;;;1732:24:11;;-1:-1:-1;;;;;7460:32:16;;;1732:24:11;;;7442:51:16;7509:18;;;7502:34;;;1732:5:11;;;;:10;;7415:18:16;;1732:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:91;;:::o;3901:2953:14:-;3941:8;-1:-1:-1;;4102:1:14;:26;4098:40;;-1:-1:-1;4137:1:14;;3901:2953;-1:-1:-1;3901:2953:14:o;4098:40::-;4325:21;4320:1;:26;4316:54;;4348:22;;-1:-1:-1;;;4348:22:14;;7749:2:16;4348:22:14;;;7731:21:16;7788:2;7768:18;;;7761:30;-1:-1:-1;;;7807:18:16;;;7800:42;7859:18;;4348:22:14;7547:336:16;4316:54:14;4627:7;4621:2;4616:7;;;4615:19;;-1:-1:-1;4882:8:14;4950:2;4906:29;4895:7;;;4894:41;-1:-1:-1;;;4894:51:14;4893:59;;4974:29;4970:33;;4966:37;;;-1:-1:-1;;5605:35:14;;5656:5;;5260:2;5655:13;;;5672:32;5654:50;5720:5;;5719:13;;-1:-1:-1;;5718:51:14;5785:5;;5784:13;;5801:34;5783:52;5851:5;;5850:13;;-1:-1:-1;;5849:53:14;5918:5;;5917:13;;5934:35;5916:53;5266:32;5203:31;5199:35;;5250:5;;5249:13;;5248:50;;;5319:5;;;-1:-1:-1;;5319:40:14;5375:5;5374:13;;;5391:35;5373:53;5440:5;;;-1:-1:-1;;;5440:50:14;6310:10;6774:49;6761:62;6836:3;:7;;;;6760:84;;;;;;-1:-1:-1;;3901:2953:14:o;2209:927::-;2375:9;;;2880;;2894:10;;;2891:17;;2877:32;-1:-1:-1;;2914:13:14;;-1:-1:-1;;;2929:74:14;;2911:93;2873:132;2863:180;;3031:1;3028;3021:12;2863:180;3108:19;3100:28;;;2209:927;-1:-1:-1;;2209:927:14:o;196:248:16:-;264:6;272;325:2;313:9;304:7;300:23;296:32;293:52;;;341:1;338;331:12;293:52;-1:-1:-1;;364:23:16;;;434:2;419:18;;;406:32;;-1:-1:-1;196:248:16:o;449:179::-;507:6;560:2;548:9;539:7;535:23;531:32;528:52;;;576:1;573;566:12;528:52;-1:-1:-1;599:23:16;;449:179;-1:-1:-1;449:179:16:o;813:173::-;881:20;;-1:-1:-1;;;;;930:31:16;;920:42;;910:70;;976:1;973;966:12;910:70;813:173;;;:::o;991:186::-;1050:6;1103:2;1091:9;1082:7;1078:23;1074:32;1071:52;;;1119:1;1116;1109:12;1071:52;1142:29;1161:9;1142:29;:::i;1367:127::-;1428:10;1423:3;1419:20;1416:1;1409:31;1459:4;1456:1;1449:15;1483:4;1480:1;1473:15;1499:275;1570:2;1564:9;1635:2;1616:13;;-1:-1:-1;;1612:27:16;1600:40;;1670:18;1655:34;;1691:22;;;1652:62;1649:88;;;1717:18;;:::i;:::-;1753:2;1746:22;1499:275;;-1:-1:-1;1499:275:16:o;1779:183::-;1839:4;1872:18;1864:6;1861:30;1858:56;;;1894:18;;:::i;:::-;-1:-1:-1;1939:1:16;1935:14;1951:4;1931:25;;1779:183::o;1967:668::-;2021:5;2074:3;2067:4;2059:6;2055:17;2051:27;2041:55;;2092:1;2089;2082:12;2041:55;2128:6;2115:20;2154:4;2178:60;2194:43;2234:2;2194:43;:::i;:::-;2178:60;:::i;:::-;2260:3;2284:2;2279:3;2272:15;2312:4;2307:3;2303:14;2296:21;;2369:4;2363:2;2360:1;2356:10;2348:6;2344:23;2340:34;2326:48;;2397:3;2389:6;2386:15;2383:35;;;2414:1;2411;2404:12;2383:35;2450:4;2442:6;2438:17;2464:142;2480:6;2475:3;2472:15;2464:142;;;2546:17;;2534:30;;2584:12;;;;2497;;2464:142;;;-1:-1:-1;2624:5:16;1967:668;-1:-1:-1;;;;;;1967:668:16:o;2640:1214::-;2767:6;2775;2783;2836:2;2824:9;2815:7;2811:23;2807:32;2804:52;;;2852:1;2849;2842:12;2804:52;2892:9;2879:23;2921:18;2962:2;2954:6;2951:14;2948:34;;;2978:1;2975;2968:12;2948:34;3016:6;3005:9;3001:22;2991:32;;3061:7;3054:4;3050:2;3046:13;3042:27;3032:55;;3083:1;3080;3073:12;3032:55;3119:2;3106:16;3141:4;3165:60;3181:43;3221:2;3181:43;:::i;3165:60::-;3259:15;;;3341:1;3337:10;;;;3329:19;;3325:28;;;3290:12;;;;3365:19;;;3362:39;;;3397:1;3394;3387:12;3362:39;3421:11;;;;3441:148;3457:6;3452:3;3449:15;3441:148;;;3523:23;3542:3;3523:23;:::i;:::-;3511:36;;3474:12;;;;3567;;;;3441:148;;;3608:5;-1:-1:-1;;3651:18:16;;3638:32;;-1:-1:-1;;3682:16:16;;;3679:36;;;3711:1;3708;3701:12;3679:36;;3734:63;3789:7;3778:8;3767:9;3763:24;3734:63;:::i;:::-;3724:73;;;3844:2;3833:9;3829:18;3816:32;3806:42;;2640:1214;;;;;:::o;4348:184::-;4418:6;4471:2;4459:9;4450:7;4446:23;4442:32;4439:52;;;4487:1;4484;4477:12;4439:52;-1:-1:-1;4510:16:16;;4348:184;-1:-1:-1;4348:184:16:o;4537:127::-;4598:10;4593:3;4589:20;4586:1;4579:31;4629:4;4626:1;4619:15;4653:4;4650:1;4643:15;4669:125;4734:9;;;4755:10;;;4752:36;;;4768:18;;:::i;4931:217::-;4971:1;4997;4987:132;;5041:10;5036:3;5032:20;5029:1;5022:31;5076:4;5073:1;5066:15;5104:4;5101:1;5094:15;4987:132;-1:-1:-1;5133:9:16;;4931:217::o;5361:128::-;5428:9;;;5449:11;;;5446:37;;;5463:18;;:::i;5847:412::-;5976:3;6014:6;6008:13;6039:1;6049:129;6063:6;6060:1;6057:13;6049:129;;;6161:4;6145:14;;;6141:25;;6135:32;6122:11;;;6115:53;6078:12;6049:129;;;-1:-1:-1;6233:1:16;6197:16;;6222:13;;;-1:-1:-1;6197:16:16;5847:412;-1:-1:-1;5847:412:16:o;6609:127::-;6670:10;6665:3;6661:20;6658:1;6651:31;6701:4;6698:1;6691:15;6725:4;6722:1;6715:15;6741:168;6814:9;;;6845;;6862:15;;;6856:22;;6842:37;6832:71;;6883:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "642200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UNSAFE_getOverestimateTokenAmount(uint256,uint256)": "infinite",
								"_getTokenAmountForSinglePurchase(uint256,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"buyToken(address[],uint256[],uint256)": "infinite",
								"getTargetSaleTime(int256)": "infinite",
								"getTokenAmountForMultiPurchase(uint256)": "infinite",
								"getTokenPrice(uint256)": "infinite",
								"getVRGDAPrice(int256,uint256)": "infinite",
								"startTime()": "infinite",
								"targetPrice()": "infinite",
								"token()": "2446",
								"totalSupply()": "infinite"
							},
							"internal": {
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 916,
									"end": 931,
									"name": "TIMESTAMP",
									"source": 11
								},
								{
									"begin": 879,
									"end": 931,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 879,
									"end": 931,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1001,
									"end": 1666,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1001,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1318,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 1292,
									"end": 1318,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1292,
									"end": 1318,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1292,
									"end": 1318,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1560,
									"end": 1578,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1580,
									"end": 1602,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1560,
									"end": 1578,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1345,
									"end": 1377,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 1351,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 1560,
									"end": 1578,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1351,
									"end": 1355,
									"name": "PUSH",
									"source": 15,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1351,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 1351,
									"end": 1376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1351,
									"end": 1376,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 1351,
									"end": 1376,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1345,
									"end": 1350,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 1345,
									"end": 1377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1345,
									"end": 1377,
									"name": "tag",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 1345,
									"end": 1377,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1329,
									"end": 1377,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 1329,
									"end": 1377,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1329,
									"end": 1377,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1329,
									"end": 1377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1479,
									"end": 1480,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SGT",
									"source": -1
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1321,
									"end": 1323,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1303,
									"end": 1324,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "PUSH",
									"source": 16,
									"value": "1B"
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1333,
									"end": 1363,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1399,
									"end": 1428,
									"name": "PUSH",
									"source": 16,
									"value": "4E4F4E5F4E454741544956455F44454341595F434F4E5354414E540000000000"
								},
								{
									"begin": 1379,
									"end": 1397,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 1379,
									"end": 1397,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1379,
									"end": 1397,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1372,
									"end": 1429,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "PUSH",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 1455,
									"end": 1512,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1257,
									"end": 1283,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 1257,
									"end": 1283,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1614,
									"end": 1634,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 1634,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1614,
									"end": 1634,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 1634,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 1634,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1614,
									"end": 1634,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 1634,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 1634,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 1634,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 1634,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 1634,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 1634,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1650,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1645,
									"end": 1659,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6856,
									"end": 10125,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 6856,
									"end": 10125,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6895,
									"end": 6903,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6943,
									"end": 6944,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6939,
									"end": 6944,
									"name": "SGT",
									"source": 14
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1677,
									"end": 1679,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1659,
									"end": 1680,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 16,
									"value": "9"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "155391115192539151"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "BA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1734,
									"end": 1752,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 1734,
									"end": 1752,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1734,
									"end": 1752,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1727,
									"end": 1766,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1783,
									"end": 1801,
									"name": "PUSH",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 1783,
									"end": 1801,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 1475,
									"end": 1807,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 6931,
									"end": 6958,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7852,
									"end": 7854,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 7307,
									"end": 7308,
									"name": "PUSH",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 7303,
									"end": 7352,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 7406,
									"end": 7415,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7406,
									"end": 7415,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7406,
									"end": 7415,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7383,
									"end": 7416,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 7376,
									"end": 7417,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 7370,
									"end": 7418,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 7452,
									"end": 7462,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFF"
								},
								{
									"begin": 7449,
									"end": 7474,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 7446,
									"end": 7447,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 7442,
									"end": 7475,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 7436,
									"end": 7476,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7518,
									"end": 7527,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7518,
									"end": 7527,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7518,
									"end": 7527,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 7510,
									"end": 7516,
									"name": "PUSH",
									"source": 14,
									"value": "FFFF"
								},
								{
									"begin": 7507,
									"end": 7528,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 7504,
									"end": 7505,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 7500,
									"end": 7529,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 7494,
									"end": 7530,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7570,
									"end": 7579,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7570,
									"end": 7579,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7570,
									"end": 7579,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 7564,
									"end": 7568,
									"name": "PUSH",
									"source": 14,
									"value": "FF"
								},
								{
									"begin": 7561,
									"end": 7580,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 7558,
									"end": 7559,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 7554,
									"end": 7581,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7554,
									"end": 7581,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7554,
									"end": 7581,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 7548,
									"end": 7582,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7548,
									"end": 7582,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7548,
									"end": 7582,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7621,
									"end": 7630,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7621,
									"end": 7630,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7621,
									"end": 7630,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 7616,
									"end": 7619,
									"name": "PUSH",
									"source": 14,
									"value": "F"
								},
								{
									"begin": 7613,
									"end": 7631,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 7610,
									"end": 7611,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 7606,
									"end": 7632,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 7600,
									"end": 7633,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7672,
									"end": 7681,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7672,
									"end": 7681,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7672,
									"end": 7681,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 7664,
									"end": 7682,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7664,
									"end": 7682,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7664,
									"end": 7682,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 7661,
									"end": 7662,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 7657,
									"end": 7683,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7657,
									"end": 7683,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7657,
									"end": 7683,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 7651,
									"end": 7684,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7651,
									"end": 7684,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7651,
									"end": 7684,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7716,
									"end": 7725,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7716,
									"end": 7725,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7716,
									"end": 7725,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 7708,
									"end": 7726,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7708,
									"end": 7726,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7708,
									"end": 7726,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 7702,
									"end": 7727,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7878,
									"end": 7881,
									"name": "PUSH",
									"source": 14,
									"value": "9F"
								},
								{
									"begin": 7878,
									"end": 7885,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7878,
									"end": 7885,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7878,
									"end": 7885,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 7878,
									"end": 7885,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7878,
									"end": 7885,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7864,
									"end": 7886,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 7864,
									"end": 7886,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7864,
									"end": 7886,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 7864,
									"end": 7886,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 7907,
									"end": 7924,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7907,
									"end": 7924,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7907,
									"end": 7924,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 8652,
									"end": 8683,
									"name": "PUSH",
									"source": 14,
									"value": "465772B2BBBB5F824B15207A30"
								},
								{
									"begin": 8648,
									"end": 8683,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8648,
									"end": 8683,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8699,
									"end": 8704,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8699,
									"end": 8704,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8698,
									"end": 8711,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8698,
									"end": 8711,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": 8715,
									"end": 8747,
									"name": "PUSH",
									"source": 14,
									"value": "388EAA27412D5ACA026815D636E"
								},
								{
									"begin": 8697,
									"end": 8747,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8763,
									"end": 8768,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8763,
									"end": 8768,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": 8779,
									"end": 8812,
									"name": "PUSH",
									"source": 14,
									"value": "DF99AC502031BF953EFF472FDCC"
								},
								{
									"begin": 8761,
									"end": 8812,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8828,
									"end": 8833,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8828,
									"end": 8833,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8827,
									"end": 8840,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8827,
									"end": 8840,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": 8844,
									"end": 8877,
									"name": "PUSH",
									"source": 14,
									"value": "13CDFFB29D51D99322BDFF5F2211"
								},
								{
									"begin": 8826,
									"end": 8877,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8893,
									"end": 8898,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8893,
									"end": 8898,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8892,
									"end": 8905,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8892,
									"end": 8905,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": 8909,
									"end": 8942,
									"name": "PUSH",
									"source": 14,
									"value": "A0F742023DEF783A307A986912E"
								},
								{
									"begin": 8891,
									"end": 8942,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8958,
									"end": 8963,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8958,
									"end": 8963,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8957,
									"end": 8970,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8957,
									"end": 8970,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": 8974,
									"end": 9006,
									"name": "PUSH",
									"source": 14,
									"value": "1920D8043CA89B5239253284E42"
								},
								{
									"begin": 8956,
									"end": 9006,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9022,
									"end": 9027,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 9022,
									"end": 9027,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 9021,
									"end": 9034,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9021,
									"end": 9034,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": 9038,
									"end": 9068,
									"name": "PUSH",
									"source": 14,
									"value": "B7A86D7375468FAC667A0A527"
								},
								{
									"begin": 9020,
									"end": 9068,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8085,
									"end": 8116,
									"name": "PUSH",
									"source": 14,
									"value": "29508E458543D8AA4DF2ABEE78"
								},
								{
									"begin": 8081,
									"end": 8116,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8081,
									"end": 8116,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8132,
									"end": 8137,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8132,
									"end": 8137,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8131,
									"end": 8144,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8131,
									"end": 8144,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": 8148,
									"end": 8180,
									"name": "PUSH",
									"source": 14,
									"value": "139601A2EFABE717E604CBB4894"
								},
								{
									"begin": 8130,
									"end": 8180,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8196,
									"end": 8201,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8196,
									"end": 8201,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8195,
									"end": 8208,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8195,
									"end": 8208,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": 8212,
									"end": 8244,
									"name": "PUSH",
									"source": 14,
									"value": "2247F7A7B6594320649AA03ABA1"
								},
								{
									"begin": 8194,
									"end": 8244,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8260,
									"end": 8265,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8260,
									"end": 8265,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8259,
									"end": 8272,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8259,
									"end": 8272,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "8C3F38E95A6B1FF2AB1C3B3436"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8258,
									"end": 8308,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8324,
									"end": 8329,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8324,
									"end": 8329,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8323,
									"end": 8336,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8323,
									"end": 8336,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2384773BDF1AC5676FACCED6090"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8322,
									"end": 8372,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8388,
									"end": 8393,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8388,
									"end": 8393,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8387,
									"end": 8400,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8387,
									"end": 8400,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 8387,
									"end": 8400,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9A025D814B29C212B8B1A07CD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8386,
									"end": 8436,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8450,
									"end": 8455,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "504A838426634CDD8738F5435"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "61"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8450,
									"end": 8496,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9385,
									"end": 9395,
									"name": "SDIV",
									"source": 14
								},
								{
									"begin": 9739,
									"end": 9782,
									"name": "PUSH",
									"source": 14,
									"value": "1340DAA0D5F769DBA1915CEF59F0815A5506"
								},
								{
									"begin": 9734,
									"end": 9782,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7848,
									"end": 7854,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7848,
									"end": 7854,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7848,
									"end": 7854,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7848,
									"end": 7854,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9838,
									"end": 9909,
									"name": "PUSH",
									"source": 14,
									"value": "267A36C0C95B3975AB3EE5B203A7614A3F75373F047D803AE7B6687F2B3"
								},
								{
									"begin": 9838,
									"end": 9913,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 9833,
									"end": 9913,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9978,
									"end": 10050,
									"name": "PUSH",
									"source": 14,
									"value": "57115E47018C7177EEBF7CD370A3356A1B7863008A5AE8028C72B8864284"
								},
								{
									"begin": 9973,
									"end": 10050,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 10113,
									"end": 10116,
									"name": "PUSH",
									"source": 14,
									"value": "AE"
								},
								{
									"begin": 10107,
									"end": 10116,
									"name": "SAR",
									"source": 14
								},
								{
									"begin": 10107,
									"end": 10116,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6856,
									"end": 10125,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 14,
									"end": 167,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 14,
									"end": 167,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 111,
									"end": 142,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 111,
									"end": 142,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 101,
									"end": 143,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 101,
									"end": 143,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 91,
									"end": 161,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 91,
									"end": 161,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 155,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 147,
									"end": 159,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 91,
									"end": 161,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 91,
									"end": 161,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 14,
									"end": 167,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 14,
									"end": 167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 172,
									"end": 812,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 172,
									"end": 812,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 304,
									"end": 310,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 318,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 320,
									"end": 326,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 334,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 336,
									"end": 342,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 392,
									"name": "PUSH",
									"source": 16,
									"value": "A0"
								},
								{
									"begin": 377,
									"end": 386,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 368,
									"end": 375,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 364,
									"end": 387,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 360,
									"end": 393,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 357,
									"end": 410,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 357,
									"end": 410,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 357,
									"end": 410,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 406,
									"end": 407,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 404,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 396,
									"end": 408,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 357,
									"end": 410,
									"name": "tag",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 357,
									"end": 410,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 438,
									"end": 447,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 432,
									"end": 448,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 457,
									"end": 510,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 504,
									"end": 509,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 457,
									"end": 510,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 457,
									"end": 510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 457,
									"end": 510,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 457,
									"end": 510,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 579,
									"end": 581,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 564,
									"end": 582,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 564,
									"end": 582,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 558,
									"end": 583,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 529,
									"end": 534,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 529,
									"end": 534,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 592,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 558,
									"end": 583,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 592,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 592,
									"end": 647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 592,
									"end": 647,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 592,
									"end": 647,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 713,
									"end": 715,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 716,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 698,
									"end": 716,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 692,
									"end": 717,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 757,
									"end": 759,
									"name": "PUSH",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 742,
									"end": 760,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 742,
									"end": 760,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 736,
									"end": 761,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 801,
									"end": 804,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 786,
									"end": 805,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 786,
									"end": 805,
									"name": "SWAP9",
									"source": 16
								},
								{
									"begin": 786,
									"end": 805,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 780,
									"end": 806,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 172,
									"end": 812,
									"name": "SWAP7",
									"source": 16
								},
								{
									"begin": 172,
									"end": 812,
									"name": "SWAP10",
									"source": 16
								},
								{
									"begin": 666,
									"end": 673,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 666,
									"end": 673,
									"name": "SWAP9",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 692,
									"end": 717,
									"name": "SWAP7",
									"source": 16
								},
								{
									"begin": 736,
									"end": 761,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 780,
									"end": 806,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 172,
									"end": 812,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 172,
									"end": 812,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 817,
									"end": 1114,
									"name": "tag",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 817,
									"end": 1114,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 883,
									"end": 892,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 883,
									"end": 892,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 883,
									"end": 892,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 856,
									"end": 860,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 920,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 911,
									"end": 920,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 939,
									"end": 949,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 939,
									"end": 949,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 951,
									"end": 963,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 951,
									"end": 963,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 951,
									"end": 963,
									"name": "SGT",
									"source": 16
								},
								{
									"begin": 935,
									"end": 964,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 974,
									"end": 986,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 974,
									"end": 986,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 974,
									"end": 986,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 966,
									"end": 987,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 966,
									"end": 987,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 932,
									"end": 988,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 929,
									"end": 1108,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 929,
									"end": 1108,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 929,
									"end": 1108,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1030,
									"end": 1040,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 1025,
									"end": 1028,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 1021,
									"end": 1041,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1018,
									"end": 1019,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1042,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1065,
									"end": 1069,
									"name": "PUSH",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 1062,
									"end": 1063,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1055,
									"end": 1070,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1093,
									"end": 1097,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1083,
									"end": 1098,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 929,
									"end": 1108,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 929,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 929,
									"end": 1108,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 817,
									"end": 1114,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 817,
									"end": 1114,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 817,
									"end": 1114,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 817,
									"end": 1114,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 817,
									"end": 1114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1475,
									"end": 1807,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 1475,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "2754"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "3133"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "3708"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "3705"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 6074,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6e2f61604cd4d160ab899967c69c423acfe0c1139a27b238eb96d7f1a8c000864736f6c63430008160033",
									".code": [
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "AE9CDBE3"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "AE9CDBE3"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "C457FB37"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "DC38679C"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "DEC86DF1"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "F466D4AB"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "FC0C546A"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "244EC3C8"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "6D9D33B7"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "78E97925"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "7BA7614F"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 536,
											"end": 6074,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1769,
											"end": 1908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 3152,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3152,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1888,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1888,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1914,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1914,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 879,
											"end": 931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 879,
											"end": 931,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 931,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 879,
											"end": 931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 879,
											"end": 931,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "2754"
										},
										{
											"begin": 879,
											"end": 931,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 879,
											"end": 931,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3917,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3917,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 5396,
											"end": 5679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5396,
											"end": 5679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 5685,
											"end": 6072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 5685,
											"end": 6072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 715,
											"end": 750,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 715,
											"end": 750,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 715,
											"end": 750,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 715,
											"end": 750,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 715,
											"end": 750,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 715,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 715,
											"end": 750,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 715,
											"end": 750,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 750,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 715,
											"end": 750,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 715,
											"end": 750,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 715,
											"end": 750,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 715,
											"end": 750,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 715,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 715,
											"end": 750,
											"name": "PUSHIMMUTABLE",
											"source": 15,
											"value": "3705"
										},
										{
											"begin": 715,
											"end": 750,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 715,
											"end": 750,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2149,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2149,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 2016,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 2016,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 789,
											"end": 822,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 789,
											"end": 822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 789,
											"end": 822,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 789,
											"end": 822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 789,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 789,
											"end": 822,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 789,
											"end": 822,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 789,
											"end": 822,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 789,
											"end": 822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 789,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 822,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4304,
											"end": 4336,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4304,
											"end": 4336,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4304,
											"end": 4336,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 789,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 4111,
											"end": 4343,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1887,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1882,
											"end": 1887,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1813,
											"end": 1817,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1817,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1882,
											"end": 1887,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1887,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1899,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 1882,
											"end": 1899,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1887,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1882,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3248,
											"end": 3255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3427,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3430,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 3464,
											"end": 3471,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3479,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3430,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 3430,
											"end": 3480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3430,
											"end": 3480,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 3430,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 3652,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 3400,
											"end": 3480,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3652,
											"end": 3658,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3652,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 3652,
											"end": 3680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3681,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 3638,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 3609,
											"end": 3681,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3845,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 3838,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3866,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 3838,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 3866,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "3133"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2168,
											"end": 2195,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2168,
											"end": 2195,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2163,
											"end": 2199,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 1991,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1978,
											"end": 2207,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1914,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2036,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2031,
											"end": 2036,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4304,
											"end": 4336,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4304,
											"end": 4336,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4304,
											"end": 4336,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1970,
											"end": 1974,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1974,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2036,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2036,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 2031,
											"end": 2046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 2031,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4466,
											"name": "PUSH",
											"source": 11,
											"value": "38D7EA4C68000"
										},
										{
											"begin": 4565,
											"end": 5185,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4565,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4572,
											"end": 4588,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4572,
											"end": 4588,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4565,
											"end": 5185,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4725,
											"end": 4754,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 5175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4721,
											"end": 5175,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4822,
											"end": 4834,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4852,
											"end": 4863,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4836,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 4836,
											"end": 4849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4849,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4836,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 4836,
											"end": 4863,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4863,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4836,
											"end": 4863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4864,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4789,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4774,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4774,
											"end": 4864,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4774,
											"end": 4864,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4774,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4774,
											"end": 4864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4774,
											"end": 4864,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4774,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4774,
											"end": 4864,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4774,
											"end": 4864,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4897,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 4898,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4882,
											"end": 4898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4565,
											"end": 5185,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 5175,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4721,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5035,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5100,
											"end": 5111,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5084,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 5084,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5035,
											"end": 5112,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5035,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 5020,
											"end": 5112,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5112,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5020,
											"end": 5112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5112,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 5020,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5112,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 5146,
											"end": 5160,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 5130,
											"end": 5160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4565,
											"end": 5185,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 5185,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4565,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5201,
											"end": 5212,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 5219,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3917,
											"end": 5219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5493,
											"end": 5500,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5538,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 5555,
											"end": 5561,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 5541,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5562,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 5541,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5512,
											"end": 5562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5572,
											"end": 5602,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5605,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 5512,
											"end": 5562,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5605,
											"end": 5612,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5605,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5605,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5605,
											"end": 5633,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 5605,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5633,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5679,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5396,
											"end": 5679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5966,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 5980,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 5996,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 6014,
											"end": 6023,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "2754"
										},
										{
											"begin": 5996,
											"end": 6011,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 5996,
											"end": 6023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6023,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 5996,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1046,
											"end": 1051,
											"name": "PUSH",
											"source": 14,
											"value": "15180"
										},
										{
											"begin": 1024,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1017,
											"end": 1044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1017,
											"end": 1044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1017,
											"end": 1044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1017,
											"end": 1044,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 825,
											"end": 1060,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5980,
											"end": 6024,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 5980,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6026,
											"end": 6041,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5966,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 5966,
											"end": 6042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5966,
											"end": 6042,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 5966,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5950,
											"end": 6042,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 6072,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 6072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2149,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2366,
											"end": 2370,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2366,
											"end": 2377,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2377,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2406,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2406,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2337,
											"end": 2406,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5678,
											"end": 5699,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5735,
											"end": 5737,
											"name": "PUSH",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 5715,
											"end": 5733,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5715,
											"end": 5733,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5715,
											"end": 5733,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5708,
											"end": 5738,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5774,
											"end": 5800,
											"name": "PUSH",
											"source": 16,
											"value": "506172616C6C656C206172726179732072657175697265640000000000000000"
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5747,
											"end": 5801,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2337,
											"end": 2406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2436,
											"end": 2477,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 2436,
											"end": 2477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2477,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2477,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2514,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2537,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2537,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2506,
											"end": 2553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2487,
											"end": 2553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2487,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2487,
											"end": 2553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2578,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2563,
											"end": 2599,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2563,
											"end": 2599,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2563,
											"end": 2599,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2599,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6466,
											"end": 6468,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2563,
											"end": 2599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2563,
											"end": 2599,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6448,
											"end": 6469,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6505,
											"end": 6507,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 6485,
											"end": 6503,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6485,
											"end": 6503,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6485,
											"end": 6503,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6478,
											"end": 6508,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A3930B739B332B9103330B4B632B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6524,
											"end": 6542,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6524,
											"end": 6542,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6524,
											"end": 6542,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6517,
											"end": 6563,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2563,
											"end": 2599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 6264,
											"end": 6604,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2563,
											"end": 2599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2563,
											"end": 2599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2667,
											"end": 2675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2753,
											"end": 2985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2774,
											"end": 2784,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2774,
											"end": 2791,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2985,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2753,
											"end": 2985,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2812,
											"end": 2823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 2841,
											"end": 2845,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2846,
											"end": 2847,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2841,
											"end": 2848,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2838,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2827,
											"end": 2848,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2827,
											"end": 2848,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2827,
											"end": 2848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2826,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 2826,
											"end": 2858,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2826,
											"end": 2858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2812,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2812,
											"end": 2858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2918,
											"end": 2946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2924,
											"end": 2934,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2935,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2924,
											"end": 2937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2937,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2918,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2918,
											"end": 2946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2918,
											"end": 2946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2918,
											"end": 2946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2971,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2972,
											"end": 2973,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2967,
											"end": 2974,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 2974,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2960,
											"end": 2974,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 2974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2960,
											"end": 2974,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 2974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2960,
											"end": 2974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 2974,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2793,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2793,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2753,
											"end": 2985,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2753,
											"end": 2985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3006,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 3003,
											"end": 3016,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2995,
											"end": 3046,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2995,
											"end": 3046,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3046,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 3046,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7116,
											"end": 7118,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2995,
											"end": 3046,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 3046,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 7119,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7155,
											"end": 7157,
											"name": "PUSH",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 7135,
											"end": 7153,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7135,
											"end": 7153,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7135,
											"end": 7153,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7128,
											"end": 7158,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7194,
											"end": 7221,
											"name": "PUSH",
											"source": 16,
											"value": "627073206D7573742061646420757020746F2031305F30303000000000000000"
										},
										{
											"begin": 7174,
											"end": 7192,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7174,
											"end": 7192,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7174,
											"end": 7192,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7167,
											"end": 7222,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7239,
											"end": 7257,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7239,
											"end": 7257,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2995,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 6914,
											"end": 7263,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2995,
											"end": 3046,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2995,
											"end": 3046,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3074,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 2016,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2105,
											"end": 2112,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2112,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2203,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 2210,
											"end": 2221,
											"name": "PUSHIMMUTABLE",
											"source": 15,
											"value": "3705"
										},
										{
											"begin": 2223,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 2230,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 2243,
											"end": 2256,
											"name": "PUSHIMMUTABLE",
											"source": 15,
											"value": "3708"
										},
										{
											"begin": 2584,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 557,
											"end": 576,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2621,
											"end": 2622,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2614,
											"end": 2622,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 2614,
											"end": 2622,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 550,
											"end": 577,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1888,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1888,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2584,
											"end": 2624,
											"name": "tag",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 2584,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2581,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2624,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1813,
											"end": 1832,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1833,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1833,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1615,
											"end": 1841,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2230,
											"end": 2638,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 2230,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 2223,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2223,
											"end": 2639,
											"name": "tag",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 2223,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2203,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2203,
											"end": 2640,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 2203,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2641,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2693,
											"end": 2767,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2693,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 2693,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2735,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 2735,
											"end": 2752,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2735,
											"end": 2752,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1763,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1672,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1737,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1732,
											"end": 1737,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7460,
											"end": 7492,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7460,
											"end": 7492,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7460,
											"end": 7492,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7442,
											"end": 7493,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1732,
											"end": 1737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1737,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1737,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1742,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 1732,
											"end": 1742,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1732,
											"end": 1756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1672,
											"end": 1763,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1672,
											"end": 1763,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1672,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 6854,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 3901,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "248CE36A70CB26B3E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4102,
											"end": 4128,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 4098,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 4098,
											"end": 4138,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4138,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4138,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3901,
											"end": 6854,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 6854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4098,
											"end": 4138,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 4098,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "PUSH",
											"source": 14,
											"value": "755BF798B4A1BF1E5"
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4320,
											"end": 4346,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 4316,
											"end": 4370,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7749,
											"end": 7751,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7731,
											"end": 7752,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7790,
											"name": "PUSH",
											"source": 16,
											"value": "C"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7761,
											"end": 7791,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4558505F4F564552464C4F57"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7800,
											"end": 7842,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7859,
											"end": 7877,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7859,
											"end": 7877,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 7547,
											"end": 7883,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4370,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 4316,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4627,
											"end": 4634,
											"name": "PUSH",
											"source": 14,
											"value": "3782DACE9D9"
										},
										{
											"begin": 4621,
											"end": 4623,
											"name": "PUSH",
											"source": 14,
											"value": "4E"
										},
										{
											"begin": 4616,
											"end": 4623,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4616,
											"end": 4623,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4616,
											"end": 4623,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4634,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4634,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4882,
											"end": 4890,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4952,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4906,
											"end": 4935,
											"name": "PUSH",
											"source": 14,
											"value": "B17217F7D1CF79ABC9E3B398"
										},
										{
											"begin": 4895,
											"end": 4902,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4895,
											"end": 4902,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4895,
											"end": 4902,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4894,
											"end": 4935,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4894,
											"end": 4945,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4893,
											"end": 4952,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4893,
											"end": 4952,
											"name": "SAR",
											"source": 14
										},
										{
											"begin": 4974,
											"end": 5003,
											"name": "PUSH",
											"source": 14,
											"value": "B17217F7D1CF79ABC9E3B398"
										},
										{
											"begin": 4970,
											"end": 5003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4970,
											"end": 5003,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4966,
											"end": 5003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4966,
											"end": 5003,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4966,
											"end": 5003,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "240C330E9FB2D9CBAF0FD5AAFB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5605,
											"end": 5640,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5605,
											"end": 5640,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5656,
											"end": 5661,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5656,
											"end": 5661,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5655,
											"end": 5668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5655,
											"end": 5668,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5655,
											"end": 5668,
											"name": "SAR",
											"source": 14
										},
										{
											"begin": 5672,
											"end": 5704,
											"name": "PUSH",
											"source": 14,
											"value": "277594991CFC85F6E2461837CD9"
										},
										{
											"begin": 5654,
											"end": 5704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5720,
											"end": 5725,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5720,
											"end": 5725,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5732,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5732,
											"name": "SAR",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A521255E34F6A5061B25EF1C9C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5718,
											"end": 5769,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5785,
											"end": 5790,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5785,
											"end": 5790,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5784,
											"end": 5797,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5784,
											"end": 5797,
											"name": "SAR",
											"source": 14
										},
										{
											"begin": 5801,
											"end": 5835,
											"name": "PUSH",
											"source": 14,
											"value": "B1BBB201F443CF962F1A1D3DB4A5"
										},
										{
											"begin": 5783,
											"end": 5835,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5856,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5856,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5850,
											"end": 5863,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5850,
											"end": 5863,
											"name": "SAR",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2C72388D9F74F51A9331FED693F14"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5849,
											"end": 5902,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5918,
											"end": 5923,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5918,
											"end": 5923,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5917,
											"end": 5930,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5917,
											"end": 5930,
											"name": "SAR",
											"source": 14
										},
										{
											"begin": 5934,
											"end": 5969,
											"name": "PUSH",
											"source": 14,
											"value": "5180BB14799AB47A8A8CB2A527D57"
										},
										{
											"begin": 5916,
											"end": 5969,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5266,
											"end": 5298,
											"name": "PUSH",
											"source": 14,
											"value": "2D16720577BD19BF614176FE9EA"
										},
										{
											"begin": 5203,
											"end": 5234,
											"name": "PUSH",
											"source": 14,
											"value": "10FE68E7FD37D0007B713F7650"
										},
										{
											"begin": 5199,
											"end": 5234,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5199,
											"end": 5234,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5250,
											"end": 5255,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5250,
											"end": 5255,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5249,
											"end": 5262,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5249,
											"end": 5262,
											"name": "SAR",
											"source": 14
										},
										{
											"begin": 5248,
											"end": 5298,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5248,
											"end": 5298,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5248,
											"end": 5298,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5319,
											"end": 5324,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5319,
											"end": 5324,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5319,
											"end": 5324,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D3967ED30FC4F89C02BAB57081"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5319,
											"end": 5359,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SAR",
											"source": 14
										},
										{
											"begin": 5391,
											"end": 5426,
											"name": "PUSH",
											"source": 14,
											"value": "587F503BB6EA29D25FCB740196450"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5440,
											"end": 5445,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5440,
											"end": 5445,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5440,
											"end": 5445,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "360D7AEEA093263ECC6E0ECB2917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5440,
											"end": 5490,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6310,
											"end": 6320,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 6774,
											"end": 6823,
											"name": "PUSH",
											"source": 14,
											"value": "29D9DC38563C32E5C2F6DC192EE70EF65F9978AF3"
										},
										{
											"begin": 6761,
											"end": 6823,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6836,
											"end": 6839,
											"name": "PUSH",
											"source": 14,
											"value": "C3"
										},
										{
											"begin": 6836,
											"end": 6843,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6836,
											"end": 6843,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6836,
											"end": 6843,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6836,
											"end": 6843,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6760,
											"end": 6844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6760,
											"end": 6844,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6760,
											"end": 6844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6760,
											"end": 6844,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6760,
											"end": 6844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6760,
											"end": 6844,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 6854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2209,
											"end": 3136,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 2209,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2894,
											"end": 2904,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2894,
											"end": 2904,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2894,
											"end": 2904,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 2891,
											"end": 2908,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2891,
											"end": 2908,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2877,
											"end": 2909,
											"name": "OR",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2914,
											"end": 2927,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2927,
											"name": "LT",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2929,
											"end": 3003,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2929,
											"end": 3003,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 3004,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2873,
											"end": 3005,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2863,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 2863,
											"end": 3043,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3029,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2863,
											"end": 3043,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 2863,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3108,
											"end": 3127,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3100,
											"end": 3128,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3100,
											"end": 3128,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 3100,
											"end": 3128,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2209,
											"end": 3136,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2209,
											"end": 3136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 196,
											"end": 444,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 196,
											"end": 444,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 264,
											"end": 270,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 278,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 325,
											"end": 327,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 322,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 304,
											"end": 311,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 300,
											"end": 323,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 296,
											"end": 328,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 293,
											"end": 345,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 293,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 293,
											"end": 345,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 341,
											"end": 342,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 339,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 331,
											"end": 343,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 293,
											"end": 345,
											"name": "tag",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 293,
											"end": 345,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 364,
											"end": 387,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 364,
											"end": 387,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 364,
											"end": 387,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 434,
											"end": 436,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 437,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 419,
											"end": 437,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 419,
											"end": 437,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 406,
											"end": 438,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 406,
											"end": 438,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 449,
											"end": 628,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 449,
											"end": 628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 507,
											"end": 513,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 557,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 539,
											"end": 546,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 531,
											"end": 563,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 528,
											"end": 580,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 528,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 528,
											"end": 580,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 566,
											"end": 578,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 528,
											"end": 580,
											"name": "tag",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 528,
											"end": 580,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 599,
											"end": 622,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 599,
											"end": 622,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 449,
											"end": 628,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 449,
											"end": 628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 813,
											"end": 986,
											"name": "tag",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 813,
											"end": 986,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 881,
											"end": 901,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 881,
											"end": 901,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 930,
											"end": 961,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 930,
											"end": 961,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 920,
											"end": 962,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 920,
											"end": 962,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 910,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 910,
											"end": 980,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 976,
											"end": 977,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 974,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 966,
											"end": 978,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 910,
											"end": 980,
											"name": "tag",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 910,
											"end": 980,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 813,
											"end": 986,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 813,
											"end": 986,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 813,
											"end": 986,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 813,
											"end": 986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1105,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1101,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1074,
											"end": 1106,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1071,
											"end": 1123,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1071,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 1071,
											"end": 1123,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1119,
											"end": 1120,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1109,
											"end": 1121,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1071,
											"end": 1123,
											"name": "tag",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 1071,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1142,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1142,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 1142,
											"end": 1171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1367,
											"end": 1494,
											"name": "tag",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 1367,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1428,
											"end": 1438,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 1423,
											"end": 1426,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1419,
											"end": 1439,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1440,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1459,
											"end": 1463,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 1464,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1480,
											"end": 1481,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1488,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1499,
											"end": 1774,
											"name": "tag",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 1499,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1573,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1616,
											"end": 1629,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1616,
											"end": 1629,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1612,
											"end": 1639,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1600,
											"end": 1640,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1600,
											"end": 1640,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1670,
											"end": 1688,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1655,
											"end": 1689,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1655,
											"end": 1689,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 1691,
											"end": 1713,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1691,
											"end": 1713,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1691,
											"end": 1713,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1652,
											"end": 1714,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 1649,
											"end": 1737,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1649,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 1649,
											"end": 1737,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 1717,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "tag",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1499,
											"end": 1774,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1499,
											"end": 1774,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1779,
											"end": 1962,
											"name": "tag",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 1779,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1839,
											"end": 1843,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1861,
											"end": 1891,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 1858,
											"end": 1914,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1858,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 1858,
											"end": 1914,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1894,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 1894,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 1894,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1894,
											"end": 1912,
											"name": "tag",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 1894,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 1935,
											"end": 1949,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1951,
											"end": 1955,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1779,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1967,
											"end": 2635,
											"name": "tag",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 1967,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2077,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2067,
											"end": 2071,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2059,
											"end": 2065,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2055,
											"end": 2072,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2078,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2041,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 2041,
											"end": 2096,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2082,
											"end": 2094,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2041,
											"end": 2096,
											"name": "tag",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 2041,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2128,
											"end": 2134,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2115,
											"end": 2135,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2158,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 2194,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 2234,
											"end": 2236,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2194,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 2194,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2194,
											"end": 2237,
											"name": "tag",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 2194,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2178,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 2178,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2178,
											"end": 2238,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 2178,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2260,
											"end": 2263,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2279,
											"end": 2282,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2272,
											"end": 2287,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2312,
											"end": 2316,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2303,
											"end": 2317,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2296,
											"end": 2317,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2296,
											"end": 2317,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2369,
											"end": 2373,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2365,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2360,
											"end": 2361,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 2356,
											"end": 2366,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2354,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2340,
											"end": 2374,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2374,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2386,
											"end": 2401,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2414,
											"end": 2415,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2412,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2404,
											"end": 2416,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "tag",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2454,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2448,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2464,
											"end": 2606,
											"name": "tag",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 2464,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2475,
											"end": 2478,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2487,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2464,
											"end": 2606,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2464,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 2464,
											"end": 2606,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2534,
											"end": 2564,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2534,
											"end": 2564,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2497,
											"end": 2509,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2497,
											"end": 2509,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2464,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 2464,
											"end": 2606,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2464,
											"end": 2606,
											"name": "tag",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 2464,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2624,
											"end": 2629,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 1967,
											"end": 2635,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1967,
											"end": 2635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2640,
											"end": 3854,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 2640,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2781,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2824,
											"end": 2833,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2815,
											"end": 2822,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2834,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2839,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2804,
											"end": 2856,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2804,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 2804,
											"end": 2856,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2852,
											"end": 2853,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2850,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2804,
											"end": 2856,
											"name": "tag",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 2804,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2892,
											"end": 2901,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2879,
											"end": 2902,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2962,
											"end": 2964,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 2965,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2948,
											"end": 2982,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2948,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 2948,
											"end": 2982,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2948,
											"end": 2982,
											"name": "tag",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 2948,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3005,
											"end": 3014,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3023,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3023,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3061,
											"end": 3068,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3054,
											"end": 3058,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3042,
											"end": 3069,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3032,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 3032,
											"end": 3087,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3083,
											"end": 3084,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3081,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3073,
											"end": 3085,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3032,
											"end": 3087,
											"name": "tag",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 3032,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3119,
											"end": 3121,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3165,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 3181,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 3221,
											"end": 3223,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3181,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 3181,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3165,
											"end": 3225,
											"name": "tag",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 3165,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3259,
											"end": 3274,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3259,
											"end": 3274,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3259,
											"end": 3274,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3341,
											"end": 3342,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 3337,
											"end": 3347,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3337,
											"end": 3347,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3337,
											"end": 3347,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3337,
											"end": 3347,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 3329,
											"end": 3348,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3329,
											"end": 3348,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3325,
											"end": 3353,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3325,
											"end": 3353,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3325,
											"end": 3353,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3290,
											"end": 3302,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3290,
											"end": 3302,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3290,
											"end": 3302,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3290,
											"end": 3302,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3365,
											"end": 3384,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 3365,
											"end": 3384,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3365,
											"end": 3384,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3362,
											"end": 3401,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3362,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 3362,
											"end": 3401,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3397,
											"end": 3398,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3395,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3387,
											"end": 3399,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3362,
											"end": 3401,
											"name": "tag",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 3362,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3421,
											"end": 3432,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 3421,
											"end": 3432,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3421,
											"end": 3432,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3421,
											"end": 3432,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 3441,
											"end": 3589,
											"name": "tag",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 3441,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3457,
											"end": 3463,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3452,
											"end": 3455,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3449,
											"end": 3464,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3441,
											"end": 3589,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3441,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 3441,
											"end": 3589,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3523,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 3542,
											"end": 3545,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3523,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 3523,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3523,
											"end": 3546,
											"name": "tag",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 3523,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3547,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3547,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3474,
											"end": 3486,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 3474,
											"end": 3486,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3474,
											"end": 3486,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3474,
											"end": 3486,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 3567,
											"end": 3579,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3567,
											"end": 3579,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3567,
											"end": 3579,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3567,
											"end": 3579,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3441,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 3441,
											"end": 3589,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3441,
											"end": 3589,
											"name": "tag",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 3441,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3608,
											"end": 3613,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3669,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3651,
											"end": 3669,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3638,
											"end": 3670,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3638,
											"end": 3670,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3698,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3682,
											"end": 3698,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3682,
											"end": 3698,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3679,
											"end": 3715,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3679,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 3679,
											"end": 3715,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3679,
											"end": 3715,
											"name": "tag",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 3679,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3679,
											"end": 3715,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 3789,
											"end": 3796,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3778,
											"end": 3786,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3767,
											"end": 3776,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3763,
											"end": 3787,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 3734,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3797,
											"name": "tag",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 3734,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3724,
											"end": 3797,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3724,
											"end": 3797,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3724,
											"end": 3797,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3844,
											"end": 3846,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3842,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3829,
											"end": 3847,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3816,
											"end": 3848,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3806,
											"end": 3848,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3806,
											"end": 3848,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2640,
											"end": 3854,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2640,
											"end": 3854,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2640,
											"end": 3854,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2640,
											"end": 3854,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2640,
											"end": 3854,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2640,
											"end": 3854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4348,
											"end": 4532,
											"name": "tag",
											"source": 16,
											"value": "83"
										},
										{
											"begin": 4348,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4418,
											"end": 4424,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4473,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4459,
											"end": 4468,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4446,
											"end": 4469,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4442,
											"end": 4474,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4485,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4477,
											"end": 4489,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "tag",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4510,
											"end": 4526,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4510,
											"end": 4526,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4348,
											"end": 4532,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4348,
											"end": 4532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4537,
											"end": 4664,
											"name": "tag",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 4537,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4598,
											"end": 4608,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 4589,
											"end": 4609,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 4586,
											"end": 4587,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4610,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4629,
											"end": 4633,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 4626,
											"end": 4627,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4619,
											"end": 4634,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4653,
											"end": 4657,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4658,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4669,
											"end": 4794,
											"name": "tag",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 4669,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4755,
											"end": 4765,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4755,
											"end": 4765,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4755,
											"end": 4765,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 4752,
											"end": 4788,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4752,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 4752,
											"end": 4788,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4768,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 4768,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 4768,
											"end": 4786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4931,
											"end": 5148,
											"name": "tag",
											"source": 16,
											"value": "90"
										},
										{
											"begin": 4931,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4971,
											"end": 4972,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 4998,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4987,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 4987,
											"end": 5119,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5041,
											"end": 5051,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 5036,
											"end": 5039,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 5032,
											"end": 5052,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 5029,
											"end": 5030,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5053,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5076,
											"end": 5080,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 5073,
											"end": 5074,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5066,
											"end": 5081,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5104,
											"end": 5108,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5109,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4987,
											"end": 5119,
											"name": "tag",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 4987,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5133,
											"end": 5142,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5133,
											"end": 5142,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4931,
											"end": 5148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5361,
											"end": 5489,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 5361,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5428,
											"end": 5437,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5428,
											"end": 5437,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5428,
											"end": 5437,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5446,
											"end": 5483,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5446,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 5446,
											"end": 5483,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 5463,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5847,
											"end": 6259,
											"name": "tag",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 5847,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5976,
											"end": 5979,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6020,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6008,
											"end": 6021,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6039,
											"end": 6040,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6178,
											"name": "tag",
											"source": 16,
											"value": "265"
										},
										{
											"begin": 6049,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6063,
											"end": 6069,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6060,
											"end": 6061,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6057,
											"end": 6070,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6049,
											"end": 6178,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6049,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 6049,
											"end": 6178,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6161,
											"end": 6165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6145,
											"end": 6159,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6145,
											"end": 6159,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6145,
											"end": 6159,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6141,
											"end": 6166,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6141,
											"end": 6166,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6135,
											"end": 6167,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6122,
											"end": 6133,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6122,
											"end": 6133,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6122,
											"end": 6133,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6078,
											"end": 6090,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6049,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "265"
										},
										{
											"begin": 6049,
											"end": 6178,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6049,
											"end": 6178,
											"name": "tag",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 6049,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6213,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6197,
											"end": 6213,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6222,
											"end": 6235,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6222,
											"end": 6235,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6222,
											"end": 6235,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6197,
											"end": 6213,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5847,
											"end": 6259,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5847,
											"end": 6259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6609,
											"end": 6736,
											"name": "tag",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 6609,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6670,
											"end": 6680,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 6665,
											"end": 6668,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 6661,
											"end": 6681,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 6658,
											"end": 6659,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6651,
											"end": 6682,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6701,
											"end": 6705,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 6698,
											"end": 6699,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6691,
											"end": 6706,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6725,
											"end": 6729,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6722,
											"end": 6723,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6741,
											"end": 6909,
											"name": "tag",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 6741,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6845,
											"end": 6854,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6845,
											"end": 6854,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 6856,
											"end": 6878,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6856,
											"end": 6878,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6842,
											"end": 6879,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 6832,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 6832,
											"end": 6903,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6883,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 6883,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 6883,
											"end": 6901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"packages/revolution-contracts/NontransferableERC20.sol",
								"packages/revolution-contracts/TokenEmitter.sol",
								"packages/revolution-contracts/interfaces/ITokenEmitter.sol",
								"packages/revolution-contracts/libs/LinearVRGDA.sol",
								"packages/revolution-contracts/libs/SignedWadMath.sol",
								"packages/revolution-contracts/libs/VRGDA.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UNSAFE_getOverestimateTokenAmount(uint256,uint256)": "ae9cdbe3",
							"_getTokenAmountForSinglePurchase(uint256,uint256)": "244ec3c8",
							"balanceOf(address)": "70a08231",
							"buyToken(address[],uint256[],uint256)": "dec86df1",
							"getTargetSaleTime(int256)": "6d9d33b7",
							"getTokenAmountForMultiPurchase(uint256)": "7ba7614f",
							"getTokenPrice(uint256)": "c457fb37",
							"getVRGDAPrice(int256,uint256)": "f466d4ab",
							"startTime()": "78e97925",
							"targetPrice()": "dc38679c",
							"token()": "fc0c546a",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract NontransferableERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_targetPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"_priceDecayPercent\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"_governancePerTimeUnit\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"UNSAFE_getOverestimateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"_getTokenAmountForSinglePurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"sold\",\"type\":\"int256\"}],\"name\":\"getTargetSaleTime\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForMultiPurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensSoldSoFar\",\"type\":\"uint256\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"timeSinceStart\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"}],\"name\":\"getVRGDAPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract NontransferableERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"getTargetSaleTime(int256)\":{\"details\":\"Given a number of tokens sold, return the target time that number of tokens should be sold by.\",\"params\":{\"sold\":\"A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for.\"},\"returns\":{\"_0\":\"The target time the tokens should be sold by, scaled by 1e18, where the time is relative, such that 0 means the tokens should be sold immediately when the VRGDA begins.\"}},\"getVRGDAPrice(int256,uint256)\":{\"params\":{\"sold\":\"The total number of tokens that have been sold so far.\",\"timeSinceStart\":\"Time passed since the VRGDA began, scaled by 1e18.\"},\"returns\":{\"_0\":\"The price of a token according to VRGDA, scaled by 1e18.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getVRGDAPrice(int256,uint256)\":{\"notice\":\"Calculate the price of a token according to the VRGDA formula.\"},\"targetPrice()\":{\"notice\":\"Target price for a token, to be scaled according to sales pace.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/TokenEmitter.sol\":\"TokenEmitter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"packages/revolution-contracts/NontransferableERC20.sol\":{\"keccak256\":\"0xd68565d51e1b9a109f494d1df0c39555bd61c7b921e9e732b52902bac333a89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca11bc6d0d22e87b8b1c7caec1ce389fa69acc5b421fae5ca9a11ef9562ed9d0\",\"dweb:/ipfs/QmXktFkEqTY6eTaPP8YRbDcn9UirpXWnGkgRzqbG4bigAC\"]},\"packages/revolution-contracts/TokenEmitter.sol\":{\"keccak256\":\"0xca2daa4899c527abfd1ac12cb6ee8427c546fac806b30ee9ea2ed716cb44a7af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://19e3e9e7d4bb2a087274ee7b075c2514e3cd48d80a97ea12125f57ca27918009\",\"dweb:/ipfs/QmcSBb35B9mxEDWe6cpa452mJnySpYqsRGPEJL7c9A5tsn\"]},\"packages/revolution-contracts/interfaces/ITokenEmitter.sol\":{\"keccak256\":\"0xf16b24c2bcfcba477c73a2681dd6c1bf9413047fb1f9bf85864cb1da8ad4d337\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ff86bfbad89077abd632f341a78fc516a5c8cc6b9ec476bfb28f913cf35ecd87\",\"dweb:/ipfs/QmNWB2T134uhZjpiawvFdLoZ5L7EPsEp19zMfhXsw3ciDT\"]},\"packages/revolution-contracts/libs/LinearVRGDA.sol\":{\"keccak256\":\"0xe482aa6a326d52de15ad1d37a78ca73a458e3c78a1d7045ac37c719325d2fa87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e87113f1829cc6f0458f917f7a140d5b6627bb582131eab00754b5826185857\",\"dweb:/ipfs/QmZaTKMw6u8CQ19SinGuVoP7GNvtREDUCZQzv4cWNuWwUy\"]},\"packages/revolution-contracts/libs/SignedWadMath.sol\":{\"keccak256\":\"0x7f270ba236a78b5ac77581019a0a30eb94ac49be1448da199a6e9644c5072846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7f7b8a7025ff831e1d534a2ff18e8ca7fc902b3672d23daa703b161d23a3c20\",\"dweb:/ipfs/QmUTPTonce6Ri2VtGBu8y2pHkXproRgdc7fKudLdER3TYx\"]},\"packages/revolution-contracts/libs/VRGDA.sol\":{\"keccak256\":\"0xecff58cdec3285f51d5f52c6f2d11a998d3c155c1062a6dbb8741642beef2196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19987dc6a9691a75efc49af8364d1b17e65186a8b42a32d90227faedf52c63ca\",\"dweb:/ipfs/QmYabAZUABFuxU5qD5hEb4ruR4gtRU7G3cuKWHmnMPFTNQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 936,
								"contract": "packages/revolution-contracts/TokenEmitter.sol:TokenEmitter",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2747,
								"contract": "packages/revolution-contracts/TokenEmitter.sol:TokenEmitter",
								"label": "treasury",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2750,
								"contract": "packages/revolution-contracts/TokenEmitter.sol:TokenEmitter",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(NontransferableERC20)2709"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(NontransferableERC20)2709": {
								"encoding": "inplace",
								"label": "contract NontransferableERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getVRGDAPrice(int256,uint256)": {
								"notice": "Calculate the price of a token according to the VRGDA formula."
							},
							"targetPrice()": {
								"notice": "Target price for a token, to be scaled according to sales pace."
							}
						},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/interfaces/ITokenEmitter.sol": {
				"ITokenEmitter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "UNSAFE_getOverestimateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "_getTokenAmountForSinglePurchase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_addresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_percentages",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "numChunks",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								}
							],
							"name": "getTokenAmountForMultiPurchase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentTotalSupply",
									"type": "uint256"
								}
							],
							"name": "getTokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UNSAFE_getOverestimateTokenAmount(uint256,uint256)": "ae9cdbe3",
							"_getTokenAmountForSinglePurchase(uint256,uint256)": "244ec3c8",
							"balanceOf(address)": "70a08231",
							"buyToken(address[],uint256[],uint256)": "dec86df1",
							"getTokenAmountForMultiPurchase(uint256)": "7ba7614f",
							"getTokenPrice(uint256)": "c457fb37",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"UNSAFE_getOverestimateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"_getTokenAmountForSinglePurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_percentages\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"numChunks\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForMultiPurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentTotalSupply\",\"type\":\"uint256\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/interfaces/ITokenEmitter.sol\":\"ITokenEmitter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/interfaces/ITokenEmitter.sol\":{\"keccak256\":\"0xf16b24c2bcfcba477c73a2681dd6c1bf9413047fb1f9bf85864cb1da8ad4d337\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ff86bfbad89077abd632f341a78fc516a5c8cc6b9ec476bfb28f913cf35ecd87\",\"dweb:/ipfs/QmNWB2T134uhZjpiawvFdLoZ5L7EPsEp19zMfhXsw3ciDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/libs/LinearVRGDA.sol": {
				"LinearVRGDA": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "sold",
									"type": "int256"
								}
							],
							"name": "getTargetSaleTime",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "timeSinceStart",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "sold",
									"type": "uint256"
								}
							],
							"name": "getVRGDAPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "transmissions11 <t11s@paradigm.xyz>FrankieIsLost <frankie@paradigm.xyz>",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_perTimeUnit": "The number of tokens to target selling in 1 full unit of time, scaled by 1e18.",
									"_priceDecayPercent": "The percent price decays per unit of time with no sales, scaled by 1e18.",
									"_targetPrice": "The target price for a token if sold on pace, scaled by 1e18."
								}
							},
							"getTargetSaleTime(int256)": {
								"details": "Given a number of tokens sold, return the target time that number of tokens should be sold by.",
								"params": {
									"sold": "A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for."
								},
								"returns": {
									"_0": "The target time the tokens should be sold by, scaled by 1e18, where the time is relative, such that 0 means the tokens should be sold immediately when the VRGDA begins."
								}
							},
							"getVRGDAPrice(int256,uint256)": {
								"params": {
									"sold": "The total number of tokens that have been sold so far.",
									"timeSinceStart": "Time passed since the VRGDA began, scaled by 1e18."
								},
								"returns": {
									"_0": "The price of a token according to VRGDA, scaled by 1e18."
								}
							}
						},
						"stateVariables": {
							"perTimeUnit": {
								"details": "The total number of tokens to target selling every full unit of time.Represented as an 18 decimal fixed point number."
							}
						},
						"title": "Linear Variable Rate Gradual Dutch Auction",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTargetSaleTime(int256)": "6d9d33b7",
							"getVRGDAPrice(int256,uint256)": "f466d4ab",
							"targetPrice()": "dc38679c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"sold\",\"type\":\"int256\"}],\"name\":\"getTargetSaleTime\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"timeSinceStart\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"}],\"name\":\"getVRGDAPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"transmissions11 <t11s@paradigm.xyz>FrankieIsLost <frankie@paradigm.xyz>\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_perTimeUnit\":\"The number of tokens to target selling in 1 full unit of time, scaled by 1e18.\",\"_priceDecayPercent\":\"The percent price decays per unit of time with no sales, scaled by 1e18.\",\"_targetPrice\":\"The target price for a token if sold on pace, scaled by 1e18.\"}},\"getTargetSaleTime(int256)\":{\"details\":\"Given a number of tokens sold, return the target time that number of tokens should be sold by.\",\"params\":{\"sold\":\"A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for.\"},\"returns\":{\"_0\":\"The target time the tokens should be sold by, scaled by 1e18, where the time is relative, such that 0 means the tokens should be sold immediately when the VRGDA begins.\"}},\"getVRGDAPrice(int256,uint256)\":{\"params\":{\"sold\":\"The total number of tokens that have been sold so far.\",\"timeSinceStart\":\"Time passed since the VRGDA began, scaled by 1e18.\"},\"returns\":{\"_0\":\"The price of a token according to VRGDA, scaled by 1e18.\"}}},\"stateVariables\":{\"perTimeUnit\":{\"details\":\"The total number of tokens to target selling every full unit of time.Represented as an 18 decimal fixed point number.\"}},\"title\":\"Linear Variable Rate Gradual Dutch Auction\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets pricing parameters for the VRGDA.\"},\"getVRGDAPrice(int256,uint256)\":{\"notice\":\"Calculate the price of a token according to the VRGDA formula.\"},\"targetPrice()\":{\"notice\":\"Target price for a token, to be scaled according to sales pace.\"}},\"notice\":\"VRGDA with a linear issuance curve.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/libs/LinearVRGDA.sol\":\"LinearVRGDA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/libs/LinearVRGDA.sol\":{\"keccak256\":\"0xe482aa6a326d52de15ad1d37a78ca73a458e3c78a1d7045ac37c719325d2fa87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e87113f1829cc6f0458f917f7a140d5b6627bb582131eab00754b5826185857\",\"dweb:/ipfs/QmZaTKMw6u8CQ19SinGuVoP7GNvtREDUCZQzv4cWNuWwUy\"]},\"packages/revolution-contracts/libs/SignedWadMath.sol\":{\"keccak256\":\"0x7f270ba236a78b5ac77581019a0a30eb94ac49be1448da199a6e9644c5072846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7f7b8a7025ff831e1d534a2ff18e8ca7fc902b3672d23daa703b161d23a3c20\",\"dweb:/ipfs/QmUTPTonce6Ri2VtGBu8y2pHkXproRgdc7fKudLdER3TYx\"]},\"packages/revolution-contracts/libs/VRGDA.sol\":{\"keccak256\":\"0xecff58cdec3285f51d5f52c6f2d11a998d3c155c1062a6dbb8741642beef2196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19987dc6a9691a75efc49af8364d1b17e65186a8b42a32d90227faedf52c63ca\",\"dweb:/ipfs/QmYabAZUABFuxU5qD5hEb4ruR4gtRU7G3cuKWHmnMPFTNQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Sets pricing parameters for the VRGDA."
							},
							"getVRGDAPrice(int256,uint256)": {
								"notice": "Calculate the price of a token according to the VRGDA formula."
							},
							"targetPrice()": {
								"notice": "Target price for a token, to be scaled according to sales pace."
							}
						},
						"notice": "VRGDA with a linear issuance curve.",
						"version": 1
					}
				}
			},
			"packages/revolution-contracts/libs/VRGDA.sol": {
				"VRGDA": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "sold",
									"type": "int256"
								}
							],
							"name": "getTargetSaleTime",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "timeSinceStart",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "sold",
									"type": "uint256"
								}
							],
							"name": "getVRGDAPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "transmissions11 <t11s@paradigm.xyz>FrankieIsLost <frankie@paradigm.xyz>",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_priceDecayPercent": "The percent price decays per unit of time with no sales, scaled by 1e18.",
									"_targetPrice": "The target price for a token if sold on pace, scaled by 1e18."
								}
							},
							"getTargetSaleTime(int256)": {
								"details": "Given a number of tokens sold, return the target time that number of tokens should be sold by.",
								"params": {
									"sold": "A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for."
								},
								"returns": {
									"_0": "The target time the tokens should be sold by, scaled by 1e18, where the time is relative, such that 0 means the tokens should be sold immediately when the VRGDA begins."
								}
							},
							"getVRGDAPrice(int256,uint256)": {
								"params": {
									"sold": "The total number of tokens that have been sold so far.",
									"timeSinceStart": "Time passed since the VRGDA began, scaled by 1e18."
								},
								"returns": {
									"_0": "The price of a token according to VRGDA, scaled by 1e18."
								}
							}
						},
						"stateVariables": {
							"decayConstant": {
								"details": "Precomputed constant that allows us to rewrite a pow() as an exp().Represented as an 18 decimal fixed point number."
							},
							"targetPrice": {
								"details": "Represented as an 18 decimal fixed point number."
							}
						},
						"title": "Variable Rate Gradual Dutch Auction",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTargetSaleTime(int256)": "6d9d33b7",
							"getVRGDAPrice(int256,uint256)": "f466d4ab",
							"targetPrice()": "dc38679c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"sold\",\"type\":\"int256\"}],\"name\":\"getTargetSaleTime\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"timeSinceStart\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"}],\"name\":\"getVRGDAPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"transmissions11 <t11s@paradigm.xyz>FrankieIsLost <frankie@paradigm.xyz>\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_priceDecayPercent\":\"The percent price decays per unit of time with no sales, scaled by 1e18.\",\"_targetPrice\":\"The target price for a token if sold on pace, scaled by 1e18.\"}},\"getTargetSaleTime(int256)\":{\"details\":\"Given a number of tokens sold, return the target time that number of tokens should be sold by.\",\"params\":{\"sold\":\"A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for.\"},\"returns\":{\"_0\":\"The target time the tokens should be sold by, scaled by 1e18, where the time is relative, such that 0 means the tokens should be sold immediately when the VRGDA begins.\"}},\"getVRGDAPrice(int256,uint256)\":{\"params\":{\"sold\":\"The total number of tokens that have been sold so far.\",\"timeSinceStart\":\"Time passed since the VRGDA began, scaled by 1e18.\"},\"returns\":{\"_0\":\"The price of a token according to VRGDA, scaled by 1e18.\"}}},\"stateVariables\":{\"decayConstant\":{\"details\":\"Precomputed constant that allows us to rewrite a pow() as an exp().Represented as an 18 decimal fixed point number.\"},\"targetPrice\":{\"details\":\"Represented as an 18 decimal fixed point number.\"}},\"title\":\"Variable Rate Gradual Dutch Auction\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets target price and per time unit price decay for the VRGDA.\"},\"getVRGDAPrice(int256,uint256)\":{\"notice\":\"Calculate the price of a token according to the VRGDA formula.\"},\"targetPrice()\":{\"notice\":\"Target price for a token, to be scaled according to sales pace.\"}},\"notice\":\"Sell tokens roughly according to an issuance schedule.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/revolution-contracts/libs/VRGDA.sol\":\"VRGDA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/revolution-contracts/libs/SignedWadMath.sol\":{\"keccak256\":\"0x7f270ba236a78b5ac77581019a0a30eb94ac49be1448da199a6e9644c5072846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7f7b8a7025ff831e1d534a2ff18e8ca7fc902b3672d23daa703b161d23a3c20\",\"dweb:/ipfs/QmUTPTonce6Ri2VtGBu8y2pHkXproRgdc7fKudLdER3TYx\"]},\"packages/revolution-contracts/libs/VRGDA.sol\":{\"keccak256\":\"0xecff58cdec3285f51d5f52c6f2d11a998d3c155c1062a6dbb8741642beef2196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19987dc6a9691a75efc49af8364d1b17e65186a8b42a32d90227faedf52c63ca\",\"dweb:/ipfs/QmYabAZUABFuxU5qD5hEb4ruR4gtRU7G3cuKWHmnMPFTNQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Sets target price and per time unit price decay for the VRGDA."
							},
							"getVRGDAPrice(int256,uint256)": {
								"notice": "Calculate the price of a token according to the VRGDA formula."
							},
							"targetPrice()": {
								"notice": "Target price for a token, to be scaled according to sales pace."
							}
						},
						"notice": "Sell tokens roughly according to an issuance schedule.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							925
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 926,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 925,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								925
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							925
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 926,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 925,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								925
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							925
						]
					},
					"id": 926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 925,
							"linearizedBaseContracts": [
								925
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 925,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 925,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 926,
							"src": "624:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							994
						]
					},
					"id": 995,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 994,
							"linearizedBaseContracts": [
								994
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 931,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "1674:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 929,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 930,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 934,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "1720:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 932,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 933,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 936,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "1763:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 935,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 939,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:6"
									},
									"src": "1850:37:6"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "1907:38:6",
										"statements": [
											{
												"expression": {
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 942,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "1917:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 943,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "1927:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:6"
											}
										]
									},
									"id": 947,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:6"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:6"
									},
									"scope": 994,
									"src": "1893:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "2346:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 950,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "2356:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:6"
											},
											{
												"id": 953,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 954,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "2398:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:6"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 958,
									"name": "nonReentrant",
									"nameLocation": "2331:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:6"
									},
									"src": "2322:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "2470:268:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "2558:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 962,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "2569:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "IfStatement",
												"src": "2554:86:6",
												"trueBody": {
													"id": 967,
													"nodeType": "Block",
													"src": "2578:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 964,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "2599:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 966,
															"nodeType": "RevertStatement",
															"src": "2592:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 969,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "2714:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 970,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "2724:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:6"
											}
										]
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:6"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:6"
									},
									"scope": 994,
									"src": "2431:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2782:170:6",
										"statements": [
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "2924:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 978,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "2934:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:6"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:6"
									},
									"scope": 994,
									"src": "2744:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "3195:42:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "3212:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 989,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "3223:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 987,
												"id": 991,
												"nodeType": "Return",
												"src": "3205:25:6"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:6"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3189:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 985,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:6"
									},
									"scope": 994,
									"src": "3131:106:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 995,
							"src": "886:2353:6",
							"usedErrors": [
								939
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2303
						],
						"SignedMath": [
							2408
						],
						"Strings": [
							1249
						]
					},
					"id": 1250,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 996,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 998,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 2304,
							"src": "127:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 997,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2303,
										"src": "135:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1000,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 2409,
							"src": "165:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 999,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2408,
										"src": "173:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1001,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1249,
							"linearizedBaseContracts": [
								1249
							],
							"name": "Strings",
							"nameLocation": "259:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1004,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "273:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1002,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1003,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1007,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "335:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1005,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1006,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1014,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:7"
									},
									"src": "470:66:7"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "708:627:7",
										"statements": [
											{
												"id": 1060,
												"nodeType": "UncheckedBlock",
												"src": "718:611:7",
												"statements": [
													{
														"assignments": [
															1023
														],
														"declarations": [
															{
																"constant": false,
																"id": 1023,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "742:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1022,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1030,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1026,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "770:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1024,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2303,
																		"src": "759:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2303_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2123,
																	"src": "759:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:7"
													},
													{
														"assignments": [
															1032
														],
														"declarations": [
															{
																"constant": false,
																"id": 1032,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "794:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1031,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1037,
														"initialValue": {
															"arguments": [
																{
																	"id": 1035,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "828:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1033,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:7"
													},
													{
														"assignments": [
															1039
														],
														"declarations": [
															{
																"constant": false,
																"id": 1039,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "849:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1038,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1040,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:7"
													},
													{
														"AST": {
															"nativeSrc": "930:67:7",
															"nodeType": "YulBlock",
															"src": "930:67:7",
															"statements": [
																{
																	"nativeSrc": "948:35:7",
																	"nodeType": "YulAssignment",
																	"src": "948:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:7",
																						"nodeType": "YulLiteral",
																						"src": "971:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:7"
																				},
																				"nativeSrc": "967:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nativeSrc": "955:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1032,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1023,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1039,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:7",
																"valueSize": 1
															}
														],
														"id": 1041,
														"nodeType": "InlineAssembly",
														"src": "921:76:7"
													},
													{
														"body": {
															"id": 1056,
															"nodeType": "Block",
															"src": "1023:269:7",
															"statements": [
																{
																	"expression": {
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:7",
																		"subExpression": {
																			"id": 1043,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1039,
																			"src": "1041:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1045,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:7",
																		"nodeType": "YulBlock",
																		"src": "1124:86:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:7",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:7"
																									},
																									"nativeSrc": "1164:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:7"
																							},
																							"nativeSrc": "1159:32:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:7"
																					},
																					"nativeSrc": "1146:46:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:7"
																				},
																				"nativeSrc": "1146:46:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1004,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1039,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1017,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1046,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:7"
																},
																{
																	"expression": {
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1047,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "1227:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1050,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1051,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "1260:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1055,
																	"nodeType": "IfStatement",
																	"src": "1256:21:7",
																	"trueBody": {
																		"id": 1054,
																		"nodeType": "Break",
																		"src": "1272:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1057,
														"nodeType": "WhileStatement",
														"src": "1010:282:7"
													},
													{
														"expression": {
															"id": 1058,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "1312:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1021,
														"id": 1059,
														"nodeType": "Return",
														"src": "1305:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:7"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "693:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1019,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:7"
									},
									"scope": 1249,
									"src": "637:698:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "1511:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1073,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "1542:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1082,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1065,
																			"src": "1588:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1080,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2408,
																			"src": "1573:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2408_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2407,
																		"src": "1573:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1079,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "1564:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1070,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1086,
												"nodeType": "Return",
												"src": "1521:75:7"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1064,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:7"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1496:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:7"
									},
									"scope": 1249,
									"src": "1435:168:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "1782:100:7",
										"statements": [
											{
												"id": 1106,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1097,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "1835:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1100,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1091,
																				"src": "1854:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1098,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2303,
																				"src": "1842:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2303_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2245,
																			"src": "1842:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1096,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1108,
																	1191,
																	1211
																],
																"referencedDeclaration": 1191,
																"src": "1823:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1095,
														"id": 1105,
														"nodeType": "Return",
														"src": "1816:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1729:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:7"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1767:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1093,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:7"
									},
									"scope": 1249,
									"src": "1708:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "2095:435:7",
										"statements": [
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "2105:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1118,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1121,
												"initialValue": {
													"id": 1120,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1111,
													"src": "2126:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:7"
											},
											{
												"assignments": [
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "2141:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1122,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1127,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "2177:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1124,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:7"
											},
											{
												"expression": {
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1133,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "2198:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1135,
														"indexExpression": {
															"hexValue": "30",
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:7"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1139,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "2223:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1141,
														"indexExpression": {
															"hexValue": "31",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:7"
											},
											{
												"body": {
													"id": 1173,
													"nodeType": "Block",
													"src": "2293:95:7",
													"statements": [
														{
															"expression": {
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1159,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "2307:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1161,
																	"indexExpression": {
																		"id": 1160,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "2314:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1162,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "2319:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1166,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1163,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "2330:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1168,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:7"
														},
														{
															"expression": {
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1169,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "2361:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1172,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1153,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "2281:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"initializationExpression": {
													"assignments": [
														1146
													],
													"declarations": [
														{
															"constant": false,
															"id": 1146,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1174,
															"src": "2253:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1145,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1152,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1148,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "2269:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:7",
														"subExpression": {
															"id": 1156,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "2290:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1158,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1175,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "2401:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1184,
												"nodeType": "IfStatement",
												"src": "2397:96:7",
												"trueBody": {
													"id": 1183,
													"nodeType": "Block",
													"src": "2418:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "2468:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1180,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "2475:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1178,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2439:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1182,
															"nodeType": "RevertStatement",
															"src": "2432:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1187,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "2516:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1185,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1117,
												"id": 1189,
												"nodeType": "Return",
												"src": "2502:21:7"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2041:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:7"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2080:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:7"
									},
									"scope": 1249,
									"src": "2005:525:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "2762:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1204,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1194,
																			"src": "2807:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1202,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1200,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1207,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "2815:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1199,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1108,
															1191,
															1211
														],
														"referencedDeclaration": 1191,
														"src": "2779:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1198,
												"id": 1209,
												"nodeType": "Return",
												"src": "2772:58:7"
											}
										]
									},
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:7"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2747:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:7"
									},
									"scope": 1249,
									"src": "2689:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "2992:104:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1223,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "3015:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1221,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1228,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "3034:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1226,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1235,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1214,
																			"src": "3063:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1233,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1232,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1241,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1216,
																			"src": "3086:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1239,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1238,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1246,
												"nodeType": "Return",
												"src": "3002:87:7"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2929:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1213,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2946:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:7"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2986:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:7"
									},
									"scope": 1249,
									"src": "2914:182:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1250,
							"src": "251:2847:7",
							"usedErrors": [
								1014
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2303
						]
					},
					"id": 2304,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1251,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1252,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2303,
							"linearizedBaseContracts": [
								2303
							],
							"name": "Math",
							"nameLocation": "211:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:8",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1255,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:8"
									},
									"src": "277:29:8"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1260,
									"members": [
										{
											"id": 1256,
											"name": "Floor",
											"nameLocation": "336:5:8",
											"nodeType": "EnumValue",
											"src": "336:5:8"
										},
										{
											"id": 1257,
											"name": "Ceil",
											"nameLocation": "379:4:8",
											"nodeType": "EnumValue",
											"src": "379:4:8"
										},
										{
											"id": 1258,
											"name": "Trunc",
											"nameLocation": "421:5:8",
											"nodeType": "EnumValue",
											"src": "421:5:8"
										},
										{
											"id": 1259,
											"name": "Expand",
											"nameLocation": "451:6:8",
											"nodeType": "EnumValue",
											"src": "451:6:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:8",
									"nodeType": "EnumDefinition",
									"src": "312:169:8"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "661:140:8",
										"statements": [
											{
												"id": 1290,
												"nodeType": "UncheckedBlock",
												"src": "671:124:8",
												"statements": [
													{
														"assignments": [
															1273
														],
														"declarations": [
															{
																"constant": false,
																"id": 1273,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1290,
																"src": "695:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1272,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1277,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1274,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "707:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1275,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "711:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1278,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "730:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "734:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1285,
														"nodeType": "IfStatement",
														"src": "726:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1271,
															"id": 1284,
															"nodeType": "Return",
															"src": "737:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1287,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "782:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1288,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1271,
														"id": 1289,
														"nodeType": "Return",
														"src": "768:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:8"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "646:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "652:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:8"
									},
									"scope": 2303,
									"src": "585:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "984:113:8",
										"statements": [
											{
												"id": 1318,
												"nodeType": "UncheckedBlock",
												"src": "994:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1304,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "1022:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1305,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "1026:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1311,
														"nodeType": "IfStatement",
														"src": "1018:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1309,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1303,
															"id": 1310,
															"nodeType": "Return",
															"src": "1029:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1313,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "1074:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1314,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "1078:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1316,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1303,
														"id": 1317,
														"nodeType": "Return",
														"src": "1060:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "924:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "935:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:8"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "969:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "975:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:8"
									},
									"scope": 2303,
									"src": "908:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "1283:417:8",
										"statements": [
											{
												"id": 1360,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "1551:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1339,
														"nodeType": "IfStatement",
														"src": "1547:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1337,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1331,
															"id": 1338,
															"nodeType": "Return",
															"src": "1559:16:8"
														}
													},
													{
														"assignments": [
															1341
														],
														"declarations": [
															{
																"constant": false,
																"id": 1341,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1360,
																"src": "1589:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1340,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1345,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1342,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "1601:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1343,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "1605:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1346,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "1624:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1347,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "1628:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1349,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "1633:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1355,
														"nodeType": "IfStatement",
														"src": "1620:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1331,
															"id": 1354,
															"nodeType": "Return",
															"src": "1636:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1357,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "1681:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1358,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1331,
														"id": 1359,
														"nodeType": "Return",
														"src": "1667:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1223:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1234:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:8"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1268:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1274:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:8"
									},
									"scope": 2303,
									"src": "1207:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "1887:114:8",
										"statements": [
											{
												"id": 1388,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1374,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "1925:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1381,
														"nodeType": "IfStatement",
														"src": "1921:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1379,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1373,
															"id": 1380,
															"nodeType": "Return",
															"src": "1933:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1383,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "1978:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1384,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "1982:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1386,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1373,
														"id": 1387,
														"nodeType": "Return",
														"src": "1964:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1827:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1838:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:8"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1872:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1878:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:8"
									},
									"scope": 2303,
									"src": "1811:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "2198:114:8",
										"statements": [
											{
												"id": 1416,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1402,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "2236:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1409,
														"nodeType": "IfStatement",
														"src": "2232:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1407,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1401,
															"id": 1408,
															"nodeType": "Return",
															"src": "2244:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1411,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "2289:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1412,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "2293:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1414,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1401,
														"id": 1415,
														"nodeType": "Return",
														"src": "2275:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "2138:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "2149:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:8"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "2183:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "2189:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:8"
									},
									"scope": 2303,
									"src": "2122:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "2449:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1428,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2466:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1429,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "2470:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1432,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "2478:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:8",
													"trueExpression": {
														"id": 1431,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "2474:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1427,
												"id": 1434,
												"nodeType": "Return",
												"src": "2459:20:8"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "2395:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "2406:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:8"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "2440:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:8"
									},
									"scope": 2303,
									"src": "2382:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "2624:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1446,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "2641:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1447,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "2645:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1450,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "2653:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:8",
													"trueExpression": {
														"id": 1449,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "2649:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1445,
												"id": 1452,
												"nodeType": "Return",
												"src": "2634:20:8"
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "2570:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "2581:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:8"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "2615:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:8"
									},
									"scope": 2303,
									"src": "2557:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "2845:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1464,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "2900:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1465,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "2904:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1467,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1468,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "2910:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1469,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1459,
																		"src": "2914:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1471,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1475,
												"nodeType": "Return",
												"src": "2892:28:8"
											}
										]
									},
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "2791:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "2802:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:8"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "2836:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:8"
									},
									"scope": 2303,
									"src": "2774:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "3219:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1487,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "3233:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1495,
												"nodeType": "IfStatement",
												"src": "3229:127:8",
												"trueBody": {
													"id": 1494,
													"nodeType": "Block",
													"src": "3241:115:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1490,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "3340:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1491,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "3344:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1486,
															"id": 1493,
															"nodeType": "Return",
															"src": "3333:12:8"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1496,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "3444:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1500,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1480,
																			"src": "3458:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1503,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1504,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "3467:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1486,
												"id": 1509,
												"nodeType": "Return",
												"src": "3437:35:8"
											}
										]
									},
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "3165:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "3176:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:8"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "3210:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:8"
									},
									"scope": 2303,
									"src": "3148:331:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "3901:4018:8",
										"statements": [
											{
												"id": 1635,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:8",
												"statements": [
													{
														"assignments": [
															1524
														],
														"declarations": [
															{
																"constant": false,
																"id": 1524,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1635,
																"src": "4232:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1523,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1528,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1525,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "4248:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1526,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "4252:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:8"
													},
													{
														"assignments": [
															1530
														],
														"declarations": [
															{
																"constant": false,
																"id": 1530,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1635,
																"src": "4312:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1529,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1531,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:8"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:8",
															"nodeType": "YulBlock",
															"src": "4392:122:8",
															"statements": [
																{
																	"nativeSrc": "4410:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:8"
																				},
																				"nativeSrc": "4433:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:8"
																		},
																		"nativeSrc": "4420:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:8",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:8",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:8"
																				},
																				"nativeSrc": "4470:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:8"
																				},
																				"nativeSrc": "4486:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:8"
																		},
																		"nativeSrc": "4466:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1530,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1514,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:8",
																"valueSize": 1
															}
														],
														"id": 1532,
														"nodeType": "InlineAssembly",
														"src": "4383:131:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1533,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "4595:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1541,
														"nodeType": "IfStatement",
														"src": "4591:368:8",
														"trueBody": {
															"id": 1540,
															"nodeType": "Block",
															"src": "4607:352:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1536,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1524,
																			"src": "4925:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1537,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "4933:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1522,
																	"id": 1539,
																	"nodeType": "Return",
																	"src": "4918:26:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1542,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "5065:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1543,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "5080:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1549,
														"nodeType": "IfStatement",
														"src": "5061:88:8",
														"trueBody": {
															"id": 1548,
															"nodeType": "Block",
															"src": "5087:62:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1545,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "5112:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1547,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:8"
																}
															]
														}
													},
													{
														"assignments": [
															1551
														],
														"declarations": [
															{
																"constant": false,
																"id": 1551,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1635,
																"src": "5404:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1550,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1552,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:8"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:8",
															"nodeType": "YulBlock",
															"src": "5444:291:8",
															"statements": [
																{
																	"nativeSrc": "5513:38:8",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:8"
																		},
																		"nativeSrc": "5526:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:8",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:8"
																				},
																				"nativeSrc": "5653:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:8"
																		},
																		"nativeSrc": "5642:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:8",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:8"
																		},
																		"nativeSrc": "5700:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1518,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1530,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1530,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1551,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1551,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1551,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1514,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:8",
																"valueSize": 1
															}
														],
														"id": 1553,
														"nodeType": "InlineAssembly",
														"src": "5435:300:8"
													},
													{
														"assignments": [
															1555
														],
														"declarations": [
															{
																"constant": false,
																"id": 1555,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1635,
																"src": "5939:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1554,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1562,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1556,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "5954:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1558,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "5973:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1560,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:8"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:8",
															"nodeType": "YulBlock",
															"src": "6008:362:8",
															"statements": [
																{
																	"nativeSrc": "6073:37:8",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:8"
																		},
																		"nativeSrc": "6088:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:8",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:8"
																		},
																		"nativeSrc": "6186:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:8",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:8"
																						},
																						"nativeSrc": "6333:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:8"
																				},
																				"nativeSrc": "6329:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:8"
																		},
																		"nativeSrc": "6325:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1518,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1518,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1555,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1555,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1555,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1555,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1555,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:8",
																"valueSize": 1
															}
														],
														"id": 1563,
														"nodeType": "InlineAssembly",
														"src": "5999:371:8"
													},
													{
														"expression": {
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1564,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "6436:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1565,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "6445:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1566,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "6453:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1569,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:8"
													},
													{
														"assignments": [
															1571
														],
														"declarations": [
															{
																"constant": false,
																"id": 1571,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1635,
																"src": "6775:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1570,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1578,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1573,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "6798:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1575,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:8"
													},
													{
														"expression": {
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1579,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "7031:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1581,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "7046:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1582,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "7060:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1586,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:8"
													},
													{
														"expression": {
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1587,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "7100:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1589,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "7115:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1590,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "7129:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1594,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:8"
													},
													{
														"expression": {
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1595,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "7170:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1597,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "7185:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1598,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "7199:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1602,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:8"
													},
													{
														"expression": {
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1603,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "7240:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1605,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "7255:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1606,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "7269:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1610,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:8"
													},
													{
														"expression": {
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1611,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "7310:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1613,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "7325:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1614,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "7339:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1618,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:8"
													},
													{
														"expression": {
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1619,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "7381:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1621,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "7396:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1622,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "7410:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1626,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:8"
													},
													{
														"expression": {
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1627,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "7851:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1628,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1524,
																	"src": "7860:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1629,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1571,
																	"src": "7868:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1632,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:8"
													},
													{
														"expression": {
															"id": 1633,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "7896:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1522,
														"id": 1634,
														"nodeType": "Return",
														"src": "7889:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "3819:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "3830:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "3841:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:8"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "3885:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:8"
									},
									"scope": 2303,
									"src": "3803:4116:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "8161:192:8",
										"statements": [
											{
												"assignments": [
													1653
												],
												"declarations": [
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "8171:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"arguments": [
														{
															"id": 1655,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "8195:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1656,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "8198:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1657,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "8201:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1654,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1637,
															1680
														],
														"referencedDeclaration": 1637,
														"src": "8188:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1661,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1647,
																"src": "8244:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1260",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1260",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1660,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "8227:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1260_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1664,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1640,
																	"src": "8264:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1665,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "8267:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1666,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "8270:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1663,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "8223:101:8",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "8288:36:8",
													"statements": [
														{
															"expression": {
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1671,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "8302:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1674,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1677,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1653,
													"src": "8340:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1651,
												"id": 1678,
												"nodeType": "Return",
												"src": "8333:13:8"
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "8067:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "8078:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "8089:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "8110:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1260",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1646,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1645,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1260,
														"src": "8110:8:8"
													},
													"referencedDeclaration": 1260,
													"src": "8110:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1260",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:8"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "8152:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:8"
									},
									"scope": 2303,
									"src": "8051:302:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "8644:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1688,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "8658:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1694,
												"nodeType": "IfStatement",
												"src": "8654:45:8",
												"trueBody": {
													"id": 1693,
													"nodeType": "Block",
													"src": "8666:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1687,
															"id": 1692,
															"nodeType": "Return",
															"src": "8680:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1696
												],
												"declarations": [
													{
														"constant": false,
														"id": 1696,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "9378:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1705,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1699,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1683,
																			"src": "9406:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1698,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1959,
																			1994
																		],
																		"referencedDeclaration": 1959,
																		"src": "9401:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1703,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:8"
											},
											{
												"id": 1790,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:8",
												"statements": [
													{
														"expression": {
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1706,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "9839:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1707,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1696,
																				"src": "9849:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1708,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1683,
																					"src": "9858:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1709,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1696,
																					"src": "9862:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1712,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1716,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:8"
													},
													{
														"expression": {
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1717,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "9888:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1718,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1696,
																				"src": "9898:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1719,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1683,
																					"src": "9907:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1720,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1696,
																					"src": "9911:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1723,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1727,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:8"
													},
													{
														"expression": {
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1728,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "9937:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1729,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1696,
																				"src": "9947:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1730,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1683,
																					"src": "9956:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1731,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1696,
																					"src": "9960:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1734,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1738,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:8"
													},
													{
														"expression": {
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1739,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "9986:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1740,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1696,
																				"src": "9996:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1741,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1683,
																					"src": "10005:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1742,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1696,
																					"src": "10009:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1745,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1749,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:8"
													},
													{
														"expression": {
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1750,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "10035:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1751,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1696,
																				"src": "10045:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1752,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1683,
																					"src": "10054:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1753,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1696,
																					"src": "10058:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1756,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1760,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:8"
													},
													{
														"expression": {
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1761,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "10084:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1762,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1696,
																				"src": "10094:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1763,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1683,
																					"src": "10103:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1764,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1696,
																					"src": "10107:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1767,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1771,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:8"
													},
													{
														"expression": {
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1772,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "10133:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1773,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1696,
																				"src": "10143:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1774,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1683,
																					"src": "10152:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1775,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1696,
																					"src": "10156:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1778,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1782,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1784,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "10193:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1785,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "10201:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1786,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "10205:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1783,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "10189:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1687,
														"id": 1789,
														"nodeType": "Return",
														"src": "10182:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "8601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:8"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "8635:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:8"
									},
									"scope": 2303,
									"src": "8587:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "10405:164:8",
										"statements": [
											{
												"id": 1825,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:8",
												"statements": [
													{
														"assignments": [
															1804
														],
														"declarations": [
															{
																"constant": false,
																"id": 1804,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1825,
																"src": "10439:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1803,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1808,
														"initialValue": {
															"arguments": [
																{
																	"id": 1806,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "10461:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1805,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1792,
																	1827
																],
																"referencedDeclaration": 1792,
																"src": "10456:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1809,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "10484:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1811,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1798,
																						"src": "10511:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1260",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1260",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1810,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2302,
																					"src": "10494:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1260_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1815,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1813,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1804,
																						"src": "10524:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1814,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1804,
																						"src": "10533:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1816,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "10542:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1822,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1802,
														"id": 1824,
														"nodeType": "Return",
														"src": "10477:75:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "10343:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "10354:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1260",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1796,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1260,
														"src": "10354:8:8"
													},
													"referencedDeclaration": 1260,
													"src": "10354:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1260",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:8"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "10396:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:8"
									},
									"scope": 2303,
									"src": "10329:240:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "10760:922:8",
										"statements": [
											{
												"assignments": [
													1836
												],
												"declarations": [
													{
														"constant": false,
														"id": 1836,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "10770:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1835,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1838,
												"initialValue": {
													"hexValue": "30",
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:8"
											},
											{
												"id": 1955,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1839,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "10826:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1853,
														"nodeType": "IfStatement",
														"src": "10822:99:8",
														"trueBody": {
															"id": 1852,
															"nodeType": "Block",
															"src": "10844:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1844,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "10862:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1847,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:8"
																},
																{
																	"expression": {
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1848,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "10893:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1851,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1854,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "10938:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1868,
														"nodeType": "IfStatement",
														"src": "10934:96:8",
														"trueBody": {
															"id": 1867,
															"nodeType": "Block",
															"src": "10955:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1859,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "10973:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1862,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:8"
																},
																{
																	"expression": {
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1863,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "11003:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1866,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1869,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "11047:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1883,
														"nodeType": "IfStatement",
														"src": "11043:96:8",
														"trueBody": {
															"id": 1882,
															"nodeType": "Block",
															"src": "11064:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1874,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "11082:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1877,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:8"
																},
																{
																	"expression": {
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1878,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "11112:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1881,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1884,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "11156:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1898,
														"nodeType": "IfStatement",
														"src": "11152:96:8",
														"trueBody": {
															"id": 1897,
															"nodeType": "Block",
															"src": "11173:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1889,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "11191:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1892,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:8"
																},
																{
																	"expression": {
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1893,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "11221:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1896,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1899,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "11265:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1913,
														"nodeType": "IfStatement",
														"src": "11261:93:8",
														"trueBody": {
															"id": 1912,
															"nodeType": "Block",
															"src": "11281:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1904,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "11299:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1907,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:8"
																},
																{
																	"expression": {
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1908,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "11328:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1911,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1914,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "11371:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1928,
														"nodeType": "IfStatement",
														"src": "11367:93:8",
														"trueBody": {
															"id": 1927,
															"nodeType": "Block",
															"src": "11387:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1919,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "11405:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1922,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:8"
																},
																{
																	"expression": {
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1923,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "11434:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1926,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1929,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "11477:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1943,
														"nodeType": "IfStatement",
														"src": "11473:93:8",
														"trueBody": {
															"id": 1942,
															"nodeType": "Block",
															"src": "11493:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1934,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "11511:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1937,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:8"
																},
																{
																	"expression": {
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1938,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "11540:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1941,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1944,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "11583:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1954,
														"nodeType": "IfStatement",
														"src": "11579:64:8",
														"trueBody": {
															"id": 1953,
															"nodeType": "Block",
															"src": "11599:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1949,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "11617:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1952,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1956,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1836,
													"src": "11669:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1834,
												"id": 1957,
												"nodeType": "Return",
												"src": "11662:13:8"
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:8",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "10713:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:8"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "10751:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:8"
									},
									"scope": 2303,
									"src": "10699:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "11915:168:8",
										"statements": [
											{
												"id": 1992,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:8",
												"statements": [
													{
														"assignments": [
															1971
														],
														"declarations": [
															{
																"constant": false,
																"id": 1971,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1992,
																"src": "11949:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1970,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1975,
														"initialValue": {
															"arguments": [
																{
																	"id": 1973,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1962,
																	"src": "11971:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1972,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1959,
																	1994
																],
																"referencedDeclaration": 1959,
																"src": "11966:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1976,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "11998:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1978,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1965,
																						"src": "12025:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1260",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1260",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1977,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2302,
																					"src": "12008:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1260_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1982,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1980,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1981,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1971,
																						"src": "12043:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1983,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1962,
																					"src": "12052:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1989,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1969,
														"id": 1991,
														"nodeType": "Return",
														"src": "11991:75:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "11849:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "11864:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1260",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1964,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1963,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1260,
														"src": "11864:8:8"
													},
													"referencedDeclaration": 1260,
													"src": "11864:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1260",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:8"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "11906:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:8"
									},
									"scope": 2303,
									"src": "11835:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "12276:854:8",
										"statements": [
											{
												"assignments": [
													2003
												],
												"declarations": [
													{
														"constant": false,
														"id": 2003,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2122,
														"src": "12286:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2002,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2005,
												"initialValue": {
													"hexValue": "30",
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:8"
											},
											{
												"id": 2119,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2006,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "12342:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2022,
														"nodeType": "IfStatement",
														"src": "12338:103:8",
														"trueBody": {
															"id": 2021,
															"nodeType": "Block",
															"src": "12361:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2011,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1997,
																			"src": "12379:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2012,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2016,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:8"
																},
																{
																	"expression": {
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2017,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2003,
																			"src": "12414:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2020,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2023,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "12458:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2039,
														"nodeType": "IfStatement",
														"src": "12454:103:8",
														"trueBody": {
															"id": 2038,
															"nodeType": "Block",
															"src": "12477:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2028,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1997,
																			"src": "12495:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2033,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:8"
																},
																{
																	"expression": {
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2034,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2003,
																			"src": "12530:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2037,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2040,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "12574:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2056,
														"nodeType": "IfStatement",
														"src": "12570:103:8",
														"trueBody": {
															"id": 2055,
															"nodeType": "Block",
															"src": "12593:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2045,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1997,
																			"src": "12611:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2050,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:8"
																},
																{
																	"expression": {
																		"id": 2053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2051,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2003,
																			"src": "12646:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2054,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2057,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "12690:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2073,
														"nodeType": "IfStatement",
														"src": "12686:100:8",
														"trueBody": {
															"id": 2072,
															"nodeType": "Block",
															"src": "12708:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2062,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1997,
																			"src": "12726:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2067,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:8"
																},
																{
																	"expression": {
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2068,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2003,
																			"src": "12760:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2071,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2074,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "12803:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2090,
														"nodeType": "IfStatement",
														"src": "12799:100:8",
														"trueBody": {
															"id": 2089,
															"nodeType": "Block",
															"src": "12821:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2079,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1997,
																			"src": "12839:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2084,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:8"
																},
																{
																	"expression": {
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2085,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2003,
																			"src": "12873:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2088,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2091,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "12916:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2107,
														"nodeType": "IfStatement",
														"src": "12912:100:8",
														"trueBody": {
															"id": 2106,
															"nodeType": "Block",
															"src": "12934:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2096,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1997,
																			"src": "12952:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2101,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:8"
																},
																{
																	"expression": {
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2102,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2003,
																			"src": "12986:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2105,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "13029:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2118,
														"nodeType": "IfStatement",
														"src": "13025:66:8",
														"trueBody": {
															"id": 2117,
															"nodeType": "Block",
															"src": "13047:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2113,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2003,
																			"src": "13065:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2116,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2120,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2003,
													"src": "13117:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2001,
												"id": 2121,
												"nodeType": "Return",
												"src": "13110:13:8"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:8",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "12229:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:8"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "12267:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:8"
									},
									"scope": 2303,
									"src": "12214:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "13365:170:8",
										"statements": [
											{
												"id": 2156,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:8",
												"statements": [
													{
														"assignments": [
															2135
														],
														"declarations": [
															{
																"constant": false,
																"id": 2135,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2156,
																"src": "13399:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2134,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2139,
														"initialValue": {
															"arguments": [
																{
																	"id": 2137,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "13422:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2136,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2123,
																	2158
																],
																"referencedDeclaration": 2123,
																"src": "13416:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2140,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "13449:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2142,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2129,
																						"src": "13476:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1260",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1260",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2141,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2302,
																					"src": "13459:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1260_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2144,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2145,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2135,
																						"src": "13495:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2147,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2126,
																					"src": "13504:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2153,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2133,
														"id": 2155,
														"nodeType": "Return",
														"src": "13442:76:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "13299:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "13314:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1260",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2128,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2127,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1260,
														"src": "13314:8:8"
													},
													"referencedDeclaration": 1260,
													"src": "13314:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1260",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:8"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "13356:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:8"
									},
									"scope": 2303,
									"src": "13284:251:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "13855:600:8",
										"statements": [
											{
												"assignments": [
													2167
												],
												"declarations": [
													{
														"constant": false,
														"id": 2167,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2244,
														"src": "13865:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2166,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2169,
												"initialValue": {
													"hexValue": "30",
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:8"
											},
											{
												"id": 2241,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2170,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "13921:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2184,
														"nodeType": "IfStatement",
														"src": "13917:98:8",
														"trueBody": {
															"id": 2183,
															"nodeType": "Block",
															"src": "13939:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2175,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "13957:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2178,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:8"
																},
																{
																	"expression": {
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2179,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "13988:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2182,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "14032:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2199,
														"nodeType": "IfStatement",
														"src": "14028:95:8",
														"trueBody": {
															"id": 2198,
															"nodeType": "Block",
															"src": "14049:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "14067:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2193,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:8"
																},
																{
																	"expression": {
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2194,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "14097:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2197,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "14140:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2214,
														"nodeType": "IfStatement",
														"src": "14136:95:8",
														"trueBody": {
															"id": 2213,
															"nodeType": "Block",
															"src": "14157:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "14175:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2208,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:8"
																},
																{
																	"expression": {
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2209,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "14205:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2212,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2215,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "14248:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2229,
														"nodeType": "IfStatement",
														"src": "14244:95:8",
														"trueBody": {
															"id": 2228,
															"nodeType": "Block",
															"src": "14265:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2220,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "14283:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2223,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:8"
																},
																{
																	"expression": {
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2224,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "14313:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2227,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2230,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "14356:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2240,
														"nodeType": "IfStatement",
														"src": "14352:64:8",
														"trueBody": {
															"id": 2239,
															"nodeType": "Block",
															"src": "14372:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2235,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "14390:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2238,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2242,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2167,
													"src": "14442:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2165,
												"id": 2243,
												"nodeType": "Return",
												"src": "14435:13:8"
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:8",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "13808:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:8"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "13846:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:8"
									},
									"scope": 2303,
									"src": "13792:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "14692:177:8",
										"statements": [
											{
												"id": 2281,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:8",
												"statements": [
													{
														"assignments": [
															2257
														],
														"declarations": [
															{
																"constant": false,
																"id": 2257,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "14726:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2256,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2261,
														"initialValue": {
															"arguments": [
																{
																	"id": 2259,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "14750:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2258,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2245,
																	2283
																],
																"referencedDeclaration": 2245,
																"src": "14743:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2262,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "14777:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2264,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2251,
																						"src": "14804:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1260",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1260",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2263,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2302,
																					"src": "14787:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1260_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2271,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2266,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2269,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2267,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2257,
																									"src": "14823:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2268,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2270,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2272,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "14838:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2278,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2255,
														"id": 2280,
														"nodeType": "Return",
														"src": "14770:82:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2246,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "14626:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "14641:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1260",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2249,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1260,
														"src": "14641:8:8"
													},
													"referencedDeclaration": 1260,
													"src": "14641:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1260",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:8"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "14683:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:8"
									},
									"scope": 2303,
									"src": "14610:259:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2301,
										"nodeType": "Block",
										"src": "15067:48:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2294,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2287,
																	"src": "15090:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1260",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1260",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2292,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2291,
												"id": 2300,
												"nodeType": "Return",
												"src": "15077:31:8"
											}
										]
									},
									"documentation": {
										"id": 2284,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:8",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "15019:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1260",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2286,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2285,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1260,
														"src": "15019:8:8"
													},
													"referencedDeclaration": 1260,
													"src": "15019:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1260",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:8"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "15061:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:8"
									},
									"scope": 2303,
									"src": "14993:122:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2304,
							"src": "203:14914:8",
							"usedErrors": [
								1255
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2408
						]
					},
					"id": 2409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2305,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2306,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:9",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2408,
							"linearizedBaseContracts": [
								2408
							],
							"name": "SignedMath",
							"nameLocation": "224:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2323,
										"nodeType": "Block",
										"src": "376:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2316,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2309,
															"src": "393:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2317,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "397:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2320,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "405:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:9",
													"trueExpression": {
														"id": 2319,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2309,
														"src": "401:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2315,
												"id": 2322,
												"nodeType": "Return",
												"src": "386:20:9"
											}
										]
									},
									"documentation": {
										"id": 2307,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:9",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "325:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2308,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "335:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2310,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:9"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "368:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2313,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:9"
									},
									"scope": 2408,
									"src": "312:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2341,
										"nodeType": "Block",
										"src": "555:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2334,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2327,
															"src": "572:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2335,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2329,
															"src": "576:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2338,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2329,
														"src": "584:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:9",
													"trueExpression": {
														"id": 2337,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2327,
														"src": "580:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2333,
												"id": 2340,
												"nodeType": "Return",
												"src": "565:20:9"
											}
										]
									},
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:9",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "504:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2326,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "514:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2328,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:9"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "547:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2331,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:9"
									},
									"scope": 2408,
									"src": "491:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "797:162:9",
										"statements": [
											{
												"assignments": [
													2353
												],
												"declarations": [
													{
														"constant": false,
														"id": 2353,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2385,
														"src": "859:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2352,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2366,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2354,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2345,
																	"src": "871:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2355,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2347,
																	"src": "875:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2357,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2358,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2345,
																				"src": "882:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2359,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2347,
																				"src": "886:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2361,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2364,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2367,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "911:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2372,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2353,
																						"src": "931:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2370,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2368,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2377,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2345,
																				"src": "945:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2378,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2347,
																				"src": "949:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2380,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2382,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2351,
												"id": 2384,
												"nodeType": "Return",
												"src": "904:48:9"
											}
										]
									},
									"documentation": {
										"id": 2343,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:9",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "746:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2344,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "756:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2346,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:9"
									},
									"returnParameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "789:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2349,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:9"
									},
									"scope": 2408,
									"src": "729:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "1103:158:9",
										"statements": [
											{
												"id": 2405,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2396,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2389,
																			"src": "1228:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:9",
																		"subExpression": {
																			"id": 2400,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2389,
																			"src": "1242:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:9",
																	"trueExpression": {
																		"id": 2399,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2389,
																		"src": "1237:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2394,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2393,
														"id": 2404,
														"nodeType": "Return",
														"src": "1213:31:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:9",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "1061:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2388,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:9"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "1094:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:9"
									},
									"scope": 2408,
									"src": "1048:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2409,
							"src": "216:1047:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:9"
				},
				"id": 9
			},
			"packages/revolution-contracts/NontransferableERC20.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/NontransferableERC20.sol",
					"exportedSymbols": {
						"NontransferableERC20": [
							2709
						],
						"Ownable": [
							147
						]
					},
					"id": 2710,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2710,
							"sourceUnit": 148,
							"src": "1434:69:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2411,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "1443:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2413,
										"name": "Ownable",
										"nameLocations": [
											"1538:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1538:7:10"
									},
									"id": 2414,
									"nodeType": "InheritanceSpecifier",
									"src": "1538:7:10"
								}
							],
							"canonicalName": "NontransferableERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2709,
							"linearizedBaseContracts": [
								2709,
								147,
								925
							],
							"name": "NontransferableERC20",
							"nameLocation": "1514:20:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2418,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1588:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 2709,
									"src": "1552:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2417,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2415,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1560:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1552:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2416,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1571:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2426,
									"name": "Transfer",
									"nameLocation": "1610:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1635:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "1619:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1619:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1657:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "1641:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1669:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "1661:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1618:57:10"
									},
									"src": "1604:72:10"
								},
								{
									"constant": false,
									"id": 2428,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1698:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2709,
									"src": "1682:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2427,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1682:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2430,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1732:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2709,
									"src": "1717:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2429,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1717:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2432,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1758:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 2709,
									"src": "1743:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2431,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1743:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2434,
									"mutability": "immutable",
									"name": "_decimals",
									"nameLocation": "1795:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 2709,
									"src": "1771:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2433,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1771:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2461,
										"nodeType": "Block",
										"src": "2106:88:10",
										"statements": [
											{
												"expression": {
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2449,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "2116:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2450,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2439,
														"src": "2124:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2116:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2452,
												"nodeType": "ExpressionStatement",
												"src": "2116:13:10"
											},
											{
												"expression": {
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2453,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "2139:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2454,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2441,
														"src": "2149:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2139:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2456,
												"nodeType": "ExpressionStatement",
												"src": "2139:17:10"
											},
											{
												"expression": {
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2457,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2434,
														"src": "2166:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2458,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "2178:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2166:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2460,
												"nodeType": "ExpressionStatement",
												"src": "2166:21:10"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "1811:171:10",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 2462,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2446,
													"name": "_initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2437,
													"src": "2091:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2447,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2445,
												"name": "Ownable",
												"nameLocations": [
													"2083:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2083:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2083:22:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "2007:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "1999:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2036:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "2022:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2022:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2057:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "2043:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2440,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2043:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "2072:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "2066:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2442,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2066:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:84:10"
									},
									"returnParameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2106:0:10"
									},
									"scope": 2709,
									"src": "1987:207:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "2319:29:10",
										"statements": [
											{
												"expression": {
													"id": 2468,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2430,
													"src": "2336:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2467,
												"id": 2469,
												"nodeType": "Return",
												"src": "2329:12:10"
											}
										]
									},
									"documentation": {
										"id": 2463,
										"nodeType": "StructuredDocumentation",
										"src": "2200:54:10",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2268:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2272:2:10"
									},
									"returnParameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2304:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:15:10"
									},
									"scope": 2709,
									"src": "2259:89:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2479,
										"nodeType": "Block",
										"src": "2523:31:10",
										"statements": [
											{
												"expression": {
													"id": 2477,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2432,
													"src": "2540:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2476,
												"id": 2478,
												"nodeType": "Return",
												"src": "2533:14:10"
											}
										]
									},
									"documentation": {
										"id": 2472,
										"nodeType": "StructuredDocumentation",
										"src": "2354:102:10",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2470:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2476:2:10"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "2508:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2508:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2507:15:10"
									},
									"scope": 2709,
									"src": "2461:93:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2488,
										"nodeType": "Block",
										"src": "3243:33:10",
										"statements": [
											{
												"expression": {
													"id": 2486,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2434,
													"src": "3260:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2485,
												"id": 2487,
												"nodeType": "Return",
												"src": "3253:16:10"
											}
										]
									},
									"documentation": {
										"id": 2481,
										"nodeType": "StructuredDocumentation",
										"src": "2560:622:10",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 2489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3196:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3204:2:10"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "3236:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2483,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:7:10"
									},
									"scope": 2709,
									"src": "3187:89:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2497,
										"nodeType": "Block",
										"src": "3397:36:10",
										"statements": [
											{
												"expression": {
													"id": 2495,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2428,
													"src": "3414:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2494,
												"id": 2496,
												"nodeType": "Return",
												"src": "3407:19:10"
											}
										]
									},
									"documentation": {
										"id": 2490,
										"nodeType": "StructuredDocumentation",
										"src": "3282:49:10",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 2498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3345:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3356:2:10"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "3388:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3388:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:9:10"
									},
									"scope": 2709,
									"src": "3336:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2510,
										"nodeType": "Block",
										"src": "3565:42:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2506,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "3582:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2508,
													"indexExpression": {
														"id": 2507,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2501,
														"src": "3592:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3582:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2505,
												"id": 2509,
												"nodeType": "Return",
												"src": "3575:25:10"
											}
										]
									},
									"documentation": {
										"id": 2499,
										"nodeType": "StructuredDocumentation",
										"src": "3439:47:10",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3500:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3518:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "3510:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3510:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:17:10"
									},
									"returnParameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "3556:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3555:9:10"
									},
									"scope": 2709,
									"src": "3491:116:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2523,
										"nodeType": "Block",
										"src": "3869:29:10",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 2521,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3886:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 2520,
												"id": 2522,
												"nodeType": "Return",
												"src": "3879:12:10"
											}
										]
									},
									"documentation": {
										"id": 2512,
										"nodeType": "StructuredDocumentation",
										"src": "3613:185:10",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 2524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3812:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "3821:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "3830:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:18:10"
									},
									"returnParameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "3863:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3863:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:6:10"
									},
									"scope": 2709,
									"src": "3803:95:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "4271:29:10",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4288:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 2533,
												"id": 2535,
												"nodeType": "Return",
												"src": "4281:12:10"
											}
										]
									},
									"documentation": {
										"id": 2525,
										"nodeType": "StructuredDocumentation",
										"src": "3904:297:10",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4215:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "4223:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4223:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "4232:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4232:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4222:18:10"
									},
									"returnParameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "4265:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4265:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4264:6:10"
									},
									"scope": 2709,
									"src": "4206:94:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2551,
										"nodeType": "Block",
										"src": "4941:29:10",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4958:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 2548,
												"id": 2550,
												"nodeType": "Return",
												"src": "4951:12:10"
											}
										]
									},
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "4306:551:10",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 2552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4871:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "4884:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4884:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "4893:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "4902:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4902:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4883:27:10"
									},
									"returnParameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "4935:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4935:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4934:6:10"
									},
									"scope": 2709,
									"src": "4862:108:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2598,
										"nodeType": "Block",
										"src": "5311:442:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5398:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5390:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2561,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5390:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5390:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2565,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2555,
															"src": "5402:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2566,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2557,
															"src": "5411:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2560,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2697,
														"src": "5369:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5369:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2568,
												"nodeType": "ExpressionStatement",
												"src": "5369:49:10"
											},
											{
												"expression": {
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2569,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2428,
														"src": "5429:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2570,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2557,
														"src": "5445:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5429:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2572,
												"nodeType": "ExpressionStatement",
												"src": "5429:22:10"
											},
											{
												"id": 2579,
												"nodeType": "UncheckedBlock",
												"src": "5461:175:10",
												"statements": [
													{
														"expression": {
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2573,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2418,
																	"src": "5597:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2575,
																"indexExpression": {
																	"id": 2574,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "5607:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5597:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2576,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "5619:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5597:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2578,
														"nodeType": "ExpressionStatement",
														"src": "5597:28:10"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5667:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5659:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5659:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5659:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2585,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2555,
															"src": "5671:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2586,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2557,
															"src": "5680:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2580,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "5650:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5650:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2588,
												"nodeType": "EmitStatement",
												"src": "5645:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5726:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5718:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2590,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5718:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5718:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2594,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2555,
															"src": "5730:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2595,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2557,
															"src": "5739:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2589,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "5698:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5698:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2597,
												"nodeType": "ExpressionStatement",
												"src": "5698:48:10"
											}
										]
									},
									"documentation": {
										"id": 2553,
										"nodeType": "StructuredDocumentation",
										"src": "4976:265:10",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 2599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5255:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5269:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "5261:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5286:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "5278:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:33:10"
									},
									"returnParameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5311:0:10"
									},
									"scope": 2709,
									"src": "5246:507:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2613,
										"nodeType": "Block",
										"src": "5823:39:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2609,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2601,
															"src": "5839:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2610,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "5848:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2608,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2599,
														"src": "5833:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5833:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2612,
												"nodeType": "ExpressionStatement",
												"src": "5833:22:10"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2614,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2606,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2605,
												"name": "onlyOwner",
												"nameLocations": [
													"5813:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5813:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5813:9:10"
										}
									],
									"name": "mint",
									"nameLocation": "5768:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5781:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "5773:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5798:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "5790:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:33:10"
									},
									"returnParameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5823:0:10"
									},
									"scope": 2709,
									"src": "5759:103:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "6247:573:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2623,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2617,
																"src": "6265:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6284:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6276:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2624,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6276:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6276:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6265:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207a65726f2061646472657373",
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6288:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69b5c9c0a6c597382847bfa3cd65f513fd5b62b9d8416111652afeec522ea587",
																"typeString": "literal_string \"ERC20: zero address\""
															},
															"value": "ERC20: zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69b5c9c0a6c597382847bfa3cd65f513fd5b62b9d8416111652afeec522ea587",
																"typeString": "literal_string \"ERC20: zero address\""
															}
														],
														"id": 2622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6257:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6257:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2631,
												"nodeType": "ExpressionStatement",
												"src": "6257:53:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2633,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2617,
															"src": "6342:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6359:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6351:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2634,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6351:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6351:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2638,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "6363:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2632,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2697,
														"src": "6321:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6321:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2640,
												"nodeType": "ExpressionStatement",
												"src": "6321:49:10"
											},
											{
												"assignments": [
													2642
												],
												"declarations": [
													{
														"constant": false,
														"id": 2642,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "6389:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 2685,
														"src": "6381:22:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6381:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2646,
												"initialValue": {
													"baseExpression": {
														"id": 2643,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "6406:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2645,
													"indexExpression": {
														"id": 2644,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2617,
														"src": "6416:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6406:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6381:43:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2648,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2642,
																"src": "6442:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2649,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "6460:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6442:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20657863656564732062616c616e6365",
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6468:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff335a729c63857f083345d941c4a64d2f7b56d711e48a0a184e4e7a4642864f",
																"typeString": "literal_string \"ERC20: burn exceeds balance\""
															},
															"value": "ERC20: burn exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff335a729c63857f083345d941c4a64d2f7b56d711e48a0a184e4e7a4642864f",
																"typeString": "literal_string \"ERC20: burn exceeds balance\""
															}
														],
														"id": 2647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6434:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6434:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2653,
												"nodeType": "ExpressionStatement",
												"src": "6434:64:10"
											},
											{
												"id": 2666,
												"nodeType": "UncheckedBlock",
												"src": "6508:194:10",
												"statements": [
													{
														"expression": {
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2654,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2418,
																	"src": "6532:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2656,
																"indexExpression": {
																	"id": 2655,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2617,
																	"src": "6542:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6532:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2657,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "6553:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2658,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2619,
																	"src": "6570:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6553:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6532:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2661,
														"nodeType": "ExpressionStatement",
														"src": "6532:44:10"
													},
													{
														"expression": {
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2662,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2428,
																"src": "6669:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 2663,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "6685:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6669:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2665,
														"nodeType": "ExpressionStatement",
														"src": "6669:22:10"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2668,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2617,
															"src": "6726:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6743:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6735:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2669,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6735:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6735:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2673,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "6747:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2667,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "6717:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2675,
												"nodeType": "EmitStatement",
												"src": "6712:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2677,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2617,
															"src": "6785:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6802:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6794:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2678,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6794:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6794:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2682,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "6806:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2676,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "6765:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2684,
												"nodeType": "ExpressionStatement",
												"src": "6765:48:10"
											}
										]
									},
									"documentation": {
										"id": 2615,
										"nodeType": "StructuredDocumentation",
										"src": "5868:309:10",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6191:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6205:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "6197:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6197:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6222:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "6214:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6214:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:33:10"
									},
									"returnParameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6247:0:10"
									},
									"scope": 2709,
									"src": "6182:638:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2696,
										"nodeType": "Block",
										"src": "7542:2:10",
										"statements": []
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "6826:573:10",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "7462:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7491:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "7483:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7483:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7505:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "7497:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7497:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7517:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "7509:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7509:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7482:42:10"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7542:0:10"
									},
									"scope": 2709,
									"src": "7453:91:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2707,
										"nodeType": "Block",
										"src": "8269:2:10",
										"statements": []
									},
									"documentation": {
										"id": 2698,
										"nodeType": "StructuredDocumentation",
										"src": "7550:577:10",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "8190:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8218:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "8210:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8210:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8232:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "8224:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8224:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8244:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "8236:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8236:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8209:42:10"
									},
									"returnParameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8269:0:10"
									},
									"scope": 2709,
									"src": "8181:90:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2710,
							"src": "1505:6768:10",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								2426
							]
						}
					],
					"src": "105:8169:10"
				},
				"id": 10
			},
			"packages/revolution-contracts/TokenEmitter.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/TokenEmitter.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ITokenEmitter": [
							3121
						],
						"LinearVRGDA": [
							3168
						],
						"NontransferableERC20": [
							2709
						],
						"ReentrancyGuard": [
							994
						],
						"Strings": [
							1249
						],
						"TokenEmitter": [
							3061
						],
						"toDaysWadUnsafe": [
							3190
						]
					},
					"id": 3062,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2711,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:11"
						},
						{
							"absolutePath": "packages/revolution-contracts/libs/LinearVRGDA.sol",
							"file": "./libs/LinearVRGDA.sol",
							"id": 2713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3062,
							"sourceUnit": 3169,
							"src": "65:53:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2712,
										"name": "LinearVRGDA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3168,
										"src": "74:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3062,
							"sourceUnit": 800,
							"src": "119:70:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2714,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "128:5:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/libs/SignedWadMath.sol",
							"file": "./libs/SignedWadMath.sol",
							"id": 2717,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3062,
							"sourceUnit": 3694,
							"src": "190:59:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2716,
										"name": "toDaysWadUnsafe",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3190,
										"src": "199:15:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 2719,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3062,
							"sourceUnit": 1250,
							"src": "250:68:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2718,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1249,
										"src": "259:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/NontransferableERC20.sol",
							"file": "./NontransferableERC20.sol",
							"id": 2721,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3062,
							"sourceUnit": 2710,
							"src": "319:66:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2720,
										"name": "NontransferableERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2709,
										"src": "328:20:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/interfaces/ITokenEmitter.sol",
							"file": "./interfaces/ITokenEmitter.sol",
							"id": 2723,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3062,
							"sourceUnit": 3122,
							"src": "386:63:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2722,
										"name": "ITokenEmitter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3121,
										"src": "395:13:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 2725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3062,
							"sourceUnit": 995,
							"src": "450:84:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2724,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 994,
										"src": "459:15:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2726,
										"name": "LinearVRGDA",
										"nameLocations": [
											"561:11:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3168,
										"src": "561:11:11"
									},
									"id": 2727,
									"nodeType": "InheritanceSpecifier",
									"src": "561:11:11"
								},
								{
									"baseName": {
										"id": 2728,
										"name": "ITokenEmitter",
										"nameLocations": [
											"574:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3121,
										"src": "574:13:11"
									},
									"id": 2729,
									"nodeType": "InheritanceSpecifier",
									"src": "574:13:11"
								},
								{
									"baseName": {
										"id": 2730,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"589:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 994,
										"src": "589:15:11"
									},
									"id": 2731,
									"nodeType": "InheritanceSpecifier",
									"src": "589:15:11"
								}
							],
							"canonicalName": "TokenEmitter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3061,
							"linearizedBaseContracts": [
								3061,
								994,
								3121,
								3168,
								3793
							],
							"name": "TokenEmitter",
							"nameLocation": "545:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2739,
									"name": "Transfer",
									"nameLocation": "631:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "656:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "640:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "678:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "662:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2737,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "682:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:57:11"
									},
									"src": "625:72:11"
								},
								{
									"anonymous": false,
									"eventSelector": "dd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b5",
									"id": 2745,
									"name": "Log",
									"nameLocation": "708:3:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2741,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "719:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2745,
												"src": "712:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2740,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "712:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2743,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "733:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2745,
												"src": "725:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:28:11"
									},
									"src": "702:38:11"
								},
								{
									"constant": false,
									"id": 2747,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "774:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 3061,
									"src": "758:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2746,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "758:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 2750,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "817:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 3061,
									"src": "789:33:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_NontransferableERC20_$2709",
										"typeString": "contract NontransferableERC20"
									},
									"typeName": {
										"id": 2749,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2748,
											"name": "NontransferableERC20",
											"nameLocations": [
												"789:20:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2709,
											"src": "789:20:11"
										},
										"referencedDeclaration": 2709,
										"src": "789:20:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_NontransferableERC20_$2709",
											"typeString": "contract NontransferableERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 2754,
									"mutability": "immutable",
									"name": "startTime",
									"nameLocation": "904:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 3061,
									"src": "879:52:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2751,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "879:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"expression": {
											"id": 2752,
											"name": "block",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967292,
											"src": "916:5:11",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_block",
												"typeString": "block"
											}
										},
										"id": 2753,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "922:9:11",
										"memberName": "timestamp",
										"nodeType": "MemberAccess",
										"src": "916:15:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2781,
										"nodeType": "Block",
										"src": "1604:62:11",
										"statements": [
											{
												"expression": {
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2773,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2747,
														"src": "1614:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2774,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2759,
														"src": "1625:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1614:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2776,
												"nodeType": "ExpressionStatement",
												"src": "1614:20:11"
											},
											{
												"expression": {
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2777,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2750,
														"src": "1645:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_NontransferableERC20_$2709",
															"typeString": "contract NontransferableERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2778,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2757,
														"src": "1653:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_NontransferableERC20_$2709",
															"typeString": "contract NontransferableERC20"
														}
													},
													"src": "1645:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_NontransferableERC20_$2709",
														"typeString": "contract NontransferableERC20"
													}
												},
												"id": 2780,
												"nodeType": "ExpressionStatement",
												"src": "1645:14:11"
											}
										]
									},
									"id": 2782,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2768,
													"name": "_targetPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2761,
													"src": "1546:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												{
													"id": 2769,
													"name": "_priceDecayPercent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2763,
													"src": "1560:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												{
													"id": 2770,
													"name": "_governancePerTimeUnit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2765,
													"src": "1580:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"id": 2771,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2767,
												"name": "LinearVRGDA",
												"nameLocations": [
													"1534:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3168,
												"src": "1534:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1534:69:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1043:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "1022:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_NontransferableERC20_$2709",
													"typeString": "contract NontransferableERC20"
												},
												"typeName": {
													"id": 2756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2755,
														"name": "NontransferableERC20",
														"nameLocations": [
															"1022:20:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2709,
														"src": "1022:20:11"
													},
													"referencedDeclaration": 2709,
													"src": "1022:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_NontransferableERC20_$2709",
														"typeString": "contract NontransferableERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "1067:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "1059:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "_targetPrice",
												"nameLocation": "1093:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "1086:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2760,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "_priceDecayPercent",
												"nameLocation": "1264:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "1257:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2762,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1257:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "_governancePerTimeUnit",
												"nameLocation": "1424:22:11",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "1417:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2764,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1417:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:521:11"
									},
									"returnParameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1604:0:11"
									},
									"scope": 3061,
									"src": "1001:665:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2796,
										"nodeType": "Block",
										"src": "1722:41:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2792,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2784,
															"src": "1743:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2793,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2786,
															"src": "1748:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2789,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "1732:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NontransferableERC20_$2709",
																"typeString": "contract NontransferableERC20"
															}
														},
														"id": 2791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1738:4:11",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2614,
														"src": "1732:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2795,
												"nodeType": "ExpressionStatement",
												"src": "1732:24:11"
											}
										]
									},
									"id": 2797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "1681:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2784,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1695:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "1687:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1705:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "1700:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1700:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1686:27:11"
									},
									"returnParameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:11"
									},
									"scope": 3061,
									"src": "1672:91:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										3113
									],
									"body": {
										"id": 2806,
										"nodeType": "Block",
										"src": "1819:89:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2802,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "1882:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NontransferableERC20_$2709",
																"typeString": "contract NontransferableERC20"
															}
														},
														"id": 2803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1888:11:11",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2498,
														"src": "1882:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 2804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1882:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2801,
												"id": 2805,
												"nodeType": "Return",
												"src": "1875:26:11"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 2807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1778:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:2:11"
									},
									"returnParameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "1813:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2799,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:6:11"
									},
									"scope": 3061,
									"src": "1769:139:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3120
									],
									"body": {
										"id": 2819,
										"nodeType": "Block",
										"src": "1976:85:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2816,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "2047:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2814,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "2031:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NontransferableERC20_$2709",
																"typeString": "contract NontransferableERC20"
															}
														},
														"id": 2815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2037:9:11",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2511,
														"src": "2031:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2031:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2813,
												"id": 2818,
												"nodeType": "Return",
												"src": "2024:30:11"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 2820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1923:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1941:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2820,
												"src": "1933:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:16:11"
									},
									"returnParameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2820,
												"src": "1970:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2811,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1970:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:6:11"
									},
									"scope": 3061,
									"src": "1914:147:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3076
									],
									"body": {
										"id": 2919,
										"nodeType": "Block",
										"src": "2271:810:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2836,
																	"name": "_addresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2823,
																	"src": "2345:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2356:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2345:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2838,
																	"name": "_bps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2826,
																	"src": "2366:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2371:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2366:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2345:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506172616c6c656c20617272617973207265717569726564",
															"id": 2841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b47f3966672aae22628307f5eebf063e78b1aba7576c0235e641db21ef936037",
																"typeString": "literal_string \"Parallel arrays required\""
															},
															"value": "Parallel arrays required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b47f3966672aae22628307f5eebf063e78b1aba7576c0235e641db21ef936037",
																"typeString": "literal_string \"Parallel arrays required\""
															}
														],
														"id": 2835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2337:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2337:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2843,
												"nodeType": "ExpressionStatement",
												"src": "2337:69:11"
											},
											{
												"assignments": [
													2845
												],
												"declarations": [
													{
														"constant": false,
														"id": 2845,
														"mutability": "mutable",
														"name": "totalTokens",
														"nameLocation": "2422:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2919,
														"src": "2417:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2844,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2417:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2850,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2847,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2467:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2471:5:11",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2467:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2846,
														"name": "getTokenAmountForMultiPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3014,
														"src": "2436:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2436:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2417:60:11"
											},
											{
												"assignments": [
													2852,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2852,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2493:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2919,
														"src": "2488:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2851,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2488:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2863,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2550:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2540:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 2858,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2544:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2540:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2853,
																"name": "treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2747,
																"src": "2506:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2515:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2506:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 2855,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2528:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2532:5:11",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2528:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2506:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2506:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2487:66:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2865,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2852,
															"src": "2571:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65642e",
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2580:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															},
															"value": "Transfer failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															}
														],
														"id": 2864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2563:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2868,
												"nodeType": "ExpressionStatement",
												"src": "2563:36:11"
											},
											{
												"assignments": [
													2870
												],
												"declarations": [
													{
														"constant": false,
														"id": 2870,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "2672:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2919,
														"src": "2667:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2869,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2667:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2872,
												"initialValue": {
													"hexValue": "30",
													"id": 2871,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2678:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2667:12:11"
											},
											{
												"body": {
													"id": 2908,
													"nodeType": "Block",
													"src": "2798:187:11",
													"statements": [
														{
															"assignments": [
																2885
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2885,
																	"mutability": "mutable",
																	"name": "tokens",
																	"nameLocation": "2817:6:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2908,
																	"src": "2812:11:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2884,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2812:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2894,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2886,
																				"name": "totalTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2845,
																				"src": "2827:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 2887,
																					"name": "_bps",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2826,
																					"src": "2841:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2889,
																				"indexExpression": {
																					"id": 2888,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2874,
																					"src": "2846:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2841:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2827:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2891,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2826:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31305f303030",
																	"id": 2892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2852:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10_000"
																},
																"src": "2826:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2812:46:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2896,
																			"name": "_addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2823,
																			"src": "2924:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2898,
																		"indexExpression": {
																			"id": 2897,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2874,
																			"src": "2935:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2924:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2899,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2885,
																		"src": "2939:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2895,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2797,
																	"src": "2918:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2918:28:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2901,
															"nodeType": "ExpressionStatement",
															"src": "2918:28:11"
														},
														{
															"expression": {
																"id": 2906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2902,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2870,
																	"src": "2960:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2903,
																		"name": "_bps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2826,
																		"src": "2967:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2905,
																	"indexExpression": {
																		"id": 2904,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2874,
																		"src": "2972:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2967:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2960:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2907,
															"nodeType": "ExpressionStatement",
															"src": "2960:14:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2877,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2874,
														"src": "2770:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2878,
															"name": "_addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "2774:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2785:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2774:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2770:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2909,
												"initializationExpression": {
													"assignments": [
														2874
													],
													"declarations": [
														{
															"constant": false,
															"id": 2874,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2763:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2909,
															"src": "2758:6:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2873,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2758:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2876,
													"initialValue": {
														"hexValue": "30",
														"id": 2875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2767:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2758:10:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2793:3:11",
														"subExpression": {
															"id": 2881,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2874,
															"src": "2793:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2883,
													"nodeType": "ExpressionStatement",
													"src": "2793:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2753:232:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2911,
																"name": "sum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2870,
																"src": "3003:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31305f303030",
																"id": 2912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3010:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10_000"
															},
															"src": "3003:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "627073206d7573742061646420757020746f2031305f303030",
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3018:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_acc8e6b392ae5ea49a977f4a22bbeef20668f0599da3aa71343be83e7801bf6c",
																"typeString": "literal_string \"bps must add up to 10_000\""
															},
															"value": "bps must add up to 10_000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_acc8e6b392ae5ea49a977f4a22bbeef20668f0599da3aa71343be83e7801bf6c",
																"typeString": "literal_string \"bps must add up to 10_000\""
															}
														],
														"id": 2910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2995:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2995:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2916,
												"nodeType": "ExpressionStatement",
												"src": "2995:51:11"
											},
											{
												"expression": {
													"id": 2917,
													"name": "totalTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2845,
													"src": "3063:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2834,
												"id": 2918,
												"nodeType": "Return",
												"src": "3056:18:11"
											}
										]
									},
									"functionSelector": "dec86df1",
									"id": 2920,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2830,
												"name": "nonReentrant",
												"nameLocations": [
													"2240:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 958,
												"src": "2240:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2240:12:11"
										}
									],
									"name": "buyToken",
									"nameLocation": "2158:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "_addresses",
												"nameLocation": "2184:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "2167:27:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2821,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2822,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "_bps",
												"nameLocation": "2210:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "2196:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2824,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2196:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2825,
													"nodeType": "ArrayTypeName",
													"src": "2196:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "2216:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:58:11"
									},
									"returnParameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "2262:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:11"
									},
									"scope": 3061,
									"src": "2149:932:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3085
									],
									"body": {
										"id": 2952,
										"nodeType": "Block",
										"src": "3257:654:11",
										"statements": [
											{
												"assignments": [
													2930
												],
												"declarations": [
													{
														"constant": false,
														"id": 2930,
														"mutability": "mutable",
														"name": "overestimatedAmount",
														"nameLocation": "3408:19:11",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "3400:27:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2929,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2935,
												"initialValue": {
													"arguments": [
														{
															"id": 2932,
															"name": "payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "3464:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2933,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2924,
															"src": "3473:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2931,
														"name": "UNSAFE_getOverestimateTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3038,
														"src": "3430:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 2934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3430:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:80:11"
											},
											{
												"assignments": [
													2937
												],
												"declarations": [
													{
														"constant": false,
														"id": 2937,
														"mutability": "mutable",
														"name": "overestimatedPrice",
														"nameLocation": "3617:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "3609:26:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2936,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3609:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2943,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2939,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2924,
																"src": "3652:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2940,
																"name": "overestimatedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2930,
																"src": "3661:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3652:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2938,
														"name": "getTokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3060,
														"src": "3638:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3638:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3609:72:11"
											},
											{
												"assignments": [
													2945
												],
												"declarations": [
													{
														"constant": false,
														"id": 2945,
														"mutability": "mutable",
														"name": "underestimatedAmount",
														"nameLocation": "3815:20:11",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "3807:28:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2944,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3807:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2949,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2946,
														"name": "payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2922,
														"src": "3838:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2947,
														"name": "overestimatedPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2937,
														"src": "3848:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3838:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3807:59:11"
											},
											{
												"expression": {
													"id": 2950,
													"name": "underestimatedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2945,
													"src": "3884:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2928,
												"id": 2951,
												"nodeType": "Return",
												"src": "3877:27:11"
											}
										]
									},
									"functionSelector": "244ec3c8",
									"id": 2953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmountForSinglePurchase",
									"nameLocation": "3161:32:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "3202:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3194:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "3219:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3211:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:33:11"
									},
									"returnParameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3248:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3248:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3247:9:11"
									},
									"scope": 3061,
									"src": "3152:759:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3092
									],
									"body": {
										"id": 3013,
										"nodeType": "Block",
										"src": "4004:1215:11",
										"statements": [
											{
												"assignments": [
													2961
												],
												"declarations": [
													{
														"constant": false,
														"id": 2961,
														"mutability": "mutable",
														"name": "remainingEth",
														"nameLocation": "4266:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 3013,
														"src": "4258:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2960,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4258:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2963,
												"initialValue": {
													"id": 2962,
													"name": "payment",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2955,
													"src": "4281:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4258:30:11"
											},
											{
												"assignments": [
													2965
												],
												"declarations": [
													{
														"constant": false,
														"id": 2965,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "4355:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 3013,
														"src": "4347:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2964,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4347:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2967,
												"initialValue": {
													"hexValue": "30",
													"id": 2966,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4369:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4347:23:11"
											},
											{
												"assignments": [
													2969
												],
												"declarations": [
													{
														"constant": false,
														"id": 2969,
														"mutability": "mutable",
														"name": "INCREMENT_SIZE",
														"nameLocation": "4445:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 3013,
														"src": "4437:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2968,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4437:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2971,
												"initialValue": {
													"hexValue": "31653135",
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4462:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"value": "1e15"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4437:29:11"
											},
											{
												"body": {
													"id": 3009,
													"nodeType": "Block",
													"src": "4590:595:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2975,
																	"name": "remainingEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2961,
																	"src": "4725:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2976,
																	"name": "INCREMENT_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2969,
																	"src": "4740:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4725:29:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3007,
																"nodeType": "Block",
																"src": "5002:173:11",
																"statements": [
																	{
																		"expression": {
																			"id": 3001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2993,
																				"name": "tokenAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2965,
																				"src": "5020:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2995,
																						"name": "INCREMENT_SIZE",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2969,
																						"src": "5068:14:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2999,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 2996,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2807,
																								"src": "5084:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 2997,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5084:13:11",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 2998,
																							"name": "tokenAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2965,
																							"src": "5100:11:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5084:27:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2994,
																					"name": "_getTokenAmountForSinglePurchase",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2953,
																					"src": "5035:32:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) view returns (uint256)"
																					}
																				},
																				"id": 3000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5035:77:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5020:92:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3002,
																		"nodeType": "ExpressionStatement",
																		"src": "5020:92:11"
																	},
																	{
																		"expression": {
																			"id": 3005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3003,
																				"name": "remainingEth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2961,
																				"src": "5130:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 3004,
																				"name": "INCREMENT_SIZE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2969,
																				"src": "5146:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5130:30:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3006,
																		"nodeType": "ExpressionStatement",
																		"src": "5130:30:11"
																	}
																]
															},
															"id": 3008,
															"nodeType": "IfStatement",
															"src": "4721:454:11",
															"trueBody": {
																"id": 2992,
																"nodeType": "Block",
																"src": "4756:157:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2978,
																				"name": "tokenAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2965,
																				"src": "4774:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2980,
																						"name": "remainingEth",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2961,
																						"src": "4822:12:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2984,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 2981,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2807,
																								"src": "4836:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 2982,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4836:13:11",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 2983,
																							"name": "tokenAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2965,
																							"src": "4852:11:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4836:27:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2979,
																					"name": "_getTokenAmountForSinglePurchase",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2953,
																					"src": "4789:32:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) view returns (uint256)"
																					}
																				},
																				"id": 2985,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4789:75:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4774:90:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2987,
																		"nodeType": "ExpressionStatement",
																		"src": "4774:90:11"
																	},
																	{
																		"expression": {
																			"id": 2990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2988,
																				"name": "remainingEth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2961,
																				"src": "4882:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 2989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4897:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4882:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2991,
																		"nodeType": "ExpressionStatement",
																		"src": "4882:16:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2972,
														"name": "remainingEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2961,
														"src": "4572:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4587:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4572:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3010,
												"nodeType": "WhileStatement",
												"src": "4565:620:11"
											},
											{
												"expression": {
													"id": 3011,
													"name": "tokenAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2965,
													"src": "5201:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2959,
												"id": 3012,
												"nodeType": "Return",
												"src": "5194:18:11"
											}
										]
									},
									"functionSelector": "7ba7614f",
									"id": 3014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAmountForMultiPurchase",
									"nameLocation": "3926:30:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "3965:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "3957:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3956:17:11"
									},
									"returnParameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "3995:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:9:11"
									},
									"scope": 3061,
									"src": "3917:1302:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3101
									],
									"body": {
										"id": 3037,
										"nodeType": "Block",
										"src": "5502:177:11",
										"statements": [
											{
												"assignments": [
													3024
												],
												"declarations": [
													{
														"constant": false,
														"id": 3024,
														"mutability": "mutable",
														"name": "priceForFirstToken",
														"nameLocation": "5520:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 3037,
														"src": "5512:26:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5512:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3028,
												"initialValue": {
													"arguments": [
														{
															"id": 3026,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3018,
															"src": "5555:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3025,
														"name": "getTokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3060,
														"src": "5541:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 3027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5541:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5512:50:11"
											},
											{
												"assignments": [
													3030
												],
												"declarations": [
													{
														"constant": false,
														"id": 3030,
														"mutability": "mutable",
														"name": "initialEstimatedAmount",
														"nameLocation": "5580:22:11",
														"nodeType": "VariableDeclaration",
														"scope": 3037,
														"src": "5572:30:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3029,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5572:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3034,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3031,
														"name": "payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3016,
														"src": "5605:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3032,
														"name": "priceForFirstToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "5615:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5605:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5572:61:11"
											},
											{
												"expression": {
													"id": 3035,
													"name": "initialEstimatedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3030,
													"src": "5650:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3022,
												"id": 3036,
												"nodeType": "Return",
												"src": "5643:29:11"
											}
										]
									},
									"functionSelector": "ae9cdbe3",
									"id": 3038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "UNSAFE_getOverestimateTokenAmount",
									"nameLocation": "5405:33:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "5447:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "5439:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5439:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "5464:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "5456:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5438:33:11"
									},
									"returnParameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "5493:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5492:9:11"
									},
									"scope": 3061,
									"src": "5396:283:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3108
									],
									"body": {
										"id": 3059,
										"nodeType": "Block",
										"src": "5763:309:11",
										"statements": [
											{
												"assignments": [
													3046
												],
												"declarations": [
													{
														"constant": false,
														"id": 3046,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "5958:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3059,
														"src": "5950:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3045,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5950:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3056,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 3049,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5996:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 3050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6002:9:11",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5996:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 3051,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2754,
																		"src": "6014:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5996:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3048,
																"name": "toDaysWadUnsafe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3190,
																"src": "5980:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5980:44:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 3054,
															"name": "tokensSoldSoFar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3040,
															"src": "6026:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3047,
														"name": "getVRGDAPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3784,
														"src": "5966:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_int256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (int256,uint256) view returns (uint256)"
														}
													},
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5966:76:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5950:92:11"
											},
											{
												"expression": {
													"id": 3057,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3046,
													"src": "6060:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3044,
												"id": 3058,
												"nodeType": "Return",
												"src": "6053:12:11"
											}
										]
									},
									"functionSelector": "c457fb37",
									"id": 3060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenPrice",
									"nameLocation": "5694:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"mutability": "mutable",
												"name": "tokensSoldSoFar",
												"nameLocation": "5716:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "5708:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5707:25:11"
									},
									"returnParameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "5754:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5754:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5753:9:11"
									},
									"scope": 3061,
									"src": "5685:387:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3062,
							"src": "536:5538:11",
							"usedErrors": [
								939
							],
							"usedEvents": [
								2739,
								2745
							]
						}
					],
					"src": "39:6036:11"
				},
				"id": 11
			},
			"packages/revolution-contracts/interfaces/ITokenEmitter.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/interfaces/ITokenEmitter.sol",
					"exportedSymbols": {
						"ITokenEmitter": [
							3121
						]
					},
					"id": 3122,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3063,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenEmitter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3121,
							"linearizedBaseContracts": [
								3121
							],
							"name": "ITokenEmitter",
							"nameLocation": "75:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "dec86df1",
									"id": 3076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "104:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3066,
												"mutability": "mutable",
												"name": "_addresses",
												"nameLocation": "130:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "113:27:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3064,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "113:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3065,
													"nodeType": "ArrayTypeName",
													"src": "113:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "_percentages",
												"nameLocation": "156:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "142:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3067,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "142:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3068,
													"nodeType": "ArrayTypeName",
													"src": "142:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "numChunks",
												"nameLocation": "178:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "170:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:76:12"
									},
									"returnParameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "215:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:9:12"
									},
									"scope": 3121,
									"src": "95:129:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "244ec3c8",
									"id": 3085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmountForSinglePurchase",
									"nameLocation": "239:32:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "280:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "272:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "297:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "289:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:33:12"
									},
									"returnParameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "328:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:9:12"
									},
									"scope": 3121,
									"src": "230:107:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ba7614f",
									"id": 3092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAmountForMultiPurchase",
									"nameLocation": "352:30:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3087,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "391:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "383:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:17:12"
									},
									"returnParameters": {
										"id": 3091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "423:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:9:12"
									},
									"scope": 3121,
									"src": "343:89:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ae9cdbe3",
									"id": 3101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "UNSAFE_getOverestimateTokenAmount",
									"nameLocation": "500:33:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3094,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "542:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "534:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3096,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "559:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "551:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:33:12"
									},
									"returnParameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "590:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:9:12"
									},
									"scope": 3121,
									"src": "491:108:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c457fb37",
									"id": 3108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenPrice",
									"nameLocation": "614:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "currentTotalSupply",
												"nameLocation": "636:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "628:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "627:28:12"
									},
									"returnParameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "679:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:9:12"
									},
									"scope": 3121,
									"src": "605:83:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 3113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "703:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:2:12"
									},
									"returnParameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "740:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "740:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:6:12"
									},
									"scope": 3121,
									"src": "694:52:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 3120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "761:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "779:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "771:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:16:12"
									},
									"returnParameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "810:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "810:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:6:12"
									},
									"scope": 3121,
									"src": "752:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3122,
							"src": "65:753:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:780:12"
				},
				"id": 12
			},
			"packages/revolution-contracts/libs/LinearVRGDA.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/libs/LinearVRGDA.sol",
					"exportedSymbols": {
						"LinearVRGDA": [
							3168
						],
						"VRGDA": [
							3793
						],
						"unsafeWadDiv": [
							3224
						]
					},
					"id": 3169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3123,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:13"
						},
						{
							"absolutePath": "packages/revolution-contracts/libs/SignedWadMath.sol",
							"file": "./SignedWadMath.sol",
							"id": 3125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3169,
							"sourceUnit": 3694,
							"src": "59:51:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3124,
										"name": "unsafeWadDiv",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3224,
										"src": "68:12:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/revolution-contracts/libs/VRGDA.sol",
							"file": "./VRGDA.sol",
							"id": 3127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3169,
							"sourceUnit": 3794,
							"src": "111:36:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3126,
										"name": "VRGDA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3793,
										"src": "120:5:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3129,
										"name": "VRGDA",
										"nameLocations": [
											"381:5:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3793,
										"src": "381:5:13"
									},
									"id": 3130,
									"nodeType": "InheritanceSpecifier",
									"src": "381:5:13"
								}
							],
							"canonicalName": "LinearVRGDA",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3128,
								"nodeType": "StructuredDocumentation",
								"src": "149:199:13",
								"text": "@title Linear Variable Rate Gradual Dutch Auction\n @author transmissions11 <t11s@paradigm.xyz>\n @author FrankieIsLost <frankie@paradigm.xyz>\n @notice VRGDA with a linear issuance curve."
							},
							"fullyImplemented": true,
							"id": 3168,
							"linearizedBaseContracts": [
								3168,
								3793
							],
							"name": "LinearVRGDA",
							"nameLocation": "366:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3131,
										"nodeType": "StructuredDocumentation",
										"src": "578:140:13",
										"text": "@dev The total number of tokens to target selling every full unit of time.\n @dev Represented as an 18 decimal fixed point number."
									},
									"id": 3133,
									"mutability": "immutable",
									"name": "perTimeUnit",
									"nameLocation": "749:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 3168,
									"src": "723:37:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 3132,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "723:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3151,
										"nodeType": "Block",
										"src": "1247:43:13",
										"statements": [
											{
												"expression": {
													"id": 3149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3147,
														"name": "perTimeUnit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3133,
														"src": "1257:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3148,
														"name": "_perTimeUnit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "1271:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1257:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3150,
												"nodeType": "ExpressionStatement",
												"src": "1257:26:13"
											}
										]
									},
									"documentation": {
										"id": 3134,
										"nodeType": "StructuredDocumentation",
										"src": "767:354:13",
										"text": "@notice Sets pricing parameters for the VRGDA.\n @param _targetPrice The target price for a token if sold on pace, scaled by 1e18.\n @param _priceDecayPercent The percent price decays per unit of time with no sales, scaled by 1e18.\n @param _perTimeUnit The number of tokens to target selling in 1 full unit of time, scaled by 1e18."
									},
									"id": 3152,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3143,
													"name": "_targetPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3136,
													"src": "1213:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												{
													"id": 3144,
													"name": "_priceDecayPercent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3138,
													"src": "1227:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"id": 3145,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3142,
												"name": "VRGDA",
												"nameLocations": [
													"1207:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3793,
												"src": "1207:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1207:39:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3136,
												"mutability": "mutable",
												"name": "_targetPrice",
												"nameLocation": "1145:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "1138:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3135,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1138:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3138,
												"mutability": "mutable",
												"name": "_priceDecayPercent",
												"nameLocation": "1166:18:13",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "1159:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3137,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1159:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "_perTimeUnit",
												"nameLocation": "1193:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "1186:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3139,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:69:13"
									},
									"returnParameters": {
										"id": 3146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1247:0:13"
									},
									"scope": 3168,
									"src": "1126:164:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3792
									],
									"body": {
										"id": 3166,
										"nodeType": "Block",
										"src": "1974:55:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3162,
															"name": "sold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3155,
															"src": "2004:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 3163,
															"name": "perTimeUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3133,
															"src": "2010:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3161,
														"name": "unsafeWadDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "1991:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1991:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3160,
												"id": 3165,
												"nodeType": "Return",
												"src": "1984:38:13"
											}
										]
									},
									"documentation": {
										"id": 3153,
										"nodeType": "StructuredDocumentation",
										"src": "1479:404:13",
										"text": "@dev Given a number of tokens sold, return the target time that number of tokens should be sold by.\n @param sold A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for.\n @return The target time the tokens should be sold by, scaled by 1e18, where the time is\n relative, such that 0 means the tokens should be sold immediately when the VRGDA begins."
									},
									"functionSelector": "6d9d33b7",
									"id": 3167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTargetSaleTime",
									"nameLocation": "1897:17:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1948:8:13"
									},
									"parameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "sold",
												"nameLocation": "1922:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "1915:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3154,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1915:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1914:13:13"
									},
									"returnParameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "1966:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3158,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1966:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1965:8:13"
									},
									"scope": 3168,
									"src": "1888:141:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3169,
							"src": "348:1683:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2000:13"
				},
				"id": 13
			},
			"packages/revolution-contracts/libs/SignedWadMath.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/libs/SignedWadMath.sol",
					"exportedSymbols": {
						"fromDaysWadUnsafe": [
							3200
						],
						"toDaysWadUnsafe": [
							3190
						],
						"toWadUnsafe": [
							3180
						],
						"unsafeDiv": [
							3693
						],
						"unsafeWadDiv": [
							3224
						],
						"unsafeWadMul": [
							3212
						],
						"wadDiv": [
							3246
						],
						"wadExp": [
							3463
						],
						"wadLn": [
							3681
						],
						"wadMul": [
							3235
						],
						"wadPow": [
							3268
						]
					},
					"id": 3694,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3170,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"body": {
								"id": 3179,
								"nodeType": "Block",
								"src": "450:135:14",
								"statements": [
									{
										"AST": {
											"nativeSrc": "504:79:14",
											"nodeType": "YulBlock",
											"src": "504:79:14",
											"statements": [
												{
													"nativeSrc": "545:32:14",
													"nodeType": "YulAssignment",
													"src": "545:32:14",
													"value": {
														"arguments": [
															{
																"name": "x",
																"nativeSrc": "554:1:14",
																"nodeType": "YulIdentifier",
																"src": "554:1:14"
															},
															{
																"kind": "number",
																"nativeSrc": "557:19:14",
																"nodeType": "YulLiteral",
																"src": "557:19:14",
																"type": "",
																"value": "1000000000000000000"
															}
														],
														"functionName": {
															"name": "mul",
															"nativeSrc": "550:3:14",
															"nodeType": "YulIdentifier",
															"src": "550:3:14"
														},
														"nativeSrc": "550:27:14",
														"nodeType": "YulFunctionCall",
														"src": "550:27:14"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "545:1:14",
															"nodeType": "YulIdentifier",
															"src": "545:1:14"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 3176,
												"isOffset": false,
												"isSlot": false,
												"src": "545:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3173,
												"isOffset": false,
												"isSlot": false,
												"src": "554:1:14",
												"valueSize": 1
											}
										],
										"id": 3178,
										"nodeType": "InlineAssembly",
										"src": "495:88:14"
									}
								]
							},
							"documentation": {
								"id": 3171,
								"nodeType": "StructuredDocumentation",
								"src": "315:79:14",
								"text": "@dev Will not revert on overflow, only use where overflow is not possible."
							},
							"id": 3180,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toWadUnsafe",
							"nameLocation": "403:11:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3174,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3173,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "423:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3180,
										"src": "415:9:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "415:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "414:11:14"
							},
							"returnParameters": {
								"id": 3177,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3176,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "447:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3180,
										"src": "440:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3175,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "440:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "439:10:14"
							},
							"scope": 3694,
							"src": "394:191:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 3189,
								"nodeType": "Block",
								"src": "885:175:14",
								"statements": [
									{
										"AST": {
											"nativeSrc": "939:119:14",
											"nodeType": "YulBlock",
											"src": "939:119:14",
											"statements": [
												{
													"nativeSrc": "1008:44:14",
													"nodeType": "YulAssignment",
													"src": "1008:44:14",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1021:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "1021:1:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1024:19:14",
																		"nodeType": "YulLiteral",
																		"src": "1024:19:14",
																		"type": "",
																		"value": "1000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1017:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:14"
																},
																"nativeSrc": "1017:27:14",
																"nodeType": "YulFunctionCall",
																"src": "1017:27:14"
															},
															{
																"kind": "number",
																"nativeSrc": "1046:5:14",
																"nodeType": "YulLiteral",
																"src": "1046:5:14",
																"type": "",
																"value": "86400"
															}
														],
														"functionName": {
															"name": "div",
															"nativeSrc": "1013:3:14",
															"nodeType": "YulIdentifier",
															"src": "1013:3:14"
														},
														"nativeSrc": "1013:39:14",
														"nodeType": "YulFunctionCall",
														"src": "1013:39:14"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "1008:1:14",
															"nodeType": "YulIdentifier",
															"src": "1008:1:14"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 3186,
												"isOffset": false,
												"isSlot": false,
												"src": "1008:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3183,
												"isOffset": false,
												"isSlot": false,
												"src": "1021:1:14",
												"valueSize": 1
											}
										],
										"id": 3188,
										"nodeType": "InlineAssembly",
										"src": "930:128:14"
									}
								]
							},
							"documentation": {
								"id": 3181,
								"nodeType": "StructuredDocumentation",
								"src": "587:238:14",
								"text": "@dev Takes an integer amount of seconds and converts it to a wad amount of days.\n @dev Will not revert on overflow, only use where overflow is not possible.\n @dev Not meant for negative second amounts, it assumes x is positive."
							},
							"id": 3190,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toDaysWadUnsafe",
							"nameLocation": "834:15:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3184,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3183,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "858:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3190,
										"src": "850:9:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3182,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "850:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "849:11:14"
							},
							"returnParameters": {
								"id": 3187,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3186,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "882:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3190,
										"src": "875:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3185,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "875:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "874:10:14"
							},
							"scope": 3694,
							"src": "825:235:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 3199,
								"nodeType": "Block",
								"src": "1359:175:14",
								"statements": [
									{
										"AST": {
											"nativeSrc": "1413:119:14",
											"nodeType": "YulBlock",
											"src": "1413:119:14",
											"statements": [
												{
													"nativeSrc": "1482:44:14",
													"nodeType": "YulAssignment",
													"src": "1482:44:14",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1495:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "1495:1:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:5:14",
																		"nodeType": "YulLiteral",
																		"src": "1498:5:14",
																		"type": "",
																		"value": "86400"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1491:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:14"
																},
																"nativeSrc": "1491:13:14",
																"nodeType": "YulFunctionCall",
																"src": "1491:13:14"
															},
															{
																"kind": "number",
																"nativeSrc": "1506:19:14",
																"nodeType": "YulLiteral",
																"src": "1506:19:14",
																"type": "",
																"value": "1000000000000000000"
															}
														],
														"functionName": {
															"name": "div",
															"nativeSrc": "1487:3:14",
															"nodeType": "YulIdentifier",
															"src": "1487:3:14"
														},
														"nativeSrc": "1487:39:14",
														"nodeType": "YulFunctionCall",
														"src": "1487:39:14"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "1482:1:14",
															"nodeType": "YulIdentifier",
															"src": "1482:1:14"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 3196,
												"isOffset": false,
												"isSlot": false,
												"src": "1482:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3193,
												"isOffset": false,
												"isSlot": false,
												"src": "1495:1:14",
												"valueSize": 1
											}
										],
										"id": 3198,
										"nodeType": "InlineAssembly",
										"src": "1404:128:14"
									}
								]
							},
							"documentation": {
								"id": 3191,
								"nodeType": "StructuredDocumentation",
								"src": "1062:235:14",
								"text": "@dev Takes a wad amount of days and converts it to an integer amount of seconds.\n @dev Will not revert on overflow, only use where overflow is not possible.\n @dev Not meant for negative day amounts, it assumes x is positive."
							},
							"id": 3200,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "fromDaysWadUnsafe",
							"nameLocation": "1306:17:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3194,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3193,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "1331:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3200,
										"src": "1324:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3192,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "1324:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1323:10:14"
							},
							"returnParameters": {
								"id": 3197,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3196,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "1356:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3200,
										"src": "1348:9:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3195,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1348:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1347:11:14"
							},
							"scope": 3694,
							"src": "1297:237:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 3211,
								"nodeType": "Block",
								"src": "1681:160:14",
								"statements": [
									{
										"AST": {
											"nativeSrc": "1735:104:14",
											"nodeType": "YulBlock",
											"src": "1735:104:14",
											"statements": [
												{
													"nativeSrc": "1792:41:14",
													"nodeType": "YulAssignment",
													"src": "1792:41:14",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1806:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "1806:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1809:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "1809:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1802:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:14"
																},
																"nativeSrc": "1802:9:14",
																"nodeType": "YulFunctionCall",
																"src": "1802:9:14"
															},
															{
																"kind": "number",
																"nativeSrc": "1813:19:14",
																"nodeType": "YulLiteral",
																"src": "1813:19:14",
																"type": "",
																"value": "1000000000000000000"
															}
														],
														"functionName": {
															"name": "sdiv",
															"nativeSrc": "1797:4:14",
															"nodeType": "YulIdentifier",
															"src": "1797:4:14"
														},
														"nativeSrc": "1797:36:14",
														"nodeType": "YulFunctionCall",
														"src": "1797:36:14"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "1792:1:14",
															"nodeType": "YulIdentifier",
															"src": "1792:1:14"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 3208,
												"isOffset": false,
												"isSlot": false,
												"src": "1792:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3203,
												"isOffset": false,
												"isSlot": false,
												"src": "1806:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3205,
												"isOffset": false,
												"isSlot": false,
												"src": "1809:1:14",
												"valueSize": 1
											}
										],
										"id": 3210,
										"nodeType": "InlineAssembly",
										"src": "1726:113:14"
									}
								]
							},
							"documentation": {
								"id": 3201,
								"nodeType": "StructuredDocumentation",
								"src": "1536:79:14",
								"text": "@dev Will not revert on overflow, only use where overflow is not possible."
							},
							"id": 3212,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "unsafeWadMul",
							"nameLocation": "1624:12:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3206,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3203,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "1644:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3212,
										"src": "1637:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3202,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "1637:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3205,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "1654:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3212,
										"src": "1647:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3204,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "1647:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1636:20:14"
							},
							"returnParameters": {
								"id": 3209,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3208,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "1678:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3212,
										"src": "1671:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3207,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "1671:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1670:10:14"
							},
							"scope": 3694,
							"src": "1615:226:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 3223,
								"nodeType": "Block",
								"src": "2044:163:14",
								"statements": [
									{
										"AST": {
											"nativeSrc": "2098:107:14",
											"nodeType": "YulBlock",
											"src": "2098:107:14",
											"statements": [
												{
													"nativeSrc": "2158:41:14",
													"nodeType": "YulAssignment",
													"src": "2158:41:14",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2172:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2172:1:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:19:14",
																		"nodeType": "YulLiteral",
																		"src": "2175:19:14",
																		"type": "",
																		"value": "1000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2168:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:14"
																},
																"nativeSrc": "2168:27:14",
																"nodeType": "YulFunctionCall",
																"src": "2168:27:14"
															},
															{
																"name": "y",
																"nativeSrc": "2197:1:14",
																"nodeType": "YulIdentifier",
																"src": "2197:1:14"
															}
														],
														"functionName": {
															"name": "sdiv",
															"nativeSrc": "2163:4:14",
															"nodeType": "YulIdentifier",
															"src": "2163:4:14"
														},
														"nativeSrc": "2163:36:14",
														"nodeType": "YulFunctionCall",
														"src": "2163:36:14"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "2158:1:14",
															"nodeType": "YulIdentifier",
															"src": "2158:1:14"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 3220,
												"isOffset": false,
												"isSlot": false,
												"src": "2158:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3215,
												"isOffset": false,
												"isSlot": false,
												"src": "2172:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3217,
												"isOffset": false,
												"isSlot": false,
												"src": "2197:1:14",
												"valueSize": 1
											}
										],
										"id": 3222,
										"nodeType": "InlineAssembly",
										"src": "2089:116:14"
									}
								]
							},
							"documentation": {
								"id": 3213,
								"nodeType": "StructuredDocumentation",
								"src": "1843:135:14",
								"text": "@dev Will return 0 instead of reverting if y is zero and will\n not revert on overflow, only use where overflow is not possible."
							},
							"id": 3224,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "unsafeWadDiv",
							"nameLocation": "1987:12:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3218,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3215,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "2007:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3224,
										"src": "2000:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3214,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2000:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3217,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "2017:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3224,
										"src": "2010:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3216,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2010:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1999:20:14"
							},
							"returnParameters": {
								"id": 3221,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3220,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "2041:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3224,
										"src": "2034:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3219,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2034:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2033:10:14"
							},
							"scope": 3694,
							"src": "1978:229:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 3234,
								"nodeType": "Block",
								"src": "2269:867:14",
								"statements": [
									{
										"AST": {
											"nativeSrc": "2323:811:14",
											"nodeType": "YulBlock",
											"src": "2323:811:14",
											"statements": [
												{
													"nativeSrc": "2370:14:14",
													"nodeType": "YulAssignment",
													"src": "2370:14:14",
													"value": {
														"arguments": [
															{
																"name": "x",
																"nativeSrc": "2379:1:14",
																"nodeType": "YulIdentifier",
																"src": "2379:1:14"
															},
															{
																"name": "y",
																"nativeSrc": "2382:1:14",
																"nodeType": "YulIdentifier",
																"src": "2382:1:14"
															}
														],
														"functionName": {
															"name": "mul",
															"nativeSrc": "2375:3:14",
															"nodeType": "YulIdentifier",
															"src": "2375:3:14"
														},
														"nativeSrc": "2375:9:14",
														"nodeType": "YulFunctionCall",
														"src": "2375:9:14"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "2370:1:14",
															"nodeType": "YulIdentifier",
															"src": "2370:1:14"
														}
													]
												},
												{
													"body": {
														"nativeSrc": "3007:36:14",
														"nodeType": "YulBlock",
														"src": "3007:36:14",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "3028:1:14",
																			"nodeType": "YulLiteral",
																			"src": "3028:1:14",
																			"type": "",
																			"value": "0"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "3031:1:14",
																			"nodeType": "YulLiteral",
																			"src": "3031:1:14",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "revert",
																		"nativeSrc": "3021:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3021:6:14"
																	},
																	"nativeSrc": "3021:12:14",
																	"nodeType": "YulFunctionCall",
																	"src": "3021:12:14"
																},
																"nativeSrc": "3021:12:14",
																"nodeType": "YulExpressionStatement",
																"src": "3021:12:14"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2887:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "2887:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2880:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "2880:6:14"
																				},
																				"nativeSrc": "2880:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2880:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "2899:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "2899:1:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2902:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "2902:1:14"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nativeSrc": "2894:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "2894:4:14"
																						},
																						"nativeSrc": "2894:10:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2894:10:14"
																					},
																					{
																						"name": "y",
																						"nativeSrc": "2906:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "2906:1:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2891:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "2891:2:14"
																				},
																				"nativeSrc": "2891:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2891:17:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2877:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2877:2:14"
																		},
																		"nativeSrc": "2877:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2877:32:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2917:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "2917:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2924:1:14",
																								"nodeType": "YulLiteral",
																								"src": "2924:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2920:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2920:3:14"
																						},
																						"nativeSrc": "2920:6:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2920:6:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2914:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "2914:2:14"
																				},
																				"nativeSrc": "2914:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2914:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2933:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "2933:1:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2936:66:14",
																						"nodeType": "YulLiteral",
																						"src": "2936:66:14",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nativeSrc": "2929:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2929:3:14"
																				},
																				"nativeSrc": "2929:74:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2929:74:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2911:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2911:2:14"
																		},
																		"nativeSrc": "2911:93:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2911:93:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2873:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2873:3:14"
																},
																"nativeSrc": "2873:132:14",
																"nodeType": "YulFunctionCall",
																"src": "2873:132:14"
															}
														],
														"functionName": {
															"name": "iszero",
															"nativeSrc": "2866:6:14",
															"nodeType": "YulIdentifier",
															"src": "2866:6:14"
														},
														"nativeSrc": "2866:140:14",
														"nodeType": "YulFunctionCall",
														"src": "2866:140:14"
													},
													"nativeSrc": "2863:180:14",
													"nodeType": "YulIf",
													"src": "2863:180:14"
												},
												{
													"nativeSrc": "3095:33:14",
													"nodeType": "YulAssignment",
													"src": "3095:33:14",
													"value": {
														"arguments": [
															{
																"name": "r",
																"nativeSrc": "3105:1:14",
																"nodeType": "YulIdentifier",
																"src": "3105:1:14"
															},
															{
																"kind": "number",
																"nativeSrc": "3108:19:14",
																"nodeType": "YulLiteral",
																"src": "3108:19:14",
																"type": "",
																"value": "1000000000000000000"
															}
														],
														"functionName": {
															"name": "sdiv",
															"nativeSrc": "3100:4:14",
															"nodeType": "YulIdentifier",
															"src": "3100:4:14"
														},
														"nativeSrc": "3100:28:14",
														"nodeType": "YulFunctionCall",
														"src": "3100:28:14"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "3095:1:14",
															"nodeType": "YulIdentifier",
															"src": "3095:1:14"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 3231,
												"isOffset": false,
												"isSlot": false,
												"src": "2370:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3231,
												"isOffset": false,
												"isSlot": false,
												"src": "2899:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3231,
												"isOffset": false,
												"isSlot": false,
												"src": "3095:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3231,
												"isOffset": false,
												"isSlot": false,
												"src": "3105:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3226,
												"isOffset": false,
												"isSlot": false,
												"src": "2379:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3226,
												"isOffset": false,
												"isSlot": false,
												"src": "2887:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3226,
												"isOffset": false,
												"isSlot": false,
												"src": "2902:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3226,
												"isOffset": false,
												"isSlot": false,
												"src": "2917:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3228,
												"isOffset": false,
												"isSlot": false,
												"src": "2382:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3228,
												"isOffset": false,
												"isSlot": false,
												"src": "2906:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3228,
												"isOffset": false,
												"isSlot": false,
												"src": "2933:1:14",
												"valueSize": 1
											}
										],
										"id": 3233,
										"nodeType": "InlineAssembly",
										"src": "2314:820:14"
									}
								]
							},
							"id": 3235,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "wadMul",
							"nameLocation": "2218:6:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3229,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3226,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "2232:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3235,
										"src": "2225:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3225,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2225:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3228,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "2242:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3235,
										"src": "2235:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3227,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2235:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2224:20:14"
							},
							"returnParameters": {
								"id": 3232,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3231,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "2266:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3235,
										"src": "2259:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3230,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2259:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2258:10:14"
							},
							"scope": 3694,
							"src": "2209:927:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 3245,
								"nodeType": "Block",
								"src": "3198:381:14",
								"statements": [
									{
										"AST": {
											"nativeSrc": "3252:325:14",
											"nodeType": "YulBlock",
											"src": "3252:325:14",
											"statements": [
												{
													"nativeSrc": "3302:32:14",
													"nodeType": "YulAssignment",
													"src": "3302:32:14",
													"value": {
														"arguments": [
															{
																"name": "x",
																"nativeSrc": "3311:1:14",
																"nodeType": "YulIdentifier",
																"src": "3311:1:14"
															},
															{
																"kind": "number",
																"nativeSrc": "3314:19:14",
																"nodeType": "YulLiteral",
																"src": "3314:19:14",
																"type": "",
																"value": "1000000000000000000"
															}
														],
														"functionName": {
															"name": "mul",
															"nativeSrc": "3307:3:14",
															"nodeType": "YulIdentifier",
															"src": "3307:3:14"
														},
														"nativeSrc": "3307:27:14",
														"nodeType": "YulFunctionCall",
														"src": "3307:27:14"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "3302:1:14",
															"nodeType": "YulIdentifier",
															"src": "3302:1:14"
														}
													]
												},
												{
													"body": {
														"nativeSrc": "3484:36:14",
														"nodeType": "YulBlock",
														"src": "3484:36:14",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "3505:1:14",
																			"nodeType": "YulLiteral",
																			"src": "3505:1:14",
																			"type": "",
																			"value": "0"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "3508:1:14",
																			"nodeType": "YulLiteral",
																			"src": "3508:1:14",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "revert",
																		"nativeSrc": "3498:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3498:6:14"
																	},
																	"nativeSrc": "3498:12:14",
																	"nodeType": "YulFunctionCall",
																	"src": "3498:12:14"
																},
																"nativeSrc": "3498:12:14",
																"nodeType": "YulExpressionStatement",
																"src": "3498:12:14"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3441:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "3441:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3434:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "3434:6:14"
																				},
																				"nativeSrc": "3434:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3434:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3427:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3427:6:14"
																		},
																		"nativeSrc": "3427:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3427:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "3454:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "3454:1:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3457:19:14",
																						"nodeType": "YulLiteral",
																						"src": "3457:19:14",
																						"type": "",
																						"value": "1000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nativeSrc": "3449:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "3449:4:14"
																				},
																				"nativeSrc": "3449:28:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3449:28:14"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "3479:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "3479:1:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3446:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3446:2:14"
																		},
																		"nativeSrc": "3446:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:35:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3423:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3423:3:14"
																},
																"nativeSrc": "3423:59:14",
																"nodeType": "YulFunctionCall",
																"src": "3423:59:14"
															}
														],
														"functionName": {
															"name": "iszero",
															"nativeSrc": "3416:6:14",
															"nodeType": "YulIdentifier",
															"src": "3416:6:14"
														},
														"nativeSrc": "3416:67:14",
														"nodeType": "YulFunctionCall",
														"src": "3416:67:14"
													},
													"nativeSrc": "3413:107:14",
													"nodeType": "YulIf",
													"src": "3413:107:14"
												},
												{
													"nativeSrc": "3556:15:14",
													"nodeType": "YulAssignment",
													"src": "3556:15:14",
													"value": {
														"arguments": [
															{
																"name": "r",
																"nativeSrc": "3566:1:14",
																"nodeType": "YulIdentifier",
																"src": "3566:1:14"
															},
															{
																"name": "y",
																"nativeSrc": "3569:1:14",
																"nodeType": "YulIdentifier",
																"src": "3569:1:14"
															}
														],
														"functionName": {
															"name": "sdiv",
															"nativeSrc": "3561:4:14",
															"nodeType": "YulIdentifier",
															"src": "3561:4:14"
														},
														"nativeSrc": "3561:10:14",
														"nodeType": "YulFunctionCall",
														"src": "3561:10:14"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "3556:1:14",
															"nodeType": "YulIdentifier",
															"src": "3556:1:14"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 3242,
												"isOffset": false,
												"isSlot": false,
												"src": "3302:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3242,
												"isOffset": false,
												"isSlot": false,
												"src": "3454:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3242,
												"isOffset": false,
												"isSlot": false,
												"src": "3556:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3242,
												"isOffset": false,
												"isSlot": false,
												"src": "3566:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3237,
												"isOffset": false,
												"isSlot": false,
												"src": "3311:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3237,
												"isOffset": false,
												"isSlot": false,
												"src": "3479:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3239,
												"isOffset": false,
												"isSlot": false,
												"src": "3441:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3239,
												"isOffset": false,
												"isSlot": false,
												"src": "3569:1:14",
												"valueSize": 1
											}
										],
										"id": 3244,
										"nodeType": "InlineAssembly",
										"src": "3243:334:14"
									}
								]
							},
							"id": 3246,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "wadDiv",
							"nameLocation": "3147:6:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3240,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3237,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "3161:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3246,
										"src": "3154:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3236,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3154:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3239,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "3171:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3246,
										"src": "3164:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3238,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3164:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3153:20:14"
							},
							"returnParameters": {
								"id": 3243,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3242,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "3195:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3246,
										"src": "3188:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3241,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3188:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3187:10:14"
							},
							"scope": 3694,
							"src": "3138:441:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 3267,
								"nodeType": "Block",
								"src": "3712:187:14",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3258,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3249,
																			"src": "3834:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 3257,
																		"name": "wadLn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3681,
																		"src": "3828:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256) pure returns (int256)"
																		}
																	},
																	"id": 3259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3828:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3260,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3251,
																	"src": "3839:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3828:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3262,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3827:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 3263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3844:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "3827:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												],
												"id": 3256,
												"name": "wadExp",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3463,
												"src": "3820:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$",
													"typeString": "function (int256) pure returns (int256)"
												}
											},
											"id": 3265,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3820:29:14",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"functionReturnParameters": 3255,
										"id": 3266,
										"nodeType": "Return",
										"src": "3813:36:14"
									}
								]
							},
							"documentation": {
								"id": 3247,
								"nodeType": "StructuredDocumentation",
								"src": "3581:73:14",
								"text": "@dev Will not work with negative bases, only use when x is positive."
							},
							"id": 3268,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "wadPow",
							"nameLocation": "3663:6:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3252,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3249,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "3677:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3268,
										"src": "3670:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3248,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3670:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3251,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "3687:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3268,
										"src": "3680:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3250,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3680:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3669:20:14"
							},
							"returnParameters": {
								"id": 3255,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3254,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 3268,
										"src": "3704:6:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3253,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3704:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3703:8:14"
							},
							"scope": 3694,
							"src": "3654:245:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 3462,
								"nodeType": "Block",
								"src": "3951:2903:14",
								"statements": [
									{
										"id": 3461,
										"nodeType": "UncheckedBlock",
										"src": "3957:2895:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3275,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3270,
														"src": "4102:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 3277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "4107:21:14",
														"subExpression": {
															"hexValue": "3432313339363738383534343532373637353531",
															"id": 3276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4108:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_42139678854452767551_by_1",
																"typeString": "int_const 42139678854452767551"
															},
															"value": "42139678854452767551"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_42139678854452767551_by_1",
															"typeString": "int_const -42139678854452767551"
														}
													},
													"src": "4102:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3281,
												"nodeType": "IfStatement",
												"src": "4098:40:14",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 3279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4137:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 3274,
													"id": 3280,
													"nodeType": "Return",
													"src": "4130:8:14"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3282,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3270,
														"src": "4320:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313335333035393939333638383933323331353839",
														"id": 3283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4325:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_135305999368893231589_by_1",
															"typeString": "int_const 135305999368893231589"
														},
														"value": "135305999368893231589"
													},
													"src": "4320:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3289,
												"nodeType": "IfStatement",
												"src": "4316:54:14",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "4558505f4f564552464c4f57",
																"id": 3286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4355:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f364785e6e651288224d2623ec5f083c58c85325644496b3d02635790697d3c7",
																	"typeString": "literal_string \"EXP_OVERFLOW\""
																},
																"value": "EXP_OVERFLOW"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_f364785e6e651288224d2623ec5f083c58c85325644496b3d02635790697d3c7",
																	"typeString": "literal_string \"EXP_OVERFLOW\""
																}
															],
															"id": 3285,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "4348:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 3287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4348:22:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3288,
													"nodeType": "ExpressionStatement",
													"src": "4348:22:14"
												}
											},
											{
												"expression": {
													"id": 3299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3290,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3270,
														"src": "4611:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3291,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3270,
																		"src": "4616:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3738",
																		"id": 3292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4621:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_78_by_1",
																			"typeString": "int_const 78"
																		},
																		"value": "78"
																	},
																	"src": "4616:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3294,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4615:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_3814697265625_by_1",
																"typeString": "int_const 3814697265625"
															},
															"id": 3297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "35",
																"id": 3295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4627:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 3296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4632:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "4627:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3814697265625_by_1",
																"typeString": "int_const 3814697265625"
															}
														},
														"src": "4615:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4611:23:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3300,
												"nodeType": "ExpressionStatement",
												"src": "4611:23:14"
											},
											{
												"assignments": [
													3302
												],
												"declarations": [
													{
														"constant": false,
														"id": 3302,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "4889:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3461,
														"src": "4882:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3301,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4882:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3316,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3303,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3270,
																					"src": "4895:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "3936",
																					"id": 3304,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4900:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_96_by_1",
																						"typeString": "int_const 96"
																					},
																					"value": "96"
																				},
																				"src": "4895:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3306,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4894:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3534393136373737343637373037343733333531313431343731313238",
																		"id": 3307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4906:29:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_54916777467707473351141471128_by_1",
																			"typeString": "int_const 54916777467707473351141471128"
																		},
																		"value": "54916777467707473351141471128"
																	},
																	"src": "4894:41:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_39614081257132168796771975168_by_1",
																		"typeString": "int_const 39614081257132168796771975168"
																	},
																	"id": 3311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 3309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4938:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3935",
																		"id": 3310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4943:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_95_by_1",
																			"typeString": "int_const 95"
																		},
																		"value": "95"
																	},
																	"src": "4938:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_39614081257132168796771975168_by_1",
																		"typeString": "int_const 39614081257132168796771975168"
																	}
																},
																"src": "4894:51:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3313,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4893:53:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"hexValue": "3936",
														"id": 3314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4950:2:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"value": "96"
													},
													"src": "4893:59:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4882:70:14"
											},
											{
												"expression": {
													"id": 3323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3317,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3270,
														"src": "4962:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3318,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3270,
															"src": "4966:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3319,
																"name": "k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3302,
																"src": "4970:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "3534393136373737343637373037343733333531313431343731313238",
																"id": 3320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4974:29:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_54916777467707473351141471128_by_1",
																	"typeString": "int_const 54916777467707473351141471128"
																},
																"value": "54916777467707473351141471128"
															},
															"src": "4970:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4966:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4962:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3324,
												"nodeType": "ExpressionStatement",
												"src": "4962:41:14"
											},
											{
												"assignments": [
													3326
												],
												"declarations": [
													{
														"constant": false,
														"id": 3326,
														"mutability": "mutable",
														"name": "y",
														"nameLocation": "5195:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3461,
														"src": "5188:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3325,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5188:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3330,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3327,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3270,
														"src": "5199:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31333436333836363136353435373936343738393230393530373733333238",
														"id": 3328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5203:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1346386616545796478920950773328_by_1",
															"typeString": "int_const 1346386616545796478920950773328"
														},
														"value": "1346386616545796478920950773328"
													},
													"src": "5199:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5188:46:14"
											},
											{
												"expression": {
													"id": 3341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3331,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3326,
														"src": "5244:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3332,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3326,
																					"src": "5250:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3333,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3270,
																					"src": "5254:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5250:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3335,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5249:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5260:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5249:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3338,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5248:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3537313535343231323237353532333531303832323234333039373538343432",
															"id": 3339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5266:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_57155421227552351082224309758442_by_1",
																"typeString": "int_const 57155421227552351082224309758442"
															},
															"value": "57155421227552351082224309758442"
														},
														"src": "5248:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5244:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3342,
												"nodeType": "ExpressionStatement",
												"src": "5244:54:14"
											},
											{
												"assignments": [
													3344
												],
												"declarations": [
													{
														"constant": false,
														"id": 3344,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "5315:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3461,
														"src": "5308:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3343,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5308:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3350,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3345,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3326,
															"src": "5319:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3346,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3270,
															"src": "5323:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "5319:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "3934323031353439313934353530343932323534333536303432353034383132",
														"id": 3348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5327:32:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_94201549194550492254356042504812_by_1",
															"typeString": "int_const 94201549194550492254356042504812"
														},
														"value": "94201549194550492254356042504812"
													},
													"src": "5319:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5308:51:14"
											},
											{
												"expression": {
													"id": 3361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3351,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3344,
														"src": "5369:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3352,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3344,
																					"src": "5375:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3353,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3326,
																					"src": "5379:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5375:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3355,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5374:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5385:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5374:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3358,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5373:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3238373139303231363434303239373236313533393536393434363830343132323430",
															"id": 3359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5391:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_28719021644029726153956944680412240_by_1",
																"typeString": "int_const 2871...(27 digits omitted)...2240"
															},
															"value": "28719021644029726153956944680412240"
														},
														"src": "5373:53:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5369:57:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3362,
												"nodeType": "ExpressionStatement",
												"src": "5369:57:14"
											},
											{
												"expression": {
													"id": 3372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3363,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3344,
														"src": "5436:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3364,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3344,
																"src": "5440:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 3365,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3270,
																"src": "5444:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5440:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_347437083999162433888837515002539729507623920905942392673140736_by_1",
																		"typeString": "int_const 3474...(55 digits omitted)...0736"
																	},
																	"id": 3369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "34333835323732353231343534383437393034363539303736393835363933323736",
																		"id": 3367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5449:34:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4385272521454847904659076985693276_by_1",
																			"typeString": "int_const 4385...(26 digits omitted)...3276"
																		},
																		"value": "4385272521454847904659076985693276"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5487:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5449:40:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_347437083999162433888837515002539729507623920905942392673140736_by_1",
																		"typeString": "int_const 3474...(55 digits omitted)...0736"
																	}
																}
															],
															"id": 3370,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5448:42:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_347437083999162433888837515002539729507623920905942392673140736_by_1",
																"typeString": "int_const 3474...(55 digits omitted)...0736"
															}
														},
														"src": "5440:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5436:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3373,
												"nodeType": "ExpressionStatement",
												"src": "5436:54:14"
											},
											{
												"assignments": [
													3375
												],
												"declarations": [
													{
														"constant": false,
														"id": 3375,
														"mutability": "mutable",
														"name": "q",
														"nameLocation": "5601:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3461,
														"src": "5594:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3374,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5594:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3379,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3376,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3270,
														"src": "5605:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "32383535393839333934393037323233323633393336343834303539393030",
														"id": 3377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5609:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2855989394907223263936484059900_by_1",
															"typeString": "int_const 2855989394907223263936484059900"
														},
														"value": "2855989394907223263936484059900"
													},
													"src": "5605:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5594:46:14"
											},
											{
												"expression": {
													"id": 3390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3380,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3375,
														"src": "5650:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3381,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "5656:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3382,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3270,
																					"src": "5660:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5656:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3384,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5655:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5666:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5655:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5654:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3530303230363033363532353335373833303139393631383331383831393435",
															"id": 3388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5672:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50020603652535783019961831881945_by_1",
																"typeString": "int_const 50020603652535783019961831881945"
															},
															"value": "50020603652535783019961831881945"
														},
														"src": "5654:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5650:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3391,
												"nodeType": "ExpressionStatement",
												"src": "5650:54:14"
											},
											{
												"expression": {
													"id": 3402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3392,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3375,
														"src": "5714:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3393,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "5720:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3394,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3270,
																					"src": "5724:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5720:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3396,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5719:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5730:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5719:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3399,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5718:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "353333383435303333353833343236373033323833363333343333373235333830",
															"id": 3400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5736:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_533845033583426703283633433725380_by_1",
																"typeString": "int_const 5338...(25 digits omitted)...5380"
															},
															"value": "533845033583426703283633433725380"
														},
														"src": "5718:51:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5714:55:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3403,
												"nodeType": "ExpressionStatement",
												"src": "5714:55:14"
											},
											{
												"expression": {
													"id": 3414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3404,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3375,
														"src": "5779:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3405,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "5785:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3406,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3270,
																					"src": "5789:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5785:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3408,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5784:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5795:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5784:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3411,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5783:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "33363034383537323536393330363935343237303733363531393138303931343239",
															"id": 3412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5801:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3604857256930695427073651918091429_by_1",
																"typeString": "int_const 3604...(26 digits omitted)...1429"
															},
															"value": "3604857256930695427073651918091429"
														},
														"src": "5783:52:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5779:56:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3415,
												"nodeType": "ExpressionStatement",
												"src": "5779:56:14"
											},
											{
												"expression": {
													"id": 3426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3416,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3375,
														"src": "5845:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3417,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "5851:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3418,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3270,
																					"src": "5855:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5851:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3420,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5850:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5861:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5850:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3423,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5849:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "3134343233363038353637333530343633313830383837333732393632383037353733",
															"id": 3424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5867:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_14423608567350463180887372962807573_by_1",
																"typeString": "int_const 1442...(27 digits omitted)...7573"
															},
															"value": "14423608567350463180887372962807573"
														},
														"src": "5849:53:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5845:57:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3427,
												"nodeType": "ExpressionStatement",
												"src": "5845:57:14"
											},
											{
												"expression": {
													"id": 3438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3428,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3375,
														"src": "5912:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3429,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "5918:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3430,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3270,
																					"src": "5922:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5918:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3432,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5917:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5928:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "5917:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3435,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5916:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3236343439313838343938333535353838333339393334383033373233393736303233",
															"id": 3436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5934:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_26449188498355588339934803723976023_by_1",
																"typeString": "int_const 2644...(27 digits omitted)...6023"
															},
															"value": "26449188498355588339934803723976023"
														},
														"src": "5916:53:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5912:57:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3439,
												"nodeType": "ExpressionStatement",
												"src": "5912:57:14"
											},
											{
												"AST": {
													"nativeSrc": "6032:298:14",
													"nodeType": "YulBlock",
													"src": "6032:298:14",
													"statements": [
														{
															"nativeSrc": "6305:15:14",
															"nodeType": "YulAssignment",
															"src": "6305:15:14",
															"value": {
																"arguments": [
																	{
																		"name": "p",
																		"nativeSrc": "6315:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6315:1:14"
																	},
																	{
																		"name": "q",
																		"nativeSrc": "6318:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6318:1:14"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "6310:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6310:4:14"
																},
																"nativeSrc": "6310:10:14",
																"nodeType": "YulFunctionCall",
																"src": "6310:10:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6305:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "6305:1:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3344,
														"isOffset": false,
														"isSlot": false,
														"src": "6315:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3375,
														"isOffset": false,
														"isSlot": false,
														"src": "6318:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3273,
														"isOffset": false,
														"isSlot": false,
														"src": "6305:1:14",
														"valueSize": 1
													}
												],
												"id": 3440,
												"nodeType": "InlineAssembly",
												"src": "6023:307:14"
											},
											{
												"expression": {
													"id": 3459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3441,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3273,
														"src": "6749:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3446,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3273,
																						"src": "6769:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6761:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3444,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "6761:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6761:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "33383232383333303734393633323336343533303432373338323538393032313538303033313535343136363135363637",
																				"id": 3448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6774:49:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3822833074963236453042738258902158003155416615667_by_1",
																					"typeString": "int_const 3822...(41 digits omitted)...5667"
																				},
																				"value": "3822833074963236453042738258902158003155416615667"
																			},
																			"src": "6761:62:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3450,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6760:64:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313935",
																				"id": 3453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6836:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_195_by_1",
																					"typeString": "int_const 195"
																				},
																				"value": "195"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3454,
																				"name": "k",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3302,
																				"src": "6842:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "6836:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 3452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6828:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3451,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6828:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6828:16:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6760:84:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6753:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 3442,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "6753:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 3458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6753:92:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6749:96:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3460,
												"nodeType": "ExpressionStatement",
												"src": "6749:96:14"
											}
										]
									}
								]
							},
							"id": 3463,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "wadExp",
							"nameLocation": "3910:6:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3271,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3270,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "3924:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3463,
										"src": "3917:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3269,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3917:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3916:10:14"
							},
							"returnParameters": {
								"id": 3274,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3273,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "3948:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3463,
										"src": "3941:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3272,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "3941:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3940:10:14"
							},
							"scope": 3694,
							"src": "3901:2953:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 3680,
								"nodeType": "Block",
								"src": "6905:3220:14",
								"statements": [
									{
										"id": 3679,
										"nodeType": "UncheckedBlock",
										"src": "6911:3212:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3471,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3465,
																"src": "6939:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6943:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6939:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e444546494e4544",
															"id": 3474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6946:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b70f99725f613142a957aa77c3aedce39bd858a4e6387f20e61acd49274b091c",
																"typeString": "literal_string \"UNDEFINED\""
															},
															"value": "UNDEFINED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b70f99725f613142a957aa77c3aedce39bd858a4e6387f20e61acd49274b091c",
																"typeString": "literal_string \"UNDEFINED\""
															}
														],
														"id": 3470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6931:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3476,
												"nodeType": "ExpressionStatement",
												"src": "6931:27:14"
											},
											{
												"AST": {
													"nativeSrc": "7284:453:14",
													"nodeType": "YulBlock",
													"src": "7284:453:14",
													"statements": [
														{
															"nativeSrc": "7298:54:14",
															"nodeType": "YulAssignment",
															"src": "7298:54:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7307:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7307:1:14",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7313:34:14",
																				"nodeType": "YulLiteral",
																				"src": "7313:34:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "7349:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "7349:1:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7310:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7310:2:14"
																		},
																		"nativeSrc": "7310:41:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7310:41:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "7303:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:14"
																},
																"nativeSrc": "7303:49:14",
																"nodeType": "YulFunctionCall",
																"src": "7303:49:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7298:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7298:1:14"
																}
															]
														},
														{
															"nativeSrc": "7365:53:14",
															"nodeType": "YulAssignment",
															"src": "7365:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7373:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7373:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7380:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7380:1:14",
																				"type": "",
																				"value": "6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7386:18:14",
																						"nodeType": "YulLiteral",
																						"src": "7386:18:14",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7410:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7410:1:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7413:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7413:1:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7406:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7406:3:14"
																						},
																						"nativeSrc": "7406:9:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7406:9:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7383:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "7383:2:14"
																				},
																				"nativeSrc": "7383:33:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7383:33:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7376:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7376:3:14"
																		},
																		"nativeSrc": "7376:41:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7376:41:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7370:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7370:2:14"
																},
																"nativeSrc": "7370:48:14",
																"nodeType": "YulFunctionCall",
																"src": "7370:48:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7365:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7365:1:14"
																}
															]
														},
														{
															"nativeSrc": "7431:45:14",
															"nodeType": "YulAssignment",
															"src": "7431:45:14",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7439:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7439:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7446:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7446:1:14",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7452:10:14",
																						"nodeType": "YulLiteral",
																						"src": "7452:10:14",
																						"type": "",
																						"value": "0xffffffff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7468:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7468:1:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7471:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7471:1:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7464:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7464:3:14"
																						},
																						"nativeSrc": "7464:9:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7464:9:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7449:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "7449:2:14"
																				},
																				"nativeSrc": "7449:25:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7449:25:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7442:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:14"
																		},
																		"nativeSrc": "7442:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7442:33:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7436:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7436:2:14"
																},
																"nativeSrc": "7436:40:14",
																"nodeType": "YulFunctionCall",
																"src": "7436:40:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7431:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7431:1:14"
																}
															]
														},
														{
															"nativeSrc": "7489:41:14",
															"nodeType": "YulAssignment",
															"src": "7489:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7497:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7497:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7504:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7504:1:14",
																				"type": "",
																				"value": "4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7510:6:14",
																						"nodeType": "YulLiteral",
																						"src": "7510:6:14",
																						"type": "",
																						"value": "0xffff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7522:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7522:1:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7525:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7525:1:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7518:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7518:3:14"
																						},
																						"nativeSrc": "7518:9:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7518:9:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7507:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "7507:2:14"
																				},
																				"nativeSrc": "7507:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7507:21:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7500:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7500:3:14"
																		},
																		"nativeSrc": "7500:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7500:29:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7494:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7494:2:14"
																},
																"nativeSrc": "7494:36:14",
																"nodeType": "YulFunctionCall",
																"src": "7494:36:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7489:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7489:1:14"
																}
															]
														},
														{
															"nativeSrc": "7543:39:14",
															"nodeType": "YulAssignment",
															"src": "7543:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7551:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7551:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7558:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7558:1:14",
																				"type": "",
																				"value": "3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7564:4:14",
																						"nodeType": "YulLiteral",
																						"src": "7564:4:14",
																						"type": "",
																						"value": "0xff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7574:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7574:1:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7577:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7577:1:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7570:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7570:3:14"
																						},
																						"nativeSrc": "7570:9:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7570:9:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7561:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "7561:2:14"
																				},
																				"nativeSrc": "7561:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7561:19:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7554:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:14"
																		},
																		"nativeSrc": "7554:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7554:27:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7548:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7548:2:14"
																},
																"nativeSrc": "7548:34:14",
																"nodeType": "YulFunctionCall",
																"src": "7548:34:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7543:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7543:1:14"
																}
															]
														},
														{
															"nativeSrc": "7595:38:14",
															"nodeType": "YulAssignment",
															"src": "7595:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7603:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7603:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7610:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7610:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7616:3:14",
																						"nodeType": "YulLiteral",
																						"src": "7616:3:14",
																						"type": "",
																						"value": "0xf"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7625:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7625:1:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7628:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7628:1:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7621:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7621:3:14"
																						},
																						"nativeSrc": "7621:9:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7621:9:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7613:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "7613:2:14"
																				},
																				"nativeSrc": "7613:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7613:18:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7606:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7606:3:14"
																		},
																		"nativeSrc": "7606:26:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7606:26:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7600:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7600:2:14"
																},
																"nativeSrc": "7600:33:14",
																"nodeType": "YulFunctionCall",
																"src": "7600:33:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7595:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7595:1:14"
																}
															]
														},
														{
															"nativeSrc": "7646:38:14",
															"nodeType": "YulAssignment",
															"src": "7646:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7654:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7654:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7661:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7661:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7667:3:14",
																						"nodeType": "YulLiteral",
																						"src": "7667:3:14",
																						"type": "",
																						"value": "0x3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "7676:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7676:1:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7679:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "7679:1:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7672:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7672:3:14"
																						},
																						"nativeSrc": "7672:9:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7672:9:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7664:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "7664:2:14"
																				},
																				"nativeSrc": "7664:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7664:18:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7657:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7657:3:14"
																		},
																		"nativeSrc": "7657:26:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7657:26:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7651:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7651:2:14"
																},
																"nativeSrc": "7651:33:14",
																"nodeType": "YulFunctionCall",
																"src": "7651:33:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7646:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7646:1:14"
																}
															]
														},
														{
															"nativeSrc": "7697:30:14",
															"nodeType": "YulAssignment",
															"src": "7697:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "7705:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7705:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7711:3:14",
																				"nodeType": "YulLiteral",
																				"src": "7711:3:14",
																				"type": "",
																				"value": "0x1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "7720:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "7720:1:14"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "7723:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "7723:1:14"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "7716:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7716:3:14"
																				},
																				"nativeSrc": "7716:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7716:9:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7708:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7708:2:14"
																		},
																		"nativeSrc": "7708:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:18:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7702:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7702:2:14"
																},
																"nativeSrc": "7702:25:14",
																"nodeType": "YulFunctionCall",
																"src": "7702:25:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7697:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7697:1:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7298:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7365:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7373:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7410:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7431:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7439:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7468:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7489:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7497:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7522:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7543:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7551:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7574:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7595:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7603:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7625:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7646:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7654:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7676:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7697:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7705:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "7720:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3465,
														"isOffset": false,
														"isSlot": false,
														"src": "7349:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3465,
														"isOffset": false,
														"isSlot": false,
														"src": "7413:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3465,
														"isOffset": false,
														"isSlot": false,
														"src": "7471:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3465,
														"isOffset": false,
														"isSlot": false,
														"src": "7525:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3465,
														"isOffset": false,
														"isSlot": false,
														"src": "7577:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3465,
														"isOffset": false,
														"isSlot": false,
														"src": "7628:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3465,
														"isOffset": false,
														"isSlot": false,
														"src": "7679:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3465,
														"isOffset": false,
														"isSlot": false,
														"src": "7723:1:14",
														"valueSize": 1
													}
												],
												"id": 3477,
												"nodeType": "InlineAssembly",
												"src": "7275:462:14"
											},
											{
												"assignments": [
													3479
												],
												"declarations": [
													{
														"constant": false,
														"id": 3479,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "7844:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3679,
														"src": "7837:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3478,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7837:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3483,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3480,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3468,
														"src": "7848:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "3936",
														"id": 3481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7852:2:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"value": "96"
													},
													"src": "7848:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7837:17:14"
											},
											{
												"expression": {
													"id": 3491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3484,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3465,
														"src": "7864:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "<<=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313539",
																	"id": 3487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7878:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_159_by_1",
																		"typeString": "int_const 159"
																	},
																	"value": "159"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 3488,
																	"name": "k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3479,
																	"src": "7884:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7878:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7870:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3485,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7870:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 3490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7870:16:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7864:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3492,
												"nodeType": "ExpressionStatement",
												"src": "7864:22:14"
											},
											{
												"expression": {
													"id": 3503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3493,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3465,
														"src": "7896:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3498,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3465,
																			"src": "7915:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 3497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7907:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3496,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7907:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7907:10:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313539",
																	"id": 3500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7921:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_159_by_1",
																		"typeString": "int_const 159"
																	},
																	"value": "159"
																},
																"src": "7907:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7900:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 3494,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "7900:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 3502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7900:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7896:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3504,
												"nodeType": "ExpressionStatement",
												"src": "7896:29:14"
											},
											{
												"assignments": [
													3506
												],
												"declarations": [
													{
														"constant": false,
														"id": 3506,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "8077:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3679,
														"src": "8070:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3505,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8070:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3510,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3507,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3465,
														"src": "8081:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "33323733323835343539363338353233383438363332323534303636323936",
														"id": 3508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8085:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3273285459638523848632254066296_by_1",
															"typeString": "int_const 3273285459638523848632254066296"
														},
														"value": "3273285459638523848632254066296"
													},
													"src": "8081:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8070:46:14"
											},
											{
												"expression": {
													"id": 3521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3511,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "8126:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3512,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3506,
																					"src": "8132:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3513,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "8136:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8132:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3515,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8131:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8142:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8131:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3518,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8130:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3234383238313537303831383333313633383932363538303839343435353234",
															"id": 3519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8148:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_24828157081833163892658089445524_by_1",
																"typeString": "int_const 24828157081833163892658089445524"
															},
															"value": "24828157081833163892658089445524"
														},
														"src": "8130:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8126:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3522,
												"nodeType": "ExpressionStatement",
												"src": "8126:54:14"
											},
											{
												"expression": {
													"id": 3533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3523,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "8190:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3524,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3506,
																					"src": "8196:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3525,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "8200:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8196:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3527,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8195:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8206:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8195:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8194:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3433343536343835373235373339303337393538373430333735373433333933",
															"id": 3531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8212:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_43456485725739037958740375743393_by_1",
																"typeString": "int_const 43456485725739037958740375743393"
															},
															"value": "43456485725739037958740375743393"
														},
														"src": "8194:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8190:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3534,
												"nodeType": "ExpressionStatement",
												"src": "8190:54:14"
											},
											{
												"expression": {
													"id": 3545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3535,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "8254:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3536,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3506,
																					"src": "8260:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3537,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "8264:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8260:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3539,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8259:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8270:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8259:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3542,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8258:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "3131313131353039313039343430393637303532303233383535353236393637",
															"id": 3543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8276:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11111509109440967052023855526967_by_1",
																"typeString": "int_const 11111509109440967052023855526967"
															},
															"value": "11111509109440967052023855526967"
														},
														"src": "8258:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8254:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3546,
												"nodeType": "ExpressionStatement",
												"src": "8254:54:14"
											},
											{
												"expression": {
													"id": 3557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3547,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "8318:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3548,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3506,
																					"src": "8324:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3549,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "8328:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8324:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3551,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8323:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8334:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8323:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3554,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8322:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "3435303233373039363637323534303633373633333336353334353135383537",
															"id": 3555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8340:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_45023709667254063763336534515857_by_1",
																"typeString": "int_const 45023709667254063763336534515857"
															},
															"value": "45023709667254063763336534515857"
														},
														"src": "8322:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8318:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3558,
												"nodeType": "ExpressionStatement",
												"src": "8318:54:14"
											},
											{
												"expression": {
													"id": 3569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3559,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "8382:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3560,
																					"name": "p",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3506,
																					"src": "8388:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3561,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "8392:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8388:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3563,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8387:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8398:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8387:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3566,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8386:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "3134373036373733343137333738363038373836373034363336313834353236",
															"id": 3567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8404:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_14706773417378608786704636184526_by_1",
																"typeString": "int_const 14706773417378608786704636184526"
															},
															"value": "14706773417378608786704636184526"
														},
														"src": "8386:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8382:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3570,
												"nodeType": "ExpressionStatement",
												"src": "8382:54:14"
											},
											{
												"expression": {
													"id": 3580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3571,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "8446:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3572,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3506,
																"src": "8450:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 3573,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3465,
																"src": "8454:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "8450:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_62999401287715976015676079709131874438408901006995465699328_by_1",
																		"typeString": "int_const 6299...(51 digits omitted)...9328"
																	},
																	"id": 3577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "373935313634323335363531333530343236323538323439373837343938",
																		"id": 3575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8459:30:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_795164235651350426258249787498_by_1",
																			"typeString": "int_const 795164235651350426258249787498"
																		},
																		"value": "795164235651350426258249787498"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8493:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8459:36:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_62999401287715976015676079709131874438408901006995465699328_by_1",
																		"typeString": "int_const 6299...(51 digits omitted)...9328"
																	}
																}
															],
															"id": 3578,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8458:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_62999401287715976015676079709131874438408901006995465699328_by_1",
																"typeString": "int_const 6299...(51 digits omitted)...9328"
															}
														},
														"src": "8450:46:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8446:50:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3581,
												"nodeType": "ExpressionStatement",
												"src": "8446:50:14"
											},
											{
												"assignments": [
													3583
												],
												"declarations": [
													{
														"constant": false,
														"id": 3583,
														"mutability": "mutable",
														"name": "q",
														"nameLocation": "8644:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3679,
														"src": "8637:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3582,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8637:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3587,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3584,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3465,
														"src": "8648:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "35353733303335323333343430363733343636333030343531383133393336",
														"id": 3585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8652:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5573035233440673466300451813936_by_1",
															"typeString": "int_const 5573035233440673466300451813936"
														},
														"value": "5573035233440673466300451813936"
													},
													"src": "8648:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8637:46:14"
											},
											{
												"expression": {
													"id": 3598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3588,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3583,
														"src": "8693:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3589,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3583,
																					"src": "8699:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3590,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "8703:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8699:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3592,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8698:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8709:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8698:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3595,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8697:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3731363934383734373939333137383833373634303930353631343534393538",
															"id": 3596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8715:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_71694874799317883764090561454958_by_1",
																"typeString": "int_const 71694874799317883764090561454958"
															},
															"value": "71694874799317883764090561454958"
														},
														"src": "8697:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8693:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3599,
												"nodeType": "ExpressionStatement",
												"src": "8693:54:14"
											},
											{
												"expression": {
													"id": 3610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3600,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3583,
														"src": "8757:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3601,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3583,
																					"src": "8763:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3602,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "8767:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8763:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3604,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8762:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8773:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8762:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3607,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8761:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "323833343437303336313732393234353735373237313936343531333036393536",
															"id": 3608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8779:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_283447036172924575727196451306956_by_1",
																"typeString": "int_const 2834...(25 digits omitted)...6956"
															},
															"value": "283447036172924575727196451306956"
														},
														"src": "8761:51:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8757:55:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3611,
												"nodeType": "ExpressionStatement",
												"src": "8757:55:14"
											},
											{
												"expression": {
													"id": 3622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3612,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3583,
														"src": "8822:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3615,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3613,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3583,
																					"src": "8828:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3614,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "8832:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8828:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3616,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8827:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8838:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8827:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3619,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8826:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "343031363836363930333934303237363633363531363234323038373639353533",
															"id": 3620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8844:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_401686690394027663651624208769553_by_1",
																"typeString": "int_const 4016...(25 digits omitted)...9553"
															},
															"value": "401686690394027663651624208769553"
														},
														"src": "8826:51:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8822:55:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3623,
												"nodeType": "ExpressionStatement",
												"src": "8822:55:14"
											},
											{
												"expression": {
													"id": 3634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3624,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3583,
														"src": "8887:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3625,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3583,
																					"src": "8893:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3626,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "8897:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8893:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3628,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8892:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8903:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8892:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3631,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8891:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "323034303438343537353930333932303132333632343835303631383136363232",
															"id": 3632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8909:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_204048457590392012362485061816622_by_1",
																"typeString": "int_const 2040...(25 digits omitted)...6622"
															},
															"value": "204048457590392012362485061816622"
														},
														"src": "8891:51:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8887:55:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3635,
												"nodeType": "ExpressionStatement",
												"src": "8887:55:14"
											},
											{
												"expression": {
													"id": 3646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3636,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3583,
														"src": "8952:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3637,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3583,
																					"src": "8958:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3638,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "8962:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8958:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3640,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8957:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8968:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "8957:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3643,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8956:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3331383533383939363938353031353731343032363533333539343237313338",
															"id": 3644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8974:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31853899698501571402653359427138_by_1",
																"typeString": "int_const 31853899698501571402653359427138"
															},
															"value": "31853899698501571402653359427138"
														},
														"src": "8956:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8952:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3647,
												"nodeType": "ExpressionStatement",
												"src": "8952:54:14"
											},
											{
												"expression": {
													"id": 3658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3648,
														"name": "q",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3583,
														"src": "9016:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3649,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3583,
																					"src": "9022:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3650,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3465,
																					"src": "9026:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "9022:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3652,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9021:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 3653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9032:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "9021:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3655,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9020:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "393039343239393731323434333837333030323737333736353538333735",
															"id": 3656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9038:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_909429971244387300277376558375_by_1",
																"typeString": "int_const 909429971244387300277376558375"
															},
															"value": "909429971244387300277376558375"
														},
														"src": "9020:48:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "9016:52:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3659,
												"nodeType": "ExpressionStatement",
												"src": "9016:52:14"
											},
											{
												"AST": {
													"nativeSrc": "9130:275:14",
													"nodeType": "YulBlock",
													"src": "9130:275:14",
													"statements": [
														{
															"nativeSrc": "9380:15:14",
															"nodeType": "YulAssignment",
															"src": "9380:15:14",
															"value": {
																"arguments": [
																	{
																		"name": "p",
																		"nativeSrc": "9390:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9390:1:14"
																	},
																	{
																		"name": "q",
																		"nativeSrc": "9393:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9393:1:14"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "9385:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9385:4:14"
																},
																"nativeSrc": "9385:10:14",
																"nodeType": "YulFunctionCall",
																"src": "9385:10:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9380:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "9380:1:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3506,
														"isOffset": false,
														"isSlot": false,
														"src": "9390:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3583,
														"isOffset": false,
														"isSlot": false,
														"src": "9393:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3468,
														"isOffset": false,
														"isSlot": false,
														"src": "9380:1:14",
														"valueSize": 1
													}
												],
												"id": 3660,
												"nodeType": "InlineAssembly",
												"src": "9121:284:14"
											},
											{
												"expression": {
													"id": 3663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3661,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3468,
														"src": "9734:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"hexValue": "31363737323032313130393936373138353838333432383230393637303637343433393633353136313636",
														"id": 3662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9739:43:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1677202110996718588342820967067443963516166_by_1",
															"typeString": "int_const 1677...(35 digits omitted)...6166"
														},
														"value": "1677202110996718588342820967067443963516166"
													},
													"src": "9734:48:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3664,
												"nodeType": "ExpressionStatement",
												"src": "9734:48:14"
											},
											{
												"expression": {
													"id": 3669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3665,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3468,
														"src": "9833:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3136353937353737353532363835363134323231343837323835393538313933393437343639313933383230353539323139383738313737393038303933343939323038333731",
															"id": 3666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9838:71:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16597577552685614221487285958193947469193820559219878177908093499208371_by_1",
																"typeString": "int_const 1659...(63 digits omitted)...8371"
															},
															"value": "16597577552685614221487285958193947469193820559219878177908093499208371"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 3667,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3479,
															"src": "9912:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "9838:75:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "9833:80:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3670,
												"nodeType": "ExpressionStatement",
												"src": "9833:80:14"
											},
											{
												"expression": {
													"id": 3673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3671,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3468,
														"src": "9973:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "363030393230313739383239373331383631373336373032373739333231363231343539353935343732323538303439303734313031353637333737383833303230303138333038",
														"id": 3672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9978:72:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_600920179829731861736702779321621459595472258049074101567377883020018308_by_1",
															"typeString": "int_const 6009...(64 digits omitted)...8308"
														},
														"value": "600920179829731861736702779321621459595472258049074101567377883020018308"
													},
													"src": "9973:77:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3674,
												"nodeType": "ExpressionStatement",
												"src": "9973:77:14"
											},
											{
												"expression": {
													"id": 3677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3675,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3468,
														"src": "10107:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": ">>=",
													"rightHandSide": {
														"hexValue": "313734",
														"id": 3676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10113:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_174_by_1",
															"typeString": "int_const 174"
														},
														"value": "174"
													},
													"src": "10107:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3678,
												"nodeType": "ExpressionStatement",
												"src": "10107:9:14"
											}
										]
									}
								]
							},
							"id": 3681,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "wadLn",
							"nameLocation": "6865:5:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3466,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3465,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6878:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3681,
										"src": "6871:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3464,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "6871:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6870:10:14"
							},
							"returnParameters": {
								"id": 3469,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3468,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "6902:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3681,
										"src": "6895:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3467,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "6895:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6894:10:14"
							},
							"scope": 3694,
							"src": "6856:3269:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 3692,
								"nodeType": "Block",
								"src": "10248:113:14",
								"statements": [
									{
										"AST": {
											"nativeSrc": "10302:57:14",
											"nodeType": "YulBlock",
											"src": "10302:57:14",
											"statements": [
												{
													"nativeSrc": "10338:15:14",
													"nodeType": "YulAssignment",
													"src": "10338:15:14",
													"value": {
														"arguments": [
															{
																"name": "x",
																"nativeSrc": "10348:1:14",
																"nodeType": "YulIdentifier",
																"src": "10348:1:14"
															},
															{
																"name": "y",
																"nativeSrc": "10351:1:14",
																"nodeType": "YulIdentifier",
																"src": "10351:1:14"
															}
														],
														"functionName": {
															"name": "sdiv",
															"nativeSrc": "10343:4:14",
															"nodeType": "YulIdentifier",
															"src": "10343:4:14"
														},
														"nativeSrc": "10343:10:14",
														"nodeType": "YulFunctionCall",
														"src": "10343:10:14"
													},
													"variableNames": [
														{
															"name": "r",
															"nativeSrc": "10338:1:14",
															"nodeType": "YulIdentifier",
															"src": "10338:1:14"
														}
													]
												}
											]
										},
										"documentation": "@solidity memory-safe-assembly",
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 3689,
												"isOffset": false,
												"isSlot": false,
												"src": "10338:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3684,
												"isOffset": false,
												"isSlot": false,
												"src": "10348:1:14",
												"valueSize": 1
											},
											{
												"declaration": 3686,
												"isOffset": false,
												"isSlot": false,
												"src": "10351:1:14",
												"valueSize": 1
											}
										],
										"id": 3691,
										"nodeType": "InlineAssembly",
										"src": "10293:66:14"
									}
								]
							},
							"documentation": {
								"id": 3682,
								"nodeType": "StructuredDocumentation",
								"src": "10127:58:14",
								"text": "@dev Will return 0 instead of reverting if y is zero."
							},
							"id": 3693,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "unsafeDiv",
							"nameLocation": "10194:9:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3687,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3684,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "10211:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3693,
										"src": "10204:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3683,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "10204:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3686,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "10221:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3693,
										"src": "10214:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3685,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "10214:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "10203:20:14"
							},
							"returnParameters": {
								"id": 3690,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3689,
										"mutability": "mutable",
										"name": "r",
										"nameLocation": "10245:1:14",
										"nodeType": "VariableDeclaration",
										"scope": 3693,
										"src": "10238:8:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 3688,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "10238:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "10237:10:14"
							},
							"scope": 3694,
							"src": "10185:176:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "32:10330:14"
				},
				"id": 14
			},
			"packages/revolution-contracts/libs/VRGDA.sol": {
				"ast": {
					"absolutePath": "packages/revolution-contracts/libs/VRGDA.sol",
					"exportedSymbols": {
						"VRGDA": [
							3793
						],
						"toWadUnsafe": [
							3180
						],
						"unsafeWadMul": [
							3212
						],
						"wadExp": [
							3463
						],
						"wadLn": [
							3681
						],
						"wadMul": [
							3235
						]
					},
					"id": 3794,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3695,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:15"
						},
						{
							"absolutePath": "packages/revolution-contracts/libs/SignedWadMath.sol",
							"file": "./SignedWadMath.sol",
							"id": 3701,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3794,
							"sourceUnit": 3694,
							"src": "59:87:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3696,
										"name": "wadExp",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3463,
										"src": "68:6:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 3697,
										"name": "wadLn",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3681,
										"src": "76:5:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 3698,
										"name": "wadMul",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3235,
										"src": "83:6:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 3699,
										"name": "unsafeWadMul",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3212,
										"src": "91:12:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 3700,
										"name": "toWadUnsafe",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3180,
										"src": "105:11:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "VRGDA",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3702,
								"nodeType": "StructuredDocumentation",
								"src": "148:211:15",
								"text": "@title Variable Rate Gradual Dutch Auction\n @author transmissions11 <t11s@paradigm.xyz>\n @author FrankieIsLost <frankie@paradigm.xyz>\n @notice Sell tokens roughly according to an issuance schedule."
							},
							"fullyImplemented": false,
							"id": 3793,
							"linearizedBaseContracts": [
								3793
							],
							"name": "VRGDA",
							"nameLocation": "377:5:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3703,
										"nodeType": "StructuredDocumentation",
										"src": "573:137:15",
										"text": "@notice Target price for a token, to be scaled according to sales pace.\n @dev Represented as an 18 decimal fixed point number."
									},
									"functionSelector": "dc38679c",
									"id": 3705,
									"mutability": "immutable",
									"name": "targetPrice",
									"nameLocation": "739:11:15",
									"nodeType": "VariableDeclaration",
									"scope": 3793,
									"src": "715:35:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 3704,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "715:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3706,
										"nodeType": "StructuredDocumentation",
										"src": "757:138:15",
										"text": "@dev Precomputed constant that allows us to rewrite a pow() as an exp().\n @dev Represented as an 18 decimal fixed point number."
									},
									"id": 3708,
									"mutability": "immutable",
									"name": "decayConstant",
									"nameLocation": "926:13:15",
									"nodeType": "VariableDeclaration",
									"scope": 3793,
									"src": "900:39:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 3707,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "900:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3735,
										"nodeType": "Block",
										"src": "1282:237:15",
										"statements": [
											{
												"expression": {
													"id": 3718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3716,
														"name": "targetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3705,
														"src": "1292:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3717,
														"name": "_targetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3711,
														"src": "1306:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1292:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3719,
												"nodeType": "ExpressionStatement",
												"src": "1292:26:15"
											},
											{
												"expression": {
													"id": 3726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3720,
														"name": "decayConstant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3708,
														"src": "1329:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31653138",
																	"id": 3722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1351:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 3723,
																	"name": "_priceDecayPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3713,
																	"src": "1358:18:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1351:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3721,
															"name": "wadLn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3681,
															"src": "1345:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$",
																"typeString": "function (int256) pure returns (int256)"
															}
														},
														"id": 3725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1345:32:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1329:48:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3727,
												"nodeType": "ExpressionStatement",
												"src": "1329:48:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3729,
																"name": "decayConstant",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3708,
																"src": "1463:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "30",
																"id": 3730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1479:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1463:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f4e5f4e454741544956455f44454341595f434f4e5354414e54",
															"id": 3732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1482:29:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5cdf9122426f15ed01aca3ede9c6bb62ffa88d2271c7acb09d4af0813c4b83f0",
																"typeString": "literal_string \"NON_NEGATIVE_DECAY_CONSTANT\""
															},
															"value": "NON_NEGATIVE_DECAY_CONSTANT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5cdf9122426f15ed01aca3ede9c6bb62ffa88d2271c7acb09d4af0813c4b83f0",
																"typeString": "literal_string \"NON_NEGATIVE_DECAY_CONSTANT\""
															}
														],
														"id": 3728,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1455:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:57:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3734,
												"nodeType": "ExpressionStatement",
												"src": "1455:57:15"
											}
										]
									},
									"documentation": {
										"id": 3709,
										"nodeType": "StructuredDocumentation",
										"src": "946:271:15",
										"text": "@notice Sets target price and per time unit price decay for the VRGDA.\n @param _targetPrice The target price for a token if sold on pace, scaled by 1e18.\n @param _priceDecayPercent The percent price decays per unit of time with no sales, scaled by 1e18."
									},
									"id": 3736,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3711,
												"mutability": "mutable",
												"name": "_targetPrice",
												"nameLocation": "1241:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3736,
												"src": "1234:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3710,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3713,
												"mutability": "mutable",
												"name": "_priceDecayPercent",
												"nameLocation": "1262:18:15",
												"nodeType": "VariableDeclaration",
												"scope": 3736,
												"src": "1255:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3712,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1255:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:48:15"
									},
									"returnParameters": {
										"id": 3715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:15"
									},
									"scope": 3793,
									"src": "1222:297:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3783,
										"nodeType": "Block",
										"src": "2114:696:15",
										"statements": [
											{
												"id": 3782,
												"nodeType": "UncheckedBlock",
												"src": "2124:680:15",
												"statements": [
													{
														"assignments": [
															3747
														],
														"declarations": [
															{
																"constant": false,
																"id": 3747,
																"mutability": "mutable",
																"name": "price",
																"nameLocation": "2187:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 3782,
																"src": "2179:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3746,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2179:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3768,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3751,
																			"name": "targetPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3705,
																			"src": "2210:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 3754,
																							"name": "decayConstant",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3708,
																							"src": "2243:13:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						{
																							"commonType": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							},
																							"id": 3763,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 3755,
																								"name": "timeSinceStart",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3739,
																								"src": "2567:14:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 3760,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"id": 3758,
																													"name": "sold",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 3741,
																													"src": "2614:4:15",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "+",
																												"rightExpression": {
																													"hexValue": "31",
																													"id": 3759,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "2621:1:15",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_1_by_1",
																														"typeString": "int_const 1"
																													},
																													"value": "1"
																												},
																												"src": "2614:8:15",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"id": 3757,
																											"name": "toWadUnsafe",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3180,
																											"src": "2602:11:15",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$",
																												"typeString": "function (uint256) pure returns (int256)"
																											}
																										},
																										"id": 3761,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "2602:21:15",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_int256",
																											"typeString": "int256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_int256",
																											"typeString": "int256"
																										}
																									],
																									"id": 3756,
																									"name": "getTargetSaleTime",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3792,
																									"src": "2584:17:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$_t_int256_$returns$_t_int256_$",
																										"typeString": "function (int256) view returns (int256)"
																									}
																								},
																								"id": 3762,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2584:40:15",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							},
																							"src": "2567:57:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							},
																							{
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						],
																						"id": 3753,
																						"name": "unsafeWadMul",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3212,
																						"src": "2230:12:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																							"typeString": "function (int256,int256) pure returns (int256)"
																						}
																					},
																					"id": 3764,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2230:408:15",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 3752,
																				"name": "wadExp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3463,
																				"src": "2223:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$",
																					"typeString": "function (int256) pure returns (int256)"
																				}
																			},
																			"id": 3765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2223:416:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 3750,
																		"name": "wadMul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3235,
																		"src": "2203:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 3766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2203:437:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2195:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3748,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2195:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2195:446:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2179:462:15"
													},
													{
														"assignments": [
															3770
														],
														"declarations": [
															{
																"constant": false,
																"id": 3770,
																"mutability": "mutable",
																"name": "priceFloor",
																"nameLocation": "2664:10:15",
																"nodeType": "VariableDeclaration",
																"scope": 3782,
																"src": "2656:18:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3769,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2656:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3772,
														"initialValue": {
															"hexValue": "31",
															"id": 3771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2677:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2656:22:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3773,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3747,
																"src": "2697:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 3774,
																"name": "priceFloor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3770,
																"src": "2705:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2697:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3779,
														"nodeType": "IfStatement",
														"src": "2693:74:15",
														"trueBody": {
															"id": 3778,
															"nodeType": "Block",
															"src": "2717:50:15",
															"statements": [
																{
																	"expression": {
																		"id": 3776,
																		"name": "priceFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3770,
																		"src": "2742:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 3745,
																	"id": 3777,
																	"nodeType": "Return",
																	"src": "2735:17:15"
																}
															]
														}
													},
													{
														"expression": {
															"id": 3780,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3747,
															"src": "2788:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3745,
														"id": 3781,
														"nodeType": "Return",
														"src": "2781:12:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3737,
										"nodeType": "StructuredDocumentation",
										"src": "1708:303:15",
										"text": "@notice Calculate the price of a token according to the VRGDA formula.\n @param timeSinceStart Time passed since the VRGDA began, scaled by 1e18.\n @param sold The total number of tokens that have been sold so far.\n @return The price of a token according to VRGDA, scaled by 1e18."
									},
									"functionSelector": "f466d4ab",
									"id": 3784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVRGDAPrice",
									"nameLocation": "2025:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3739,
												"mutability": "mutable",
												"name": "timeSinceStart",
												"nameLocation": "2046:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 3784,
												"src": "2039:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3738,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3741,
												"mutability": "mutable",
												"name": "sold",
												"nameLocation": "2070:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3784,
												"src": "2062:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:37:15"
									},
									"returnParameters": {
										"id": 3745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3784,
												"src": "2105:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:9:15"
									},
									"scope": 3793,
									"src": "2016:794:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 3785,
										"nodeType": "StructuredDocumentation",
										"src": "2816:404:15",
										"text": "@dev Given a number of tokens sold, return the target time that number of tokens should be sold by.\n @param sold A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for.\n @return The target time the tokens should be sold by, scaled by 1e18, where the time is\n relative, such that 0 means the tokens should be sold immediately when the VRGDA begins."
									},
									"functionSelector": "6d9d33b7",
									"id": 3792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTargetSaleTime",
									"nameLocation": "3234:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3787,
												"mutability": "mutable",
												"name": "sold",
												"nameLocation": "3259:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3792,
												"src": "3252:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3786,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3252:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3251:13:15"
									},
									"returnParameters": {
										"id": 3791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3792,
												"src": "3294:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3789,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3294:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:8:15"
									},
									"scope": 3793,
									"src": "3225:77:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3794,
							"src": "359:2945:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:3273:15"
				},
				"id": 15
			}
		}
	}
}