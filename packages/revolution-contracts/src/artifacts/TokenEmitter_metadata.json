{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract NontransferableERC20",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_treasury",
						"type": "address"
					},
					{
						"internalType": "int256",
						"name": "_targetPrice",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "_priceDecayPercent",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "_governancePerTimeUnit",
						"type": "int256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardReentrantCall",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Log",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "payment",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "supply",
						"type": "uint256"
					}
				],
				"name": "UNSAFE_getOverestimateTokenAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "payment",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "supply",
						"type": "uint256"
					}
				],
				"name": "_getTokenAmountForSinglePurchase",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_addresses",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_bps",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "buyToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int256",
						"name": "sold",
						"type": "int256"
					}
				],
				"name": "getTargetSaleTime",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "payment",
						"type": "uint256"
					}
				],
				"name": "getTokenAmountForMultiPurchase",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokensSoldSoFar",
						"type": "uint256"
					}
				],
				"name": "getTokenPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int256",
						"name": "timeSinceStart",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "sold",
						"type": "uint256"
					}
				],
				"name": "getVRGDAPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "targetPrice",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"internalType": "contract NontransferableERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"ReentrancyGuardReentrantCall()": [
					{
						"details": "Unauthorized reentrant call."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"getTargetSaleTime(int256)": {
					"details": "Given a number of tokens sold, return the target time that number of tokens should be sold by.",
					"params": {
						"sold": "A number of tokens sold, scaled by 1e18, to get the corresponding target sale time for."
					},
					"returns": {
						"_0": "The target time the tokens should be sold by, scaled by 1e18, where the time is relative, such that 0 means the tokens should be sold immediately when the VRGDA begins."
					}
				},
				"getVRGDAPrice(int256,uint256)": {
					"params": {
						"sold": "The total number of tokens that have been sold so far.",
						"timeSinceStart": "Time passed since the VRGDA began, scaled by 1e18."
					},
					"returns": {
						"_0": "The price of a token according to VRGDA, scaled by 1e18."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getVRGDAPrice(int256,uint256)": {
					"notice": "Calculate the price of a token according to the VRGDA formula."
				},
				"targetPrice()": {
					"notice": "Target price for a token, to be scaled according to sales pace."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"packages/revolution-contracts/TokenEmitter.sol": "TokenEmitter"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
				"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
			"license": "MIT",
			"urls": [
				"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
				"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
				"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
			"license": "MIT",
			"urls": [
				"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
				"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
			"license": "MIT",
			"urls": [
				"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
				"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
				"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
				"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
			]
		},
		"@openzeppelin/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
			"license": "MIT",
			"urls": [
				"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
				"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
			]
		},
		"packages/revolution-contracts/NontransferableERC20.sol": {
			"keccak256": "0xd68565d51e1b9a109f494d1df0c39555bd61c7b921e9e732b52902bac333a89b",
			"license": "MIT",
			"urls": [
				"bzz-raw://ca11bc6d0d22e87b8b1c7caec1ce389fa69acc5b421fae5ca9a11ef9562ed9d0",
				"dweb:/ipfs/QmXktFkEqTY6eTaPP8YRbDcn9UirpXWnGkgRzqbG4bigAC"
			]
		},
		"packages/revolution-contracts/TokenEmitter.sol": {
			"keccak256": "0xca2daa4899c527abfd1ac12cb6ee8427c546fac806b30ee9ea2ed716cb44a7af",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://19e3e9e7d4bb2a087274ee7b075c2514e3cd48d80a97ea12125f57ca27918009",
				"dweb:/ipfs/QmcSBb35B9mxEDWe6cpa452mJnySpYqsRGPEJL7c9A5tsn"
			]
		},
		"packages/revolution-contracts/interfaces/ITokenEmitter.sol": {
			"keccak256": "0xf16b24c2bcfcba477c73a2681dd6c1bf9413047fb1f9bf85864cb1da8ad4d337",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://ff86bfbad89077abd632f341a78fc516a5c8cc6b9ec476bfb28f913cf35ecd87",
				"dweb:/ipfs/QmNWB2T134uhZjpiawvFdLoZ5L7EPsEp19zMfhXsw3ciDT"
			]
		},
		"packages/revolution-contracts/libs/LinearVRGDA.sol": {
			"keccak256": "0xe482aa6a326d52de15ad1d37a78ca73a458e3c78a1d7045ac37c719325d2fa87",
			"license": "MIT",
			"urls": [
				"bzz-raw://1e87113f1829cc6f0458f917f7a140d5b6627bb582131eab00754b5826185857",
				"dweb:/ipfs/QmZaTKMw6u8CQ19SinGuVoP7GNvtREDUCZQzv4cWNuWwUy"
			]
		},
		"packages/revolution-contracts/libs/SignedWadMath.sol": {
			"keccak256": "0x7f270ba236a78b5ac77581019a0a30eb94ac49be1448da199a6e9644c5072846",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7f7b8a7025ff831e1d534a2ff18e8ca7fc902b3672d23daa703b161d23a3c20",
				"dweb:/ipfs/QmUTPTonce6Ri2VtGBu8y2pHkXproRgdc7fKudLdER3TYx"
			]
		},
		"packages/revolution-contracts/libs/VRGDA.sol": {
			"keccak256": "0xecff58cdec3285f51d5f52c6f2d11a998d3c155c1062a6dbb8741642beef2196",
			"license": "MIT",
			"urls": [
				"bzz-raw://19987dc6a9691a75efc49af8364d1b17e65186a8b42a32d90227faedf52c63ca",
				"dweb:/ipfs/QmYabAZUABFuxU5qD5hEb4ruR4gtRU7G3cuKWHmnMPFTNQ"
			]
		}
	},
	"version": 1
}