{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "EnforcedPause",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ExpectedPause",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidInitialization",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotInitializing",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardReentrantCall",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "verbId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "extended",
						"type": "bool"
					}
				],
				"name": "AuctionBid",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "verbId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					}
				],
				"name": "AuctionCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "verbId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					}
				],
				"name": "AuctionExtended",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "minBidIncrementPercentage",
						"type": "uint256"
					}
				],
				"name": "AuctionMinBidIncrementPercentageUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "reservePrice",
						"type": "uint256"
					}
				],
				"name": "AuctionReservePriceUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "verbId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AuctionSettled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timeBuffer",
						"type": "uint256"
					}
				],
				"name": "AuctionTimeBufferUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "version",
						"type": "uint64"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "auction",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "verbId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "startTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "bidder",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "settled",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "verbId",
						"type": "uint256"
					}
				],
				"name": "createBid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "creatorRateBps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "duration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "entropyRateBps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IVerbsToken",
						"name": "_verbs",
						"type": "address"
					},
					{
						"internalType": "contract ITokenEmitter",
						"name": "_tokenEmitter",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_weth",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_founder",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_timeBuffer",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_reservePrice",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "_minBidIncrementPercentage",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "_duration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_creatorRateBps",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_entropyRateBps",
						"type": "uint256"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minBidIncrementPercentage",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reservePrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_minBidIncrementPercentage",
						"type": "uint8"
					}
				],
				"name": "setMinBidIncrementPercentage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_reservePrice",
						"type": "uint256"
					}
				],
				"name": "setReservePrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_timeBuffer",
						"type": "uint256"
					}
				],
				"name": "setTimeBuffer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "settleAuction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "settleCurrentAndCreateNewAuction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "timeBuffer",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenEmitter",
				"outputs": [
					{
						"internalType": "contract ITokenEmitter",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "verbs",
				"outputs": [
					{
						"internalType": "contract IVerbsToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "weth",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"EnforcedPause()": [
					{
						"details": "The operation failed because the contract is paused."
					}
				],
				"ExpectedPause()": [
					{
						"details": "The operation failed because the contract is not paused."
					}
				],
				"InvalidInitialization()": [
					{
						"details": "The contract is already initialized."
					}
				],
				"NotInitializing()": [
					{
						"details": "The contract is not initializing."
					}
				],
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"ReentrancyGuardReentrantCall()": [
					{
						"details": "Unauthorized reentrant call."
					}
				]
			},
			"events": {
				"Initialized(uint64)": {
					"details": "Triggered when the contract has been initialized or reinitialized."
				},
				"Paused(address)": {
					"details": "Emitted when the pause is triggered by `account`."
				},
				"Unpaused(address)": {
					"details": "Emitted when the pause is lifted by `account`."
				}
			},
			"kind": "dev",
			"methods": {
				"createBid(uint256)": {
					"details": "This contract only accepts payment in ETH."
				},
				"initialize(address,address,address,address,uint256,uint256,uint8,uint256,uint256,uint256)": {
					"details": "This function can only be called once."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"pause()": {
					"details": "This function can only be called by the owner when the contract is unpaused. While no new auctions can be started when paused, anyone can settle an ongoing auction."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"setMinBidIncrementPercentage(uint8)": {
					"details": "Only callable by the owner."
				},
				"setReservePrice(uint256)": {
					"details": "Only callable by the owner."
				},
				"setTimeBuffer(uint256)": {
					"details": "Only callable by the owner."
				},
				"settleAuction()": {
					"details": "This function can only be called when the contract is paused."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"unpause()": {
					"details": "This function can only be called by the owner when the contract is paused. If required, this function will start a new auction."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"createBid(uint256)": {
					"notice": "Create a bid for a Verb, with a given amount."
				},
				"initialize(address,address,address,address,uint256,uint256,uint8,uint256,uint256,uint256)": {
					"notice": "Initialize the auction house and base contracts, populate configuration values, and pause the contract."
				},
				"pause()": {
					"notice": "Pause the Verbs auction house."
				},
				"setMinBidIncrementPercentage(uint8)": {
					"notice": "Set the auction minimum bid increment percentage."
				},
				"setReservePrice(uint256)": {
					"notice": "Set the auction reserve price."
				},
				"setTimeBuffer(uint256)": {
					"notice": "Set the auction time buffer."
				},
				"settleAuction()": {
					"notice": "Settle the current auction."
				},
				"settleCurrentAndCreateNewAuction()": {
					"notice": "Settle the current auction, mint a new Verb, and put it up for auction."
				},
				"unpause()": {
					"notice": "Unpause the Verbs auction house."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"packages/revolution-contracts/VerbsAuctionHouse.sol": "VerbsAuctionHouse"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
			"keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
			"license": "MIT",
			"urls": [
				"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
				"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
				"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c",
			"license": "MIT",
			"urls": [
				"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b",
				"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
			"keccak256": "0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97",
			"license": "MIT",
			"urls": [
				"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007",
				"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
			"keccak256": "0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74",
			"license": "MIT",
			"urls": [
				"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45",
				"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
			"license": "MIT",
			"urls": [
				"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
				"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
			"license": "MIT",
			"urls": [
				"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
				"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
			]
		},
		"packages/revolution-contracts/IERC20.sol": {
			"keccak256": "0x3a239ccf79ef9b83e24ca1e33ba83d58a92cb95a8f91cfbe16922fa21ca1e4d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://0562394107a823a25d9d0c56df7bc2a495bd7d881dd807a90d7f7d8572e0229c",
				"dweb:/ipfs/QmdJMbe8F4u8BEUjiSedZpbLuzyuzGTvaaojZ9uST1q3jQ"
			]
		},
		"packages/revolution-contracts/VerbsAuctionHouse.sol": {
			"keccak256": "0xa00ade5a652fa6a2da363f9e158975ef663351aaf14d4289a068333c4f840f41",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://50a91374c6b6c7e59b2564a3cb8998bc1fe3e6419e65fac3ae1c80ec01b1563c",
				"dweb:/ipfs/QmWvPRpf2KDikcgBYotyWahNyZQtwC3v6G41DdAay7GZyw"
			]
		},
		"packages/revolution-contracts/interfaces/ICultureIndex.sol": {
			"keccak256": "0x6c1cbd665b80374f30f51048e393536a2d3049550539d42a90462973e750ef7d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://91b03b96e86ef46c46a510e1af1c9d1a56894fc70cf761a31b8fd8d727a17ef0",
				"dweb:/ipfs/QmYXHiVPtdgvrugJ5yTT4wqKYgYYUD9PZD7EsgcKLn7Uzs"
			]
		},
		"packages/revolution-contracts/interfaces/ITokenEmitter.sol": {
			"keccak256": "0xf16b24c2bcfcba477c73a2681dd6c1bf9413047fb1f9bf85864cb1da8ad4d337",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://ff86bfbad89077abd632f341a78fc516a5c8cc6b9ec476bfb28f913cf35ecd87",
				"dweb:/ipfs/QmNWB2T134uhZjpiawvFdLoZ5L7EPsEp19zMfhXsw3ciDT"
			]
		},
		"packages/revolution-contracts/interfaces/IVerbsAuctionHouse.sol": {
			"keccak256": "0x5e3b53bb05f49ae2b4b4d00f0c47245b48b2eaa98ae8f95babf2ba368b30e8cd",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://aaa5ba1e71787486efd00309e5dbce2aa1ae62a80d31b416a5ef6a5e7e9d4619",
				"dweb:/ipfs/QmdLN18Nt4iKyCN4S4vya29hQx6Yc729XP234S8spKu6hq"
			]
		},
		"packages/revolution-contracts/interfaces/IVerbsDescriptorMinimal.sol": {
			"keccak256": "0xc26ef29b32d9afe3074b02e522d42a39ccadc9653069011ea5436717c4e32211",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://8b013f8790795e8e42320ba278792606efaa67ecf94814dc768b8984f02f0b6f",
				"dweb:/ipfs/QmZU5CWYPsfaU3bsFrX8B13ri8AYVYxBtJtV5z9WrYCCLS"
			]
		},
		"packages/revolution-contracts/interfaces/IVerbsToken.sol": {
			"keccak256": "0xc3930bad0cf5511dc2478e5ff36861f285571f2b87863872fa543a98ac4e01b7",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://26ffc6118a9ea2edcfca105065c276ce09479a695bb32b14a8089f638d43f944",
				"dweb:/ipfs/QmZNywKNmRmcmNS8WYRJEmveGn9MofvQTwcMTqpimSSAXy"
			]
		},
		"packages/revolution-contracts/interfaces/IWETH.sol": {
			"keccak256": "0xd3a4374b5e2010b4e6630fbefe650964fbc5bec1cf48f4cbb7f5aad133234ce1",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://3c0238794412998ce245177c8bb65994b5f1441c8eb8ca5ccebb1ce653bd5802",
				"dweb:/ipfs/QmYDRwpSV2v9oKk9fn5mM7tmb3qWxHQXeVBM7s21tyZbmv"
			]
		},
		"packages/revolution-contracts/libs/SignedWadMath.sol": {
			"keccak256": "0x7f270ba236a78b5ac77581019a0a30eb94ac49be1448da199a6e9644c5072846",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7f7b8a7025ff831e1d534a2ff18e8ca7fc902b3672d23daa703b161d23a3c20",
				"dweb:/ipfs/QmUTPTonce6Ri2VtGBu8y2pHkXproRgdc7fKudLdER3TYx"
			]
		}
	},
	"version": 1
}